.class public Lcom/android/server/am/ActivityManagerService;
.super Landroid/app/IActivityManager$Stub;
.source "ActivityManagerService.java"

# interfaces
.implements Lcom/android/server/Watchdog$Monitor;
.implements Lcom/android/internal/os/BatteryStatsImpl$BatteryCallback;
.implements Lcom/android/server/am/ActivityManagerGlobalLock;


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lcom/android/server/am/ActivityManagerService$ShellDelegate;,
        Lcom/android/server/am/ActivityManagerService$Injector;,
        Lcom/android/server/am/ActivityManagerService$LocalService;,
        Lcom/android/server/am/ActivityManagerService$ProcStatsRunnable;,
        Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;,
        Lcom/android/server/am/ActivityManagerService$MemItem;,
        Lcom/android/server/am/ActivityManagerService$ItemMatcher;,
        Lcom/android/server/am/ActivityManagerService$IntentFirewallInterface;,
        Lcom/android/server/am/ActivityManagerService$PermissionController;,
        Lcom/android/server/am/ActivityManagerService$ProcessInfoService;,
        Lcom/android/server/am/ActivityManagerService$HiddenApiSettings;,
        Lcom/android/server/am/ActivityManagerService$Lifecycle;,
        Lcom/android/server/am/ActivityManagerService$CacheBinder;,
        Lcom/android/server/am/ActivityManagerService$DbBinder;,
        Lcom/android/server/am/ActivityManagerService$GraphicsBinder;,
        Lcom/android/server/am/ActivityManagerService$MemBinder;,
        Lcom/android/server/am/ActivityManagerService$MainHandler;,
        Lcom/android/server/am/ActivityManagerService$UiHandler;,
        Lcom/android/server/am/ActivityManagerService$AppDeathRecipient;,
        Lcom/android/server/am/ActivityManagerService$OomAdjObserver;,
        Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;,
        Lcom/android/server/am/ActivityManagerService$FgsTempAllowListItem;,
        Lcom/android/server/am/ActivityManagerService$PendingTempAllowlist;,
        Lcom/android/server/am/ActivityManagerService$Association;,
        Lcom/android/server/am/ActivityManagerService$ImportanceToken;,
        Lcom/android/server/am/ActivityManagerService$PidMap;,
        Lcom/android/server/am/ActivityManagerService$PackageAssociationInfo;
    }
.end annotation


# static fields
.field static final ABORT_DUMPHEAP_MSG:I = 0x33

.field public static final ACTION_TRIGGER_IDLE:Ljava/lang/String; = "com.android.server.ACTION_TRIGGER_IDLE"

.field static final ANR_FILE_PREFIX:Ljava/lang/String; = "anr_"

.field public static final ANR_TRACE_DIR:Ljava/lang/String; = "/data/anr"

.field static final BINDER_HEAVYHITTER_AUTOSAMPLER_TIMEOUT_MSG:I = 0x48

.field private static final BINDER_HEAVY_HITTER_AUTO_SAMPLER_DURATION_MS:J = 0x493e0L

.field private static final BINDER_HEAVY_HITTER_AUTO_SAMPLER_THROTTLE_MS:J = 0x36ee80L

.field private static final BINDER_PROXY_HIGH_WATERMARK:I = 0x1770

.field private static final BINDER_PROXY_LOW_WATERMARK:I = 0x157c

.field static final BROADCAST_BG_TIMEOUT:I

.field static final BROADCAST_FG_TIMEOUT:I

.field static final CHECK_EXCESSIVE_POWER_USE_MSG:I = 0x1b

.field static final CLEAR_DNS_CACHE_MSG:I = 0x1c

.field static final CONTENT_PROVIDER_PUBLISH_TIMEOUT_MSG:I = 0x39

.field static final DISPATCH_OOM_ADJ_OBSERVER_MSG:I = 0x46

.field static final DISPATCH_PROCESSES_CHANGED_UI_MSG:I = 0x1f

.field static final DISPATCH_PROCESS_DIED_UI_MSG:I = 0x20

.field static final DROPBOX_DEFAULT_MAX_SIZE:I = 0x30000

.field static final DUMP_MEM_BUCKETS:[J

.field static final DUMP_MEM_OOM_ADJ:[I

.field static final DUMP_MEM_OOM_COMPACT_LABEL:[Ljava/lang/String;

.field static final DUMP_MEM_OOM_LABEL:[Ljava/lang/String;

.field static final EMPTY_STRING_ARRAY:[Ljava/lang/String;

.field private static final ENABLE_PROC_LOCK:Z = true

.field static final EXTRA_BUGREPORT_TYPE:Ljava/lang/String; = "android.intent.extra.BUGREPORT_TYPE"

.field static final EXTRA_DESCRIPTION:Ljava/lang/String; = "android.intent.extra.DESCRIPTION"

.field static final EXTRA_TITLE:Ljava/lang/String; = "android.intent.extra.TITLE"

.field static final FAKE_TEMP_ALLOW_LIST_ITEM:Lcom/android/server/am/ActivityManagerService$FgsTempAllowListItem;

.field static final FIRST_BROADCAST_QUEUE_MSG:I = 0xc8

.field static final GC_BACKGROUND_PROCESSES_MSG:I = 0x5

.field static final HANDLE_TRUST_STORAGE_UPDATE_MSG:I = 0x3f

.field static final IDLE_UIDS_MSG:I = 0x3a

.field private static final INDEX_DALVIK_PSS:I = 0x3

.field private static final INDEX_DALVIK_RSS:I = 0x5

.field private static final INDEX_DALVIK_SWAP_PSS:I = 0x4

.field private static final INDEX_LAST:I = 0xf

.field private static final INDEX_NATIVE_PSS:I = 0x0

.field private static final INDEX_NATIVE_RSS:I = 0x2

.field private static final INDEX_NATIVE_SWAP_PSS:I = 0x1

.field private static final INDEX_OTHER_PSS:I = 0x6

.field private static final INDEX_OTHER_RSS:I = 0x8

.field private static final INDEX_OTHER_SWAP_PSS:I = 0x7

.field private static final INDEX_TOTAL_MEMTRACK_GL:I = 0xe

.field private static final INDEX_TOTAL_MEMTRACK_GRAPHICS:I = 0xd

.field private static final INDEX_TOTAL_NATIVE_PSS:I = 0xc

.field private static final INDEX_TOTAL_PSS:I = 0x9

.field private static final INDEX_TOTAL_RSS:I = 0xb

.field private static final INDEX_TOTAL_SWAP_PSS:I = 0xa

.field private static final INTENT_BUGREPORT_REQUESTED:Ljava/lang/String; = "com.android.internal.intent.action.BUGREPORT_REQUESTED"

.field private static final INTENT_REMOTE_BUGREPORT_FINISHED:Ljava/lang/String; = "com.android.internal.intent.action.REMOTE_BUGREPORT_FINISHED"

.field private static final JAVA_DUMP_MINIMUM_SIZE:I = 0x64

.field static final KILL_APPLICATION_MSG:I = 0x16

.field static final KILL_APP_ZYGOTE_DELAY_MS:I = 0x1388

.field static final KILL_APP_ZYGOTE_MSG:I = 0x47

.field static final KSM_SHARED:I = 0x0

.field static final KSM_SHARING:I = 0x1

.field static final KSM_UNSHARED:I = 0x2

.field static final KSM_VOLATILE:I = 0x3

.field private static final MAX_BUGREPORT_DESCRIPTION_SIZE:I = 0x96

.field private static final MAX_BUGREPORT_TITLE_SIZE:I = 0x32

.field private static final MAX_DUP_SUPPRESSED_STACKS:I = 0x1388

.field private static final MAX_RECEIVERS_ALLOWED_PER_APP:I = 0x3e8

.field static final MAX_STATE_DATA_SIZE:I = 0x80

.field private static final MEMINFO_COMPACT_VERSION:I = 0x1

.field private static final MINIMUM_MEMORY_GROWTH_THRESHOLD:I = 0x2710

.field public static final MY_PID:I

.field private static final NATIVE_DUMP_TIMEOUT_MS:I

.field private static final NETWORK_ACCESS_TIMEOUT_DEFAULT_MS:J = 0xc8L

.field static final NOTIFY_CLEARTEXT_NETWORK_MSG:I = 0x31

.field static final PERSISTENT_MASK:I = 0x9

.field static final POST_DUMP_HEAP_NOTIFICATION_MSG:I = 0x32

.field static final PROC_START_TIMEOUT:I

.field static final PROC_START_TIMEOUT_MSG:I = 0x14

.field static final PROC_START_TIMEOUT_WITH_WRAPPER:I = 0x124f80

.field static final PUSH_TEMP_ALLOWLIST_UI_MSG:I = 0x44

.field static final REPORT_MEM_USAGE_MSG:I = 0x21

.field static final RESERVED_BYTES_PER_LOGCAT_LINE:I = 0x64

.field static final SERVICE_FOREGROUND_CRASH_MSG:I = 0x45

.field static final SERVICE_FOREGROUND_TIMEOUT_MSG:I = 0x42

.field static final SERVICE_RECORD_KEY:Ljava/lang/String; = "servicerecord"

.field static final SERVICE_TIMEOUT_MSG:I = 0xc

.field private static final SHELL_APP_PACKAGE:Ljava/lang/String; = "com.android.shell"

.field static final SHOW_ERROR_UI_MSG:I = 0x1

.field static final SHOW_NOT_RESPONDING_UI_MSG:I = 0x2

.field static final SHOW_STRICT_MODE_VIOLATION_UI_MSG:I = 0x1a

.field static final SHUTDOWN_UI_AUTOMATION_CONNECTION_MSG:I = 0x38

.field public static final STOCK_PM_FLAGS:I = 0x400

.field private static final SYSTEM_PROPERTY_DEVICE_PROVISIONED:Ljava/lang/String; = "persist.sys.device_provisioned"

.field static final SYSTEM_USER_HOME_NEEDED:Ljava/lang/String; = "ro.system_user_home_needed"

.field static final TAG:Ljava/lang/String; = "ActivityManager"

.field static final TAG_BACKUP:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_BROADCAST:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_CLEANUP:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_CONFIGURATION:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_LOCKTASK:Ljava/lang/String; = "ActivityManager"

.field static final TAG_LRU:Ljava/lang/String; = "ActivityManager"

.field static final TAG_MU:Ljava/lang/String; = "ActivityManager_MU"

.field static final TAG_NETWORK:Ljava/lang/String; = "ActivityManager_Network"

.field static final TAG_OOM_ADJ:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_POWER:Ljava/lang/String; = "ActivityManager"

.field static final TAG_PROCESSES:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_SERVICE:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_SWITCH:Ljava/lang/String; = "ActivityManager"

.field static final TAG_UID_OBSERVERS:Ljava/lang/String; = "ActivityManager"

.field static final TRACK_PROCSTATS_ASSOCIATIONS:Z = true

.field static final UPDATE_HTTP_PROXY_MSG:I = 0x1d

.field static final UPDATE_TIME_PREFERENCE_MSG:I = 0x29

.field static final UPDATE_TIME_ZONE:I = 0xd

.field static final WAIT_FOR_CONTENT_PROVIDER_TIMEOUT_MSG:I = 0x49

.field static final WAIT_FOR_DEBUGGER_UI_MSG:I = 0x6

.field static final sActiveProcessInfoSelfLocked:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray<",
            "Landroid/content/pm/ProcessInfo;",
            ">;"
        }
    .end annotation
.end field

.field private static sAnrFileDateFormat:Ljava/text/SimpleDateFormat;

.field static final sNullHostingRecord:Lcom/android/server/am/HostingRecord;

.field private static sProcThreadPriorityBooster:Lcom/android/server/ThreadPriorityBooster;

.field private static sTheRealBuildSerial:Ljava/lang/String;

.field private static sThreadPriorityBooster:Lcom/android/server/ThreadPriorityBooster;


# instance fields
.field final mActiveCameraUids:Landroid/util/IntArray;

.field final mActiveInstrumentation:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/server/am/ActiveInstrumentation;",
            ">;"
        }
    .end annotation
.end field

.field private final mActivityLaunchObserver:Lcom/android/server/wm/ActivityMetricsLaunchObserver;

.field public mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

.field private mAllowedAssociations:Landroid/util/ArrayMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/ArrayMap<",
            "Ljava/lang/String;",
            "Lcom/android/server/am/ActivityManagerService$PackageAssociationInfo;",
            ">;"
        }
    .end annotation
.end field

.field private final mAlreadyLoggedViolatedStacks:Ljava/util/HashSet;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashSet<",
            "Ljava/lang/Integer;",
            ">;"
        }
    .end annotation
.end field

.field mAlwaysFinishActivities:Z

.field final mAnrHelper:Lcom/android/server/am/AnrHelper;

.field mAppBindArgs:Landroid/util/ArrayMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/ArrayMap<",
            "Ljava/lang/String;",
            "Landroid/os/IBinder;",
            ">;"
        }
    .end annotation
.end field

.field final mAppErrors:Lcom/android/server/am/AppErrors;

.field private mAppOpsManager:Landroid/app/AppOpsManager;

.field final mAppOpsService:Lcom/android/server/appop/AppOpsService;

.field final mAppProfiler:Lcom/android/server/am/AppProfiler;

.field final mAssociations:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray<",
            "Landroid/util/ArrayMap<",
            "Landroid/content/ComponentName;",
            "Landroid/util/SparseArray<",
            "Landroid/util/ArrayMap<",
            "Ljava/lang/String;",
            "Lcom/android/server/am/ActivityManagerService$Association;",
            ">;>;>;>;"
        }
    .end annotation
.end field

.field public mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

.field private mBackgroundAppIdAllowlist:[I

.field private mBackgroundLaunchBroadcasts:Landroid/util/ArraySet;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/ArraySet<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation
.end field

.field final mBackupTargets:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray<",
            "Lcom/android/server/am/BackupRecord;",
            ">;"
        }
    .end annotation
.end field

.field final mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

.field final mBgBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

.field private volatile mBinderTransactionTrackingEnabled:Z

.field mBootAnimationComplete:Z

.field mBootPhase:I

.field volatile mBooted:Z

.field volatile mBooting:Z

.field final mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

.field mCallFinishBooting:Z

.field private final mCompanionAppUidsMap:Ljava/util/Map;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/Map<",
            "Ljava/lang/Integer;",
            "Ljava/util/Set<",
            "Ljava/lang/Integer;",
            ">;>;"
        }
    .end annotation
.end field

.field mConstants:Lcom/android/server/am/ActivityManagerConstants;

.field volatile mContentCaptureService:Lcom/android/server/contentcapture/ContentCaptureManagerInternal;

.field final mContext:Landroid/content/Context;

.field mCoreSettingsObserver:Lcom/android/server/am/CoreSettingsObserver;

.field final mCpHelper:Lcom/android/server/am/ContentProviderHelper;

.field mCurBroadcastStats:Lcom/android/server/am/BroadcastStats;

.field mCurOomAdjObserver:Lcom/android/server/am/ActivityManagerService$OomAdjObserver;

.field mCurOomAdjUid:I

.field private final mCurResumedAppLock:Ljava/lang/Object;

.field private mCurResumedPackage:Ljava/lang/String;

.field private mCurResumedUid:I

.field private mDebugApp:Ljava/lang/String;

.field private mDebugTransient:Z

.field mDeviceIdleAllowlist:[I

.field mDeviceIdleExceptIdleAllowlist:[I

.field mDeviceIdleTempAllowlist:[I

.field private volatile mDeviceOwnerName:Ljava/lang/String;

.field private volatile mDeviceOwnerUid:I

.field final mEnableOffloadQueue:Z

.field private final mErrorClusterRecords:Landroid/util/ArrayMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/ArrayMap<",
            "Ljava/lang/String;",
            "[J>;"
        }
    .end annotation
.end field

.field final mFactoryTest:I

.field final mFgBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

.field final mFgsStartTempAllowList:Lcom/android/server/am/FgsTempAllowList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Lcom/android/server/am/FgsTempAllowList<",
            "Lcom/android/server/am/ActivityManagerService$FgsTempAllowListItem;",
            ">;"
        }
    .end annotation
.end field

.field private final mFgsWhileInUseTempAllowList:Lcom/android/server/am/FgsTempAllowList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Lcom/android/server/am/FgsTempAllowList<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation
.end field

.field private mForceBackgroundCheck:Z

.field final mForegroundPackages:Lcom/android/internal/app/ProcessMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Lcom/android/internal/app/ProcessMap<",
            "Ljava/util/ArrayList<",
            "Lcom/android/server/am/ProcessRecord;",
            ">;>;"
        }
    .end annotation
.end field

.field final mGlobalLock:Lcom/android/server/am/ActivityManagerGlobalLock;

.field final mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

.field public final mHandlerThread:Lcom/android/server/ServiceThread;

.field final mHiddenApiBlacklist:Lcom/android/server/am/ActivityManagerService$HiddenApiSettings;

.field final mImportantProcesses:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray<",
            "Lcom/android/server/am/ActivityManagerService$ImportanceToken;",
            ">;"
        }
    .end annotation
.end field

.field final mInjector:Lcom/android/server/am/ActivityManagerService$Injector;

.field private mInstaller:Lcom/android/server/pm/Installer;

.field final mInstrumentationReporter:Lcom/android/server/am/InstrumentationReporter;

.field public final mIntentFirewall:Lcom/android/server/firewall/IntentFirewall;

.field public final mInternal:Landroid/app/ActivityManagerInternal;

.field mIsolatedAppBindArgs:Landroid/util/ArrayMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/ArrayMap<",
            "Ljava/lang/String;",
            "Landroid/os/IBinder;",
            ">;"
        }
    .end annotation
.end field

.field private mLastBinderHeavyHitterAutoSamplerStart:J

.field mLastBroadcastStats:Lcom/android/server/am/BroadcastStats;

.field mLastIdleTime:J

.field mLastPowerCheckUptime:J

.field private mLifeMonitorFds:[Landroid/os/ParcelFileDescriptor;

.field mLocalDeviceIdleController:Lcom/android/server/DeviceIdleInternal;

.field mLocalPowerManager:Landroid/os/PowerManagerInternal;

.field mNativeDebuggingApp:Ljava/lang/String;

.field final mOffloadBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

.field volatile mOnBattery:Z

.field final mOomAdjObserverLock:Ljava/lang/Object;

.field public mOomAdjProfiler:Lcom/android/server/am/OomAdjProfiler;

.field mOomAdjuster:Lcom/android/server/am/OomAdjuster;

.field private mOrigDebugApp:Ljava/lang/String;

.field private mOrigWaitForDebugger:Z

.field mPackageManagerInt:Landroid/content/pm/PackageManagerInternal;

.field final mPackageWatchdog:Lcom/android/server/PackageWatchdog;

.field public final mPendingIntentController:Lcom/android/server/am/PendingIntentController;

.field private final mPendingStartActivityUids:Lcom/android/server/am/PendingStartActivityUids;

.field final mPendingTempAllowlist:Lcom/android/server/am/PendingTempAllowlists;

.field mPermissionManagerInt:Lcom/android/server/pm/permission/PermissionManagerServiceInternal;

.field final mPersistentStartingProcesses:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/server/am/ProcessRecord;",
            ">;"
        }
    .end annotation
.end field

.field final mPhantomProcessList:Lcom/android/server/am/PhantomProcessList;

.field final mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

.field private final mPlatformCompat:Lcom/android/server/compat/PlatformCompat;

.field private final mPriorityDumper:Lcom/android/server/utils/PriorityDump$PriorityDumper;

.field final mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

.field final mProcStartHandler:Landroid/os/Handler;

.field final mProcStartHandlerThread:Lcom/android/server/ServiceThread;

.field final mProcessList:Lcom/android/server/am/ProcessList;

.field final mProcessStats:Lcom/android/server/am/ProcessStatsService;

.field final mProcessesOnHold:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/server/am/ProcessRecord;",
            ">;"
        }
    .end annotation
.end field

.field volatile mProcessesReady:Z

.field private mProfileOwnerUids:Landroid/util/ArraySet;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/ArraySet<",
            "Ljava/lang/Integer;",
            ">;"
        }
    .end annotation
.end field

.field final mReceiverResolver:Lcom/android/server/IntentResolver;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Lcom/android/server/IntentResolver<",
            "Lcom/android/server/am/BroadcastFilter;",
            "Lcom/android/server/am/BroadcastFilter;",
            ">;"
        }
    .end annotation
.end field

.field final mRegisteredReceivers:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap<",
            "Landroid/os/IBinder;",
            "Lcom/android/server/am/ReceiverList;",
            ">;"
        }
    .end annotation
.end field

.field mSafeMode:Z

.field final mServices:Lcom/android/server/am/ActiveServices;

.field final mStickyBroadcasts:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray<",
            "Landroid/util/ArrayMap<",
            "Ljava/lang/String;",
            "Ljava/util/ArrayList<",
            "Landroid/content/Intent;",
            ">;>;>;"
        }
    .end annotation
.end field

.field volatile mSystemReady:Z

.field mSystemServiceManager:Lcom/android/server/SystemServiceManager;

.field final mSystemThread:Landroid/app/ActivityThread;

.field private mTestUtilityService:Landroid/content/pm/TestUtilityService;

.field mTraceErrorLogger:Lcom/android/server/am/TraceErrorLogger;

.field private mTrackAllocationApp:Ljava/lang/String;

.field mTrackingAssociations:Z

.field mUgmInternal:Lcom/android/server/uri/UriGrantsManagerInternal;

.field final mUiContext:Landroid/content/Context;

.field final mUiHandler:Landroid/os/Handler;

.field final mUidObserverController:Lcom/android/server/am/UidObserverController;

.field volatile mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

.field final mUseFifoUiScheduling:Z

.field final mUserController:Lcom/android/server/am/UserController;

.field private volatile mUserIsMonkey:Z

.field private mWaitForDebugger:Z

.field mWaitForNetworkTimeoutMs:J

.field mWakefulness:Ljava/util/concurrent/atomic/AtomicInteger;

.field public mWindowManager:Lcom/android/server/wm/WindowManagerService;

.field mWmInternal:Lcom/android/server/wm/WindowManagerInternal;


# direct methods
.method static constructor <clinit>()V
    .locals 17

    .line 473
    sget v0, Landroid/os/Build;->HW_TIMEOUT_MULTIPLIER:I

    mul-int/lit16 v0, v0, 0x2710

    sput v0, Lcom/android/server/am/ActivityManagerService;->PROC_START_TIMEOUT:I

    .line 485
    sget v0, Landroid/os/Build;->HW_TIMEOUT_MULTIPLIER:I

    mul-int/lit16 v0, v0, 0x2710

    sput v0, Lcom/android/server/am/ActivityManagerService;->BROADCAST_FG_TIMEOUT:I

    .line 486
    sget v0, Landroid/os/Build;->HW_TIMEOUT_MULTIPLIER:I

    const v1, 0xea60

    mul-int/2addr v0, v1

    sput v0, Lcom/android/server/am/ActivityManagerService;->BROADCAST_BG_TIMEOUT:I

    .line 488
    invoke-static {}, Landroid/os/Process;->myPid()I

    move-result v0

    sput v0, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    .line 490
    const/4 v0, 0x0

    new-array v0, v0, [Ljava/lang/String;

    sput-object v0, Lcom/android/server/am/ActivityManagerService;->EMPTY_STRING_ARRAY:[Ljava/lang/String;

    .line 534
    sget v0, Landroid/os/Build;->HW_TIMEOUT_MULTIPLIER:I

    mul-int/lit16 v0, v0, 0x7d0

    sput v0, Lcom/android/server/am/ActivityManagerService;->NATIVE_DUMP_TIMEOUT_MS:I

    .line 712
    new-instance v0, Lcom/android/server/ThreadPriorityBooster;

    const/4 v1, -0x2

    const/4 v2, 0x7

    invoke-direct {v0, v1, v2}, Lcom/android/server/ThreadPriorityBooster;-><init>(II)V

    sput-object v0, Lcom/android/server/am/ActivityManagerService;->sThreadPriorityBooster:Lcom/android/server/ThreadPriorityBooster;

    .line 723
    new-instance v0, Lcom/android/server/ThreadPriorityBooster;

    const/4 v2, 0x6

    invoke-direct {v0, v1, v2}, Lcom/android/server/ThreadPriorityBooster;-><init>(II)V

    sput-object v0, Lcom/android/server/am/ActivityManagerService;->sProcThreadPriorityBooster:Lcom/android/server/ThreadPriorityBooster;

    .line 824
    new-instance v0, Landroid/util/SparseArray;

    invoke-direct {v0}, Landroid/util/SparseArray;-><init>()V

    sput-object v0, Lcom/android/server/am/ActivityManagerService;->sActiveProcessInfoSelfLocked:Landroid/util/SparseArray;

    .line 1243
    new-instance v0, Lcom/android/server/am/ActivityManagerService$FgsTempAllowListItem;

    const-wide v2, 0x7fffffffffffffffL

    const/16 v4, 0x12c

    const-string v5, ""

    const/4 v6, -0x1

    move-object v1, v0

    invoke-direct/range {v1 .. v6}, Lcom/android/server/am/ActivityManagerService$FgsTempAllowListItem;-><init>(JILjava/lang/String;I)V

    sput-object v0, Lcom/android/server/am/ActivityManagerService;->FAKE_TEMP_ALLOW_LIST_ITEM:Lcom/android/server/am/ActivityManagerService$FgsTempAllowListItem;

    .line 1506
    const-string/jumbo v0, "unknown"

    sput-object v0, Lcom/android/server/am/ActivityManagerService;->sTheRealBuildSerial:Ljava/lang/String;

    .line 1511
    new-instance v0, Lcom/android/server/am/HostingRecord;

    const/4 v1, 0x0

    invoke-direct {v0, v1}, Lcom/android/server/am/HostingRecord;-><init>(Ljava/lang/String;)V

    sput-object v0, Lcom/android/server/am/ActivityManagerService;->sNullHostingRecord:Lcom/android/server/am/HostingRecord;

    .line 10285
    const/16 v0, 0x17

    new-array v0, v0, [J

    fill-array-data v0, :array_0

    sput-object v0, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_BUCKETS:[J

    .line 10312
    const/16 v0, 0x10

    new-array v0, v0, [I

    fill-array-data v0, :array_1

    sput-object v0, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_ADJ:[I

    .line 10323
    const-string v1, "Native"

    const-string v2, "System"

    const-string v3, "Persistent"

    const-string v4, "Persistent Service"

    const-string v5, "Foreground"

    const-string v6, "Visible"

    const-string v7, "Perceptible"

    const-string v8, "Perceptible Low"

    const-string v9, "Perceptible Medium"

    const-string v10, "Heavy Weight"

    const-string v11, "Backup"

    const-string v12, "A Services"

    const-string v13, "Home"

    const-string v14, "Previous"

    const-string v15, "B Services"

    const-string v16, "Cached"

    filled-new-array/range {v1 .. v16}, [Ljava/lang/String;

    move-result-object v0

    sput-object v0, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_LABEL:[Ljava/lang/String;

    .line 10331
    const-string/jumbo v1, "native"

    const-string/jumbo v2, "sys"

    const-string/jumbo v3, "pers"

    const-string/jumbo v4, "persvc"

    const-string v5, "fore"

    const-string/jumbo v6, "vis"

    const-string/jumbo v7, "percept"

    const-string/jumbo v8, "perceptl"

    const-string/jumbo v9, "perceptm"

    const-string v10, "heavy"

    const-string v11, "backup"

    const-string/jumbo v12, "servicea"

    const-string v13, "home"

    const-string/jumbo v14, "prev"

    const-string/jumbo v15, "serviceb"

    const-string v16, "cached"

    filled-new-array/range {v1 .. v16}, [Ljava/lang/String;

    move-result-object v0

    sput-object v0, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_COMPACT_LABEL:[Ljava/lang/String;

    return-void

    :array_0
    .array-data 8
        0x1400
        0x1c00
        0x2800
        0x3c00
        0x5000
        0x7800
        0xa000
        0x14000
        0x1e000
        0x28000
        0x32000
        0x3e800
        0x4b000
        0x57800
        0x64000
        0x7d000
        0x96000
        0xc8000
        0x100000
        0x200000
        0x500000
        0xa00000
        0x1400000
    .end array-data

    :array_1
    .array-data 4
        -0x3e8
        -0x384
        -0x320
        -0x2bc
        0x0
        0x64
        0xc8
        0xfa
        0xe1
        0x12c
        0x190
        0x1f4
        0x258
        0x2bc
        0x320
        0x384
    .end array-data
.end method

.method public constructor <init>(Landroid/content/Context;Lcom/android/server/wm/ActivityTaskManagerService;)V
    .locals 24
    .param p1, "systemContext"    # Landroid/content/Context;
    .param p2, "atm"    # Lcom/android/server/wm/ActivityTaskManagerService;

    .line 2225
    move-object/from16 v7, p0

    move-object/from16 v8, p1

    move-object/from16 v9, p2

    invoke-direct/range {p0 .. p0}, Landroid/app/IActivityManager$Stub;-><init>()V

    .line 556
    new-instance v0, Lcom/android/server/am/InstrumentationReporter;

    invoke-direct {v0}, Lcom/android/server/am/InstrumentationReporter;-><init>()V

    iput-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mInstrumentationReporter:Lcom/android/server/am/InstrumentationReporter;

    .line 558
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    iput-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mActiveInstrumentation:Ljava/util/ArrayList;

    .line 563
    new-instance v0, Lcom/android/server/am/OomAdjProfiler;

    invoke-direct {v0}, Lcom/android/server/am/OomAdjProfiler;-><init>()V

    iput-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mOomAdjProfiler:Lcom/android/server/am/OomAdjProfiler;

    .line 568
    iput-object v7, v7, Lcom/android/server/am/ActivityManagerService;->mGlobalLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    .line 604
    new-instance v0, Lcom/android/server/am/ActivityManagerProcLock;

    invoke-direct {v0}, Lcom/android/server/am/ActivityManagerProcLock;-><init>()V

    iput-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    .line 620
    const/4 v0, 0x3

    new-array v0, v0, [Lcom/android/server/am/BroadcastQueue;

    iput-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    .line 652
    const/4 v1, -0x1

    iput v1, v7, Lcom/android/server/am/ActivityManagerService;->mDeviceOwnerUid:I

    .line 657
    new-instance v2, Landroid/util/ArrayMap;

    invoke-direct {v2}, Landroid/util/ArrayMap;-><init>()V

    iput-object v2, v7, Lcom/android/server/am/ActivityManagerService;->mCompanionAppUidsMap:Ljava/util/Map;

    .line 662
    const/4 v2, 0x0

    iput-object v2, v7, Lcom/android/server/am/ActivityManagerService;->mProfileOwnerUids:Landroid/util/ArraySet;

    .line 682
    new-instance v3, Landroid/util/IntArray;

    const/4 v4, 0x4

    invoke-direct {v3, v4}, Landroid/util/IntArray;-><init>(I)V

    iput-object v3, v7, Lcom/android/server/am/ActivityManagerService;->mActiveCameraUids:Landroid/util/IntArray;

    .line 692
    new-instance v3, Lcom/android/server/am/ActivityManagerService$1;

    invoke-direct {v3, v7}, Lcom/android/server/am/ActivityManagerService$1;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iput-object v3, v7, Lcom/android/server/am/ActivityManagerService;->mPriorityDumper:Lcom/android/server/utils/PriorityDump$PriorityDumper;

    .line 762
    const/4 v10, 0x1

    new-array v3, v10, [I

    const/16 v4, 0x3ea

    const/4 v11, 0x0

    aput v4, v3, v11

    iput-object v3, v7, Lcom/android/server/am/ActivityManagerService;->mBackgroundAppIdAllowlist:[I

    .line 832
    new-instance v3, Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-direct {v3}, Lcom/android/server/am/ActivityManagerService$PidMap;-><init>()V

    iput-object v3, v7, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    .line 972
    new-instance v3, Landroid/util/SparseArray;

    invoke-direct {v3}, Landroid/util/SparseArray;-><init>()V

    iput-object v3, v7, Lcom/android/server/am/ActivityManagerService;->mImportantProcesses:Landroid/util/SparseArray;

    .line 980
    new-instance v3, Ljava/util/ArrayList;

    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    iput-object v3, v7, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;

    .line 987
    new-instance v3, Ljava/util/ArrayList;

    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    iput-object v3, v7, Lcom/android/server/am/ActivityManagerService;->mPersistentStartingProcesses:Ljava/util/ArrayList;

    .line 990
    new-instance v3, Lcom/android/server/am/ActivityManagerService$2;

    invoke-direct {v3, v7}, Lcom/android/server/am/ActivityManagerService$2;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iput-object v3, v7, Lcom/android/server/am/ActivityManagerService;->mActivityLaunchObserver:Lcom/android/server/wm/ActivityMetricsLaunchObserver;

    .line 1019
    iput-boolean v11, v7, Lcom/android/server/am/ActivityManagerService;->mBinderTransactionTrackingEnabled:Z

    .line 1027
    new-instance v3, Ljava/util/HashSet;

    invoke-direct {v3}, Ljava/util/HashSet;-><init>()V

    iput-object v3, v7, Lcom/android/server/am/ActivityManagerService;->mAlreadyLoggedViolatedStacks:Ljava/util/HashSet;

    .line 1035
    new-instance v3, Ljava/util/HashMap;

    invoke-direct {v3}, Ljava/util/HashMap;-><init>()V

    iput-object v3, v7, Lcom/android/server/am/ActivityManagerService;->mRegisteredReceivers:Ljava/util/HashMap;

    .line 1042
    new-instance v3, Lcom/android/server/am/ActivityManagerService$3;

    invoke-direct {v3, v7}, Lcom/android/server/am/ActivityManagerService$3;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iput-object v3, v7, Lcom/android/server/am/ActivityManagerService;->mReceiverResolver:Lcom/android/server/IntentResolver;

    .line 1088
    new-instance v3, Landroid/util/SparseArray;

    invoke-direct {v3}, Landroid/util/SparseArray;-><init>()V

    iput-object v3, v7, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    .line 1128
    new-instance v3, Landroid/util/SparseArray;

    invoke-direct {v3}, Landroid/util/SparseArray;-><init>()V

    iput-object v3, v7, Lcom/android/server/am/ActivityManagerService;->mAssociations:Landroid/util/SparseArray;

    .line 1136
    new-instance v3, Landroid/util/SparseArray;

    invoke-direct {v3}, Landroid/util/SparseArray;-><init>()V

    iput-object v3, v7, Lcom/android/server/am/ActivityManagerService;->mBackupTargets:Landroid/util/SparseArray;

    .line 1162
    new-array v3, v11, [I

    iput-object v3, v7, Lcom/android/server/am/ActivityManagerService;->mDeviceIdleAllowlist:[I

    .line 1168
    new-array v3, v11, [I

    iput-object v3, v7, Lcom/android/server/am/ActivityManagerService;->mDeviceIdleExceptIdleAllowlist:[I

    .line 1174
    new-array v3, v11, [I

    iput-object v3, v7, Lcom/android/server/am/ActivityManagerService;->mDeviceIdleTempAllowlist:[I

    .line 1211
    new-instance v3, Lcom/android/server/am/PendingTempAllowlists;

    invoke-direct {v3, v7}, Lcom/android/server/am/PendingTempAllowlists;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iput-object v3, v7, Lcom/android/server/am/ActivityManagerService;->mPendingTempAllowlist:Lcom/android/server/am/PendingTempAllowlists;

    .line 1239
    new-instance v3, Lcom/android/server/am/FgsTempAllowList;

    invoke-direct {v3}, Lcom/android/server/am/FgsTempAllowList;-><init>()V

    iput-object v3, v7, Lcom/android/server/am/ActivityManagerService;->mFgsStartTempAllowList:Lcom/android/server/am/FgsTempAllowList;

    .line 1250
    new-instance v3, Lcom/android/server/am/FgsTempAllowList;

    invoke-direct {v3}, Lcom/android/server/am/FgsTempAllowList;-><init>()V

    iput-object v3, v7, Lcom/android/server/am/ActivityManagerService;->mFgsWhileInUseTempAllowList:Lcom/android/server/am/FgsTempAllowList;

    .line 1266
    iput-boolean v11, v7, Lcom/android/server/am/ActivityManagerService;->mProcessesReady:Z

    .line 1267
    iput-boolean v11, v7, Lcom/android/server/am/ActivityManagerService;->mSystemReady:Z

    .line 1268
    iput-boolean v11, v7, Lcom/android/server/am/ActivityManagerService;->mOnBattery:Z

    .line 1270
    iput-boolean v11, v7, Lcom/android/server/am/ActivityManagerService;->mBooting:Z

    .line 1272
    iput-boolean v11, v7, Lcom/android/server/am/ActivityManagerService;->mCallFinishBooting:Z

    .line 1273
    iput-boolean v11, v7, Lcom/android/server/am/ActivityManagerService;->mBootAnimationComplete:Z

    .line 1297
    new-instance v3, Ljava/util/concurrent/atomic/AtomicInteger;

    invoke-direct {v3, v10}, Ljava/util/concurrent/atomic/AtomicInteger;-><init>(I)V

    iput-object v3, v7, Lcom/android/server/am/ActivityManagerService;->mWakefulness:Ljava/util/concurrent/atomic/AtomicInteger;

    .line 1302
    nop

    .line 1303
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v3

    iput-wide v3, v7, Lcom/android/server/am/ActivityManagerService;->mLastIdleTime:J

    .line 1311
    iput-object v2, v7, Lcom/android/server/am/ActivityManagerService;->mCurResumedPackage:Ljava/lang/String;

    .line 1314
    iput v1, v7, Lcom/android/server/am/ActivityManagerService;->mCurResumedUid:I

    .line 1320
    new-instance v1, Ljava/lang/Object;

    invoke-direct {v1}, Ljava/lang/Object;-><init>()V

    iput-object v1, v7, Lcom/android/server/am/ActivityManagerService;->mCurResumedAppLock:Ljava/lang/Object;

    .line 1327
    new-instance v1, Lcom/android/internal/app/ProcessMap;

    invoke-direct {v1}, Lcom/android/internal/app/ProcessMap;-><init>()V

    iput-object v1, v7, Lcom/android/server/am/ActivityManagerService;->mForegroundPackages:Lcom/android/internal/app/ProcessMap;

    .line 1337
    iput-object v2, v7, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;

    .line 1340
    iput-boolean v11, v7, Lcom/android/server/am/ActivityManagerService;->mWaitForDebugger:Z

    .line 1343
    iput-boolean v11, v7, Lcom/android/server/am/ActivityManagerService;->mDebugTransient:Z

    .line 1346
    iput-object v2, v7, Lcom/android/server/am/ActivityManagerService;->mOrigDebugApp:Ljava/lang/String;

    .line 1349
    iput-boolean v11, v7, Lcom/android/server/am/ActivityManagerService;->mOrigWaitForDebugger:Z

    .line 1352
    iput-boolean v11, v7, Lcom/android/server/am/ActivityManagerService;->mAlwaysFinishActivities:Z

    .line 1355
    iput-object v2, v7, Lcom/android/server/am/ActivityManagerService;->mTrackAllocationApp:Ljava/lang/String;

    .line 1358
    iput-object v2, v7, Lcom/android/server/am/ActivityManagerService;->mNativeDebuggingApp:Ljava/lang/String;

    .line 1385
    new-instance v1, Ljava/lang/Object;

    invoke-direct {v1}, Ljava/lang/Object;-><init>()V

    iput-object v1, v7, Lcom/android/server/am/ActivityManagerService;->mOomAdjObserverLock:Ljava/lang/Object;

    .line 1391
    new-instance v1, Lcom/android/server/am/AnrHelper;

    invoke-direct {v1, v7}, Lcom/android/server/am/AnrHelper;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iput-object v1, v7, Lcom/android/server/am/ActivityManagerService;->mAnrHelper:Lcom/android/server/am/AnrHelper;

    .line 1394
    iput-boolean v11, v7, Lcom/android/server/am/ActivityManagerService;->mBooted:Z

    .line 1530
    const-wide/16 v1, 0x0

    iput-wide v1, v7, Lcom/android/server/am/ActivityManagerService;->mLastBinderHeavyHitterAutoSamplerStart:J

    .line 8202
    new-instance v1, Landroid/util/ArrayMap;

    invoke-direct {v1}, Landroid/util/ArrayMap;-><init>()V

    iput-object v1, v7, Lcom/android/server/am/ActivityManagerService;->mErrorClusterRecords:Landroid/util/ArrayMap;

    .line 2226
    const/4 v1, 0x7

    invoke-static {v7, v1}, Lcom/android/server/LockGuard;->installLock(Ljava/lang/Object;I)Ljava/lang/Object;

    .line 2227
    new-instance v12, Lcom/android/server/am/ActivityManagerService$Injector;

    invoke-direct {v12, v8}, Lcom/android/server/am/ActivityManagerService$Injector;-><init>(Landroid/content/Context;)V

    iput-object v12, v7, Lcom/android/server/am/ActivityManagerService;->mInjector:Lcom/android/server/am/ActivityManagerService$Injector;

    .line 2228
    iput-object v8, v7, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    .line 2230
    invoke-static {}, Landroid/os/FactoryTest;->getMode()I

    move-result v1

    iput v1, v7, Lcom/android/server/am/ActivityManagerService;->mFactoryTest:I

    .line 2231
    invoke-static {}, Landroid/app/ActivityThread;->currentActivityThread()Landroid/app/ActivityThread;

    move-result-object v1

    iput-object v1, v7, Lcom/android/server/am/ActivityManagerService;->mSystemThread:Landroid/app/ActivityThread;

    .line 2232
    invoke-virtual {v1}, Landroid/app/ActivityThread;->getSystemUiContext()Landroid/app/ContextImpl;

    move-result-object v13

    iput-object v13, v7, Lcom/android/server/am/ActivityManagerService;->mUiContext:Landroid/content/Context;

    .line 2234
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Memory class: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {}, Landroid/app/ActivityManager;->staticGetMemoryClass()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    const-string v14, "ActivityManager"

    invoke-static {v14, v1}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 2236
    new-instance v15, Lcom/android/server/ServiceThread;

    const/4 v1, -0x2

    invoke-direct {v15, v14, v1, v11}, Lcom/android/server/ServiceThread;-><init>(Ljava/lang/String;IZ)V

    iput-object v15, v7, Lcom/android/server/am/ActivityManagerService;->mHandlerThread:Lcom/android/server/ServiceThread;

    .line 2238
    invoke-virtual {v15}, Lcom/android/server/ServiceThread;->start()V

    .line 2239
    new-instance v6, Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v15}, Lcom/android/server/ServiceThread;->getLooper()Landroid/os/Looper;

    move-result-object v2

    invoke-direct {v6, v7, v2}, Lcom/android/server/am/ActivityManagerService$MainHandler;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/os/Looper;)V

    iput-object v6, v7, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    .line 2240
    invoke-virtual {v12, v7}, Lcom/android/server/am/ActivityManagerService$Injector;->getUiHandler(Lcom/android/server/am/ActivityManagerService;)Landroid/os/Handler;

    move-result-object v5

    iput-object v5, v7, Lcom/android/server/am/ActivityManagerService;->mUiHandler:Landroid/os/Handler;

    .line 2242
    new-instance v2, Lcom/android/server/ServiceThread;

    const-string v3, "ActivityManager:procStart"

    invoke-direct {v2, v3, v1, v11}, Lcom/android/server/ServiceThread;-><init>(Ljava/lang/String;IZ)V

    iput-object v2, v7, Lcom/android/server/am/ActivityManagerService;->mProcStartHandlerThread:Lcom/android/server/ServiceThread;

    .line 2244
    invoke-virtual {v2}, Lcom/android/server/ServiceThread;->start()V

    .line 2245
    new-instance v1, Landroid/os/Handler;

    invoke-virtual {v2}, Lcom/android/server/ServiceThread;->getLooper()Landroid/os/Looper;

    move-result-object v2

    invoke-direct {v1, v2}, Landroid/os/Handler;-><init>(Landroid/os/Looper;)V

    iput-object v1, v7, Lcom/android/server/am/ActivityManagerService;->mProcStartHandler:Landroid/os/Handler;

    .line 2247
    new-instance v1, Lcom/android/server/am/ActivityManagerConstants;

    invoke-direct {v1, v8, v7, v6}, Lcom/android/server/am/ActivityManagerConstants;-><init>(Landroid/content/Context;Lcom/android/server/am/ActivityManagerService;Landroid/os/Handler;)V

    iput-object v1, v7, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    .line 2248
    new-instance v1, Lcom/android/server/am/ActiveUids;

    invoke-direct {v1, v7, v10}, Lcom/android/server/am/ActiveUids;-><init>(Lcom/android/server/am/ActivityManagerService;Z)V

    move-object v4, v1

    .line 2249
    .local v4, "activeUids":Lcom/android/server/am/ActiveUids;
    const-string/jumbo v1, "platform_compat"

    invoke-static {v1}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v1

    check-cast v1, Lcom/android/server/compat/PlatformCompat;

    iput-object v1, v7, Lcom/android/server/am/ActivityManagerService;->mPlatformCompat:Lcom/android/server/compat/PlatformCompat;

    .line 2251
    invoke-virtual {v12, v7}, Lcom/android/server/am/ActivityManagerService$Injector;->getProcessList(Lcom/android/server/am/ActivityManagerService;)Lcom/android/server/am/ProcessList;

    move-result-object v2

    iput-object v2, v7, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    .line 2252
    invoke-virtual {v2, v7, v4, v1}, Lcom/android/server/am/ProcessList;->init(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ActiveUids;Lcom/android/server/compat/PlatformCompat;)V

    .line 2253
    new-instance v1, Lcom/android/server/am/AppProfiler;

    invoke-static {}, Lcom/android/internal/os/BackgroundThread;->getHandler()Landroid/os/Handler;

    move-result-object v3

    invoke-virtual {v3}, Landroid/os/Handler;->getLooper()Landroid/os/Looper;

    move-result-object v3

    new-instance v10, Lcom/android/server/am/LowMemDetector;

    invoke-direct {v10, v7}, Lcom/android/server/am/LowMemDetector;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    invoke-direct {v1, v7, v3, v10}, Lcom/android/server/am/AppProfiler;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/os/Looper;Lcom/android/server/am/LowMemDetector;)V

    iput-object v1, v7, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    .line 2255
    new-instance v1, Lcom/android/server/am/PhantomProcessList;

    invoke-direct {v1, v7}, Lcom/android/server/am/PhantomProcessList;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iput-object v1, v7, Lcom/android/server/am/ActivityManagerService;->mPhantomProcessList:Lcom/android/server/am/PhantomProcessList;

    .line 2256
    new-instance v1, Lcom/android/server/am/OomAdjuster;

    invoke-direct {v1, v7, v2, v4}, Lcom/android/server/am/OomAdjuster;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ProcessList;Lcom/android/server/am/ActiveUids;)V

    iput-object v1, v7, Lcom/android/server/am/ActivityManagerService;->mOomAdjuster:Lcom/android/server/am/OomAdjuster;

    .line 2259
    new-instance v1, Lcom/android/server/am/BroadcastConstants;

    const-string v2, "bcast_fg_constants"

    invoke-direct {v1, v2}, Lcom/android/server/am/BroadcastConstants;-><init>(Ljava/lang/String;)V

    move-object v10, v1

    .line 2261
    .local v10, "foreConstants":Lcom/android/server/am/BroadcastConstants;
    sget v1, Lcom/android/server/am/ActivityManagerService;->BROADCAST_FG_TIMEOUT:I

    int-to-long v1, v1

    iput-wide v1, v10, Lcom/android/server/am/BroadcastConstants;->TIMEOUT:J

    .line 2263
    new-instance v1, Lcom/android/server/am/BroadcastConstants;

    const-string v2, "bcast_bg_constants"

    invoke-direct {v1, v2}, Lcom/android/server/am/BroadcastConstants;-><init>(Ljava/lang/String;)V

    move-object v3, v1

    .line 2265
    .local v3, "backConstants":Lcom/android/server/am/BroadcastConstants;
    sget v1, Lcom/android/server/am/ActivityManagerService;->BROADCAST_BG_TIMEOUT:I

    move-object/from16 v16, v12

    int-to-long v11, v1

    iput-wide v11, v3, Lcom/android/server/am/BroadcastConstants;->TIMEOUT:J

    .line 2267
    new-instance v2, Lcom/android/server/am/BroadcastConstants;

    const-string v11, "bcast_offload_constants"

    invoke-direct {v2, v11}, Lcom/android/server/am/BroadcastConstants;-><init>(Ljava/lang/String;)V

    move-object v11, v2

    .line 2269
    .local v11, "offloadConstants":Lcom/android/server/am/BroadcastConstants;
    int-to-long v1, v1

    iput-wide v1, v11, Lcom/android/server/am/BroadcastConstants;->TIMEOUT:J

    .line 2271
    const-wide/32 v1, 0x7fffffff

    iput-wide v1, v11, Lcom/android/server/am/BroadcastConstants;->SLOW_TIME:J

    .line 2273
    const-string/jumbo v1, "persist.device_config.activity_manager_native_boot.offload_queue_enabled"

    const/4 v2, 0x0

    invoke-static {v1, v2}, Landroid/os/SystemProperties;->getBoolean(Ljava/lang/String;Z)Z

    move-result v1

    iput-boolean v1, v7, Lcom/android/server/am/ActivityManagerService;->mEnableOffloadQueue:Z

    .line 2276
    new-instance v12, Lcom/android/server/am/BroadcastQueue;

    const-string v17, "foreground"

    const/16 v18, 0x0

    move-object v1, v12

    move-object/from16 v2, p0

    move-object/from16 v19, v3

    .end local v3    # "backConstants":Lcom/android/server/am/BroadcastConstants;
    .local v19, "backConstants":Lcom/android/server/am/BroadcastConstants;
    move-object v3, v6

    move-object/from16 v20, v4

    .end local v4    # "activeUids":Lcom/android/server/am/ActiveUids;
    .local v20, "activeUids":Lcom/android/server/am/ActiveUids;
    move-object/from16 v4, v17

    move-object/from16 v17, v14

    move-object v14, v5

    move-object v5, v10

    move-object/from16 v21, v6

    move/from16 v6, v18

    invoke-direct/range {v1 .. v6}, Lcom/android/server/am/BroadcastQueue;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/os/Handler;Ljava/lang/String;Lcom/android/server/am/BroadcastConstants;Z)V

    iput-object v12, v7, Lcom/android/server/am/ActivityManagerService;->mFgBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

    .line 2278
    new-instance v6, Lcom/android/server/am/BroadcastQueue;

    const-string v4, "background"

    const/16 v18, 0x1

    move-object v1, v6

    move-object/from16 v3, v21

    move-object/from16 v5, v19

    move-object/from16 v22, v10

    move-object v10, v6

    .end local v10    # "foreConstants":Lcom/android/server/am/BroadcastConstants;
    .local v22, "foreConstants":Lcom/android/server/am/BroadcastConstants;
    move/from16 v6, v18

    invoke-direct/range {v1 .. v6}, Lcom/android/server/am/BroadcastQueue;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/os/Handler;Ljava/lang/String;Lcom/android/server/am/BroadcastConstants;Z)V

    iput-object v10, v7, Lcom/android/server/am/ActivityManagerService;->mBgBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

    .line 2280
    new-instance v6, Lcom/android/server/am/BroadcastQueue;

    const-string/jumbo v4, "offload"

    move-object v1, v6

    move-object v5, v11

    move-object/from16 v23, v11

    move-object v11, v6

    .end local v11    # "offloadConstants":Lcom/android/server/am/BroadcastConstants;
    .local v23, "offloadConstants":Lcom/android/server/am/BroadcastConstants;
    move/from16 v6, v18

    invoke-direct/range {v1 .. v6}, Lcom/android/server/am/BroadcastQueue;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/os/Handler;Ljava/lang/String;Lcom/android/server/am/BroadcastConstants;Z)V

    iput-object v11, v7, Lcom/android/server/am/ActivityManagerService;->mOffloadBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

    .line 2282
    const/4 v1, 0x0

    aput-object v12, v0, v1

    .line 2283
    const/4 v1, 0x1

    aput-object v10, v0, v1

    .line 2284
    const/4 v2, 0x2

    aput-object v11, v0, v2

    .line 2286
    new-instance v0, Lcom/android/server/am/ActiveServices;

    invoke-direct {v0, v7}, Lcom/android/server/am/ActiveServices;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iput-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    .line 2287
    new-instance v0, Lcom/android/server/am/ContentProviderHelper;

    invoke-direct {v0, v7, v1}, Lcom/android/server/am/ContentProviderHelper;-><init>(Lcom/android/server/am/ActivityManagerService;Z)V

    iput-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mCpHelper:Lcom/android/server/am/ContentProviderHelper;

    .line 2288
    invoke-static {v13}, Lcom/android/server/PackageWatchdog;->getInstance(Landroid/content/Context;)Lcom/android/server/PackageWatchdog;

    move-result-object v0

    iput-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mPackageWatchdog:Lcom/android/server/PackageWatchdog;

    .line 2289
    new-instance v3, Lcom/android/server/am/AppErrors;

    invoke-direct {v3, v13, v7, v0}, Lcom/android/server/am/AppErrors;-><init>(Landroid/content/Context;Lcom/android/server/am/ActivityManagerService;Lcom/android/server/PackageWatchdog;)V

    iput-object v3, v7, Lcom/android/server/am/ActivityManagerService;->mAppErrors:Lcom/android/server/am/AppErrors;

    .line 2290
    new-instance v0, Lcom/android/server/am/UidObserverController;

    invoke-direct {v0, v14}, Lcom/android/server/am/UidObserverController;-><init>(Landroid/os/Handler;)V

    iput-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mUidObserverController:Lcom/android/server/am/UidObserverController;

    .line 2292
    invoke-static {}, Lcom/android/server/SystemServiceManager;->ensureSystemDir()Ljava/io/File;

    move-result-object v3

    .line 2295
    .local v3, "systemDir":Ljava/io/File;
    new-instance v0, Lcom/android/server/am/BatteryStatsService;

    .line 2296
    invoke-static {}, Lcom/android/internal/os/BackgroundThread;->get()Lcom/android/internal/os/BackgroundThread;

    invoke-static {}, Lcom/android/internal/os/BackgroundThread;->getHandler()Landroid/os/Handler;

    move-result-object v4

    invoke-direct {v0, v8, v3, v4}, Lcom/android/server/am/BatteryStatsService;-><init>(Landroid/content/Context;Ljava/io/File;Landroid/os/Handler;)V

    iput-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    .line 2297
    invoke-virtual {v0}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;

    move-result-object v4

    invoke-virtual {v4}, Lcom/android/internal/os/BatteryStatsImpl;->readLocked()V

    .line 2298
    invoke-virtual {v0}, Lcom/android/server/am/BatteryStatsService;->scheduleWriteToDisk()V

    .line 2299
    nop

    .line 2300
    invoke-virtual {v0}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;

    move-result-object v4

    invoke-virtual {v4}, Lcom/android/internal/os/BatteryStatsImpl;->getIsOnBattery()Z

    move-result v4

    iput-boolean v4, v7, Lcom/android/server/am/ActivityManagerService;->mOnBattery:Z

    .line 2301
    invoke-virtual {v0}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;

    move-result-object v0

    invoke-virtual {v0, v7}, Lcom/android/internal/os/BatteryStatsImpl;->setCallback(Lcom/android/internal/os/BatteryStatsImpl$BatteryCallback;)V

    .line 2302
    iget-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mOomAdjProfiler:Lcom/android/server/am/OomAdjProfiler;

    iget-boolean v4, v7, Lcom/android/server/am/ActivityManagerService;->mOnBattery:Z

    invoke-virtual {v0, v4}, Lcom/android/server/am/OomAdjProfiler;->batteryPowerChanged(Z)V

    .line 2304
    new-instance v0, Lcom/android/server/am/ProcessStatsService;

    new-instance v4, Ljava/io/File;

    const-string/jumbo v5, "procstats"

    invoke-direct {v4, v3, v5}, Ljava/io/File;-><init>(Ljava/io/File;Ljava/lang/String;)V

    invoke-direct {v0, v7, v4}, Lcom/android/server/am/ProcessStatsService;-><init>(Lcom/android/server/am/ActivityManagerService;Ljava/io/File;)V

    iput-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    .line 2306
    new-instance v0, Ljava/io/File;

    const-string v4, "appops.xml"

    invoke-direct {v0, v3, v4}, Ljava/io/File;-><init>(Ljava/io/File;Ljava/lang/String;)V

    move-object/from16 v4, v16

    move-object/from16 v5, v21

    invoke-virtual {v4, v0, v5}, Lcom/android/server/am/ActivityManagerService$Injector;->getAppOpsService(Ljava/io/File;Landroid/os/Handler;)Lcom/android/server/appop/AppOpsService;

    move-result-object v0

    iput-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/appop/AppOpsService;

    .line 2308
    const-class v0, Lcom/android/server/uri/UriGrantsManagerInternal;

    invoke-static {v0}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/uri/UriGrantsManagerInternal;

    iput-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mUgmInternal:Lcom/android/server/uri/UriGrantsManagerInternal;

    .line 2310
    new-instance v0, Lcom/android/server/am/UserController;

    invoke-direct {v0, v7}, Lcom/android/server/am/UserController;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iput-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    .line 2312
    new-instance v4, Lcom/android/server/am/PendingIntentController;

    .line 2313
    invoke-virtual {v15}, Lcom/android/server/ServiceThread;->getLooper()Landroid/os/Looper;

    move-result-object v6

    iget-object v10, v7, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    invoke-direct {v4, v6, v0, v10}, Lcom/android/server/am/PendingIntentController;-><init>(Landroid/os/Looper;Lcom/android/server/am/UserController;Lcom/android/server/am/ActivityManagerConstants;)V

    iput-object v4, v7, Lcom/android/server/am/ActivityManagerService;->mPendingIntentController:Lcom/android/server/am/PendingIntentController;

    .line 2315
    const-string/jumbo v0, "sys.use_fifo_ui"

    const/4 v6, 0x0

    invoke-static {v0, v6}, Landroid/os/SystemProperties;->getInt(Ljava/lang/String;I)I

    move-result v0

    if-eqz v0, :cond_0

    move v10, v1

    goto :goto_0

    :cond_0
    move v10, v6

    :goto_0
    iput-boolean v10, v7, Lcom/android/server/am/ActivityManagerService;->mUseFifoUiScheduling:Z

    .line 2317
    const-string v0, "debug.track-associations"

    invoke-static {v0}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    const-string v1, "1"

    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    iput-boolean v0, v7, Lcom/android/server/am/ActivityManagerService;->mTrackingAssociations:Z

    .line 2318
    new-instance v0, Lcom/android/server/firewall/IntentFirewall;

    new-instance v1, Lcom/android/server/am/ActivityManagerService$IntentFirewallInterface;

    invoke-direct {v1, v7}, Lcom/android/server/am/ActivityManagerService$IntentFirewallInterface;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    invoke-direct {v0, v1, v5}, Lcom/android/server/firewall/IntentFirewall;-><init>(Lcom/android/server/firewall/IntentFirewall$AMSInterface;Landroid/os/Handler;)V

    iput-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mIntentFirewall:Lcom/android/server/firewall/IntentFirewall;

    .line 2320
    iput-object v9, v7, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 2321
    nop

    .line 2322
    invoke-static {}, Lcom/android/server/DisplayThread;->get()Lcom/android/server/DisplayThread;

    move-result-object v1

    invoke-virtual {v1}, Lcom/android/server/DisplayThread;->getLooper()Landroid/os/Looper;

    move-result-object v1

    .line 2321
    invoke-virtual {v9, v0, v4, v1}, Lcom/android/server/wm/ActivityTaskManagerService;->initialize(Lcom/android/server/firewall/IntentFirewall;Lcom/android/server/am/PendingIntentController;Landroid/os/Looper;)V

    .line 2323
    const-class v0, Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-static {v0}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/ActivityTaskManagerInternal;

    iput-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    .line 2325
    new-instance v0, Lcom/android/server/am/ActivityManagerService$HiddenApiSettings;

    invoke-direct {v0, v5, v8}, Lcom/android/server/am/ActivityManagerService$HiddenApiSettings;-><init>(Landroid/os/Handler;Landroid/content/Context;)V

    iput-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mHiddenApiBlacklist:Lcom/android/server/am/ActivityManagerService$HiddenApiSettings;

    .line 2327
    invoke-static {}, Lcom/android/server/Watchdog;->getInstance()Lcom/android/server/Watchdog;

    move-result-object v0

    invoke-virtual {v0, v7}, Lcom/android/server/Watchdog;->addMonitor(Lcom/android/server/Watchdog$Monitor;)V

    .line 2328
    invoke-static {}, Lcom/android/server/Watchdog;->getInstance()Lcom/android/server/Watchdog;

    move-result-object v0

    invoke-virtual {v0, v5}, Lcom/android/server/Watchdog;->addThread(Landroid/os/Handler;)V

    .line 2333
    const-string/jumbo v0, "updateOomAdj_meh"

    invoke-virtual {v7, v0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked(Ljava/lang/String;)V

    .line 2335
    :try_start_0
    invoke-static {}, Lcom/android/internal/os/BackgroundThread;->get()Lcom/android/internal/os/BackgroundThread;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/internal/os/BackgroundThread;->getThreadId()I

    move-result v0

    invoke-static {v0, v2}, Landroid/os/Process;->setThreadGroupAndCpuset(II)V

    .line 2337
    iget-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mOomAdjuster:Lcom/android/server/am/OomAdjuster;

    iget-object v0, v0, Lcom/android/server/am/OomAdjuster;->mCachedAppOptimizer:Lcom/android/server/am/CachedAppOptimizer;

    iget-object v0, v0, Lcom/android/server/am/CachedAppOptimizer;->mCachedAppOptimizerThread:Lcom/android/server/ServiceThread;

    .line 2338
    invoke-virtual {v0}, Lcom/android/server/ServiceThread;->getThreadId()I

    move-result v0

    .line 2337
    invoke-static {v0, v2}, Landroid/os/Process;->setThreadGroupAndCpuset(II)V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    .line 2342
    goto :goto_1

    .line 2340
    :catch_0
    move-exception v0

    .line 2341
    .local v0, "e":Ljava/lang/Exception;
    const-string v1, "Setting background thread cpuset failed"

    move-object/from16 v2, v17

    invoke-static {v2, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 2344
    .end local v0    # "e":Ljava/lang/Exception;
    :goto_1
    new-instance v0, Lcom/android/server/am/ActivityManagerService$LocalService;

    invoke-direct {v0, v7}, Lcom/android/server/am/ActivityManagerService$LocalService;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iput-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mInternal:Landroid/app/ActivityManagerInternal;

    .line 2345
    new-instance v0, Lcom/android/server/am/PendingStartActivityUids;

    iget-object v1, v7, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-direct {v0, v1}, Lcom/android/server/am/PendingStartActivityUids;-><init>(Landroid/content/Context;)V

    iput-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mPendingStartActivityUids:Lcom/android/server/am/PendingStartActivityUids;

    .line 2346
    new-instance v0, Lcom/android/server/am/TraceErrorLogger;

    invoke-direct {v0}, Lcom/android/server/am/TraceErrorLogger;-><init>()V

    iput-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mTraceErrorLogger:Lcom/android/server/am/TraceErrorLogger;

    .line 2347
    return-void
.end method

.method public constructor <init>(Lcom/android/server/am/ActivityManagerService$Injector;Lcom/android/server/ServiceThread;)V
    .locals 9
    .param p1, "injector"    # Lcom/android/server/am/ActivityManagerService$Injector;
    .param p2, "handlerThread"    # Lcom/android/server/ServiceThread;

    .line 2175
    invoke-direct {p0}, Landroid/app/IActivityManager$Stub;-><init>()V

    .line 556
    new-instance v0, Lcom/android/server/am/InstrumentationReporter;

    invoke-direct {v0}, Lcom/android/server/am/InstrumentationReporter;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mInstrumentationReporter:Lcom/android/server/am/InstrumentationReporter;

    .line 558
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mActiveInstrumentation:Ljava/util/ArrayList;

    .line 563
    new-instance v0, Lcom/android/server/am/OomAdjProfiler;

    invoke-direct {v0}, Lcom/android/server/am/OomAdjProfiler;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mOomAdjProfiler:Lcom/android/server/am/OomAdjProfiler;

    .line 568
    iput-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mGlobalLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    .line 604
    new-instance v0, Lcom/android/server/am/ActivityManagerProcLock;

    invoke-direct {v0}, Lcom/android/server/am/ActivityManagerProcLock;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    .line 620
    const/4 v0, 0x3

    new-array v0, v0, [Lcom/android/server/am/BroadcastQueue;

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    .line 652
    const/4 v0, -0x1

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mDeviceOwnerUid:I

    .line 657
    new-instance v1, Landroid/util/ArrayMap;

    invoke-direct {v1}, Landroid/util/ArrayMap;-><init>()V

    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mCompanionAppUidsMap:Ljava/util/Map;

    .line 662
    const/4 v1, 0x0

    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProfileOwnerUids:Landroid/util/ArraySet;

    .line 682
    new-instance v2, Landroid/util/IntArray;

    const/4 v3, 0x4

    invoke-direct {v2, v3}, Landroid/util/IntArray;-><init>(I)V

    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mActiveCameraUids:Landroid/util/IntArray;

    .line 692
    new-instance v2, Lcom/android/server/am/ActivityManagerService$1;

    invoke-direct {v2, p0}, Lcom/android/server/am/ActivityManagerService$1;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPriorityDumper:Lcom/android/server/utils/PriorityDump$PriorityDumper;

    .line 762
    const/4 v2, 0x1

    new-array v3, v2, [I

    const/16 v4, 0x3ea

    const/4 v5, 0x0

    aput v4, v3, v5

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mBackgroundAppIdAllowlist:[I

    .line 832
    new-instance v3, Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-direct {v3}, Lcom/android/server/am/ActivityManagerService$PidMap;-><init>()V

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    .line 972
    new-instance v3, Landroid/util/SparseArray;

    invoke-direct {v3}, Landroid/util/SparseArray;-><init>()V

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mImportantProcesses:Landroid/util/SparseArray;

    .line 980
    new-instance v3, Ljava/util/ArrayList;

    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;

    .line 987
    new-instance v3, Ljava/util/ArrayList;

    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mPersistentStartingProcesses:Ljava/util/ArrayList;

    .line 990
    new-instance v3, Lcom/android/server/am/ActivityManagerService$2;

    invoke-direct {v3, p0}, Lcom/android/server/am/ActivityManagerService$2;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mActivityLaunchObserver:Lcom/android/server/wm/ActivityMetricsLaunchObserver;

    .line 1019
    iput-boolean v5, p0, Lcom/android/server/am/ActivityManagerService;->mBinderTransactionTrackingEnabled:Z

    .line 1027
    new-instance v3, Ljava/util/HashSet;

    invoke-direct {v3}, Ljava/util/HashSet;-><init>()V

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mAlreadyLoggedViolatedStacks:Ljava/util/HashSet;

    .line 1035
    new-instance v3, Ljava/util/HashMap;

    invoke-direct {v3}, Ljava/util/HashMap;-><init>()V

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mRegisteredReceivers:Ljava/util/HashMap;

    .line 1042
    new-instance v3, Lcom/android/server/am/ActivityManagerService$3;

    invoke-direct {v3, p0}, Lcom/android/server/am/ActivityManagerService$3;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mReceiverResolver:Lcom/android/server/IntentResolver;

    .line 1088
    new-instance v3, Landroid/util/SparseArray;

    invoke-direct {v3}, Landroid/util/SparseArray;-><init>()V

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    .line 1128
    new-instance v3, Landroid/util/SparseArray;

    invoke-direct {v3}, Landroid/util/SparseArray;-><init>()V

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mAssociations:Landroid/util/SparseArray;

    .line 1136
    new-instance v3, Landroid/util/SparseArray;

    invoke-direct {v3}, Landroid/util/SparseArray;-><init>()V

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTargets:Landroid/util/SparseArray;

    .line 1162
    new-array v3, v5, [I

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mDeviceIdleAllowlist:[I

    .line 1168
    new-array v3, v5, [I

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mDeviceIdleExceptIdleAllowlist:[I

    .line 1174
    new-array v3, v5, [I

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mDeviceIdleTempAllowlist:[I

    .line 1211
    new-instance v3, Lcom/android/server/am/PendingTempAllowlists;

    invoke-direct {v3, p0}, Lcom/android/server/am/PendingTempAllowlists;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mPendingTempAllowlist:Lcom/android/server/am/PendingTempAllowlists;

    .line 1239
    new-instance v3, Lcom/android/server/am/FgsTempAllowList;

    invoke-direct {v3}, Lcom/android/server/am/FgsTempAllowList;-><init>()V

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mFgsStartTempAllowList:Lcom/android/server/am/FgsTempAllowList;

    .line 1250
    new-instance v3, Lcom/android/server/am/FgsTempAllowList;

    invoke-direct {v3}, Lcom/android/server/am/FgsTempAllowList;-><init>()V

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mFgsWhileInUseTempAllowList:Lcom/android/server/am/FgsTempAllowList;

    .line 1266
    iput-boolean v5, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesReady:Z

    .line 1267
    iput-boolean v5, p0, Lcom/android/server/am/ActivityManagerService;->mSystemReady:Z

    .line 1268
    iput-boolean v5, p0, Lcom/android/server/am/ActivityManagerService;->mOnBattery:Z

    .line 1270
    iput-boolean v5, p0, Lcom/android/server/am/ActivityManagerService;->mBooting:Z

    .line 1272
    iput-boolean v5, p0, Lcom/android/server/am/ActivityManagerService;->mCallFinishBooting:Z

    .line 1273
    iput-boolean v5, p0, Lcom/android/server/am/ActivityManagerService;->mBootAnimationComplete:Z

    .line 1297
    new-instance v3, Ljava/util/concurrent/atomic/AtomicInteger;

    invoke-direct {v3, v2}, Ljava/util/concurrent/atomic/AtomicInteger;-><init>(I)V

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mWakefulness:Ljava/util/concurrent/atomic/AtomicInteger;

    .line 1302
    nop

    .line 1303
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v3

    iput-wide v3, p0, Lcom/android/server/am/ActivityManagerService;->mLastIdleTime:J

    .line 1311
    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedPackage:Ljava/lang/String;

    .line 1314
    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedUid:I

    .line 1320
    new-instance v0, Ljava/lang/Object;

    invoke-direct {v0}, Ljava/lang/Object;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedAppLock:Ljava/lang/Object;

    .line 1327
    new-instance v0, Lcom/android/internal/app/ProcessMap;

    invoke-direct {v0}, Lcom/android/internal/app/ProcessMap;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mForegroundPackages:Lcom/android/internal/app/ProcessMap;

    .line 1337
    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;

    .line 1340
    iput-boolean v5, p0, Lcom/android/server/am/ActivityManagerService;->mWaitForDebugger:Z

    .line 1343
    iput-boolean v5, p0, Lcom/android/server/am/ActivityManagerService;->mDebugTransient:Z

    .line 1346
    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mOrigDebugApp:Ljava/lang/String;

    .line 1349
    iput-boolean v5, p0, Lcom/android/server/am/ActivityManagerService;->mOrigWaitForDebugger:Z

    .line 1352
    iput-boolean v5, p0, Lcom/android/server/am/ActivityManagerService;->mAlwaysFinishActivities:Z

    .line 1355
    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mTrackAllocationApp:Ljava/lang/String;

    .line 1358
    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mNativeDebuggingApp:Ljava/lang/String;

    .line 1385
    new-instance v0, Ljava/lang/Object;

    invoke-direct {v0}, Ljava/lang/Object;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mOomAdjObserverLock:Ljava/lang/Object;

    .line 1391
    new-instance v0, Lcom/android/server/am/AnrHelper;

    invoke-direct {v0, p0}, Lcom/android/server/am/AnrHelper;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAnrHelper:Lcom/android/server/am/AnrHelper;

    .line 1394
    iput-boolean v5, p0, Lcom/android/server/am/ActivityManagerService;->mBooted:Z

    .line 1530
    const-wide/16 v3, 0x0

    iput-wide v3, p0, Lcom/android/server/am/ActivityManagerService;->mLastBinderHeavyHitterAutoSamplerStart:J

    .line 8202
    new-instance v0, Landroid/util/ArrayMap;

    invoke-direct {v0}, Landroid/util/ArrayMap;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mErrorClusterRecords:Landroid/util/ArrayMap;

    .line 2176
    if-eqz p2, :cond_0

    goto :goto_0

    :cond_0
    move v2, v5

    :goto_0
    move v0, v2

    .line 2177
    .local v0, "hasHandlerThread":Z
    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mInjector:Lcom/android/server/am/ActivityManagerService$Injector;

    .line 2178
    invoke-virtual {p1}, Lcom/android/server/am/ActivityManagerService$Injector;->getContext()Landroid/content/Context;

    move-result-object v2

    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    .line 2179
    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mUiContext:Landroid/content/Context;

    .line 2180
    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mAppErrors:Lcom/android/server/am/AppErrors;

    .line 2181
    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPackageWatchdog:Lcom/android/server/PackageWatchdog;

    .line 2182
    invoke-virtual {p1, v1, v1}, Lcom/android/server/am/ActivityManagerService$Injector;->getAppOpsService(Ljava/io/File;Landroid/os/Handler;)Lcom/android/server/appop/AppOpsService;

    move-result-object v3

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/appop/AppOpsService;

    .line 2183
    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    .line 2184
    if-eqz v0, :cond_1

    new-instance v3, Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {p2}, Lcom/android/server/ServiceThread;->getLooper()Landroid/os/Looper;

    move-result-object v4

    invoke-direct {v3, p0, v4}, Lcom/android/server/am/ActivityManagerService$MainHandler;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/os/Looper;)V

    goto :goto_1

    :cond_1
    move-object v3, v1

    :goto_1
    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    .line 2185
    iput-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mHandlerThread:Lcom/android/server/ServiceThread;

    .line 2186
    if-eqz v0, :cond_2

    .line 2187
    new-instance v4, Lcom/android/server/am/ActivityManagerConstants;

    invoke-direct {v4, v2, p0, v3}, Lcom/android/server/am/ActivityManagerConstants;-><init>(Landroid/content/Context;Lcom/android/server/am/ActivityManagerService;Landroid/os/Handler;)V

    goto :goto_2

    :cond_2
    move-object v4, v1

    :goto_2
    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    .line 2188
    new-instance v4, Lcom/android/server/am/ActiveUids;

    invoke-direct {v4, p0, v5}, Lcom/android/server/am/ActiveUids;-><init>(Lcom/android/server/am/ActivityManagerService;Z)V

    .line 2189
    .local v4, "activeUids":Lcom/android/server/am/ActiveUids;
    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPlatformCompat:Lcom/android/server/compat/PlatformCompat;

    .line 2190
    invoke-virtual {p1, p0}, Lcom/android/server/am/ActivityManagerService$Injector;->getProcessList(Lcom/android/server/am/ActivityManagerService;)Lcom/android/server/am/ProcessList;

    move-result-object v6

    iput-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    .line 2191
    invoke-virtual {v6, p0, v4, v1}, Lcom/android/server/am/ProcessList;->init(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ActiveUids;Lcom/android/server/compat/PlatformCompat;)V

    .line 2192
    new-instance v7, Lcom/android/server/am/AppProfiler;

    invoke-static {}, Lcom/android/internal/os/BackgroundThread;->getHandler()Landroid/os/Handler;

    move-result-object v8

    invoke-virtual {v8}, Landroid/os/Handler;->getLooper()Landroid/os/Looper;

    move-result-object v8

    invoke-direct {v7, p0, v8, v1}, Lcom/android/server/am/AppProfiler;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/os/Looper;Lcom/android/server/am/LowMemDetector;)V

    iput-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    .line 2193
    new-instance v7, Lcom/android/server/am/PhantomProcessList;

    invoke-direct {v7, p0}, Lcom/android/server/am/PhantomProcessList;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iput-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mPhantomProcessList:Lcom/android/server/am/PhantomProcessList;

    .line 2194
    if-eqz v0, :cond_3

    .line 2195
    new-instance v7, Lcom/android/server/am/OomAdjuster;

    invoke-direct {v7, p0, v6, v4, p2}, Lcom/android/server/am/OomAdjuster;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ProcessList;Lcom/android/server/am/ActiveUids;Lcom/android/server/ServiceThread;)V

    goto :goto_3

    :cond_3
    move-object v7, v1

    :goto_3
    iput-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mOomAdjuster:Lcom/android/server/am/OomAdjuster;

    .line 2197
    if-eqz v0, :cond_4

    .line 2198
    new-instance v6, Lcom/android/server/firewall/IntentFirewall;

    new-instance v7, Lcom/android/server/am/ActivityManagerService$IntentFirewallInterface;

    invoke-direct {v7, p0}, Lcom/android/server/am/ActivityManagerService$IntentFirewallInterface;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    invoke-direct {v6, v7, v3}, Lcom/android/server/firewall/IntentFirewall;-><init>(Lcom/android/server/firewall/IntentFirewall$AMSInterface;Landroid/os/Handler;)V

    goto :goto_4

    :cond_4
    move-object v6, v1

    :goto_4
    iput-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mIntentFirewall:Lcom/android/server/firewall/IntentFirewall;

    .line 2199
    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    .line 2200
    new-instance v3, Lcom/android/server/am/ContentProviderHelper;

    invoke-direct {v3, p0, v5}, Lcom/android/server/am/ContentProviderHelper;-><init>(Lcom/android/server/am/ActivityManagerService;Z)V

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mCpHelper:Lcom/android/server/am/ContentProviderHelper;

    .line 2203
    if-eqz v0, :cond_5

    new-instance v3, Lcom/android/server/am/ActiveServices;

    invoke-direct {v3, p0}, Lcom/android/server/am/ActiveServices;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    goto :goto_5

    :cond_5
    move-object v3, v1

    :goto_5
    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    .line 2204
    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mSystemThread:Landroid/app/ActivityThread;

    .line 2205
    invoke-virtual {p1, v1}, Lcom/android/server/am/ActivityManagerService$Injector;->getUiHandler(Lcom/android/server/am/ActivityManagerService;)Landroid/os/Handler;

    move-result-object v3

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mUiHandler:Landroid/os/Handler;

    .line 2206
    new-instance v6, Lcom/android/server/am/UidObserverController;

    invoke-direct {v6, v3}, Lcom/android/server/am/UidObserverController;-><init>(Landroid/os/Handler;)V

    iput-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mUidObserverController:Lcom/android/server/am/UidObserverController;

    .line 2207
    if-eqz v0, :cond_6

    new-instance v3, Lcom/android/server/am/UserController;

    invoke-direct {v3, p0}, Lcom/android/server/am/UserController;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    goto :goto_6

    :cond_6
    move-object v3, v1

    :goto_6
    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    .line 2208
    if-eqz v0, :cond_7

    .line 2209
    new-instance v6, Lcom/android/server/am/PendingIntentController;

    invoke-virtual {p2}, Lcom/android/server/ServiceThread;->getLooper()Landroid/os/Looper;

    move-result-object v7

    iget-object v8, p0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    invoke-direct {v6, v7, v3, v8}, Lcom/android/server/am/PendingIntentController;-><init>(Landroid/os/Looper;Lcom/android/server/am/UserController;Lcom/android/server/am/ActivityManagerConstants;)V

    goto :goto_7

    .line 2210
    :cond_7
    move-object v6, v1

    :goto_7
    iput-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mPendingIntentController:Lcom/android/server/am/PendingIntentController;

    .line 2211
    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcStartHandlerThread:Lcom/android/server/ServiceThread;

    .line 2212
    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcStartHandler:Landroid/os/Handler;

    .line 2213
    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHiddenApiBlacklist:Lcom/android/server/am/ActivityManagerService$HiddenApiSettings;

    .line 2214
    iput v5, p0, Lcom/android/server/am/ActivityManagerService;->mFactoryTest:I

    .line 2215
    const-class v3, Lcom/android/server/uri/UriGrantsManagerInternal;

    invoke-static {v3}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/uri/UriGrantsManagerInternal;

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mUgmInternal:Lcom/android/server/uri/UriGrantsManagerInternal;

    .line 2216
    new-instance v3, Lcom/android/server/am/ActivityManagerService$LocalService;

    invoke-direct {v3, p0}, Lcom/android/server/am/ActivityManagerService$LocalService;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mInternal:Landroid/app/ActivityManagerInternal;

    .line 2217
    new-instance v3, Lcom/android/server/am/PendingStartActivityUids;

    invoke-direct {v3, v2}, Lcom/android/server/am/PendingStartActivityUids;-><init>(Landroid/content/Context;)V

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mPendingStartActivityUids:Lcom/android/server/am/PendingStartActivityUids;

    .line 2218
    iput-boolean v5, p0, Lcom/android/server/am/ActivityManagerService;->mUseFifoUiScheduling:Z

    .line 2219
    iput-boolean v5, p0, Lcom/android/server/am/ActivityManagerService;->mEnableOffloadQueue:Z

    .line 2220
    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mOffloadBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mBgBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mFgBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

    .line 2221
    return-void
.end method

.method static synthetic access$000(Lcom/android/server/am/ActivityManagerService;Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;Z)V
    .locals 0
    .param p0, "x0"    # Lcom/android/server/am/ActivityManagerService;
    .param p1, "x1"    # Ljava/io/FileDescriptor;
    .param p2, "x2"    # Ljava/io/PrintWriter;
    .param p3, "x3"    # [Ljava/lang/String;
    .param p4, "x4"    # Z

    .line 430
    invoke-direct {p0, p1, p2, p3, p4}, Lcom/android/server/am/ActivityManagerService;->doDump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;Z)V

    return-void
.end method

.method static synthetic access$100(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ProcessRecord;)V
    .locals 0
    .param p0, "x0"    # Lcom/android/server/am/ActivityManagerService;
    .param p1, "x1"    # Lcom/android/server/am/ProcessRecord;

    .line 430
    invoke-direct {p0, p1}, Lcom/android/server/am/ActivityManagerService;->processStartTimedOutLocked(Lcom/android/server/am/ProcessRecord;)V

    return-void
.end method

.method static synthetic access$1000(Lcom/android/server/am/ActivityManagerService;ZLjava/lang/String;)V
    .locals 0
    .param p0, "x0"    # Lcom/android/server/am/ActivityManagerService;
    .param p1, "x1"    # Z
    .param p2, "x2"    # Ljava/lang/String;

    .line 430
    invoke-direct {p0, p1, p2}, Lcom/android/server/am/ActivityManagerService;->trimApplications(ZLjava/lang/String;)V

    return-void
.end method

.method static synthetic access$1100(Lcom/android/server/am/ActivityManagerService;I)Z
    .locals 1
    .param p0, "x0"    # Lcom/android/server/am/ActivityManagerService;
    .param p1, "x1"    # I

    .line 430
    invoke-direct {p0, p1}, Lcom/android/server/am/ActivityManagerService;->isAppForeground(I)Z

    move-result v0

    return v0
.end method

.method static synthetic access$1200(Lcom/android/server/am/ActivityManagerService;Ljava/lang/String;I)Z
    .locals 1
    .param p0, "x0"    # Lcom/android/server/am/ActivityManagerService;
    .param p1, "x1"    # Ljava/lang/String;
    .param p2, "x2"    # I

    .line 430
    invoke-direct {p0, p1, p2}, Lcom/android/server/am/ActivityManagerService;->isAppBad(Ljava/lang/String;I)Z

    move-result v0

    return v0
.end method

.method static synthetic access$1300(Lcom/android/server/am/ActivityManagerService;I)V
    .locals 0
    .param p0, "x0"    # Lcom/android/server/am/ActivityManagerService;
    .param p1, "x1"    # I

    .line 430
    invoke-direct {p0, p1}, Lcom/android/server/am/ActivityManagerService;->clearPendingBackup(I)V

    return-void
.end method

.method static synthetic access$1400(Lcom/android/server/am/ActivityManagerService;)I
    .locals 1
    .param p0, "x0"    # Lcom/android/server/am/ActivityManagerService;

    .line 430
    iget v0, p0, Lcom/android/server/am/ActivityManagerService;->mDeviceOwnerUid:I

    return v0
.end method

.method static synthetic access$1402(Lcom/android/server/am/ActivityManagerService;I)I
    .locals 0
    .param p0, "x0"    # Lcom/android/server/am/ActivityManagerService;
    .param p1, "x1"    # I

    .line 430
    iput p1, p0, Lcom/android/server/am/ActivityManagerService;->mDeviceOwnerUid:I

    return p1
.end method

.method static synthetic access$1500(Lcom/android/server/am/ActivityManagerService;)Landroid/util/ArraySet;
    .locals 1
    .param p0, "x0"    # Lcom/android/server/am/ActivityManagerService;

    .line 430
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProfileOwnerUids:Landroid/util/ArraySet;

    return-object v0
.end method

.method static synthetic access$1502(Lcom/android/server/am/ActivityManagerService;Landroid/util/ArraySet;)Landroid/util/ArraySet;
    .locals 0
    .param p0, "x0"    # Lcom/android/server/am/ActivityManagerService;
    .param p1, "x1"    # Landroid/util/ArraySet;

    .line 430
    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mProfileOwnerUids:Landroid/util/ArraySet;

    return-object p1
.end method

.method static synthetic access$1600(Lcom/android/server/am/ActivityManagerService;)Ljava/util/Map;
    .locals 1
    .param p0, "x0"    # Lcom/android/server/am/ActivityManagerService;

    .line 430
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCompanionAppUidsMap:Ljava/util/Map;

    return-object v0
.end method

.method static synthetic access$1700(Lcom/android/server/am/ActivityManagerService;)Lcom/android/server/am/PendingStartActivityUids;
    .locals 1
    .param p0, "x0"    # Lcom/android/server/am/ActivityManagerService;

    .line 430
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPendingStartActivityUids:Lcom/android/server/am/PendingStartActivityUids;

    return-object v0
.end method

.method static synthetic access$1800(Lcom/android/server/am/ActivityManagerService;)Lcom/android/server/am/FgsTempAllowList;
    .locals 1
    .param p0, "x0"    # Lcom/android/server/am/ActivityManagerService;

    .line 430
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mFgsWhileInUseTempAllowList:Lcom/android/server/am/FgsTempAllowList;

    return-object v0
.end method

.method static synthetic access$200(Lcom/android/server/am/ActivityManagerService;)V
    .locals 0
    .param p0, "x0"    # Lcom/android/server/am/ActivityManagerService;

    .line 430
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->checkExcessivePowerUsage()V

    return-void
.end method

.method static synthetic access$302(Lcom/android/server/am/ActivityManagerService;Z)Z
    .locals 0
    .param p0, "x0"    # Lcom/android/server/am/ActivityManagerService;
    .param p1, "x1"    # Z

    .line 430
    iput-boolean p1, p0, Lcom/android/server/am/ActivityManagerService;->mUserIsMonkey:Z

    return p1
.end method

.method static synthetic access$400(Lcom/android/server/am/ActivityManagerService;)V
    .locals 0
    .param p0, "x0"    # Lcom/android/server/am/ActivityManagerService;

    .line 430
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->handleBinderHeavyHitterAutoSamplerTimeOut()V

    return-void
.end method

.method static synthetic access$500(Lcom/android/server/am/ActivityManagerService;)V
    .locals 0
    .param p0, "x0"    # Lcom/android/server/am/ActivityManagerService;

    .line 430
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->start()V

    return-void
.end method

.method static synthetic access$600(Lcom/android/server/am/ActivityManagerService;)V
    .locals 0
    .param p0, "x0"    # Lcom/android/server/am/ActivityManagerService;

    .line 430
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->startBroadcastObservers()V

    return-void
.end method

.method static synthetic access$700(Lcom/android/server/am/ActivityManagerService;Ljava/lang/String;I)V
    .locals 0
    .param p0, "x0"    # Lcom/android/server/am/ActivityManagerService;
    .param p1, "x1"    # Ljava/lang/String;
    .param p2, "x2"    # I

    .line 430
    invoke-direct {p0, p1, p2}, Lcom/android/server/am/ActivityManagerService;->finishForceStopPackageLocked(Ljava/lang/String;I)V

    return-void
.end method

.method static synthetic access$800(Lcom/android/server/am/ActivityManagerService;Landroid/content/Context;)Z
    .locals 1
    .param p0, "x0"    # Lcom/android/server/am/ActivityManagerService;
    .param p1, "x1"    # Landroid/content/Context;

    .line 430
    invoke-direct {p0, p1}, Lcom/android/server/am/ActivityManagerService;->isDeviceProvisioned(Landroid/content/Context;)Z

    move-result v0

    return v0
.end method

.method private static addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V
    .locals 1
    .param p1, "name"    # Ljava/lang/String;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/util/ArrayMap<",
            "Ljava/lang/String;",
            "Landroid/os/IBinder;",
            ">;",
            "Ljava/lang/String;",
            ")V"
        }
    .end annotation

    .line 2600
    .local p0, "map":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Landroid/os/IBinder;>;"
    invoke-static {p1}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v0

    .line 2601
    .local v0, "service":Landroid/os/IBinder;
    if-eqz v0, :cond_0

    .line 2602
    invoke-virtual {p0, p1, v0}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 2607
    :cond_0
    return-void
.end method

.method static appendBasicMemEntry(Ljava/lang/StringBuilder;IIJJLjava/lang/String;)V
    .locals 2
    .param p0, "sb"    # Ljava/lang/StringBuilder;
    .param p1, "oomAdj"    # I
    .param p2, "procState"    # I
    .param p3, "pss"    # J
    .param p5, "memtrack"    # J
    .param p7, "name"    # Ljava/lang/String;

    .line 11627
    const-string v0, "  "

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11628
    const/4 v0, 0x0

    invoke-static {p1, v0}, Lcom/android/server/am/ProcessList;->makeOomAdjString(IZ)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11629
    const/16 v0, 0x20

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    .line 11630
    invoke-static {p2}, Lcom/android/server/am/ProcessList;->makeProcStateString(I)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11631
    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    .line 11632
    invoke-static {p0, p3, p4}, Lcom/android/server/am/ProcessList;->appendRamKb(Ljava/lang/StringBuilder;J)V

    .line 11633
    const-string v0, ": "

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11634
    invoke-virtual {p0, p7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11635
    const-wide/16 v0, 0x0

    cmp-long v0, p5, v0

    if-lez v0, :cond_0

    .line 11636
    const-string v0, " ("

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11637
    invoke-static {p5, p6}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11638
    const-string v0, " memtrack)"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11640
    :cond_0
    return-void
.end method

.method static final appendMemBucket(Ljava/lang/StringBuilder;JLjava/lang/String;Z)V
    .locals 11
    .param p0, "out"    # Ljava/lang/StringBuilder;
    .param p1, "memKB"    # J
    .param p3, "label"    # Ljava/lang/String;
    .param p4, "stackLike"    # Z

    .line 10294
    const/16 v0, 0x2e

    invoke-virtual {p3, v0}, Ljava/lang/String;->lastIndexOf(I)I

    move-result v0

    .line 10295
    .local v0, "start":I
    if-ltz v0, :cond_0

    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    .line 10296
    :cond_0
    const/4 v0, 0x0

    .line 10297
    :goto_0
    invoke-virtual {p3}, Ljava/lang/String;->length()I

    move-result v1

    .line 10298
    .local v1, "end":I
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_1
    sget-object v3, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_BUCKETS:[J

    array-length v4, v3

    const-string v5, "MB."

    const-string v6, "MB "

    const-wide/16 v7, 0x400

    if-ge v2, v4, :cond_3

    .line 10299
    aget-wide v9, v3, v2

    cmp-long v4, v9, p1

    if-ltz v4, :cond_2

    .line 10300
    aget-wide v3, v3, v2

    div-long/2addr v3, v7

    .line 10301
    .local v3, "bucket":J
    invoke-virtual {p0, v3, v4}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 10302
    if-eqz p4, :cond_1

    goto :goto_2

    :cond_1
    move-object v5, v6

    :goto_2
    invoke-virtual {p0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 10303
    invoke-virtual {p0, p3, v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;

    .line 10304
    return-void

    .line 10298
    .end local v3    # "bucket":J
    :cond_2
    add-int/lit8 v2, v2, 0x1

    goto :goto_1

    .line 10307
    .end local v2    # "i":I
    :cond_3
    div-long v2, p1, v7

    invoke-virtual {p0, v2, v3}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 10308
    if-eqz p4, :cond_4

    goto :goto_3

    :cond_4
    move-object v5, v6

    :goto_3
    invoke-virtual {p0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 10309
    invoke-virtual {p0, p3, v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;

    .line 10310
    return-void
.end method

.method static appendMemInfo(Ljava/lang/StringBuilder;Lcom/android/server/am/ProcessMemInfo;)V
    .locals 8
    .param p0, "sb"    # Ljava/lang/StringBuilder;
    .param p1, "mi"    # Lcom/android/server/am/ProcessMemInfo;

    .line 11643
    iget v1, p1, Lcom/android/server/am/ProcessMemInfo;->oomAdj:I

    iget v2, p1, Lcom/android/server/am/ProcessMemInfo;->procState:I

    iget-wide v3, p1, Lcom/android/server/am/ProcessMemInfo;->pss:J

    iget-wide v5, p1, Lcom/android/server/am/ProcessMemInfo;->memtrack:J

    iget-object v7, p1, Lcom/android/server/am/ProcessMemInfo;->name:Ljava/lang/String;

    move-object v0, p0

    invoke-static/range {v0 .. v7}, Lcom/android/server/am/ActivityManagerService;->appendBasicMemEntry(Ljava/lang/StringBuilder;IIJJLjava/lang/String;)V

    .line 11644
    const-string v0, " (pid "

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11645
    iget v0, p1, Lcom/android/server/am/ProcessMemInfo;->pid:I

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 11646
    const-string v0, ") "

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11647
    iget-object v0, p1, Lcom/android/server/am/ProcessMemInfo;->adjType:Ljava/lang/String;

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11648
    const/16 v0, 0xa

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    .line 11649
    iget-object v1, p1, Lcom/android/server/am/ProcessMemInfo;->adjReason:Ljava/lang/String;

    if-eqz v1, :cond_0

    .line 11650
    const-string v1, "                      "

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11651
    iget-object v1, p1, Lcom/android/server/am/ProcessMemInfo;->adjReason:Ljava/lang/String;

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11652
    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    .line 11654
    :cond_0
    return-void
.end method

.method private attachApplicationLocked(Landroid/app/IApplicationThread;IIJ)Z
    .locals 69
    .param p1, "thread"    # Landroid/app/IApplicationThread;
    .param p2, "pid"    # I
    .param p3, "callingUid"    # I
    .param p4, "startSeq"    # J

    .line 4281
    move-object/from16 v9, p0

    move-object/from16 v15, p1

    move/from16 v14, p2

    move/from16 v12, p3

    move-wide/from16 v10, p4

    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v7

    .line 4283
    .local v7, "startTime":J
    sget v0, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    const/4 v13, 0x3

    if-eq v14, v0, :cond_4

    if-ltz v14, :cond_4

    .line 4284
    iget-object v1, v9, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    monitor-enter v1

    .line 4285
    :try_start_0
    iget-object v2, v9, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-virtual {v2, v14}, Lcom/android/server/am/ActivityManagerService$PidMap;->get(I)Lcom/android/server/am/ProcessRecord;

    move-result-object v2

    move-object v3, v2

    .line 4286
    .local v3, "app":Lcom/android/server/am/ProcessRecord;
    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 4287
    if-eqz v3, :cond_3

    invoke-virtual {v3}, Lcom/android/server/am/ProcessRecord;->getStartUid()I

    move-result v1

    if-ne v1, v12, :cond_1

    invoke-virtual {v3}, Lcom/android/server/am/ProcessRecord;->getStartSeq()J

    move-result-wide v1

    cmp-long v1, v1, v10

    if-eqz v1, :cond_0

    goto :goto_0

    :cond_0
    move-object v13, v3

    move-wide/from16 v54, v7

    goto/16 :goto_2

    .line 4288
    :cond_1
    :goto_0
    const/4 v1, 0x0

    .line 4289
    .local v1, "processName":Ljava/lang/String;
    iget-object v2, v9, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    iget-object v2, v2, Lcom/android/server/am/ProcessList;->mPendingStarts:Landroid/util/LongSparseArray;

    invoke-virtual {v2, v10, v11}, Landroid/util/LongSparseArray;->get(J)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ProcessRecord;

    .line 4290
    .local v2, "pending":Lcom/android/server/am/ProcessRecord;
    if-eqz v2, :cond_2

    .line 4291
    iget-object v1, v2, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    .line 4293
    :cond_2
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "attachApplicationLocked process:"

    invoke-virtual {v6, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v5, " startSeq:"

    invoke-virtual {v6, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6, v10, v11}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string v5, " pid:"

    invoke-virtual {v6, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6, v14}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v5, " belongs to another existing app:"

    invoke-virtual {v6, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v5, v3, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v6, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v5, " startSeq:"

    invoke-virtual {v6, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 4297
    invoke-virtual {v3}, Lcom/android/server/am/ProcessRecord;->getStartSeq()J

    move-result-wide v4

    invoke-virtual {v6, v4, v5}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    .line 4298
    .local v6, "msg":Ljava/lang/String;
    const-string v4, "ActivityManager"

    invoke-static {v4, v6}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    .line 4300
    const v4, 0x534e4554

    new-array v5, v13, [Ljava/lang/Object;

    const-string v19, "131105245"

    const/16 v18, 0x0

    aput-object v19, v5, v18

    invoke-virtual {v3}, Lcom/android/server/am/ProcessRecord;->getStartUid()I

    move-result v19

    invoke-static/range {v19 .. v19}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v19

    const/16 v17, 0x1

    aput-object v19, v5, v17

    const/16 v16, 0x2

    aput-object v6, v5, v16

    invoke-static {v4, v5}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 4302
    const/4 v4, 0x0

    const/4 v5, 0x0

    const/16 v19, -0x1

    const/16 v20, 0x1

    const/16 v21, 0x0

    move-object/from16 v22, v1

    .end local v1    # "processName":Ljava/lang/String;
    .local v22, "processName":Ljava/lang/String;
    move-object/from16 v1, p0

    move-object/from16 v23, v2

    .end local v2    # "pending":Lcom/android/server/am/ProcessRecord;
    .local v23, "pending":Lcom/android/server/am/ProcessRecord;
    move-object v2, v3

    move-object v13, v3

    .end local v3    # "app":Lcom/android/server/am/ProcessRecord;
    .local v13, "app":Lcom/android/server/am/ProcessRecord;
    move/from16 v3, p2

    move-object/from16 v16, v6

    .end local v6    # "msg":Ljava/lang/String;
    .local v16, "msg":Ljava/lang/String;
    move/from16 v6, v19

    move-wide/from16 v54, v7

    .end local v7    # "startTime":J
    .local v54, "startTime":J
    move/from16 v7, v20

    move/from16 v8, v21

    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->cleanUpApplicationRecordLocked(Lcom/android/server/am/ProcessRecord;IZZIZZ)Z

    .line 4304
    invoke-virtual {v9, v14, v13}, Lcom/android/server/am/ActivityManagerService;->removePidLocked(ILcom/android/server/am/ProcessRecord;)V

    .line 4305
    const/4 v3, 0x0

    .line 4306
    .end local v13    # "app":Lcom/android/server/am/ProcessRecord;
    .end local v16    # "msg":Ljava/lang/String;
    .end local v22    # "processName":Ljava/lang/String;
    .end local v23    # "pending":Lcom/android/server/am/ProcessRecord;
    .restart local v3    # "app":Lcom/android/server/am/ProcessRecord;
    move-object v13, v3

    goto :goto_2

    .line 4287
    .end local v54    # "startTime":J
    .restart local v7    # "startTime":J
    :cond_3
    move-object v13, v3

    move-wide/from16 v54, v7

    .end local v3    # "app":Lcom/android/server/am/ProcessRecord;
    .end local v7    # "startTime":J
    .restart local v13    # "app":Lcom/android/server/am/ProcessRecord;
    .restart local v54    # "startTime":J
    goto :goto_2

    .line 4286
    .end local v13    # "app":Lcom/android/server/am/ProcessRecord;
    .end local v54    # "startTime":J
    .restart local v7    # "startTime":J
    :catchall_0
    move-exception v0

    move-wide/from16 v54, v7

    .end local v7    # "startTime":J
    .restart local v54    # "startTime":J
    :goto_1
    :try_start_1
    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    throw v0

    :catchall_1
    move-exception v0

    goto :goto_1

    .line 4283
    .end local v54    # "startTime":J
    .restart local v7    # "startTime":J
    :cond_4
    move-wide/from16 v54, v7

    .line 4308
    .end local v7    # "startTime":J
    .restart local v54    # "startTime":J
    const/4 v3, 0x0

    move-object v13, v3

    .line 4313
    .restart local v13    # "app":Lcom/android/server/am/ProcessRecord;
    :goto_2
    if-nez v13, :cond_5

    const-wide/16 v1, 0x0

    cmp-long v1, v10, v1

    if-lez v1, :cond_5

    .line 4314
    iget-object v1, v9, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    iget-object v1, v1, Lcom/android/server/am/ProcessList;->mPendingStarts:Landroid/util/LongSparseArray;

    invoke-virtual {v1, v10, v11}, Landroid/util/LongSparseArray;->get(J)Ljava/lang/Object;

    move-result-object v1

    move-object v8, v1

    check-cast v8, Lcom/android/server/am/ProcessRecord;

    .line 4315
    .local v8, "pending":Lcom/android/server/am/ProcessRecord;
    if-eqz v8, :cond_5

    invoke-virtual {v8}, Lcom/android/server/am/ProcessRecord;->getStartUid()I

    move-result v1

    if-ne v1, v12, :cond_5

    .line 4316
    invoke-virtual {v8}, Lcom/android/server/am/ProcessRecord;->getStartSeq()J

    move-result-wide v1

    cmp-long v1, v1, v10

    if-nez v1, :cond_5

    iget-object v1, v9, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    .line 4318
    invoke-virtual {v8}, Lcom/android/server/am/ProcessRecord;->isUsingWrapper()Z

    move-result v4

    const/4 v7, 0x1

    .line 4317
    move-object v2, v8

    move/from16 v3, p2

    move-wide/from16 v5, p4

    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ProcessList;->handleProcessStartedLocked(Lcom/android/server/am/ProcessRecord;IZJZ)Z

    move-result v1

    if-eqz v1, :cond_5

    .line 4319
    move-object v13, v8

    move-object v7, v13

    goto :goto_3

    .line 4323
    .end local v8    # "pending":Lcom/android/server/am/ProcessRecord;
    :cond_5
    move-object v7, v13

    .end local v13    # "app":Lcom/android/server/am/ProcessRecord;
    .local v7, "app":Lcom/android/server/am/ProcessRecord;
    :goto_3
    if-nez v7, :cond_7

    .line 4324
    const-string v1, "ActivityManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "No pending application record for pid "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v14}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, " (IApplicationThread "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v3, "); dropping process"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4326
    invoke-static/range {p2 .. p2}, Lcom/android/server/am/EventLogTags;->writeAmDropProcess(I)V

    .line 4327
    if-lez v14, :cond_6

    if-eq v14, v0, :cond_6

    .line 4328
    invoke-static/range {p2 .. p2}, Landroid/os/Process;->killProcessQuiet(I)V

    goto :goto_4

    .line 4334
    :cond_6
    :try_start_2
    invoke-interface/range {p1 .. p1}, Landroid/app/IApplicationThread;->scheduleExit()V
    :try_end_2
    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_2} :catch_0

    .line 4337
    goto :goto_4

    .line 4335
    :catch_0
    move-exception v0

    .line 4339
    :goto_4
    const/4 v8, 0x0

    return v8

    .line 4344
    :cond_7
    const/4 v8, 0x0

    invoke-virtual {v7}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v0

    if-eqz v0, :cond_8

    .line 4345
    const/4 v4, 0x1

    const/4 v5, 0x1

    const/4 v6, 0x0

    move-object/from16 v1, p0

    move-object v2, v7

    move/from16 v3, p2

    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/ActivityManagerService;->handleAppDiedLocked(Lcom/android/server/am/ProcessRecord;IZZZ)V

    .line 4353
    :cond_8
    iget-object v6, v7, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    .line 4355
    .local v6, "processName":Ljava/lang/String;
    :try_start_3
    new-instance v0, Lcom/android/server/am/ActivityManagerService$AppDeathRecipient;

    invoke-direct {v0, v9, v7, v14, v15}, Lcom/android/server/am/ActivityManagerService$AppDeathRecipient;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ProcessRecord;ILandroid/app/IApplicationThread;)V

    .line 4357
    .local v0, "adr":Lcom/android/server/am/ActivityManagerService$AppDeathRecipient;
    invoke-interface/range {p1 .. p1}, Landroid/app/IApplicationThread;->asBinder()Landroid/os/IBinder;

    move-result-object v1

    invoke-interface {v1, v0, v8}, Landroid/os/IBinder;->linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V

    .line 4358
    invoke-virtual {v7, v0}, Lcom/android/server/am/ProcessRecord;->setDeathRecipient(Landroid/os/IBinder$DeathRecipient;)V
    :try_end_3
    .catch Landroid/os/RemoteException; {:try_start_3 .. :try_end_3} :catch_16

    .line 4365
    .end local v0    # "adr":Lcom/android/server/am/ActivityManagerService$AppDeathRecipient;
    nop

    .line 4367
    iget v0, v7, Lcom/android/server/am/ProcessRecord;->userId:I

    iget-object v1, v7, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-static {v0, v14, v1}, Lcom/android/server/am/EventLogTags;->writeAmProcBound(IILjava/lang/String;)V

    .line 4369
    iget-object v1, v9, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v1

    :try_start_4
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 4370
    iget-object v0, v7, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    const/16 v2, -0x2710

    invoke-virtual {v0, v2}, Lcom/android/server/am/ProcessStateRecord;->setCurAdj(I)V

    .line 4371
    iget-object v0, v7, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    invoke-virtual {v0, v2}, Lcom/android/server/am/ProcessStateRecord;->setSetAdj(I)V

    .line 4372
    iget-object v0, v7, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    invoke-virtual {v0, v2}, Lcom/android/server/am/ProcessStateRecord;->setVerifiedAdj(I)V

    .line 4373
    iget-object v0, v9, Lcom/android/server/am/ActivityManagerService;->mOomAdjuster:Lcom/android/server/am/OomAdjuster;

    invoke-virtual {v0, v7}, Lcom/android/server/am/OomAdjuster;->setAttachingSchedGroupLSP(Lcom/android/server/am/ProcessRecord;)V

    .line 4374
    iget-object v0, v7, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    const/4 v2, 0x0

    invoke-virtual {v0, v2}, Lcom/android/server/am/ProcessStateRecord;->setForcingToImportant(Ljava/lang/Object;)V

    .line 4375
    invoke-virtual {v9, v7, v8, v8, v8}, Lcom/android/server/am/ActivityManagerService;->updateProcessForegroundLocked(Lcom/android/server/am/ProcessRecord;ZIZ)V

    .line 4376
    iget-object v0, v7, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    invoke-virtual {v0, v8}, Lcom/android/server/am/ProcessStateRecord;->setHasShownUi(Z)V

    .line 4377
    iget-object v0, v7, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    invoke-virtual {v0, v8}, Lcom/android/server/am/ProcessStateRecord;->setCached(Z)V

    .line 4378
    invoke-virtual {v7, v8}, Lcom/android/server/am/ProcessRecord;->setDebugging(Z)V

    .line 4379
    invoke-virtual {v7, v8}, Lcom/android/server/am/ProcessRecord;->setKilledByAm(Z)V

    .line 4380
    invoke-virtual {v7, v8}, Lcom/android/server/am/ProcessRecord;->setKilled(Z)V

    .line 4384
    iget v0, v7, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-static {v0}, Landroid/os/storage/StorageManager;->isUserKeyUnlocked(I)Z

    move-result v0

    invoke-virtual {v7, v0}, Lcom/android/server/am/ProcessRecord;->setUnlocked(Z)V

    .line 4385
    monitor-exit v1
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_b

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 4387
    iget-object v0, v9, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v1, 0x14

    invoke-virtual {v0, v1, v7}, Lcom/android/server/am/ActivityManagerService$MainHandler;->removeMessages(ILjava/lang/Object;)V

    .line 4389
    iget-boolean v0, v9, Lcom/android/server/am/ActivityManagerService;->mProcessesReady:Z

    if-nez v0, :cond_a

    iget-object v0, v7, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    invoke-virtual {v9, v0}, Lcom/android/server/am/ActivityManagerService;->isAllowedWhileBooting(Landroid/content/pm/ApplicationInfo;)Z

    move-result v0

    if-eqz v0, :cond_9

    goto :goto_5

    :cond_9
    move v5, v8

    goto :goto_6

    :cond_a
    :goto_5
    const/4 v5, 0x1

    :goto_6
    move/from16 v52, v5

    .line 4390
    .local v52, "normalMode":Z
    if-eqz v52, :cond_b

    .line 4391
    iget-object v0, v9, Lcom/android/server/am/ActivityManagerService;->mCpHelper:Lcom/android/server/am/ContentProviderHelper;

    invoke-virtual {v0, v7}, Lcom/android/server/am/ContentProviderHelper;->generateApplicationProvidersLocked(Lcom/android/server/am/ProcessRecord;)Ljava/util/List;

    move-result-object v0

    goto :goto_7

    .line 4392
    :cond_b
    move-object v0, v2

    :goto_7
    move-object/from16 v56, v0

    .line 4394
    .local v56, "providers":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ProviderInfo;>;"
    if-eqz v56, :cond_c

    iget-object v0, v9, Lcom/android/server/am/ActivityManagerService;->mCpHelper:Lcom/android/server/am/ContentProviderHelper;

    invoke-virtual {v0, v7}, Lcom/android/server/am/ContentProviderHelper;->checkAppInLaunchingProvidersLocked(Lcom/android/server/am/ProcessRecord;)Z

    move-result v0

    if-eqz v0, :cond_c

    .line 4395
    iget-object v0, v9, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v1, 0x39

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v0

    .line 4396
    .local v0, "msg":Landroid/os/Message;
    iput-object v7, v0, Landroid/os/Message;->obj:Ljava/lang/Object;

    .line 4397
    iget-object v1, v9, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    sget v3, Landroid/content/ContentResolver;->CONTENT_PROVIDER_PUBLISH_TIMEOUT_MILLIS:I

    int-to-long v3, v3

    invoke-virtual {v1, v0, v3, v4}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessageDelayed(Landroid/os/Message;J)Z

    .line 4401
    .end local v0    # "msg":Landroid/os/Message;
    :cond_c
    const-string v0, "attachApplicationLocked: before bindApplication"

    move-wide/from16 v4, v54

    .end local v54    # "startTime":J
    .local v4, "startTime":J
    invoke-virtual {v9, v4, v5, v0}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 4403
    if-nez v52, :cond_d

    .line 4404
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Launching preboot mode app: "

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 4410
    :cond_d
    iget-object v0, v9, Lcom/android/server/am/ActivityManagerService;->mBackupTargets:Landroid/util/SparseArray;

    iget v1, v7, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-virtual {v0, v1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    move-object v3, v0

    check-cast v3, Lcom/android/server/am/BackupRecord;

    .line 4412
    .local v3, "backupTarget":Lcom/android/server/am/BackupRecord;
    const/4 v0, 0x0

    .line 4413
    .local v0, "testMode":I
    :try_start_5
    iget-object v13, v9, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;
    :try_end_5
    .catch Ljava/lang/Exception; {:try_start_5 .. :try_end_5} :catch_15

    if-eqz v13, :cond_f

    :try_start_6
    invoke-virtual {v13, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v13

    if-eqz v13, :cond_f

    .line 4414
    iget-boolean v13, v9, Lcom/android/server/am/ActivityManagerService;->mWaitForDebugger:Z

    if-eqz v13, :cond_e

    .line 4415
    const/4 v13, 0x2

    goto :goto_8

    .line 4416
    :cond_e
    const/4 v13, 0x1

    :goto_8
    move v0, v13

    .line 4417
    const/4 v13, 0x1

    invoke-virtual {v7, v13}, Lcom/android/server/am/ProcessRecord;->setDebugging(Z)V

    .line 4418
    iget-boolean v8, v9, Lcom/android/server/am/ActivityManagerService;->mDebugTransient:Z

    if-eqz v8, :cond_10

    .line 4419
    iget-object v8, v9, Lcom/android/server/am/ActivityManagerService;->mOrigDebugApp:Ljava/lang/String;

    iput-object v8, v9, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;

    .line 4420
    iget-boolean v8, v9, Lcom/android/server/am/ActivityManagerService;->mOrigWaitForDebugger:Z

    iput-boolean v8, v9, Lcom/android/server/am/ActivityManagerService;->mWaitForDebugger:Z
    :try_end_6
    .catch Ljava/lang/Exception; {:try_start_6 .. :try_end_6} :catch_1

    goto :goto_9

    .line 4541
    .end local v0    # "testMode":I
    :catch_1
    move-exception v0

    move-object/from16 v22, v3

    move-wide/from16 v23, v4

    move-object/from16 v68, v6

    const/4 v14, 0x7

    goto/16 :goto_27

    .line 4413
    .restart local v0    # "testMode":I
    :cond_f
    const/4 v13, 0x1

    .line 4424
    :cond_10
    :goto_9
    move v8, v0

    .end local v0    # "testMode":I
    .local v8, "testMode":I
    const/16 v16, 0x0

    .line 4425
    .local v16, "enableTrackAllocation":Z
    :try_start_7
    iget-object v1, v9, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v1
    :try_end_7
    .catch Ljava/lang/Exception; {:try_start_7 .. :try_end_7} :catch_15

    :try_start_8
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 4426
    iget-object v0, v9, Lcom/android/server/am/ActivityManagerService;->mTrackAllocationApp:Ljava/lang/String;
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_9

    if-eqz v0, :cond_11

    :try_start_9
    invoke-virtual {v0, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_11

    .line 4427
    const/16 v16, 0x1

    .line 4428
    iput-object v2, v9, Lcom/android/server/am/ActivityManagerService;->mTrackAllocationApp:Ljava/lang/String;
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_2

    move/from16 v55, v16

    goto :goto_a

    .line 4430
    :catchall_2
    move-exception v0

    move-object/from16 v22, v3

    move-wide/from16 v23, v4

    move-object/from16 v68, v6

    const/4 v14, 0x7

    goto/16 :goto_26

    :cond_11
    move/from16 v55, v16

    .end local v16    # "enableTrackAllocation":Z
    .local v55, "enableTrackAllocation":Z
    :goto_a
    :try_start_a
    monitor-exit v1
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_8

    :try_start_b
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V
    :try_end_b
    .catch Ljava/lang/Exception; {:try_start_b .. :try_end_b} :catch_15

    .line 4433
    const/4 v0, 0x0

    .line 4434
    .local v0, "isRestrictedBackupMode":Z
    const/16 v1, 0x2710

    if-eqz v3, :cond_14

    :try_start_c
    iget-object v2, v3, Lcom/android/server/am/BackupRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v2, v2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v2, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_14

    .line 4435
    iget-object v2, v3, Lcom/android/server/am/BackupRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    iget v2, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    if-lt v2, v1, :cond_13

    iget v2, v3, Lcom/android/server/am/BackupRecord;->backupMode:I

    const/4 v1, 0x2

    if-eq v2, v1, :cond_12

    iget v2, v3, Lcom/android/server/am/BackupRecord;->backupMode:I

    const/4 v1, 0x3

    if-eq v2, v1, :cond_12

    iget v1, v3, Lcom/android/server/am/BackupRecord;->backupMode:I
    :try_end_c
    .catch Ljava/lang/Exception; {:try_start_c .. :try_end_c} :catch_1

    if-ne v1, v13, :cond_13

    :cond_12
    move v1, v13

    goto :goto_b

    :cond_13
    const/4 v1, 0x0

    :goto_b
    move v0, v1

    goto :goto_c

    .line 4441
    :cond_14
    move v1, v0

    .end local v0    # "isRestrictedBackupMode":Z
    .local v1, "isRestrictedBackupMode":Z
    :goto_c
    :try_start_d
    invoke-virtual {v7}, Lcom/android/server/am/ProcessRecord;->getActiveInstrumentation()Lcom/android/server/am/ActiveInstrumentation;

    move-result-object v0
    :try_end_d
    .catch Ljava/lang/Exception; {:try_start_d .. :try_end_d} :catch_15

    move-object v2, v0

    .line 4443
    .local v2, "instr":Lcom/android/server/am/ActiveInstrumentation;
    if-eqz v2, :cond_15

    .line 4444
    :try_start_e
    iget-object v0, v2, Lcom/android/server/am/ActiveInstrumentation;->mClass:Landroid/content/ComponentName;

    invoke-virtual {v0}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v0
    :try_end_e
    .catch Ljava/lang/Exception; {:try_start_e .. :try_end_e} :catch_1

    const/4 v13, 0x7

    :try_start_f
    invoke-virtual {v9, v0, v13}, Lcom/android/server/am/ActivityManagerService;->notifyPackageUse(Ljava/lang/String;I)V
    :try_end_f
    .catch Ljava/lang/Exception; {:try_start_f .. :try_end_f} :catch_2

    goto :goto_d

    .line 4541
    .end local v1    # "isRestrictedBackupMode":Z
    .end local v2    # "instr":Lcom/android/server/am/ActiveInstrumentation;
    .end local v8    # "testMode":I
    .end local v55    # "enableTrackAllocation":Z
    :catch_2
    move-exception v0

    goto :goto_e

    .line 4443
    .restart local v1    # "isRestrictedBackupMode":Z
    .restart local v2    # "instr":Lcom/android/server/am/ActiveInstrumentation;
    .restart local v8    # "testMode":I
    .restart local v55    # "enableTrackAllocation":Z
    :cond_15
    const/4 v13, 0x7

    .line 4447
    :goto_d
    :try_start_10
    sget-boolean v0, Lcom/android/server/wm/ProtoLogCache;->WM_DEBUG_CONFIGURATION_enabled:Z
    :try_end_10
    .catch Ljava/lang/Exception; {:try_start_10 .. :try_end_10} :catch_13

    if-eqz v0, :cond_16

    :try_start_11
    invoke-static {v6}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v0

    .local v0, "protoLogParam0":Ljava/lang/String;
    invoke-virtual {v7}, Lcom/android/server/am/ProcessRecord;->getWindowProcessController()Lcom/android/server/wm/WindowProcessController;

    move-result-object v18

    invoke-virtual/range {v18 .. v18}, Lcom/android/server/wm/WindowProcessController;->getConfiguration()Landroid/content/res/Configuration;

    move-result-object v18

    invoke-static/range {v18 .. v18}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v18
    :try_end_11
    .catch Ljava/lang/Exception; {:try_start_11 .. :try_end_11} :catch_4

    .local v18, "protoLogParam1":Ljava/lang/String;
    :try_start_12
    sget-object v13, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_CONFIGURATION:Lcom/android/internal/protolog/ProtoLogGroup;

    const/4 v11, 0x2

    new-array v11, v11, [Ljava/lang/Object;

    const/4 v10, 0x0

    aput-object v0, v11, v10
    :try_end_12
    .catch Ljava/lang/Exception; {:try_start_12 .. :try_end_12} :catch_3

    const/16 v17, 0x1

    :try_start_13
    aput-object v18, v11, v17

    move-object/from16 v20, v0

    const v0, -0x2360a226

    const/4 v12, 0x0

    .end local v0    # "protoLogParam0":Ljava/lang/String;
    .local v20, "protoLogParam0":Ljava/lang/String;
    invoke-static {v13, v0, v10, v12, v11}, Lcom/android/internal/protolog/ProtoLogImpl;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    goto :goto_f

    .line 4541
    .end local v1    # "isRestrictedBackupMode":Z
    .end local v2    # "instr":Lcom/android/server/am/ActiveInstrumentation;
    .end local v8    # "testMode":I
    .end local v18    # "protoLogParam1":Ljava/lang/String;
    .end local v20    # "protoLogParam0":Ljava/lang/String;
    .end local v55    # "enableTrackAllocation":Z
    :catch_3
    move-exception v0

    const/16 v17, 0x1

    move-object/from16 v22, v3

    move-wide/from16 v23, v4

    move-object/from16 v68, v6

    const/4 v14, 0x7

    goto/16 :goto_27

    :catch_4
    move-exception v0

    const/16 v17, 0x1

    :goto_e
    move-object/from16 v22, v3

    move-wide/from16 v23, v4

    move-object/from16 v68, v6

    move v14, v13

    goto/16 :goto_27

    .line 4447
    .restart local v1    # "isRestrictedBackupMode":Z
    .restart local v2    # "instr":Lcom/android/server/am/ActiveInstrumentation;
    .restart local v8    # "testMode":I
    .restart local v55    # "enableTrackAllocation":Z
    :cond_16
    const/16 v17, 0x1

    .line 4449
    :goto_f
    if-eqz v2, :cond_17

    iget-object v0, v2, Lcom/android/server/am/ActiveInstrumentation;->mTargetInfo:Landroid/content/pm/ApplicationInfo;
    :try_end_13
    .catch Ljava/lang/Exception; {:try_start_13 .. :try_end_13} :catch_1

    goto :goto_10

    :cond_17
    :try_start_14
    iget-object v0, v7, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    :goto_10
    move-object v12, v0

    .line 4450
    .local v12, "appInfo":Landroid/content/pm/ApplicationInfo;
    invoke-virtual {v9, v12}, Lcom/android/server/am/ActivityManagerService;->compatibilityInfoForPackage(Landroid/content/pm/ApplicationInfo;)Landroid/content/res/CompatibilityInfo;

    move-result-object v0

    invoke-virtual {v7, v0}, Lcom/android/server/am/ProcessRecord;->setCompat(Landroid/content/res/CompatibilityInfo;)V

    .line 4452
    iget-object v0, v9, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    invoke-virtual {v0, v15, v7, v2}, Lcom/android/server/am/AppProfiler;->setupProfilerInfoLocked(Landroid/app/IApplicationThread;Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ActiveInstrumentation;)Landroid/app/ProfilerInfo;

    move-result-object v0

    .line 4457
    .local v0, "profilerInfo":Landroid/app/ProfilerInfo;
    invoke-virtual {v12}, Landroid/content/pm/ApplicationInfo;->isInstantApp()Z

    move-result v10
    :try_end_14
    .catch Ljava/lang/Exception; {:try_start_14 .. :try_end_14} :catch_15

    if-nez v10, :cond_18

    :try_start_15
    iget v10, v12, Landroid/content/pm/ApplicationInfo;->targetSdkVersion:I

    const/16 v11, 0x1c

    if-ge v10, v11, :cond_18

    .line 4459
    sget-object v10, Lcom/android/server/am/ActivityManagerService;->sTheRealBuildSerial:Ljava/lang/String;
    :try_end_15
    .catch Ljava/lang/Exception; {:try_start_15 .. :try_end_15} :catch_1

    goto :goto_11

    :cond_18
    :try_start_16
    const-string/jumbo v10, "unknown"

    :goto_11
    move-object/from16 v28, v10

    .line 4462
    .local v28, "buildSerial":Ljava/lang/String;
    const/4 v10, 0x0

    .line 4463
    .local v10, "autofillOptions":Landroid/content/AutofillOptions;
    iget-object v11, v7, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v11, v11, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-static {v11}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v11
    :try_end_16
    .catch Ljava/lang/Exception; {:try_start_16 .. :try_end_16} :catch_15

    const/16 v13, 0x2710

    if-lt v11, v13, :cond_1a

    .line 4464
    :try_start_17
    const-class v11, Landroid/view/autofill/AutofillManagerInternal;

    invoke-static {v11}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v11

    check-cast v11, Landroid/view/autofill/AutofillManagerInternal;

    .line 4466
    .local v11, "afm":Landroid/view/autofill/AutofillManagerInternal;
    if-eqz v11, :cond_19

    .line 4467
    iget-object v13, v7, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v13, v13, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    move-object/from16 v53, v2

    .end local v2    # "instr":Lcom/android/server/am/ActiveInstrumentation;
    .local v53, "instr":Lcom/android/server/am/ActiveInstrumentation;
    iget-object v2, v7, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
    :try_end_17
    .catch Ljava/lang/Exception; {:try_start_17 .. :try_end_17} :catch_5

    move-object/from16 v57, v3

    .end local v3    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .local v57, "backupTarget":Lcom/android/server/am/BackupRecord;
    :try_start_18
    iget-wide v2, v2, Landroid/content/pm/ApplicationInfo;->longVersionCode:J

    move-object/from16 v18, v10

    .end local v10    # "autofillOptions":Landroid/content/AutofillOptions;
    .local v18, "autofillOptions":Landroid/content/AutofillOptions;
    iget v10, v7, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-virtual {v11, v13, v2, v3, v10}, Landroid/view/autofill/AutofillManagerInternal;->getAutofillOptions(Ljava/lang/String;JI)Landroid/content/AutofillOptions;

    move-result-object v2
    :try_end_18
    .catch Ljava/lang/Exception; {:try_start_18 .. :try_end_18} :catch_6

    move-object v10, v2

    .end local v18    # "autofillOptions":Landroid/content/AutofillOptions;
    .restart local v10    # "autofillOptions":Landroid/content/AutofillOptions;
    goto :goto_13

    .line 4466
    .end local v53    # "instr":Lcom/android/server/am/ActiveInstrumentation;
    .end local v57    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .restart local v2    # "instr":Lcom/android/server/am/ActiveInstrumentation;
    .restart local v3    # "backupTarget":Lcom/android/server/am/BackupRecord;
    :cond_19
    move-object/from16 v53, v2

    move-object/from16 v57, v3

    move-object/from16 v18, v10

    .end local v2    # "instr":Lcom/android/server/am/ActiveInstrumentation;
    .end local v3    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .end local v10    # "autofillOptions":Landroid/content/AutofillOptions;
    .restart local v18    # "autofillOptions":Landroid/content/AutofillOptions;
    .restart local v53    # "instr":Lcom/android/server/am/ActiveInstrumentation;
    .restart local v57    # "backupTarget":Lcom/android/server/am/BackupRecord;
    goto :goto_12

    .line 4541
    .end local v0    # "profilerInfo":Landroid/app/ProfilerInfo;
    .end local v1    # "isRestrictedBackupMode":Z
    .end local v8    # "testMode":I
    .end local v11    # "afm":Landroid/view/autofill/AutofillManagerInternal;
    .end local v12    # "appInfo":Landroid/content/pm/ApplicationInfo;
    .end local v18    # "autofillOptions":Landroid/content/AutofillOptions;
    .end local v28    # "buildSerial":Ljava/lang/String;
    .end local v53    # "instr":Lcom/android/server/am/ActiveInstrumentation;
    .end local v55    # "enableTrackAllocation":Z
    .end local v57    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .restart local v3    # "backupTarget":Lcom/android/server/am/BackupRecord;
    :catch_5
    move-exception v0

    move-object/from16 v22, v3

    move-wide/from16 v23, v4

    move-object/from16 v68, v6

    const/4 v14, 0x7

    .end local v3    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .restart local v57    # "backupTarget":Lcom/android/server/am/BackupRecord;
    goto/16 :goto_27

    .line 4463
    .end local v57    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .restart local v0    # "profilerInfo":Landroid/app/ProfilerInfo;
    .restart local v1    # "isRestrictedBackupMode":Z
    .restart local v2    # "instr":Lcom/android/server/am/ActiveInstrumentation;
    .restart local v3    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .restart local v8    # "testMode":I
    .restart local v10    # "autofillOptions":Landroid/content/AutofillOptions;
    .restart local v12    # "appInfo":Landroid/content/pm/ApplicationInfo;
    .restart local v28    # "buildSerial":Ljava/lang/String;
    .restart local v55    # "enableTrackAllocation":Z
    :cond_1a
    move-object/from16 v53, v2

    move-object/from16 v57, v3

    move-object/from16 v18, v10

    .line 4471
    .end local v2    # "instr":Lcom/android/server/am/ActiveInstrumentation;
    .end local v3    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .end local v10    # "autofillOptions":Landroid/content/AutofillOptions;
    .restart local v18    # "autofillOptions":Landroid/content/AutofillOptions;
    .restart local v53    # "instr":Lcom/android/server/am/ActiveInstrumentation;
    .restart local v57    # "backupTarget":Lcom/android/server/am/BackupRecord;
    :goto_12
    move-object/from16 v2, v18

    .end local v18    # "autofillOptions":Landroid/content/AutofillOptions;
    .local v2, "autofillOptions":Landroid/content/AutofillOptions;
    :goto_13
    const/4 v3, 0x0

    .line 4472
    .local v3, "contentCaptureOptions":Landroid/content/ContentCaptureOptions;
    :try_start_19
    iget-object v10, v7, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v10, v10, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-static {v10}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v10
    :try_end_19
    .catch Ljava/lang/Exception; {:try_start_19 .. :try_end_19} :catch_12

    const/16 v11, 0x2710

    if-lt v10, v11, :cond_1b

    .line 4473
    :try_start_1a
    const-class v10, Lcom/android/server/contentcapture/ContentCaptureManagerInternal;

    .line 4474
    invoke-static {v10}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v10

    check-cast v10, Lcom/android/server/contentcapture/ContentCaptureManagerInternal;

    .line 4475
    .local v10, "ccm":Lcom/android/server/contentcapture/ContentCaptureManagerInternal;
    if-eqz v10, :cond_1b

    .line 4476
    iget v11, v7, Lcom/android/server/am/ProcessRecord;->userId:I

    iget-object v13, v7, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v13, v13, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v10, v11, v13}, Lcom/android/server/contentcapture/ContentCaptureManagerInternal;->getOptionsForPackage(ILjava/lang/String;)Landroid/content/ContentCaptureOptions;

    move-result-object v11
    :try_end_1a
    .catch Ljava/lang/Exception; {:try_start_1a .. :try_end_1a} :catch_6

    move-object v3, v11

    goto :goto_14

    .line 4541
    .end local v0    # "profilerInfo":Landroid/app/ProfilerInfo;
    .end local v1    # "isRestrictedBackupMode":Z
    .end local v2    # "autofillOptions":Landroid/content/AutofillOptions;
    .end local v3    # "contentCaptureOptions":Landroid/content/ContentCaptureOptions;
    .end local v8    # "testMode":I
    .end local v10    # "ccm":Lcom/android/server/contentcapture/ContentCaptureManagerInternal;
    .end local v12    # "appInfo":Landroid/content/pm/ApplicationInfo;
    .end local v28    # "buildSerial":Ljava/lang/String;
    .end local v53    # "instr":Lcom/android/server/am/ActiveInstrumentation;
    .end local v55    # "enableTrackAllocation":Z
    :catch_6
    move-exception v0

    move-wide/from16 v23, v4

    move-object/from16 v68, v6

    move-object/from16 v22, v57

    const/4 v14, 0x7

    goto/16 :goto_27

    .line 4480
    .restart local v0    # "profilerInfo":Landroid/app/ProfilerInfo;
    .restart local v1    # "isRestrictedBackupMode":Z
    .restart local v2    # "autofillOptions":Landroid/content/AutofillOptions;
    .restart local v3    # "contentCaptureOptions":Landroid/content/ContentCaptureOptions;
    .restart local v8    # "testMode":I
    .restart local v12    # "appInfo":Landroid/content/pm/ApplicationInfo;
    .restart local v28    # "buildSerial":Ljava/lang/String;
    .restart local v53    # "instr":Lcom/android/server/am/ActiveInstrumentation;
    .restart local v55    # "enableTrackAllocation":Z
    :cond_1b
    :goto_14
    const/4 v10, 0x0

    .line 4481
    .local v10, "serializedSystemFontMap":Landroid/os/SharedMemory;
    :try_start_1b
    const-class v11, Lcom/android/server/graphics/fonts/FontManagerInternal;

    invoke-static {v11}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v11

    check-cast v11, Lcom/android/server/graphics/fonts/FontManagerInternal;
    :try_end_1b
    .catch Ljava/lang/Exception; {:try_start_1b .. :try_end_1b} :catch_12

    move-object/from16 v58, v11

    .line 4482
    .local v58, "fm":Lcom/android/server/graphics/fonts/FontManagerInternal;
    if-eqz v58, :cond_1c

    .line 4483
    :try_start_1c
    invoke-interface/range {v58 .. v58}, Lcom/android/server/graphics/fonts/FontManagerInternal;->getSerializedSystemFontMap()Landroid/os/SharedMemory;

    move-result-object v11
    :try_end_1c
    .catch Ljava/lang/Exception; {:try_start_1c .. :try_end_1c} :catch_6

    move-object v10, v11

    move-object/from16 v59, v10

    goto :goto_15

    .line 4482
    :cond_1c
    move-object/from16 v59, v10

    .line 4486
    .end local v10    # "serializedSystemFontMap":Landroid/os/SharedMemory;
    .local v59, "serializedSystemFontMap":Landroid/os/SharedMemory;
    :goto_15
    :try_start_1d
    const-string v10, "attachApplicationLocked: immediately before bindApplication"

    invoke-virtual {v9, v4, v5, v10}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 4487
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v10

    move-wide/from16 v60, v10

    .line 4488
    .local v60, "bindApplicationTimeMillis":J
    iget-object v10, v9, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-virtual {v7}, Lcom/android/server/am/ProcessRecord;->getWindowProcessController()Lcom/android/server/wm/WindowProcessController;

    move-result-object v11

    invoke-virtual {v10, v11}, Lcom/android/server/wm/ActivityTaskManagerInternal;->preBindApplication(Lcom/android/server/wm/WindowProcessController;)V

    .line 4489
    invoke-virtual {v7}, Lcom/android/server/am/ProcessRecord;->getActiveInstrumentation()Lcom/android/server/am/ActiveInstrumentation;

    move-result-object v10

    move-object v11, v10

    .line 4490
    .local v11, "instr2":Lcom/android/server/am/ActiveInstrumentation;
    iget-object v10, v9, Lcom/android/server/am/ActivityManagerService;->mPlatformCompat:Lcom/android/server/compat/PlatformCompat;
    :try_end_1d
    .catch Ljava/lang/Exception; {:try_start_1d .. :try_end_1d} :catch_12

    if-eqz v10, :cond_1d

    .line 4491
    :try_start_1e
    iget-object v13, v7, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    invoke-virtual {v10, v13}, Lcom/android/server/compat/PlatformCompat;->resetReporting(Landroid/content/pm/ApplicationInfo;)V
    :try_end_1e
    .catch Ljava/lang/Exception; {:try_start_1e .. :try_end_1e} :catch_6

    .line 4493
    :cond_1d
    :try_start_1f
    invoke-static/range {v56 .. v56}, Landroid/content/pm/ProviderInfoList;->fromList(Ljava/util/List;)Landroid/content/pm/ProviderInfoList;

    move-result-object v13
    :try_end_1f
    .catch Ljava/lang/Exception; {:try_start_1f .. :try_end_1f} :catch_12

    move/from16 v10, v17

    const/16 v54, 0x7

    .line 4494
    .local v13, "providerList":Landroid/content/pm/ProviderInfoList;
    :try_start_20
    invoke-virtual {v7}, Lcom/android/server/am/ProcessRecord;->getIsolatedEntryPoint()Ljava/lang/String;

    move-result-object v16
    :try_end_20
    .catch Ljava/lang/Exception; {:try_start_20 .. :try_end_20} :catch_11

    if-eqz v16, :cond_1e

    .line 4497
    nop

    .line 4498
    :try_start_21
    invoke-virtual {v7}, Lcom/android/server/am/ProcessRecord;->getIsolatedEntryPoint()Ljava/lang/String;

    move-result-object v10

    move-object/from16 v16, v12

    .end local v12    # "appInfo":Landroid/content/pm/ApplicationInfo;
    .local v16, "appInfo":Landroid/content/pm/ApplicationInfo;
    invoke-virtual {v7}, Lcom/android/server/am/ProcessRecord;->getIsolatedEntryPointArgs()[Ljava/lang/String;

    move-result-object v12

    .line 4497
    invoke-interface {v15, v10, v12}, Landroid/app/IApplicationThread;->runIsolatedEntryPoint(Ljava/lang/String;[Ljava/lang/String;)V
    :try_end_21
    .catch Ljava/lang/Exception; {:try_start_21 .. :try_end_21} :catch_7

    move/from16 v65, v1

    move-wide/from16 v62, v4

    move-object/from16 v66, v11

    move-object/from16 v67, v16

    goto/16 :goto_1a

    .line 4541
    .end local v0    # "profilerInfo":Landroid/app/ProfilerInfo;
    .end local v1    # "isRestrictedBackupMode":Z
    .end local v2    # "autofillOptions":Landroid/content/AutofillOptions;
    .end local v3    # "contentCaptureOptions":Landroid/content/ContentCaptureOptions;
    .end local v8    # "testMode":I
    .end local v11    # "instr2":Lcom/android/server/am/ActiveInstrumentation;
    .end local v13    # "providerList":Landroid/content/pm/ProviderInfoList;
    .end local v16    # "appInfo":Landroid/content/pm/ApplicationInfo;
    .end local v28    # "buildSerial":Ljava/lang/String;
    .end local v53    # "instr":Lcom/android/server/am/ActiveInstrumentation;
    .end local v55    # "enableTrackAllocation":Z
    .end local v58    # "fm":Lcom/android/server/graphics/fonts/FontManagerInternal;
    .end local v59    # "serializedSystemFontMap":Landroid/os/SharedMemory;
    .end local v60    # "bindApplicationTimeMillis":J
    :catch_7
    move-exception v0

    move-wide/from16 v23, v4

    move-object/from16 v68, v6

    move/from16 v14, v54

    move-object/from16 v22, v57

    goto/16 :goto_27

    .line 4499
    .restart local v0    # "profilerInfo":Landroid/app/ProfilerInfo;
    .restart local v1    # "isRestrictedBackupMode":Z
    .restart local v2    # "autofillOptions":Landroid/content/AutofillOptions;
    .restart local v3    # "contentCaptureOptions":Landroid/content/ContentCaptureOptions;
    .restart local v8    # "testMode":I
    .restart local v11    # "instr2":Lcom/android/server/am/ActiveInstrumentation;
    .restart local v12    # "appInfo":Landroid/content/pm/ApplicationInfo;
    .restart local v13    # "providerList":Landroid/content/pm/ProviderInfoList;
    .restart local v28    # "buildSerial":Ljava/lang/String;
    .restart local v53    # "instr":Lcom/android/server/am/ActiveInstrumentation;
    .restart local v55    # "enableTrackAllocation":Z
    .restart local v58    # "fm":Lcom/android/server/graphics/fonts/FontManagerInternal;
    .restart local v59    # "serializedSystemFontMap":Landroid/os/SharedMemory;
    .restart local v60    # "bindApplicationTimeMillis":J
    :cond_1e
    move-object/from16 v16, v12

    .end local v12    # "appInfo":Landroid/content/pm/ApplicationInfo;
    .restart local v16    # "appInfo":Landroid/content/pm/ApplicationInfo;
    if-eqz v11, :cond_21

    .line 4500
    :try_start_22
    iget-object v12, v11, Lcom/android/server/am/ActiveInstrumentation;->mClass:Landroid/content/ComponentName;

    iget-object v10, v11, Lcom/android/server/am/ActiveInstrumentation;->mArguments:Landroid/os/Bundle;
    :try_end_22
    .catch Ljava/lang/Exception; {:try_start_22 .. :try_end_22} :catch_9

    move-wide/from16 v62, v4

    .end local v4    # "startTime":J
    .local v62, "startTime":J
    :try_start_23
    iget-object v4, v11, Lcom/android/server/am/ActiveInstrumentation;->mWatcher:Landroid/app/IInstrumentationWatcher;

    iget-object v5, v11, Lcom/android/server/am/ActiveInstrumentation;->mUiAutomationConnection:Landroid/app/IUiAutomationConnection;

    move-object/from16 v64, v13

    .end local v13    # "providerList":Landroid/content/pm/ProviderInfoList;
    .local v64, "providerList":Landroid/content/pm/ProviderInfoList;
    iget-boolean v13, v9, Lcom/android/server/am/ActivityManagerService;->mBinderTransactionTrackingEnabled:Z

    if-nez v1, :cond_20

    if-nez v52, :cond_1f

    goto :goto_16

    :cond_1f
    const/16 v22, 0x0

    goto :goto_17

    :cond_20
    :goto_16
    const/16 v22, 0x1

    .line 4506
    :goto_17
    invoke-virtual {v7}, Lcom/android/server/am/ProcessRecord;->isPersistent()Z

    move-result v23

    move/from16 v65, v1

    .end local v1    # "isRestrictedBackupMode":Z
    .local v65, "isRestrictedBackupMode":Z
    new-instance v1, Landroid/content/res/Configuration;

    .line 4507
    invoke-virtual {v7}, Lcom/android/server/am/ProcessRecord;->getWindowProcessController()Lcom/android/server/wm/WindowProcessController;

    move-result-object v18

    move-object/from16 v19, v10

    invoke-virtual/range {v18 .. v18}, Lcom/android/server/wm/WindowProcessController;->getConfiguration()Landroid/content/res/Configuration;

    move-result-object v10

    invoke-direct {v1, v10}, Landroid/content/res/Configuration;-><init>(Landroid/content/res/Configuration;)V

    .line 4508
    invoke-virtual {v7}, Lcom/android/server/am/ProcessRecord;->getCompat()Landroid/content/res/CompatibilityInfo;

    move-result-object v25

    iget-boolean v10, v7, Lcom/android/server/am/ProcessRecord;->isolated:Z

    invoke-direct {v9, v10}, Lcom/android/server/am/ActivityManagerService;->getCommonServicesLocked(Z)Landroid/util/ArrayMap;

    move-result-object v26

    iget-object v10, v9, Lcom/android/server/am/ActivityManagerService;->mCoreSettingsObserver:Lcom/android/server/am/CoreSettingsObserver;

    .line 4509
    invoke-virtual {v10}, Lcom/android/server/am/CoreSettingsObserver;->getCoreSettingsLocked()Landroid/os/Bundle;

    move-result-object v27

    .line 4511
    invoke-virtual {v7}, Lcom/android/server/am/ProcessRecord;->getDisabledCompatChanges()[J

    move-result-object v31

    .line 4500
    move-object/from16 v17, v19

    move-object/from16 v10, p1

    move-object/from16 v66, v11

    .end local v11    # "instr2":Lcom/android/server/am/ActiveInstrumentation;
    .local v66, "instr2":Lcom/android/server/am/ActiveInstrumentation;
    move-object v11, v6

    move-object/from16 v67, v16

    move-object/from16 v16, v12

    .end local v16    # "appInfo":Landroid/content/pm/ApplicationInfo;
    .local v67, "appInfo":Landroid/content/pm/ApplicationInfo;
    move-object/from16 v12, v67

    move-object/from16 v14, v16

    move-object v15, v0

    move-object/from16 v16, v17

    move-object/from16 v17, v4

    move-object/from16 v18, v5

    move/from16 v19, v8

    move/from16 v20, v13

    move/from16 v21, v55

    move-object/from16 v24, v1

    move-object/from16 v29, v2

    move-object/from16 v30, v3

    move-object/from16 v32, v59

    move-object/from16 v13, v64

    .end local v64    # "providerList":Landroid/content/pm/ProviderInfoList;
    .restart local v13    # "providerList":Landroid/content/pm/ProviderInfoList;
    invoke-interface/range {v10 .. v32}, Landroid/app/IApplicationThread;->bindApplication(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;Landroid/content/pm/ProviderInfoList;Landroid/content/ComponentName;Landroid/app/ProfilerInfo;Landroid/os/Bundle;Landroid/app/IInstrumentationWatcher;Landroid/app/IUiAutomationConnection;IZZZZLandroid/content/res/Configuration;Landroid/content/res/CompatibilityInfo;Ljava/util/Map;Landroid/os/Bundle;Ljava/lang/String;Landroid/content/AutofillOptions;Landroid/content/ContentCaptureOptions;[JLandroid/os/SharedMemory;)V
    :try_end_23
    .catch Ljava/lang/Exception; {:try_start_23 .. :try_end_23} :catch_8

    goto/16 :goto_1a

    .line 4541
    .end local v0    # "profilerInfo":Landroid/app/ProfilerInfo;
    .end local v2    # "autofillOptions":Landroid/content/AutofillOptions;
    .end local v3    # "contentCaptureOptions":Landroid/content/ContentCaptureOptions;
    .end local v8    # "testMode":I
    .end local v13    # "providerList":Landroid/content/pm/ProviderInfoList;
    .end local v28    # "buildSerial":Ljava/lang/String;
    .end local v53    # "instr":Lcom/android/server/am/ActiveInstrumentation;
    .end local v55    # "enableTrackAllocation":Z
    .end local v58    # "fm":Lcom/android/server/graphics/fonts/FontManagerInternal;
    .end local v59    # "serializedSystemFontMap":Landroid/os/SharedMemory;
    .end local v60    # "bindApplicationTimeMillis":J
    .end local v65    # "isRestrictedBackupMode":Z
    .end local v66    # "instr2":Lcom/android/server/am/ActiveInstrumentation;
    .end local v67    # "appInfo":Landroid/content/pm/ApplicationInfo;
    :catch_8
    move-exception v0

    move-object/from16 v68, v6

    move/from16 v14, v54

    move-object/from16 v22, v57

    move-wide/from16 v23, v62

    goto/16 :goto_27

    .end local v62    # "startTime":J
    .restart local v4    # "startTime":J
    :catch_9
    move-exception v0

    move-wide/from16 v23, v4

    move-object/from16 v68, v6

    move/from16 v14, v54

    move-object/from16 v22, v57

    .end local v4    # "startTime":J
    .restart local v62    # "startTime":J
    goto/16 :goto_27

    .line 4513
    .end local v62    # "startTime":J
    .restart local v0    # "profilerInfo":Landroid/app/ProfilerInfo;
    .restart local v1    # "isRestrictedBackupMode":Z
    .restart local v2    # "autofillOptions":Landroid/content/AutofillOptions;
    .restart local v3    # "contentCaptureOptions":Landroid/content/ContentCaptureOptions;
    .restart local v4    # "startTime":J
    .restart local v8    # "testMode":I
    .restart local v11    # "instr2":Lcom/android/server/am/ActiveInstrumentation;
    .restart local v13    # "providerList":Landroid/content/pm/ProviderInfoList;
    .restart local v16    # "appInfo":Landroid/content/pm/ApplicationInfo;
    .restart local v28    # "buildSerial":Ljava/lang/String;
    .restart local v53    # "instr":Lcom/android/server/am/ActiveInstrumentation;
    .restart local v55    # "enableTrackAllocation":Z
    .restart local v58    # "fm":Lcom/android/server/graphics/fonts/FontManagerInternal;
    .restart local v59    # "serializedSystemFontMap":Landroid/os/SharedMemory;
    .restart local v60    # "bindApplicationTimeMillis":J
    :cond_21
    move/from16 v65, v1

    move-wide/from16 v62, v4

    move-object/from16 v66, v11

    move-object/from16 v67, v16

    .end local v1    # "isRestrictedBackupMode":Z
    .end local v4    # "startTime":J
    .end local v11    # "instr2":Lcom/android/server/am/ActiveInstrumentation;
    .end local v16    # "appInfo":Landroid/content/pm/ApplicationInfo;
    .restart local v62    # "startTime":J
    .restart local v65    # "isRestrictedBackupMode":Z
    .restart local v66    # "instr2":Lcom/android/server/am/ActiveInstrumentation;
    .restart local v67    # "appInfo":Landroid/content/pm/ApplicationInfo;
    const/16 v33, 0x0

    const/16 v35, 0x0

    const/16 v36, 0x0

    const/16 v37, 0x0

    :try_start_24
    iget-boolean v1, v9, Lcom/android/server/am/ActivityManagerService;->mBinderTransactionTrackingEnabled:Z

    if-nez v65, :cond_23

    if-nez v52, :cond_22

    goto :goto_18

    :cond_22
    const/16 v41, 0x0

    goto :goto_19

    :cond_23
    :goto_18
    const/16 v41, 0x1

    .line 4516
    :goto_19
    invoke-virtual {v7}, Lcom/android/server/am/ProcessRecord;->isPersistent()Z

    move-result v42

    new-instance v4, Landroid/content/res/Configuration;

    .line 4517
    invoke-virtual {v7}, Lcom/android/server/am/ProcessRecord;->getWindowProcessController()Lcom/android/server/wm/WindowProcessController;

    move-result-object v5

    invoke-virtual {v5}, Lcom/android/server/wm/WindowProcessController;->getConfiguration()Landroid/content/res/Configuration;

    move-result-object v5

    invoke-direct {v4, v5}, Landroid/content/res/Configuration;-><init>(Landroid/content/res/Configuration;)V

    .line 4518
    invoke-virtual {v7}, Lcom/android/server/am/ProcessRecord;->getCompat()Landroid/content/res/CompatibilityInfo;

    move-result-object v44

    iget-boolean v5, v7, Lcom/android/server/am/ProcessRecord;->isolated:Z

    invoke-direct {v9, v5}, Lcom/android/server/am/ActivityManagerService;->getCommonServicesLocked(Z)Landroid/util/ArrayMap;

    move-result-object v45

    iget-object v5, v9, Lcom/android/server/am/ActivityManagerService;->mCoreSettingsObserver:Lcom/android/server/am/CoreSettingsObserver;

    .line 4519
    invoke-virtual {v5}, Lcom/android/server/am/CoreSettingsObserver;->getCoreSettingsLocked()Landroid/os/Bundle;

    move-result-object v46

    .line 4521
    invoke-virtual {v7}, Lcom/android/server/am/ProcessRecord;->getDisabledCompatChanges()[J

    move-result-object v50

    .line 4513
    move-object/from16 v29, p1

    move-object/from16 v30, v6

    move-object/from16 v31, v67

    move-object/from16 v32, v13

    move-object/from16 v34, v0

    move/from16 v38, v8

    move/from16 v39, v1

    move/from16 v40, v55

    move-object/from16 v43, v4

    move-object/from16 v47, v28

    move-object/from16 v48, v2

    move-object/from16 v49, v3

    move-object/from16 v51, v59

    invoke-interface/range {v29 .. v51}, Landroid/app/IApplicationThread;->bindApplication(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;Landroid/content/pm/ProviderInfoList;Landroid/content/ComponentName;Landroid/app/ProfilerInfo;Landroid/os/Bundle;Landroid/app/IInstrumentationWatcher;Landroid/app/IUiAutomationConnection;IZZZZLandroid/content/res/Configuration;Landroid/content/res/CompatibilityInfo;Ljava/util/Map;Landroid/os/Bundle;Ljava/lang/String;Landroid/content/AutofillOptions;Landroid/content/ContentCaptureOptions;[JLandroid/os/SharedMemory;)V
    :try_end_24
    .catch Ljava/lang/Exception; {:try_start_24 .. :try_end_24} :catch_10

    .line 4523
    :goto_1a
    if-eqz v0, :cond_24

    .line 4524
    :try_start_25
    invoke-virtual {v0}, Landroid/app/ProfilerInfo;->closeFd()V
    :try_end_25
    .catch Ljava/lang/Exception; {:try_start_25 .. :try_end_25} :catch_8

    .line 4525
    const/4 v0, 0x0

    move-object v1, v0

    goto :goto_1b

    .line 4523
    :cond_24
    move-object v1, v0

    .line 4530
    .end local v0    # "profilerInfo":Landroid/app/ProfilerInfo;
    .local v1, "profilerInfo":Landroid/app/ProfilerInfo;
    :goto_1b
    :try_start_26
    iget-object v4, v9, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v4
    :try_end_26
    .catch Ljava/lang/Exception; {:try_start_26 .. :try_end_26} :catch_10

    :try_start_27
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 4531
    iget-object v0, v9, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    move-object/from16 v15, p1

    invoke-virtual {v7, v15, v0}, Lcom/android/server/am/ProcessRecord;->makeActive(Landroid/app/IApplicationThread;Lcom/android/server/am/ProcessStatsService;)V

    .line 4532
    const-string v0, "attachApplicationLocked: immediately after bindApplication"
    :try_end_27
    .catchall {:try_start_27 .. :try_end_27} :catchall_6

    move-wide/from16 v10, v62

    .end local v62    # "startTime":J
    .local v10, "startTime":J
    :try_start_28
    invoke-virtual {v9, v10, v11, v0}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 4533
    monitor-exit v4
    :try_end_28
    .catchall {:try_start_28 .. :try_end_28} :catchall_5

    :try_start_29
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 4534
    const/4 v0, 0x0

    const/4 v4, 0x0

    invoke-virtual {v9, v7, v4, v0}, Lcom/android/server/am/ActivityManagerService;->updateLruProcessLocked(Lcom/android/server/am/ProcessRecord;ZLcom/android/server/am/ProcessRecord;)V

    .line 4535
    const-string v0, "attachApplicationLocked: after updateLruProcessLocked"

    invoke-virtual {v9, v10, v11, v0}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 4536
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v4

    .line 4537
    .local v4, "now":J
    iget-object v0, v9, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    iget-object v12, v0, Lcom/android/server/am/AppProfiler;->mProfilerLock:Ljava/lang/Object;

    monitor-enter v12
    :try_end_29
    .catch Ljava/lang/Exception; {:try_start_29 .. :try_end_29} :catch_f

    .line 4538
    :try_start_2a
    iget-object v0, v7, Lcom/android/server/am/ProcessRecord;->mProfile:Lcom/android/server/am/ProcessProfileRecord;

    invoke-virtual {v0, v4, v5}, Lcom/android/server/am/ProcessProfileRecord;->setLastRequestedGc(J)V

    .line 4539
    iget-object v0, v7, Lcom/android/server/am/ProcessRecord;->mProfile:Lcom/android/server/am/ProcessProfileRecord;

    invoke-virtual {v0, v4, v5}, Lcom/android/server/am/ProcessProfileRecord;->setLastLowMemory(J)V

    .line 4540
    monitor-exit v12
    :try_end_2a
    .catchall {:try_start_2a .. :try_end_2a} :catchall_3

    .line 4550
    .end local v1    # "profilerInfo":Landroid/app/ProfilerInfo;
    .end local v2    # "autofillOptions":Landroid/content/AutofillOptions;
    .end local v3    # "contentCaptureOptions":Landroid/content/ContentCaptureOptions;
    .end local v4    # "now":J
    .end local v8    # "testMode":I
    .end local v13    # "providerList":Landroid/content/pm/ProviderInfoList;
    .end local v28    # "buildSerial":Ljava/lang/String;
    .end local v53    # "instr":Lcom/android/server/am/ActiveInstrumentation;
    .end local v55    # "enableTrackAllocation":Z
    .end local v58    # "fm":Lcom/android/server/graphics/fonts/FontManagerInternal;
    .end local v59    # "serializedSystemFontMap":Landroid/os/SharedMemory;
    .end local v65    # "isRestrictedBackupMode":Z
    .end local v66    # "instr2":Lcom/android/server/am/ActiveInstrumentation;
    .end local v67    # "appInfo":Landroid/content/pm/ApplicationInfo;
    nop

    .line 4553
    iget-object v0, v9, Lcom/android/server/am/ActivityManagerService;->mPersistentStartingProcesses:Ljava/util/ArrayList;

    invoke-virtual {v0, v7}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 4556
    iget-object v0, v9, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;

    invoke-virtual {v0, v7}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 4558
    const/4 v1, 0x0

    .line 4559
    .local v1, "badApp":Z
    const/4 v2, 0x0

    .line 4562
    .local v2, "didSomething":Z
    if-eqz v52, :cond_25

    .line 4564
    :try_start_2b
    iget-object v0, v9, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-virtual {v7}, Lcom/android/server/am/ProcessRecord;->getWindowProcessController()Lcom/android/server/wm/WindowProcessController;

    move-result-object v3

    invoke-virtual {v0, v3}, Lcom/android/server/wm/ActivityTaskManagerInternal;->attachApplication(Lcom/android/server/wm/WindowProcessController;)Z

    move-result v0
    :try_end_2b
    .catch Ljava/lang/Exception; {:try_start_2b .. :try_end_2b} :catch_a

    move v2, v0

    .line 4568
    goto :goto_1c

    .line 4565
    :catch_a
    move-exception v0

    .line 4566
    .local v0, "e":Ljava/lang/Exception;
    const-string v3, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Exception thrown launching activities in "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4, v0}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 4567
    const/4 v1, 0x1

    .line 4572
    .end local v0    # "e":Ljava/lang/Exception;
    :cond_25
    :goto_1c
    if-nez v1, :cond_26

    .line 4574
    :try_start_2c
    iget-object v0, v9, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v0, v7, v6}, Lcom/android/server/am/ActiveServices;->attachApplicationLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;)Z

    move-result v0

    or-int/2addr v2, v0

    .line 4575
    const-string v0, "attachApplicationLocked: after mServices.attachApplicationLocked"

    invoke-virtual {v9, v10, v11, v0}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V
    :try_end_2c
    .catch Ljava/lang/Exception; {:try_start_2c .. :try_end_2c} :catch_b

    .line 4579
    goto :goto_1d

    .line 4576
    :catch_b
    move-exception v0

    .line 4577
    .restart local v0    # "e":Ljava/lang/Exception;
    const-string v3, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Exception thrown starting services in "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4, v0}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 4578
    const/4 v1, 0x1

    .line 4583
    .end local v0    # "e":Ljava/lang/Exception;
    :cond_26
    :goto_1d
    if-nez v1, :cond_27

    move/from16 v8, p2

    invoke-virtual {v9, v8}, Lcom/android/server/am/ActivityManagerService;->isPendingBroadcastProcessLocked(I)Z

    move-result v0

    if-eqz v0, :cond_28

    .line 4585
    :try_start_2d
    invoke-virtual {v9, v7}, Lcom/android/server/am/ActivityManagerService;->sendPendingBroadcastsLocked(Lcom/android/server/am/ProcessRecord;)Z

    move-result v0

    or-int/2addr v2, v0

    .line 4586
    const-string v0, "attachApplicationLocked: after sendPendingBroadcastsLocked"

    invoke-virtual {v9, v10, v11, v0}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V
    :try_end_2d
    .catch Ljava/lang/Exception; {:try_start_2d .. :try_end_2d} :catch_c

    .line 4591
    move v12, v1

    move/from16 v21, v2

    goto :goto_1e

    .line 4587
    :catch_c
    move-exception v0

    .line 4589
    .restart local v0    # "e":Ljava/lang/Exception;
    const-string v3, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Exception thrown dispatching broadcasts in "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4, v0}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 4590
    const/4 v1, 0x1

    move v12, v1

    move/from16 v21, v2

    goto :goto_1e

    .line 4583
    .end local v0    # "e":Ljava/lang/Exception;
    :cond_27
    move/from16 v8, p2

    .line 4595
    :cond_28
    move v12, v1

    move/from16 v21, v2

    .end local v1    # "badApp":Z
    .end local v2    # "didSomething":Z
    .local v12, "badApp":Z
    .local v21, "didSomething":Z
    :goto_1e
    if-nez v12, :cond_2a

    if-eqz v57, :cond_2a

    move-object/from16 v3, v57

    .end local v57    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .local v3, "backupTarget":Lcom/android/server/am/BackupRecord;
    iget-object v0, v3, Lcom/android/server/am/BackupRecord;->app:Lcom/android/server/am/ProcessRecord;

    if-ne v0, v7, :cond_29

    .line 4598
    iget-object v0, v3, Lcom/android/server/am/BackupRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v0, v0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    const/4 v1, 0x5

    invoke-virtual {v9, v0, v1}, Lcom/android/server/am/ActivityManagerService;->notifyPackageUse(Ljava/lang/String;I)V

    .line 4601
    :try_start_2e
    iget-object v2, v3, Lcom/android/server/am/BackupRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v0, v3, Lcom/android/server/am/BackupRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 4602
    invoke-virtual {v9, v0}, Lcom/android/server/am/ActivityManagerService;->compatibilityInfoForPackage(Landroid/content/pm/ApplicationInfo;)Landroid/content/res/CompatibilityInfo;

    move-result-object v0

    iget v4, v3, Lcom/android/server/am/BackupRecord;->backupMode:I

    iget v5, v3, Lcom/android/server/am/BackupRecord;->userId:I

    iget v13, v3, Lcom/android/server/am/BackupRecord;->operationType:I
    :try_end_2e
    .catch Ljava/lang/Exception; {:try_start_2e .. :try_end_2e} :catch_e

    .line 4601
    move/from16 v14, v54

    move-object/from16 v1, p1

    move-object/from16 v22, v3

    .end local v3    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .local v22, "backupTarget":Lcom/android/server/am/BackupRecord;
    move-object v3, v0

    move-object/from16 v68, v6

    .end local v6    # "processName":Ljava/lang/String;
    .local v68, "processName":Ljava/lang/String;
    move v6, v13

    :try_start_2f
    invoke-interface/range {v1 .. v6}, Landroid/app/IApplicationThread;->scheduleCreateBackupAgent(Landroid/content/pm/ApplicationInfo;Landroid/content/res/CompatibilityInfo;III)V
    :try_end_2f
    .catch Ljava/lang/Exception; {:try_start_2f .. :try_end_2f} :catch_d

    .line 4607
    goto :goto_20

    .line 4604
    :catch_d
    move-exception v0

    goto :goto_1f

    .end local v22    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .end local v68    # "processName":Ljava/lang/String;
    .restart local v3    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .restart local v6    # "processName":Ljava/lang/String;
    :catch_e
    move-exception v0

    move-object/from16 v22, v3

    move-object/from16 v68, v6

    move/from16 v14, v54

    .line 4605
    .end local v3    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .end local v6    # "processName":Ljava/lang/String;
    .restart local v0    # "e":Ljava/lang/Exception;
    .restart local v22    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .restart local v68    # "processName":Ljava/lang/String;
    :goto_1f
    const-string v1, "ActivityManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Exception thrown creating backup agent in "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2, v0}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 4606
    const/4 v12, 0x1

    move v0, v12

    goto :goto_21

    .line 4595
    .end local v0    # "e":Ljava/lang/Exception;
    .end local v22    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .end local v68    # "processName":Ljava/lang/String;
    .restart local v3    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .restart local v6    # "processName":Ljava/lang/String;
    :cond_29
    move-object/from16 v22, v3

    move-object/from16 v68, v6

    move/from16 v14, v54

    .end local v3    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .end local v6    # "processName":Ljava/lang/String;
    .restart local v22    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .restart local v68    # "processName":Ljava/lang/String;
    goto :goto_20

    .end local v22    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .end local v68    # "processName":Ljava/lang/String;
    .restart local v6    # "processName":Ljava/lang/String;
    .restart local v57    # "backupTarget":Lcom/android/server/am/BackupRecord;
    :cond_2a
    move-object/from16 v68, v6

    move/from16 v14, v54

    move-object/from16 v22, v57

    .line 4610
    .end local v6    # "processName":Ljava/lang/String;
    .end local v57    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .restart local v22    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .restart local v68    # "processName":Ljava/lang/String;
    :goto_20
    move v0, v12

    .end local v12    # "badApp":Z
    .local v0, "badApp":Z
    :goto_21
    if-eqz v0, :cond_2b

    .line 4611
    const-string v1, "error during init"

    const/4 v6, 0x1

    invoke-virtual {v7, v1, v14, v6}, Lcom/android/server/am/ProcessRecord;->killLocked(Ljava/lang/String;IZ)V

    .line 4613
    const/4 v4, 0x0

    const/4 v5, 0x1

    const/4 v6, 0x0

    move-object/from16 v1, p0

    move-object v2, v7

    move/from16 v3, p2

    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/ActivityManagerService;->handleAppDiedLocked(Lcom/android/server/am/ProcessRecord;IZZZ)V

    .line 4614
    const/4 v1, 0x0

    return v1

    .line 4617
    :cond_2b
    const/4 v6, 0x1

    if-nez v21, :cond_2c

    .line 4618
    const-string/jumbo v1, "updateOomAdj_processBegin"

    invoke-virtual {v9, v7, v1}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;)Z

    .line 4619
    const-string v1, "attachApplicationLocked: after updateOomAdjLocked"

    invoke-virtual {v9, v10, v11, v1}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 4622
    :cond_2c
    const/16 v1, 0xa9

    iget-object v2, v7, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v2, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    iget-object v3, v7, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v13, v3, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    .line 4628
    invoke-virtual {v7}, Lcom/android/server/am/ProcessRecord;->getStartTime()J

    move-result-wide v3

    .line 4629
    invoke-virtual {v7}, Lcom/android/server/am/ProcessRecord;->getStartTime()J

    move-result-wide v16

    sub-long v14, v60, v16

    long-to-int v15, v14

    .line 4630
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v16

    invoke-virtual {v7}, Lcom/android/server/am/ProcessRecord;->getStartTime()J

    move-result-wide v18

    sub-long v5, v16, v18

    long-to-int v5, v5

    .line 4631
    invoke-virtual {v7}, Lcom/android/server/am/ProcessRecord;->getHostingRecord()Lcom/android/server/am/HostingRecord;

    move-result-object v6

    invoke-virtual {v6}, Lcom/android/server/am/HostingRecord;->getType()Ljava/lang/String;

    move-result-object v19

    .line 4632
    invoke-virtual {v7}, Lcom/android/server/am/ProcessRecord;->getHostingRecord()Lcom/android/server/am/HostingRecord;

    move-result-object v6

    invoke-virtual {v6}, Lcom/android/server/am/HostingRecord;->getName()Ljava/lang/String;

    move-result-object v6

    if-eqz v6, :cond_2d

    invoke-virtual {v7}, Lcom/android/server/am/ProcessRecord;->getHostingRecord()Lcom/android/server/am/HostingRecord;

    move-result-object v6

    invoke-virtual {v6}, Lcom/android/server/am/HostingRecord;->getName()Ljava/lang/String;

    move-result-object v6

    goto :goto_22

    :cond_2d
    const-string v6, ""

    :goto_22
    move-object/from16 v20, v6

    .line 4622
    move-wide/from16 v23, v10

    .end local v10    # "startTime":J
    .local v23, "startTime":J
    move v10, v1

    move v11, v2

    move/from16 v12, p2

    const/4 v1, 0x3

    move v14, v1

    move v1, v15

    move-wide v15, v3

    move/from16 v17, v1

    move/from16 v18, v5

    invoke-static/range {v10 .. v20}, Lcom/android/internal/util/FrameworkStatsLog;->write(IIILjava/lang/String;IJIILjava/lang/String;Ljava/lang/String;)V

    .line 4633
    const/4 v1, 0x1

    return v1

    .line 4540
    .end local v0    # "badApp":Z
    .end local v21    # "didSomething":Z
    .end local v22    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .end local v23    # "startTime":J
    .end local v68    # "processName":Ljava/lang/String;
    .local v1, "profilerInfo":Landroid/app/ProfilerInfo;
    .local v2, "autofillOptions":Landroid/content/AutofillOptions;
    .local v3, "contentCaptureOptions":Landroid/content/ContentCaptureOptions;
    .restart local v4    # "now":J
    .restart local v6    # "processName":Ljava/lang/String;
    .restart local v8    # "testMode":I
    .restart local v10    # "startTime":J
    .restart local v13    # "providerList":Landroid/content/pm/ProviderInfoList;
    .restart local v28    # "buildSerial":Ljava/lang/String;
    .restart local v53    # "instr":Lcom/android/server/am/ActiveInstrumentation;
    .restart local v55    # "enableTrackAllocation":Z
    .restart local v57    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .restart local v58    # "fm":Lcom/android/server/graphics/fonts/FontManagerInternal;
    .restart local v59    # "serializedSystemFontMap":Landroid/os/SharedMemory;
    .restart local v65    # "isRestrictedBackupMode":Z
    .restart local v66    # "instr2":Lcom/android/server/am/ActiveInstrumentation;
    .restart local v67    # "appInfo":Landroid/content/pm/ApplicationInfo;
    :catchall_3
    move-exception v0

    move-object/from16 v68, v6

    move-wide/from16 v23, v10

    move/from16 v14, v54

    move-object/from16 v22, v57

    .end local v6    # "processName":Ljava/lang/String;
    .end local v10    # "startTime":J
    .end local v57    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .restart local v22    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .restart local v23    # "startTime":J
    .restart local v68    # "processName":Ljava/lang/String;
    :goto_23
    :try_start_30
    monitor-exit v12
    :try_end_30
    .catchall {:try_start_30 .. :try_end_30} :catchall_4

    .end local v7    # "app":Lcom/android/server/am/ProcessRecord;
    .end local v22    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .end local v23    # "startTime":J
    .end local v52    # "normalMode":Z
    .end local v56    # "providers":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ProviderInfo;>;"
    .end local v68    # "processName":Ljava/lang/String;
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "thread":Landroid/app/IApplicationThread;
    .end local p2    # "pid":I
    .end local p3    # "callingUid":I
    .end local p4    # "startSeq":J
    :try_start_31
    throw v0
    :try_end_31
    .catch Ljava/lang/Exception; {:try_start_31 .. :try_end_31} :catch_14

    .restart local v7    # "app":Lcom/android/server/am/ProcessRecord;
    .restart local v22    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .restart local v23    # "startTime":J
    .restart local v52    # "normalMode":Z
    .restart local v56    # "providers":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ProviderInfo;>;"
    .restart local v68    # "processName":Ljava/lang/String;
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "thread":Landroid/app/IApplicationThread;
    .restart local p2    # "pid":I
    .restart local p3    # "callingUid":I
    .restart local p4    # "startSeq":J
    :catchall_4
    move-exception v0

    goto :goto_23

    .line 4541
    .end local v1    # "profilerInfo":Landroid/app/ProfilerInfo;
    .end local v2    # "autofillOptions":Landroid/content/AutofillOptions;
    .end local v3    # "contentCaptureOptions":Landroid/content/ContentCaptureOptions;
    .end local v4    # "now":J
    .end local v8    # "testMode":I
    .end local v13    # "providerList":Landroid/content/pm/ProviderInfoList;
    .end local v22    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .end local v23    # "startTime":J
    .end local v28    # "buildSerial":Ljava/lang/String;
    .end local v53    # "instr":Lcom/android/server/am/ActiveInstrumentation;
    .end local v55    # "enableTrackAllocation":Z
    .end local v58    # "fm":Lcom/android/server/graphics/fonts/FontManagerInternal;
    .end local v59    # "serializedSystemFontMap":Landroid/os/SharedMemory;
    .end local v60    # "bindApplicationTimeMillis":J
    .end local v65    # "isRestrictedBackupMode":Z
    .end local v66    # "instr2":Lcom/android/server/am/ActiveInstrumentation;
    .end local v67    # "appInfo":Landroid/content/pm/ApplicationInfo;
    .end local v68    # "processName":Ljava/lang/String;
    .restart local v6    # "processName":Ljava/lang/String;
    .restart local v10    # "startTime":J
    .restart local v57    # "backupTarget":Lcom/android/server/am/BackupRecord;
    :catch_f
    move-exception v0

    move-object/from16 v68, v6

    move-wide/from16 v23, v10

    move/from16 v14, v54

    move-object/from16 v22, v57

    .end local v6    # "processName":Ljava/lang/String;
    .end local v10    # "startTime":J
    .end local v57    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .restart local v22    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .restart local v23    # "startTime":J
    .restart local v68    # "processName":Ljava/lang/String;
    goto/16 :goto_27

    .line 4533
    .end local v22    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .end local v23    # "startTime":J
    .end local v68    # "processName":Ljava/lang/String;
    .restart local v1    # "profilerInfo":Landroid/app/ProfilerInfo;
    .restart local v2    # "autofillOptions":Landroid/content/AutofillOptions;
    .restart local v3    # "contentCaptureOptions":Landroid/content/ContentCaptureOptions;
    .restart local v6    # "processName":Ljava/lang/String;
    .restart local v8    # "testMode":I
    .restart local v10    # "startTime":J
    .restart local v13    # "providerList":Landroid/content/pm/ProviderInfoList;
    .restart local v28    # "buildSerial":Ljava/lang/String;
    .restart local v53    # "instr":Lcom/android/server/am/ActiveInstrumentation;
    .restart local v55    # "enableTrackAllocation":Z
    .restart local v57    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .restart local v58    # "fm":Lcom/android/server/graphics/fonts/FontManagerInternal;
    .restart local v59    # "serializedSystemFontMap":Landroid/os/SharedMemory;
    .restart local v60    # "bindApplicationTimeMillis":J
    .restart local v65    # "isRestrictedBackupMode":Z
    .restart local v66    # "instr2":Lcom/android/server/am/ActiveInstrumentation;
    .restart local v67    # "appInfo":Landroid/content/pm/ApplicationInfo;
    :catchall_5
    move-exception v0

    move-object/from16 v68, v6

    move-wide/from16 v23, v10

    move/from16 v14, v54

    move-object/from16 v22, v57

    .end local v6    # "processName":Ljava/lang/String;
    .end local v10    # "startTime":J
    .end local v57    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .restart local v22    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .restart local v23    # "startTime":J
    .restart local v68    # "processName":Ljava/lang/String;
    goto :goto_24

    .end local v22    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .end local v23    # "startTime":J
    .end local v68    # "processName":Ljava/lang/String;
    .restart local v6    # "processName":Ljava/lang/String;
    .restart local v57    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .restart local v62    # "startTime":J
    :catchall_6
    move-exception v0

    move-object/from16 v68, v6

    move/from16 v14, v54

    move-object/from16 v22, v57

    move-wide/from16 v23, v62

    .end local v6    # "processName":Ljava/lang/String;
    .end local v57    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .end local v62    # "startTime":J
    .restart local v22    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .restart local v23    # "startTime":J
    .restart local v68    # "processName":Ljava/lang/String;
    :goto_24
    :try_start_32
    monitor-exit v4
    :try_end_32
    .catchall {:try_start_32 .. :try_end_32} :catchall_7

    :try_start_33
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .end local v7    # "app":Lcom/android/server/am/ProcessRecord;
    .end local v22    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .end local v23    # "startTime":J
    .end local v52    # "normalMode":Z
    .end local v56    # "providers":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ProviderInfo;>;"
    .end local v68    # "processName":Ljava/lang/String;
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "thread":Landroid/app/IApplicationThread;
    .end local p2    # "pid":I
    .end local p3    # "callingUid":I
    .end local p4    # "startSeq":J
    throw v0
    :try_end_33
    .catch Ljava/lang/Exception; {:try_start_33 .. :try_end_33} :catch_14

    .restart local v7    # "app":Lcom/android/server/am/ProcessRecord;
    .restart local v22    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .restart local v23    # "startTime":J
    .restart local v52    # "normalMode":Z
    .restart local v56    # "providers":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ProviderInfo;>;"
    .restart local v68    # "processName":Ljava/lang/String;
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "thread":Landroid/app/IApplicationThread;
    .restart local p2    # "pid":I
    .restart local p3    # "callingUid":I
    .restart local p4    # "startSeq":J
    :catchall_7
    move-exception v0

    goto :goto_24

    .line 4541
    .end local v1    # "profilerInfo":Landroid/app/ProfilerInfo;
    .end local v2    # "autofillOptions":Landroid/content/AutofillOptions;
    .end local v3    # "contentCaptureOptions":Landroid/content/ContentCaptureOptions;
    .end local v8    # "testMode":I
    .end local v13    # "providerList":Landroid/content/pm/ProviderInfoList;
    .end local v22    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .end local v23    # "startTime":J
    .end local v28    # "buildSerial":Ljava/lang/String;
    .end local v53    # "instr":Lcom/android/server/am/ActiveInstrumentation;
    .end local v55    # "enableTrackAllocation":Z
    .end local v58    # "fm":Lcom/android/server/graphics/fonts/FontManagerInternal;
    .end local v59    # "serializedSystemFontMap":Landroid/os/SharedMemory;
    .end local v60    # "bindApplicationTimeMillis":J
    .end local v65    # "isRestrictedBackupMode":Z
    .end local v66    # "instr2":Lcom/android/server/am/ActiveInstrumentation;
    .end local v67    # "appInfo":Landroid/content/pm/ApplicationInfo;
    .end local v68    # "processName":Ljava/lang/String;
    .restart local v6    # "processName":Ljava/lang/String;
    .restart local v57    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .restart local v62    # "startTime":J
    :catch_10
    move-exception v0

    move-object/from16 v68, v6

    move/from16 v14, v54

    move-object/from16 v22, v57

    move-wide/from16 v23, v62

    .end local v6    # "processName":Ljava/lang/String;
    .end local v57    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .end local v62    # "startTime":J
    .restart local v22    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .restart local v23    # "startTime":J
    .restart local v68    # "processName":Ljava/lang/String;
    goto :goto_27

    .end local v22    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .end local v23    # "startTime":J
    .end local v68    # "processName":Ljava/lang/String;
    .local v4, "startTime":J
    .restart local v6    # "processName":Ljava/lang/String;
    .restart local v57    # "backupTarget":Lcom/android/server/am/BackupRecord;
    :catch_11
    move-exception v0

    move-wide/from16 v23, v4

    move-object/from16 v68, v6

    move/from16 v14, v54

    move-object/from16 v22, v57

    goto :goto_25

    :catch_12
    move-exception v0

    move-wide/from16 v23, v4

    move-object/from16 v68, v6

    move-object/from16 v22, v57

    const/4 v14, 0x7

    .end local v4    # "startTime":J
    .end local v6    # "processName":Ljava/lang/String;
    .end local v57    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .restart local v22    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .restart local v23    # "startTime":J
    .restart local v68    # "processName":Ljava/lang/String;
    :goto_25
    goto :goto_27

    .end local v22    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .end local v23    # "startTime":J
    .end local v68    # "processName":Ljava/lang/String;
    .local v3, "backupTarget":Lcom/android/server/am/BackupRecord;
    .restart local v4    # "startTime":J
    .restart local v6    # "processName":Ljava/lang/String;
    :catch_13
    move-exception v0

    move-object/from16 v22, v3

    move-wide/from16 v23, v4

    move-object/from16 v68, v6

    move v14, v13

    goto :goto_27

    .line 4430
    .restart local v8    # "testMode":I
    .restart local v55    # "enableTrackAllocation":Z
    :catchall_8
    move-exception v0

    move-object/from16 v22, v3

    move-wide/from16 v23, v4

    move-object/from16 v68, v6

    const/4 v14, 0x7

    move/from16 v16, v55

    .end local v3    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .end local v4    # "startTime":J
    .end local v6    # "processName":Ljava/lang/String;
    .restart local v22    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .restart local v23    # "startTime":J
    .restart local v68    # "processName":Ljava/lang/String;
    goto :goto_26

    .end local v22    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .end local v23    # "startTime":J
    .end local v55    # "enableTrackAllocation":Z
    .end local v68    # "processName":Ljava/lang/String;
    .restart local v3    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .restart local v4    # "startTime":J
    .restart local v6    # "processName":Ljava/lang/String;
    .local v16, "enableTrackAllocation":Z
    :catchall_9
    move-exception v0

    move-object/from16 v22, v3

    move-wide/from16 v23, v4

    move-object/from16 v68, v6

    const/4 v14, 0x7

    .end local v3    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .end local v4    # "startTime":J
    .end local v6    # "processName":Ljava/lang/String;
    .restart local v22    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .restart local v23    # "startTime":J
    .restart local v68    # "processName":Ljava/lang/String;
    :goto_26
    :try_start_34
    monitor-exit v1
    :try_end_34
    .catchall {:try_start_34 .. :try_end_34} :catchall_a

    :try_start_35
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .end local v7    # "app":Lcom/android/server/am/ProcessRecord;
    .end local v22    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .end local v23    # "startTime":J
    .end local v52    # "normalMode":Z
    .end local v56    # "providers":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ProviderInfo;>;"
    .end local v68    # "processName":Ljava/lang/String;
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "thread":Landroid/app/IApplicationThread;
    .end local p2    # "pid":I
    .end local p3    # "callingUid":I
    .end local p4    # "startSeq":J
    throw v0
    :try_end_35
    .catch Ljava/lang/Exception; {:try_start_35 .. :try_end_35} :catch_14

    .line 4541
    .end local v8    # "testMode":I
    .end local v16    # "enableTrackAllocation":Z
    .restart local v7    # "app":Lcom/android/server/am/ProcessRecord;
    .restart local v22    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .restart local v23    # "startTime":J
    .restart local v52    # "normalMode":Z
    .restart local v56    # "providers":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ProviderInfo;>;"
    .restart local v68    # "processName":Ljava/lang/String;
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "thread":Landroid/app/IApplicationThread;
    .restart local p2    # "pid":I
    .restart local p3    # "callingUid":I
    .restart local p4    # "startSeq":J
    :catch_14
    move-exception v0

    goto :goto_27

    .line 4430
    .restart local v8    # "testMode":I
    .restart local v16    # "enableTrackAllocation":Z
    :catchall_a
    move-exception v0

    goto :goto_26

    .line 4541
    .end local v8    # "testMode":I
    .end local v16    # "enableTrackAllocation":Z
    .end local v22    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .end local v23    # "startTime":J
    .end local v68    # "processName":Ljava/lang/String;
    .restart local v3    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .restart local v4    # "startTime":J
    .restart local v6    # "processName":Ljava/lang/String;
    :catch_15
    move-exception v0

    move-object/from16 v22, v3

    move-wide/from16 v23, v4

    move-object/from16 v68, v6

    const/4 v14, 0x7

    .line 4543
    .end local v3    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .end local v4    # "startTime":J
    .end local v6    # "processName":Ljava/lang/String;
    .local v0, "e":Ljava/lang/Exception;
    .restart local v22    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .restart local v23    # "startTime":J
    .restart local v68    # "processName":Ljava/lang/String;
    :goto_27
    const-string v1, "ActivityManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Exception thrown during bind of "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2, v0}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 4544
    iget-object v1, v9, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    invoke-virtual {v7, v1}, Lcom/android/server/am/ProcessRecord;->resetPackageList(Lcom/android/server/am/ProcessStatsService;)V

    .line 4545
    invoke-virtual {v7}, Lcom/android/server/am/ProcessRecord;->unlinkDeathRecipient()V

    .line 4546
    const-string v1, "error during bind"

    const/4 v2, 0x1

    invoke-virtual {v7, v1, v14, v2}, Lcom/android/server/am/ProcessRecord;->killLocked(Ljava/lang/String;IZ)V

    .line 4548
    const/4 v4, 0x0

    const/4 v5, 0x1

    const/4 v6, 0x0

    move-object/from16 v1, p0

    move-object v2, v7

    move/from16 v3, p2

    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/ActivityManagerService;->handleAppDiedLocked(Lcom/android/server/am/ProcessRecord;IZZZ)V

    .line 4549
    const/4 v1, 0x0

    return v1

    .line 4385
    .end local v0    # "e":Ljava/lang/Exception;
    .end local v22    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .end local v23    # "startTime":J
    .end local v52    # "normalMode":Z
    .end local v56    # "providers":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ProviderInfo;>;"
    .end local v68    # "processName":Ljava/lang/String;
    .restart local v6    # "processName":Ljava/lang/String;
    .restart local v54    # "startTime":J
    :catchall_b
    move-exception v0

    move-object/from16 v68, v6

    move-wide/from16 v23, v54

    .end local v6    # "processName":Ljava/lang/String;
    .end local v54    # "startTime":J
    .restart local v23    # "startTime":J
    .restart local v68    # "processName":Ljava/lang/String;
    :goto_28
    :try_start_36
    monitor-exit v1
    :try_end_36
    .catchall {:try_start_36 .. :try_end_36} :catchall_c

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v0

    :catchall_c
    move-exception v0

    goto :goto_28

    .line 4359
    .end local v23    # "startTime":J
    .end local v68    # "processName":Ljava/lang/String;
    .restart local v6    # "processName":Ljava/lang/String;
    .restart local v54    # "startTime":J
    :catch_16
    move-exception v0

    move-object/from16 v68, v6

    move-wide/from16 v23, v54

    .line 4360
    .end local v6    # "processName":Ljava/lang/String;
    .end local v54    # "startTime":J
    .local v0, "e":Landroid/os/RemoteException;
    .restart local v23    # "startTime":J
    .restart local v68    # "processName":Ljava/lang/String;
    iget-object v1, v9, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    invoke-virtual {v7, v1}, Lcom/android/server/am/ProcessRecord;->resetPackageList(Lcom/android/server/am/ProcessStatsService;)V

    .line 4361
    iget-object v1, v9, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    new-instance v2, Lcom/android/server/am/HostingRecord;

    const-string/jumbo v3, "link fail"

    move-object/from16 v4, v68

    .end local v68    # "processName":Ljava/lang/String;
    .local v4, "processName":Ljava/lang/String;
    invoke-direct {v2, v3, v4}, Lcom/android/server/am/HostingRecord;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    const/4 v3, 0x0

    invoke-virtual {v1, v7, v2, v3}, Lcom/android/server/am/ProcessList;->startProcessLocked(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/HostingRecord;I)V

    .line 4364
    return v3
.end method

.method static boostPriorityForLockedSection()V
    .locals 1

    .line 716
    sget-object v0, Lcom/android/server/am/ActivityManagerService;->sThreadPriorityBooster:Lcom/android/server/ThreadPriorityBooster;

    invoke-virtual {v0}, Lcom/android/server/ThreadPriorityBooster;->boost()V

    .line 717
    return-void
.end method

.method static boostPriorityForProcLockedSection()V
    .locals 1

    .line 728
    sget-object v0, Lcom/android/server/am/ActivityManagerService;->sProcThreadPriorityBooster:Lcom/android/server/ThreadPriorityBooster;

    invoke-virtual {v0}, Lcom/android/server/ThreadPriorityBooster;->boost()V

    .line 732
    return-void
.end method

.method private checkBroadcastFromSystem(Landroid/content/Intent;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;IZLjava/util/List;)V
    .locals 6
    .param p1, "intent"    # Landroid/content/Intent;
    .param p2, "callerApp"    # Lcom/android/server/am/ProcessRecord;
    .param p3, "callerPackage"    # Ljava/lang/String;
    .param p4, "callingUid"    # I
    .param p5, "isProtectedBroadcast"    # Z
    .param p6, "receivers"    # Ljava/util/List;

    .line 12666
    invoke-virtual {p1}, Landroid/content/Intent;->getFlags()I

    move-result v0

    const/high16 v1, 0x400000

    and-int/2addr v0, v1

    if-eqz v0, :cond_0

    .line 12668
    return-void

    .line 12671
    :cond_0
    invoke-virtual {p1}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v0

    .line 12672
    .local v0, "action":Ljava/lang/String;
    if-nez p5, :cond_b

    .line 12673
    const-string v1, "android.intent.action.CLOSE_SYSTEM_DIALOGS"

    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_b

    .line 12674
    const-string v1, "com.android.intent.action.DISMISS_KEYBOARD_SHORTCUTS"

    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_b

    .line 12675
    const-string v1, "android.intent.action.MEDIA_BUTTON"

    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_b

    .line 12676
    const-string v1, "android.intent.action.MEDIA_SCANNER_SCAN_FILE"

    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_b

    .line 12677
    const-string v1, "com.android.intent.action.SHOW_KEYBOARD_SHORTCUTS"

    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_b

    .line 12678
    const-string v1, "android.intent.action.MASTER_CLEAR"

    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_b

    .line 12679
    const-string v1, "android.intent.action.FACTORY_RESET"

    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_b

    .line 12680
    const-string v1, "android.appwidget.action.APPWIDGET_CONFIGURE"

    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_b

    .line 12681
    const-string v1, "android.appwidget.action.APPWIDGET_UPDATE"

    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_b

    .line 12682
    const-string v1, "com.android.omadm.service.CONFIGURATION_UPDATE"

    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_b

    .line 12683
    const-string v1, "android.text.style.SUGGESTION_PICKED"

    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_b

    .line 12684
    const-string v1, "android.media.action.OPEN_AUDIO_EFFECT_CONTROL_SESSION"

    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_b

    .line 12685
    const-string v1, "android.media.action.CLOSE_AUDIO_EFFECT_CONTROL_SESSION"

    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_1

    goto/16 :goto_5

    .line 12696
    :cond_1
    invoke-virtual {p1}, Landroid/content/Intent;->getPackage()Ljava/lang/String;

    move-result-object v1

    if-nez v1, :cond_2

    invoke-virtual {p1}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v1

    if-eqz v1, :cond_8

    .line 12697
    :cond_2
    if-eqz p6, :cond_a

    invoke-interface {p6}, Ljava/util/List;->size()I

    move-result v1

    if-nez v1, :cond_3

    goto/16 :goto_4

    .line 12706
    :cond_3
    const/4 v1, 0x1

    .line 12707
    .local v1, "allProtected":Z
    invoke-interface {p6}, Ljava/util/List;->size()I

    move-result v2

    add-int/lit8 v2, v2, -0x1

    .local v2, "i":I
    :goto_0
    if-ltz v2, :cond_7

    .line 12708
    invoke-interface {p6, v2}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v3

    .line 12709
    .local v3, "target":Ljava/lang/Object;
    instance-of v4, v3, Landroid/content/pm/ResolveInfo;

    if-eqz v4, :cond_5

    .line 12710
    move-object v4, v3

    check-cast v4, Landroid/content/pm/ResolveInfo;

    .line 12711
    .local v4, "ri":Landroid/content/pm/ResolveInfo;
    iget-object v5, v4, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-boolean v5, v5, Landroid/content/pm/ActivityInfo;->exported:Z

    if-eqz v5, :cond_4

    iget-object v5, v4, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-object v5, v5, Landroid/content/pm/ActivityInfo;->permission:Ljava/lang/String;

    if-nez v5, :cond_4

    .line 12712
    const/4 v1, 0x0

    .line 12713
    goto :goto_2

    .line 12715
    .end local v4    # "ri":Landroid/content/pm/ResolveInfo;
    :cond_4
    goto :goto_1

    .line 12716
    :cond_5
    move-object v4, v3

    check-cast v4, Lcom/android/server/am/BroadcastFilter;

    .line 12717
    .local v4, "bf":Lcom/android/server/am/BroadcastFilter;
    iget-object v5, v4, Lcom/android/server/am/BroadcastFilter;->requiredPermission:Ljava/lang/String;

    if-nez v5, :cond_6

    .line 12718
    const/4 v1, 0x0

    .line 12719
    goto :goto_2

    .line 12707
    .end local v3    # "target":Ljava/lang/Object;
    .end local v4    # "bf":Lcom/android/server/am/BroadcastFilter;
    :cond_6
    :goto_1
    add-int/lit8 v2, v2, -0x1

    goto :goto_0

    .line 12723
    .end local v2    # "i":I
    :cond_7
    :goto_2
    if-eqz v1, :cond_8

    .line 12725
    return-void

    .line 12732
    .end local v1    # "allProtected":Z
    :cond_8
    const-string v1, " pkg "

    const-string v2, "Sending non-protected broadcast "

    const-string v3, "ActivityManager"

    if-eqz p2, :cond_9

    .line 12733
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, " from system "

    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 12734
    invoke-virtual {p2}, Lcom/android/server/am/ProcessRecord;->toShortString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    new-instance v2, Ljava/lang/Throwable;

    invoke-direct {v2}, Ljava/lang/Throwable;-><init>()V

    .line 12733
    invoke-static {v3, v1, v2}, Landroid/util/Log;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    goto :goto_3

    .line 12737
    :cond_9
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, " from system uid "

    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 12738
    invoke-static {p4}, Landroid/os/UserHandle;->formatUid(I)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    new-instance v2, Ljava/lang/Throwable;

    invoke-direct {v2}, Ljava/lang/Throwable;-><init>()V

    .line 12737
    invoke-static {v3, v1, v2}, Landroid/util/Log;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 12742
    :goto_3
    return-void

    .line 12704
    :cond_a
    :goto_4
    return-void

    .line 12688
    :cond_b
    :goto_5
    return-void
.end method

.method public static checkComponentPermission(Ljava/lang/String;IIIZ)I
    .locals 3
    .param p0, "permission"    # Ljava/lang/String;
    .param p1, "pid"    # I
    .param p2, "uid"    # I
    .param p3, "owningUid"    # I
    .param p4, "exported"    # Z

    .line 5389
    sget v0, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    if-ne p1, v0, :cond_0

    .line 5390
    const/4 v0, 0x0

    return v0

    .line 5398
    :cond_0
    if-eqz p0, :cond_2

    .line 5399
    sget-object v0, Lcom/android/server/am/ActivityManagerService;->sActiveProcessInfoSelfLocked:Landroid/util/SparseArray;

    monitor-enter v0

    .line 5400
    :try_start_0
    invoke-virtual {v0, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/content/pm/ProcessInfo;

    .line 5401
    .local v1, "procInfo":Landroid/content/pm/ProcessInfo;
    if-eqz v1, :cond_1

    iget-object v2, v1, Landroid/content/pm/ProcessInfo;->deniedPermissions:Landroid/util/ArraySet;

    if-eqz v2, :cond_1

    iget-object v2, v1, Landroid/content/pm/ProcessInfo;->deniedPermissions:Landroid/util/ArraySet;

    .line 5402
    invoke-virtual {v2, p0}, Landroid/util/ArraySet;->contains(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_1

    .line 5403
    const/4 v2, -0x1

    monitor-exit v0

    return v2

    .line 5405
    .end local v1    # "procInfo":Landroid/content/pm/ProcessInfo;
    :cond_1
    monitor-exit v0

    goto :goto_0

    :catchall_0
    move-exception v1

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1

    .line 5407
    :cond_2
    :goto_0
    invoke-static {p0, p2, p3, p4}, Landroid/app/ActivityManager;->checkComponentPermission(Ljava/lang/String;IIZ)I

    move-result v0

    return v0
.end method

.method private checkExcessivePowerUsage()V
    .locals 15

    .line 14237
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateCpuStatsNow()V

    .line 14239
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 14240
    iget-wide v1, p0, Lcom/android/server/am/ActivityManagerService;->mLastPowerCheckUptime:J

    const-wide/16 v3, 0x0

    cmp-long v1, v1, v3

    const/4 v2, 0x0

    if-eqz v1, :cond_0

    const/4 v1, 0x1

    move v9, v1

    goto :goto_0

    :cond_0
    move v9, v2

    .line 14241
    .local v9, "doCpuKills":Z
    :goto_0
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v3

    move-wide v10, v3

    .line 14242
    .local v10, "curUptime":J
    iget-wide v3, p0, Lcom/android/server/am/ActivityManagerService;->mLastPowerCheckUptime:J

    sub-long v12, v10, v3

    .line 14243
    .local v12, "uptimeSince":J
    iput-wide v10, p0, Lcom/android/server/am/ActivityManagerService;->mLastPowerCheckUptime:J

    .line 14244
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    new-instance v14, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda26;

    move-object v3, v14

    move-object v4, p0

    move-wide v5, v10

    move-wide v7, v12

    invoke-direct/range {v3 .. v9}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda26;-><init>(Lcom/android/server/am/ActivityManagerService;JJZ)V

    invoke-virtual {v1, v2, v14}, Lcom/android/server/am/ProcessList;->forEachLruProcessesLOSP(ZLjava/util/function/Consumer;)V

    .line 14269
    .end local v9    # "doCpuKills":Z
    .end local v10    # "curUptime":J
    .end local v12    # "uptimeSince":J
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 14270
    return-void

    .line 14269
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v1
.end method

.method private checkExcessivePowerUsageLPr(JZJLjava/lang/String;Ljava/lang/String;ILcom/android/server/am/ProcessRecord;)Z
    .locals 10
    .param p1, "uptimeSince"    # J
    .param p3, "doCpuKills"    # Z
    .param p4, "cputimeUsed"    # J
    .param p6, "processName"    # Ljava/lang/String;
    .param p7, "description"    # Ljava/lang/String;
    .param p8, "cpuLimit"    # I
    .param p9, "app"    # Lcom/android/server/am/ProcessRecord;

    .line 14344
    move-object/from16 v7, p9

    if-eqz p3, :cond_1

    const-wide/16 v0, 0x0

    cmp-long v0, p1, v0

    if-lez v0, :cond_1

    .line 14345
    const-wide/16 v0, 0x64

    mul-long/2addr v0, p4

    div-long/2addr v0, p1

    move/from16 v8, p8

    int-to-long v2, v8

    cmp-long v0, v0, v2

    if-ltz v0, :cond_0

    .line 14346
    move-object v9, p0

    iget-object v0, v9, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    iget-object v1, v7, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v1, v1, Landroid/content/pm/ApplicationInfo;->uid:I

    iget-object v2, v7, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-wide v3, p1

    move-wide v5, p4

    invoke-virtual/range {v0 .. v6}, Lcom/android/server/am/BatteryStatsService;->reportExcessiveCpu(ILjava/lang/String;JJ)V

    .line 14348
    invoke-virtual/range {p9 .. p9}, Lcom/android/server/am/ProcessRecord;->getPkgList()Lcom/android/server/am/PackageList;

    move-result-object v0

    new-instance v1, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda33;

    move-object/from16 v2, p6

    invoke-direct {v1, v7, v2}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda33;-><init>(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;)V

    invoke-virtual {v0, v1}, Lcom/android/server/am/PackageList;->forEachPackageProcessStats(Ljava/util/function/Consumer;)V

    .line 14357
    const/4 v0, 0x1

    return v0

    .line 14345
    :cond_0
    move-object v9, p0

    move-object/from16 v2, p6

    goto :goto_0

    .line 14344
    :cond_1
    move-object v9, p0

    move-object/from16 v2, p6

    move/from16 v8, p8

    .line 14360
    :goto_0
    const/4 v0, 0x0

    return v0
.end method

.method private cleanupDisabledPackageComponentsLocked(Ljava/lang/String;I[Ljava/lang/String;)V
    .locals 17
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "userId"    # I
    .param p3, "changedClasses"    # [Ljava/lang/String;

    .line 4019
    move-object/from16 v1, p0

    move-object/from16 v9, p1

    move/from16 v10, p2

    move-object/from16 v11, p3

    const/4 v0, 0x0

    .line 4020
    .local v0, "disabledClasses":Ljava/util/Set;, "Ljava/util/Set<Ljava/lang/String;>;"
    const/4 v2, 0x0

    .line 4021
    .local v2, "packageDisabled":Z
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v12

    .line 4023
    .local v12, "pm":Landroid/content/pm/IPackageManager;
    if-nez v11, :cond_0

    .line 4025
    return-void

    .line 4029
    :cond_0
    const/4 v3, 0x0

    .line 4030
    .local v3, "enabled":I
    array-length v4, v11

    const/4 v13, 0x1

    sub-int/2addr v4, v13

    move v5, v4

    move v4, v3

    move v3, v2

    move-object v2, v0

    .end local v0    # "disabledClasses":Ljava/util/Set;, "Ljava/util/Set<Ljava/lang/String;>;"
    .local v2, "disabledClasses":Ljava/util/Set;, "Ljava/util/Set<Ljava/lang/String;>;"
    .local v3, "packageDisabled":Z
    .local v4, "enabled":I
    .local v5, "i":I
    :goto_0
    if-ltz v5, :cond_8

    .line 4031
    aget-object v6, v11, v5

    .line 4033
    .local v6, "changedClass":Ljava/lang/String;
    invoke-virtual {v6, v9}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    const/4 v7, 0x0

    const/4 v8, -0x1

    if-eqz v0, :cond_3

    .line 4036
    nop

    .line 4037
    if-eq v10, v8, :cond_1

    move v0, v10

    goto :goto_1

    :cond_1
    move v0, v7

    .line 4036
    :goto_1
    :try_start_0
    invoke-interface {v12, v9, v0}, Landroid/content/pm/IPackageManager;->getApplicationEnabledSetting(Ljava/lang/String;I)I

    move-result v0
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    move v4, v0

    .line 4042
    nop

    .line 4043
    if-eq v4, v13, :cond_2

    if-eqz v4, :cond_2

    move v7, v13

    :cond_2
    move v3, v7

    .line 4045
    if-eqz v3, :cond_7

    .line 4048
    const/4 v2, 0x0

    .line 4049
    move-object v0, v2

    move v14, v3

    move v15, v4

    goto :goto_3

    .line 4038
    :catch_0
    move-exception v0

    move-object v7, v0

    move-object v0, v7

    .line 4041
    .local v0, "e":Ljava/lang/Exception;
    return-void

    .line 4053
    .end local v0    # "e":Ljava/lang/Exception;
    :cond_3
    :try_start_1
    new-instance v0, Landroid/content/ComponentName;

    invoke-direct {v0, v9, v6}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .line 4055
    if-eq v10, v8, :cond_4

    move v7, v10

    .line 4053
    :cond_4
    invoke-interface {v12, v0, v7}, Landroid/content/pm/IPackageManager;->getComponentEnabledSetting(Landroid/content/ComponentName;I)I

    move-result v0
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_1

    .line 4059
    .end local v4    # "enabled":I
    .local v0, "enabled":I
    nop

    .line 4060
    if-eq v0, v13, :cond_6

    if-eqz v0, :cond_6

    .line 4062
    if-nez v2, :cond_5

    .line 4063
    new-instance v4, Landroid/util/ArraySet;

    array-length v7, v11

    invoke-direct {v4, v7}, Landroid/util/ArraySet;-><init>(I)V

    move-object v2, v4

    .line 4065
    :cond_5
    invoke-interface {v2, v6}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    move v4, v0

    goto :goto_2

    .line 4030
    .end local v6    # "changedClass":Ljava/lang/String;
    :cond_6
    move v4, v0

    .end local v0    # "enabled":I
    .restart local v4    # "enabled":I
    :cond_7
    :goto_2
    add-int/lit8 v5, v5, -0x1

    goto :goto_0

    .line 4056
    .restart local v6    # "changedClass":Ljava/lang/String;
    :catch_1
    move-exception v0

    .line 4058
    .local v0, "e":Ljava/lang/Exception;
    return-void

    .line 4030
    .end local v0    # "e":Ljava/lang/Exception;
    .end local v6    # "changedClass":Ljava/lang/String;
    :cond_8
    move-object v0, v2

    move v14, v3

    move v15, v4

    .line 4070
    .end local v2    # "disabledClasses":Ljava/util/Set;, "Ljava/util/Set<Ljava/lang/String;>;"
    .end local v3    # "packageDisabled":Z
    .end local v4    # "enabled":I
    .end local v5    # "i":I
    .local v0, "disabledClasses":Ljava/util/Set;, "Ljava/util/Set<Ljava/lang/String;>;"
    .local v14, "packageDisabled":Z
    .local v15, "enabled":I
    :goto_3
    if-nez v14, :cond_9

    if-nez v0, :cond_9

    .line 4072
    return-void

    .line 4075
    :cond_9
    iget-object v2, v1, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    iget-boolean v3, v1, Lcom/android/server/am/ActivityManagerService;->mBooted:Z

    invoke-virtual {v2, v9, v0, v10, v3}, Lcom/android/server/wm/ActivityTaskManagerInternal;->cleanupDisabledPackageComponents(Ljava/lang/String;Ljava/util/Set;IZ)V

    .line 4079
    iget-object v2, v1, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    const/4 v6, 0x0

    const/4 v7, 0x1

    move-object/from16 v3, p1

    move-object v4, v0

    move/from16 v5, p2

    invoke-virtual/range {v2 .. v7}, Lcom/android/server/am/ActiveServices;->bringDownDisabledPackageServicesLocked(Ljava/lang/String;Ljava/util/Set;IZZ)Z

    .line 4083
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    move-object v8, v2

    .line 4084
    .local v8, "providers":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ContentProviderRecord;>;"
    iget-object v2, v1, Lcom/android/server/am/ActivityManagerService;->mCpHelper:Lcom/android/server/am/ContentProviderHelper;

    invoke-virtual {v2}, Lcom/android/server/am/ContentProviderHelper;->getProviderMap()Lcom/android/server/am/ProviderMap;

    move-result-object v2

    const/4 v5, 0x1

    move/from16 v7, p2

    move-object/from16 v16, v8

    .end local v8    # "providers":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ContentProviderRecord;>;"
    .local v16, "providers":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ContentProviderRecord;>;"
    invoke-virtual/range {v2 .. v8}, Lcom/android/server/am/ProviderMap;->collectPackageProvidersLocked(Ljava/lang/String;Ljava/util/Set;ZZILjava/util/ArrayList;)Z

    .line 4086
    invoke-virtual/range {v16 .. v16}, Ljava/util/ArrayList;->size()I

    move-result v2

    sub-int/2addr v2, v13

    .local v2, "i":I
    :goto_4
    if-ltz v2, :cond_a

    .line 4087
    iget-object v3, v1, Lcom/android/server/am/ActivityManagerService;->mCpHelper:Lcom/android/server/am/ContentProviderHelper;

    const/4 v4, 0x0

    move-object/from16 v5, v16

    .end local v16    # "providers":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ContentProviderRecord;>;"
    .local v5, "providers":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ContentProviderRecord;>;"
    invoke-virtual {v5, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/am/ContentProviderRecord;

    invoke-virtual {v3, v4, v6, v13}, Lcom/android/server/am/ContentProviderHelper;->removeDyingProviderLocked(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ContentProviderRecord;Z)Z

    .line 4086
    add-int/lit8 v2, v2, -0x1

    goto :goto_4

    .end local v5    # "providers":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ContentProviderRecord;>;"
    .restart local v16    # "providers":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ContentProviderRecord;>;"
    :cond_a
    move-object/from16 v5, v16

    .line 4091
    .end local v2    # "i":I
    .end local v16    # "providers":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ContentProviderRecord;>;"
    .restart local v5    # "providers":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ContentProviderRecord;>;"
    iget-object v2, v1, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    array-length v2, v2

    sub-int/2addr v2, v13

    .restart local v2    # "i":I
    :goto_5
    if-ltz v2, :cond_b

    .line 4092
    iget-object v3, v1, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    aget-object v3, v3, v2

    invoke-virtual {v3, v9, v0, v10, v13}, Lcom/android/server/am/BroadcastQueue;->cleanupDisabledPackageReceiversLocked(Ljava/lang/String;Ljava/util/Set;IZ)Z

    .line 4091
    add-int/lit8 v2, v2, -0x1

    goto :goto_5

    .line 4096
    .end local v2    # "i":I
    :cond_b
    return-void
.end method

.method private clearPendingBackup(I)V
    .locals 1
    .param p1, "userId"    # I

    .line 12165
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 12166
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTargets:Landroid/util/SparseArray;

    invoke-virtual {v0, p1}, Landroid/util/SparseArray;->delete(I)V

    .line 12167
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 12169
    const-class v0, Lcom/android/server/job/JobSchedulerInternal;

    invoke-static {v0}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/job/JobSchedulerInternal;

    .line 12170
    .local v0, "js":Lcom/android/server/job/JobSchedulerInternal;
    invoke-interface {v0}, Lcom/android/server/job/JobSchedulerInternal;->clearAllBackingUpUids()V

    .line 12171
    return-void

    .line 12167
    .end local v0    # "js":Lcom/android/server/job/JobSchedulerInternal;
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method private collectReceiverComponents(Landroid/content/Intent;Ljava/lang/String;I[I[I)Ljava/util/List;
    .locals 19
    .param p1, "intent"    # Landroid/content/Intent;
    .param p2, "resolvedType"    # Ljava/lang/String;
    .param p3, "callingUid"    # I
    .param p4, "users"    # [I
    .param p5, "broadcastAllowList"    # [I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/Intent;",
            "Ljava/lang/String;",
            "I[I[I)",
            "Ljava/util/List<",
            "Landroid/content/pm/ResolveInfo;",
            ">;"
        }
    .end annotation

    .line 12577
    move-object/from16 v1, p4

    move-object/from16 v2, p5

    const v3, 0x10000400

    .line 12579
    .local v3, "pmFlags":I
    const/4 v4, 0x0

    .line 12581
    .local v4, "receivers":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ResolveInfo;>;"
    const/4 v0, 0x0

    .line 12582
    .local v0, "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    const/4 v5, 0x0

    .line 12583
    .local v5, "scannedFirstReceivers":Z
    :try_start_0
    array-length v6, v1

    const/4 v7, 0x0

    :goto_0
    if-ge v7, v6, :cond_10

    aget v8, v1, v7
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_5

    .line 12585
    .local v8, "user":I
    const/16 v9, 0x7d0

    move/from16 v10, p3

    if-ne v10, v9, :cond_0

    move-object/from16 v9, p0

    :try_start_1
    iget-object v11, v9, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    const-string/jumbo v12, "no_debugging_features"

    .line 12586
    invoke-virtual {v11, v12, v8}, Lcom/android/server/am/UserController;->hasUserRestriction(Ljava/lang/String;I)Z

    move-result v11
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0

    if-eqz v11, :cond_1

    .line 12588
    move-object/from16 v12, p1

    move-object/from16 v13, p2

    move-object/from16 v16, v0

    move/from16 v18, v3

    goto/16 :goto_b

    .line 12648
    .end local v0    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    .end local v5    # "scannedFirstReceivers":Z
    .end local v8    # "user":I
    :catch_0
    move-exception v0

    move-object/from16 v12, p1

    move-object/from16 v13, p2

    :goto_1
    move/from16 v18, v3

    goto/16 :goto_e

    .line 12585
    .restart local v0    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    .restart local v5    # "scannedFirstReceivers":Z
    .restart local v8    # "user":I
    :cond_0
    move-object/from16 v9, p0

    .line 12590
    :cond_1
    :try_start_2
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v11
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_4

    .line 12591
    move-object/from16 v12, p1

    move-object/from16 v13, p2

    :try_start_3
    invoke-interface {v11, v12, v13, v3, v8}, Landroid/content/pm/IPackageManager;->queryIntentReceivers(Landroid/content/Intent;Ljava/lang/String;II)Landroid/content/pm/ParceledListSlice;

    move-result-object v11

    invoke-virtual {v11}, Landroid/content/pm/ParceledListSlice;->getList()Ljava/util/List;

    move-result-object v11
    :try_end_3
    .catch Landroid/os/RemoteException; {:try_start_3 .. :try_end_3} :catch_3

    .line 12592
    .local v11, "newReceivers":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ResolveInfo;>;"
    if-eqz v8, :cond_4

    if-eqz v11, :cond_4

    .line 12595
    const/4 v14, 0x0

    .local v14, "i":I
    :goto_2
    :try_start_4
    invoke-interface {v11}, Ljava/util/List;->size()I

    move-result v15

    if-ge v14, v15, :cond_3

    .line 12596
    invoke-interface {v11, v14}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v15

    check-cast v15, Landroid/content/pm/ResolveInfo;

    .line 12597
    .local v15, "ri":Landroid/content/pm/ResolveInfo;
    move-object/from16 v16, v0

    .end local v0    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    .local v16, "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    iget-object v0, v15, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget v0, v0, Landroid/content/pm/ActivityInfo;->flags:I

    const/high16 v17, 0x20000000

    and-int v0, v0, v17

    if-eqz v0, :cond_2

    .line 12598
    invoke-interface {v11, v14}, Ljava/util/List;->remove(I)Ljava/lang/Object;

    .line 12599
    add-int/lit8 v14, v14, -0x1

    .line 12595
    .end local v15    # "ri":Landroid/content/pm/ResolveInfo;
    :cond_2
    add-int/lit8 v14, v14, 0x1

    move-object/from16 v0, v16

    goto :goto_2

    .end local v16    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    .restart local v0    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    :cond_3
    move-object/from16 v16, v0

    .end local v0    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    .restart local v16    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    goto :goto_3

    .line 12592
    .end local v14    # "i":I
    .end local v16    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    .restart local v0    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    :cond_4
    move-object/from16 v16, v0

    .line 12603
    .end local v0    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    .restart local v16    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    :goto_3
    if-eqz v11, :cond_5

    invoke-interface {v11}, Ljava/util/List;->size()I

    move-result v0
    :try_end_4
    .catch Landroid/os/RemoteException; {:try_start_4 .. :try_end_4} :catch_1

    if-nez v0, :cond_5

    .line 12604
    const/4 v11, 0x0

    goto :goto_4

    .line 12648
    .end local v5    # "scannedFirstReceivers":Z
    .end local v8    # "user":I
    .end local v11    # "newReceivers":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ResolveInfo;>;"
    .end local v16    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    :catch_1
    move-exception v0

    goto :goto_1

    .line 12606
    .restart local v5    # "scannedFirstReceivers":Z
    .restart local v8    # "user":I
    .restart local v11    # "newReceivers":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ResolveInfo;>;"
    .restart local v16    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    :cond_5
    :goto_4
    if-nez v4, :cond_6

    .line 12607
    move-object v0, v11

    move-object v4, v0

    move/from16 v18, v3

    move-object/from16 v0, v16

    .end local v4    # "receivers":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ResolveInfo;>;"
    .local v0, "receivers":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ResolveInfo;>;"
    goto/16 :goto_c

    .line 12608
    .end local v0    # "receivers":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ResolveInfo;>;"
    .restart local v4    # "receivers":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ResolveInfo;>;"
    :cond_6
    if-eqz v11, :cond_f

    .line 12613
    if-nez v5, :cond_a

    .line 12615
    const/4 v5, 0x1

    .line 12616
    const/4 v14, 0x0

    .restart local v14    # "i":I
    :goto_5
    :try_start_5
    invoke-interface {v4}, Ljava/util/List;->size()I

    move-result v15

    if-ge v14, v15, :cond_9

    .line 12617
    invoke-interface {v4, v14}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v15

    check-cast v15, Landroid/content/pm/ResolveInfo;

    .line 12618
    .restart local v15    # "ri":Landroid/content/pm/ResolveInfo;
    iget-object v0, v15, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget v0, v0, Landroid/content/pm/ActivityInfo;->flags:I

    const/high16 v17, 0x40000000    # 2.0f

    and-int v0, v0, v17

    if-eqz v0, :cond_8

    .line 12619
    new-instance v0, Landroid/content/ComponentName;

    iget-object v1, v15, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-object v1, v1, Landroid/content/pm/ActivityInfo;->packageName:Ljava/lang/String;
    :try_end_5
    .catch Landroid/os/RemoteException; {:try_start_5 .. :try_end_5} :catch_3

    move/from16 v18, v3

    .end local v3    # "pmFlags":I
    .local v18, "pmFlags":I
    :try_start_6
    iget-object v3, v15, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-object v3, v3, Landroid/content/pm/ActivityInfo;->name:Ljava/lang/String;

    invoke-direct {v0, v1, v3}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .line 12621
    .local v0, "cn":Landroid/content/ComponentName;
    if-nez v16, :cond_7

    .line 12622
    new-instance v1, Ljava/util/HashSet;

    invoke-direct {v1}, Ljava/util/HashSet;-><init>()V

    move-object/from16 v16, v1

    goto :goto_6

    .line 12621
    :cond_7
    move-object/from16 v1, v16

    .line 12624
    .end local v16    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    .local v1, "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    :goto_6
    invoke-virtual {v1, v0}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    move-object/from16 v16, v1

    goto :goto_7

    .line 12618
    .end local v0    # "cn":Landroid/content/ComponentName;
    .end local v1    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    .end local v18    # "pmFlags":I
    .restart local v3    # "pmFlags":I
    .restart local v16    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    :cond_8
    move/from16 v18, v3

    .line 12616
    .end local v3    # "pmFlags":I
    .end local v15    # "ri":Landroid/content/pm/ResolveInfo;
    .restart local v18    # "pmFlags":I
    :goto_7
    add-int/lit8 v14, v14, 0x1

    move-object/from16 v1, p4

    move/from16 v3, v18

    goto :goto_5

    .end local v18    # "pmFlags":I
    .restart local v3    # "pmFlags":I
    :cond_9
    move/from16 v18, v3

    .end local v3    # "pmFlags":I
    .restart local v18    # "pmFlags":I
    move-object/from16 v0, v16

    goto :goto_8

    .line 12613
    .end local v14    # "i":I
    .end local v18    # "pmFlags":I
    .restart local v3    # "pmFlags":I
    :cond_a
    move/from16 v18, v3

    .end local v3    # "pmFlags":I
    .restart local v18    # "pmFlags":I
    move-object/from16 v0, v16

    .line 12630
    .end local v16    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    .local v0, "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    :goto_8
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_9
    invoke-interface {v11}, Ljava/util/List;->size()I

    move-result v3

    if-ge v1, v3, :cond_e

    .line 12631
    invoke-interface {v11, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/content/pm/ResolveInfo;

    .line 12632
    .local v3, "ri":Landroid/content/pm/ResolveInfo;
    iget-object v14, v3, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget v14, v14, Landroid/content/pm/ActivityInfo;->flags:I

    const/high16 v15, 0x40000000    # 2.0f

    and-int/2addr v14, v15

    if-eqz v14, :cond_d

    .line 12633
    new-instance v14, Landroid/content/ComponentName;

    iget-object v15, v3, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-object v15, v15, Landroid/content/pm/ActivityInfo;->packageName:Ljava/lang/String;

    move/from16 v16, v5

    .end local v5    # "scannedFirstReceivers":Z
    .local v16, "scannedFirstReceivers":Z
    iget-object v5, v3, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-object v5, v5, Landroid/content/pm/ActivityInfo;->name:Ljava/lang/String;

    invoke-direct {v14, v15, v5}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    move-object v5, v14

    .line 12635
    .local v5, "cn":Landroid/content/ComponentName;
    if-nez v0, :cond_b

    .line 12636
    new-instance v14, Ljava/util/HashSet;

    invoke-direct {v14}, Ljava/util/HashSet;-><init>()V

    move-object v0, v14

    .line 12638
    :cond_b
    invoke-virtual {v0, v5}, Ljava/util/HashSet;->contains(Ljava/lang/Object;)Z

    move-result v14

    if-nez v14, :cond_c

    .line 12639
    invoke-virtual {v0, v5}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    .line 12640
    invoke-interface {v4, v3}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    .line 12642
    .end local v5    # "cn":Landroid/content/ComponentName;
    :cond_c
    goto :goto_a

    .line 12643
    .end local v16    # "scannedFirstReceivers":Z
    .local v5, "scannedFirstReceivers":Z
    :cond_d
    move/from16 v16, v5

    .end local v5    # "scannedFirstReceivers":Z
    .restart local v16    # "scannedFirstReceivers":Z
    invoke-interface {v4, v3}, Ljava/util/List;->add(Ljava/lang/Object;)Z
    :try_end_6
    .catch Landroid/os/RemoteException; {:try_start_6 .. :try_end_6} :catch_2

    .line 12630
    .end local v3    # "ri":Landroid/content/pm/ResolveInfo;
    :goto_a
    add-int/lit8 v1, v1, 0x1

    move/from16 v5, v16

    goto :goto_9

    .end local v16    # "scannedFirstReceivers":Z
    .restart local v5    # "scannedFirstReceivers":Z
    :cond_e
    move/from16 v16, v5

    .end local v5    # "scannedFirstReceivers":Z
    .restart local v16    # "scannedFirstReceivers":Z
    goto :goto_c

    .line 12648
    .end local v0    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    .end local v1    # "i":I
    .end local v8    # "user":I
    .end local v11    # "newReceivers":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ResolveInfo;>;"
    .end local v16    # "scannedFirstReceivers":Z
    :catch_2
    move-exception v0

    goto :goto_e

    .line 12608
    .end local v18    # "pmFlags":I
    .local v3, "pmFlags":I
    .restart local v5    # "scannedFirstReceivers":Z
    .restart local v8    # "user":I
    .restart local v11    # "newReceivers":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ResolveInfo;>;"
    .local v16, "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    :cond_f
    move/from16 v18, v3

    .line 12583
    .end local v8    # "user":I
    .end local v11    # "newReceivers":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ResolveInfo;>;"
    .end local v16    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    .restart local v0    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    :goto_b
    move-object/from16 v0, v16

    .end local v3    # "pmFlags":I
    .restart local v18    # "pmFlags":I
    :goto_c
    add-int/lit8 v7, v7, 0x1

    move-object/from16 v1, p4

    move/from16 v3, v18

    goto/16 :goto_0

    .line 12648
    .end local v0    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    .end local v5    # "scannedFirstReceivers":Z
    .end local v18    # "pmFlags":I
    .restart local v3    # "pmFlags":I
    :catch_3
    move-exception v0

    goto :goto_d

    :catch_4
    move-exception v0

    move-object/from16 v12, p1

    move-object/from16 v13, p2

    goto :goto_d

    .line 12583
    .restart local v0    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    .restart local v5    # "scannedFirstReceivers":Z
    :cond_10
    move-object/from16 v9, p0

    move-object/from16 v12, p1

    move-object/from16 v13, p2

    move/from16 v10, p3

    move-object/from16 v16, v0

    move/from16 v18, v3

    .line 12650
    .end local v0    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    .end local v3    # "pmFlags":I
    .end local v5    # "scannedFirstReceivers":Z
    .restart local v18    # "pmFlags":I
    goto :goto_e

    .line 12648
    .end local v18    # "pmFlags":I
    .restart local v3    # "pmFlags":I
    :catch_5
    move-exception v0

    move-object/from16 v9, p0

    move-object/from16 v12, p1

    move-object/from16 v13, p2

    move/from16 v10, p3

    :goto_d
    move/from16 v18, v3

    .line 12651
    .end local v3    # "pmFlags":I
    .restart local v18    # "pmFlags":I
    :goto_e
    if-eqz v4, :cond_12

    if-eqz v2, :cond_12

    .line 12652
    invoke-interface {v4}, Ljava/util/List;->size()I

    move-result v0

    add-int/lit8 v0, v0, -0x1

    .local v0, "i":I
    :goto_f
    if-ltz v0, :cond_12

    .line 12653
    nop

    .line 12654
    invoke-interface {v4, v0}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/content/pm/ResolveInfo;

    iget-object v1, v1, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-object v1, v1, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v1, v1, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 12653
    invoke-static {v1}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v1

    .line 12655
    .local v1, "receiverAppId":I
    const/16 v3, 0x2710

    if-lt v1, v3, :cond_11

    .line 12656
    invoke-static {v2, v1}, Ljava/util/Arrays;->binarySearch([II)I

    move-result v3

    if-gez v3, :cond_11

    .line 12657
    invoke-interface {v4, v0}, Ljava/util/List;->remove(I)Ljava/lang/Object;

    .line 12652
    .end local v1    # "receiverAppId":I
    :cond_11
    add-int/lit8 v0, v0, -0x1

    goto :goto_f

    .line 12661
    .end local v0    # "i":I
    :cond_12
    return-object v4
.end method

.method private static declared-synchronized createAnrDumpFile(Ljava/io/File;)Ljava/io/File;
    .locals 6
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    const-class v0, Lcom/android/server/am/ActivityManagerService;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 3265
    .local p0, "tracesDir":Ljava/io/File;
    sget-object v1, Lcom/android/server/am/ActivityManagerService;->sAnrFileDateFormat:Ljava/text/SimpleDateFormat;

    if-nez v1, :cond_0

    .line 3266
    new-instance v1, Ljava/text/SimpleDateFormat;

    const-string/jumbo v2, "yyyy-MM-dd-HH-mm-ss-SSS"

    invoke-direct {v1, v2}, Ljava/text/SimpleDateFormat;-><init>(Ljava/lang/String;)V

    sput-object v1, Lcom/android/server/am/ActivityManagerService;->sAnrFileDateFormat:Ljava/text/SimpleDateFormat;

    .line 3269
    :cond_0
    sget-object v1, Lcom/android/server/am/ActivityManagerService;->sAnrFileDateFormat:Ljava/text/SimpleDateFormat;

    new-instance v2, Ljava/util/Date;

    invoke-direct {v2}, Ljava/util/Date;-><init>()V

    invoke-virtual {v1, v2}, Ljava/text/SimpleDateFormat;->format(Ljava/util/Date;)Ljava/lang/String;

    move-result-object v1

    .line 3270
    .local v1, "formattedDate":Ljava/lang/String;
    new-instance v2, Ljava/io/File;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "anr_"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v2, p0, v3}, Ljava/io/File;-><init>(Ljava/io/File;Ljava/lang/String;)V

    .line 3272
    .local v2, "anrFile":Ljava/io/File;
    invoke-virtual {v2}, Ljava/io/File;->createNewFile()Z

    move-result v3

    if-eqz v3, :cond_1

    .line 3273
    invoke-virtual {v2}, Ljava/io/File;->getAbsolutePath()Ljava/lang/String;

    move-result-object v3

    const/16 v4, 0x180

    const/4 v5, -0x1

    invoke-static {v3, v4, v5, v5}, Landroid/os/FileUtils;->setPermissions(Ljava/lang/String;III)I

    .line 3274
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    monitor-exit v0

    return-object v2

    .line 3276
    :cond_1
    :try_start_1
    new-instance v3, Ljava/io/IOException;

    const-string v4, "Unable to create ANR dump file: createNewFile failed"

    invoke-direct {v3, v4}, Ljava/io/IOException;-><init>(Ljava/lang/String;)V

    throw v3
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 3264
    .end local v1    # "formattedDate":Ljava/lang/String;
    .end local v2    # "anrFile":Ljava/io/File;
    .end local p0    # "tracesDir":Ljava/io/File;
    :catchall_0
    move-exception p0

    monitor-exit v0

    throw p0
.end method

.method private demoteSystemServerRenderThread(I)V
    .locals 1
    .param p1, "tid"    # I

    .line 6904
    const/16 v0, 0xa

    invoke-static {p1, v0}, Landroid/os/Process;->setThreadPriority(II)V

    .line 6905
    return-void
.end method

.method private doDump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;Z)V
    .locals 32
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "args"    # [Ljava/lang/String;
    .param p4, "useProto"    # Z

    .line 8774
    move-object/from16 v12, p0

    move-object/from16 v13, p1

    move-object/from16 v14, p2

    move-object/from16 v10, p3

    iget-object v0, v12, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    const-string v1, "ActivityManager"

    invoke-static {v0, v1, v14}, Lcom/android/internal/util/DumpUtils;->checkDumpAndUsageStatsPermission(Landroid/content/Context;Ljava/lang/String;Ljava/io/PrintWriter;)Z

    move-result v0

    if-nez v0, :cond_0

    return-void

    .line 8776
    :cond_0
    const/4 v0, 0x0

    .line 8777
    .local v0, "dumpAll":Z
    const/4 v1, 0x0

    .line 8778
    .local v1, "dumpClient":Z
    const/4 v2, 0x0

    .line 8779
    .local v2, "dumpCheckin":Z
    const/4 v3, 0x0

    .line 8780
    .local v3, "dumpCheckinFormat":Z
    const/4 v4, 0x0

    .line 8781
    .local v4, "dumpNormalPriority":Z
    const/4 v5, 0x0

    .line 8782
    .local v5, "dumpVisibleStacksOnly":Z
    const/4 v6, 0x0

    .line 8783
    .local v6, "dumpFocusedStackOnly":Z
    const/4 v7, 0x0

    .line 8785
    .local v7, "dumpPackage":Ljava/lang/String;
    const/4 v8, 0x0

    move v15, v0

    move/from16 v16, v1

    move/from16 v17, v2

    move/from16 v18, v3

    move/from16 v19, v4

    move/from16 v20, v5

    move/from16 v21, v6

    move-object v11, v7

    .line 8786
    .end local v0    # "dumpAll":Z
    .end local v1    # "dumpClient":Z
    .end local v2    # "dumpCheckin":Z
    .end local v3    # "dumpCheckinFormat":Z
    .end local v4    # "dumpNormalPriority":Z
    .end local v5    # "dumpVisibleStacksOnly":Z
    .end local v6    # "dumpFocusedStackOnly":Z
    .end local v7    # "dumpPackage":Ljava/lang/String;
    .local v8, "opti":I
    .local v11, "dumpPackage":Ljava/lang/String;
    .local v15, "dumpAll":Z
    .local v16, "dumpClient":Z
    .local v17, "dumpCheckin":Z
    .local v18, "dumpCheckinFormat":Z
    .local v19, "dumpNormalPriority":Z
    .local v20, "dumpVisibleStacksOnly":Z
    .local v21, "dumpFocusedStackOnly":Z
    :goto_0
    array-length v0, v10

    const/4 v1, 0x0

    const/4 v9, 0x1

    if-ge v8, v0, :cond_c

    .line 8787
    aget-object v0, v10, v8

    .line 8788
    .local v0, "opt":Ljava/lang/String;
    if-eqz v0, :cond_c

    invoke-virtual {v0}, Ljava/lang/String;->length()I

    move-result v2

    if-lez v2, :cond_c

    invoke-virtual {v0, v1}, Ljava/lang/String;->charAt(I)C

    move-result v2

    const/16 v3, 0x2d

    if-eq v2, v3, :cond_1

    .line 8789
    goto/16 :goto_2

    .line 8791
    :cond_1
    add-int/lit8 v8, v8, 0x1

    .line 8792
    const-string v1, "-a"

    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_2

    .line 8793
    const/4 v1, 0x1

    move v15, v1

    .end local v15    # "dumpAll":Z
    .local v1, "dumpAll":Z
    goto/16 :goto_1

    .line 8794
    .end local v1    # "dumpAll":Z
    .restart local v15    # "dumpAll":Z
    :cond_2
    const-string v1, "-c"

    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_3

    .line 8795
    const/4 v1, 0x1

    move/from16 v16, v1

    .end local v16    # "dumpClient":Z
    .local v1, "dumpClient":Z
    goto/16 :goto_1

    .line 8796
    .end local v1    # "dumpClient":Z
    .restart local v16    # "dumpClient":Z
    :cond_3
    const-string v1, "-v"

    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_4

    .line 8797
    const/4 v1, 0x1

    move/from16 v20, v1

    .end local v20    # "dumpVisibleStacksOnly":Z
    .local v1, "dumpVisibleStacksOnly":Z
    goto/16 :goto_1

    .line 8798
    .end local v1    # "dumpVisibleStacksOnly":Z
    .restart local v20    # "dumpVisibleStacksOnly":Z
    :cond_4
    const-string v1, "-f"

    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_5

    .line 8799
    const/4 v1, 0x1

    move/from16 v21, v1

    .end local v21    # "dumpFocusedStackOnly":Z
    .local v1, "dumpFocusedStackOnly":Z
    goto/16 :goto_1

    .line 8800
    .end local v1    # "dumpFocusedStackOnly":Z
    .restart local v21    # "dumpFocusedStackOnly":Z
    :cond_5
    const-string v1, "-p"

    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_7

    .line 8801
    array-length v1, v10

    if-ge v8, v1, :cond_6

    .line 8802
    aget-object v1, v10, v8

    .line 8803
    .end local v11    # "dumpPackage":Ljava/lang/String;
    .local v1, "dumpPackage":Ljava/lang/String;
    add-int/lit8 v8, v8, 0x1

    .line 8808
    const/4 v2, 0x1

    move-object v11, v1

    move/from16 v16, v2

    .end local v16    # "dumpClient":Z
    .local v2, "dumpClient":Z
    goto :goto_1

    .line 8805
    .end local v1    # "dumpPackage":Ljava/lang/String;
    .end local v2    # "dumpClient":Z
    .restart local v11    # "dumpPackage":Ljava/lang/String;
    .restart local v16    # "dumpClient":Z
    :cond_6
    const-string v1, "Error: -p option requires package argument"

    invoke-virtual {v14, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 8806
    return-void

    .line 8809
    :cond_7
    const-string v1, "--checkin"

    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_8

    .line 8810
    move v1, v9

    .end local v18    # "dumpCheckinFormat":Z
    .local v1, "dumpCheckinFormat":Z
    move v2, v9

    move/from16 v18, v1

    move/from16 v17, v2

    .end local v17    # "dumpCheckin":Z
    .local v2, "dumpCheckin":Z
    goto :goto_1

    .line 8811
    .end local v1    # "dumpCheckinFormat":Z
    .end local v2    # "dumpCheckin":Z
    .restart local v17    # "dumpCheckin":Z
    .restart local v18    # "dumpCheckinFormat":Z
    :cond_8
    const-string v1, "-C"

    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_9

    .line 8812
    const/4 v1, 0x1

    move/from16 v18, v1

    .end local v18    # "dumpCheckinFormat":Z
    .restart local v1    # "dumpCheckinFormat":Z
    goto :goto_1

    .line 8813
    .end local v1    # "dumpCheckinFormat":Z
    .restart local v18    # "dumpCheckinFormat":Z
    :cond_9
    const-string v1, "--normal-priority"

    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_a

    .line 8814
    const/4 v1, 0x1

    move/from16 v19, v1

    .end local v19    # "dumpNormalPriority":Z
    .local v1, "dumpNormalPriority":Z
    goto :goto_1

    .line 8815
    .end local v1    # "dumpNormalPriority":Z
    .restart local v19    # "dumpNormalPriority":Z
    :cond_a
    const-string v1, "-h"

    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_b

    .line 8816
    invoke-static {v14, v9}, Lcom/android/server/am/ActivityManagerShellCommand;->dumpHelp(Ljava/io/PrintWriter;Z)V

    .line 8817
    return-void

    .line 8819
    :cond_b
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Unknown argument: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "; use -h for help"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v14, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 8821
    .end local v0    # "opt":Ljava/lang/String;
    :goto_1
    goto/16 :goto_0

    .line 8823
    :cond_c
    :goto_2
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v22

    .line 8825
    .local v22, "origId":J
    const/4 v0, 0x2

    if-eqz p4, :cond_1a

    .line 8826
    new-instance v2, Landroid/util/proto/ProtoOutputStream;

    invoke-direct {v2, v13}, Landroid/util/proto/ProtoOutputStream;-><init>(Ljava/io/FileDescriptor;)V

    .line 8827
    .local v2, "proto":Landroid/util/proto/ProtoOutputStream;
    array-length v3, v10

    if-ge v8, v3, :cond_d

    aget-object v3, v10, v8

    goto :goto_3

    :cond_d
    const-string v3, ""

    .line 8828
    .local v3, "cmd":Ljava/lang/String;
    :goto_3
    add-int/2addr v8, v9

    .line 8830
    const-string v4, "activities"

    invoke-virtual {v4, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_19

    const-string v4, "a"

    invoke-virtual {v4, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_e

    move-object/from16 v28, v3

    goto/16 :goto_a

    .line 8833
    :cond_e
    const-string v4, "broadcasts"

    invoke-virtual {v4, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_18

    const-string v4, "b"

    invoke-virtual {v4, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_f

    move-object/from16 v28, v3

    goto/16 :goto_9

    .line 8838
    :cond_f
    const-string/jumbo v4, "provider"

    invoke-virtual {v4, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_13

    .line 8841
    array-length v4, v10

    if-lt v8, v4, :cond_10

    .line 8842
    const/4 v0, 0x0

    .line 8843
    .local v0, "name":Ljava/lang/String;
    sget-object v1, Lcom/android/server/am/ActivityManagerService;->EMPTY_STRING_ARRAY:[Ljava/lang/String;

    .local v1, "newArgs":[Ljava/lang/String;
    goto :goto_4

    .line 8845
    .end local v0    # "name":Ljava/lang/String;
    .end local v1    # "newArgs":[Ljava/lang/String;
    :cond_10
    aget-object v4, v10, v8

    .line 8846
    .local v4, "name":Ljava/lang/String;
    add-int/lit8 v8, v8, 0x1

    .line 8847
    array-length v5, v10

    sub-int/2addr v5, v8

    new-array v5, v5, [Ljava/lang/String;

    .line 8848
    .local v5, "newArgs":[Ljava/lang/String;
    array-length v6, v10

    if-le v6, v0, :cond_11

    array-length v0, v10

    sub-int/2addr v0, v8

    invoke-static {v10, v8, v5, v1, v0}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    .line 8851
    :cond_11
    move-object v0, v4

    move-object v1, v5

    .end local v4    # "name":Ljava/lang/String;
    .end local v5    # "newArgs":[Ljava/lang/String;
    .restart local v0    # "name":Ljava/lang/String;
    .restart local v1    # "newArgs":[Ljava/lang/String;
    :goto_4
    iget-object v4, v12, Lcom/android/server/am/ActivityManagerService;->mCpHelper:Lcom/android/server/am/ContentProviderHelper;

    invoke-virtual {v4, v13, v14, v0, v1}, Lcom/android/server/am/ContentProviderHelper;->dumpProviderProto(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Ljava/lang/String;[Ljava/lang/String;)Z

    move-result v4

    if-nez v4, :cond_12

    .line 8852
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "No providers match: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v14, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 8853
    const-string v4, "Use -h for help."

    invoke-virtual {v14, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 8855
    .end local v0    # "name":Ljava/lang/String;
    .end local v1    # "newArgs":[Ljava/lang/String;
    :cond_12
    move-object/from16 v28, v3

    goto/16 :goto_b

    :cond_13
    const-string/jumbo v0, "service"

    invoke-virtual {v0, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    const-wide v4, 0x10b00000001L

    if-eqz v0, :cond_14

    .line 8857
    iget-object v0, v12, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v0, v2, v4, v5}, Lcom/android/server/am/ActiveServices;->dumpDebug(Landroid/util/proto/ProtoOutputStream;J)V

    move-object/from16 v28, v3

    goto/16 :goto_b

    .line 8858
    :cond_14
    const-string/jumbo v0, "processes"

    invoke-virtual {v0, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_16

    const-string/jumbo v0, "p"

    invoke-virtual {v0, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_15

    move-object/from16 v28, v3

    goto/16 :goto_7

    .line 8871
    :cond_15
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 8872
    invoke-virtual {v2, v4, v5}, Landroid/util/proto/ProtoOutputStream;->start(J)J

    move-result-wide v0

    move-wide v6, v0

    .line 8873
    .local v6, "activityToken":J
    iget-object v0, v12, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-virtual {v0, v2}, Lcom/android/server/wm/ActivityTaskManagerInternal;->writeActivitiesToProto(Landroid/util/proto/ProtoOutputStream;)V

    .line 8874
    invoke-virtual {v2, v6, v7}, Landroid/util/proto/ProtoOutputStream;->end(J)V

    .line 8876
    const-wide v0, 0x10b00000002L

    invoke-virtual {v2, v0, v1}, Landroid/util/proto/ProtoOutputStream;->start(J)J

    move-result-wide v0

    move-wide/from16 v24, v0

    .line 8877
    .local v24, "broadcastToken":J
    invoke-virtual {v12, v2}, Lcom/android/server/am/ActivityManagerService;->writeBroadcastsToProtoLocked(Landroid/util/proto/ProtoOutputStream;)V

    .line 8878
    move-wide/from16 v4, v24

    .end local v24    # "broadcastToken":J
    .local v4, "broadcastToken":J
    invoke-virtual {v2, v4, v5}, Landroid/util/proto/ProtoOutputStream;->end(J)V

    .line 8880
    const-wide v0, 0x10b00000003L

    invoke-virtual {v2, v0, v1}, Landroid/util/proto/ProtoOutputStream;->start(J)J

    move-result-wide v0

    move-wide/from16 v26, v0

    .line 8881
    .local v26, "serviceToken":J
    iget-object v0, v12, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_2

    move-object/from16 v28, v3

    move-wide/from16 v29, v4

    const-wide v3, 0x10b00000001L

    .end local v3    # "cmd":Ljava/lang/String;
    .end local v4    # "broadcastToken":J
    .local v28, "cmd":Ljava/lang/String;
    .local v29, "broadcastToken":J
    :try_start_1
    invoke-virtual {v0, v2, v3, v4}, Lcom/android/server/am/ActiveServices;->dumpDebug(Landroid/util/proto/ProtoOutputStream;J)V

    .line 8883
    move-wide/from16 v3, v26

    .end local v26    # "serviceToken":J
    .local v3, "serviceToken":J
    invoke-virtual {v2, v3, v4}, Landroid/util/proto/ProtoOutputStream;->end(J)V

    .line 8885
    const-wide v0, 0x10b00000004L

    invoke-virtual {v2, v0, v1}, Landroid/util/proto/ProtoOutputStream;->start(J)J

    move-result-wide v0

    move-wide/from16 v24, v0

    .line 8886
    .local v24, "processToken":J
    iget-object v1, v12, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_3

    :try_start_2
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 8887
    iget-object v0, v12, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v0, v2, v11}, Lcom/android/server/am/ProcessList;->writeProcessesToProtoLSP(Landroid/util/proto/ProtoOutputStream;Ljava/lang/String;)V

    .line 8888
    monitor-exit v1
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 8889
    move-wide/from16 v26, v3

    move-wide/from16 v3, v24

    .end local v24    # "processToken":J
    .local v3, "processToken":J
    .restart local v26    # "serviceToken":J
    invoke-virtual {v2, v3, v4}, Landroid/util/proto/ProtoOutputStream;->end(J)V

    .line 8890
    .end local v3    # "processToken":J
    .end local v6    # "activityToken":J
    .end local v26    # "serviceToken":J
    .end local v29    # "broadcastToken":J
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_3

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    goto/16 :goto_b

    .line 8888
    .local v3, "serviceToken":J
    .restart local v6    # "activityToken":J
    .restart local v24    # "processToken":J
    .restart local v29    # "broadcastToken":J
    :catchall_0
    move-exception v0

    move-wide/from16 v26, v3

    move-wide/from16 v3, v24

    .end local v24    # "processToken":J
    .local v3, "processToken":J
    .restart local v26    # "serviceToken":J
    :goto_5
    :try_start_4
    monitor-exit v1
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    :try_start_5
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .end local v2    # "proto":Landroid/util/proto/ProtoOutputStream;
    .end local v8    # "opti":I
    .end local v11    # "dumpPackage":Ljava/lang/String;
    .end local v15    # "dumpAll":Z
    .end local v16    # "dumpClient":Z
    .end local v17    # "dumpCheckin":Z
    .end local v18    # "dumpCheckinFormat":Z
    .end local v19    # "dumpNormalPriority":Z
    .end local v20    # "dumpVisibleStacksOnly":Z
    .end local v21    # "dumpFocusedStackOnly":Z
    .end local v22    # "origId":J
    .end local v28    # "cmd":Ljava/lang/String;
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "fd":Ljava/io/FileDescriptor;
    .end local p2    # "pw":Ljava/io/PrintWriter;
    .end local p3    # "args":[Ljava/lang/String;
    .end local p4    # "useProto":Z
    throw v0

    .restart local v2    # "proto":Landroid/util/proto/ProtoOutputStream;
    .restart local v8    # "opti":I
    .restart local v11    # "dumpPackage":Ljava/lang/String;
    .restart local v15    # "dumpAll":Z
    .restart local v16    # "dumpClient":Z
    .restart local v17    # "dumpCheckin":Z
    .restart local v18    # "dumpCheckinFormat":Z
    .restart local v19    # "dumpNormalPriority":Z
    .restart local v20    # "dumpVisibleStacksOnly":Z
    .restart local v21    # "dumpFocusedStackOnly":Z
    .restart local v22    # "origId":J
    .restart local v28    # "cmd":Ljava/lang/String;
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "fd":Ljava/io/FileDescriptor;
    .restart local p2    # "pw":Ljava/io/PrintWriter;
    .restart local p3    # "args":[Ljava/lang/String;
    .restart local p4    # "useProto":Z
    :catchall_1
    move-exception v0

    goto :goto_5

    .line 8890
    .end local v6    # "activityToken":J
    .end local v26    # "serviceToken":J
    .end local v28    # "cmd":Ljava/lang/String;
    .end local v29    # "broadcastToken":J
    .local v3, "cmd":Ljava/lang/String;
    :catchall_2
    move-exception v0

    move-object/from16 v28, v3

    .end local v3    # "cmd":Ljava/lang/String;
    .restart local v28    # "cmd":Ljava/lang/String;
    :goto_6
    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_3

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    :catchall_3
    move-exception v0

    goto :goto_6

    .line 8858
    .end local v28    # "cmd":Ljava/lang/String;
    .restart local v3    # "cmd":Ljava/lang/String;
    :cond_16
    move-object/from16 v28, v3

    .line 8859
    .end local v3    # "cmd":Ljava/lang/String;
    .restart local v28    # "cmd":Ljava/lang/String;
    :goto_7
    array-length v0, v10

    if-ge v8, v0, :cond_17

    .line 8860
    aget-object v11, v10, v8

    .line 8861
    add-int/lit8 v8, v8, 0x1

    move v1, v8

    move-object v3, v11

    goto :goto_8

    .line 8859
    :cond_17
    move v1, v8

    move-object v3, v11

    .line 8864
    .end local v8    # "opti":I
    .end local v11    # "dumpPackage":Ljava/lang/String;
    .local v1, "opti":I
    .local v3, "dumpPackage":Ljava/lang/String;
    :goto_8
    monitor-enter p0

    :try_start_6
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 8865
    iget-object v4, v12, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v4
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_5

    :try_start_7
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 8866
    iget-object v0, v12, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v0, v2, v3}, Lcom/android/server/am/ProcessList;->writeProcessesToProtoLSP(Landroid/util/proto/ProtoOutputStream;Ljava/lang/String;)V

    .line 8867
    monitor-exit v4
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_4

    :try_start_8
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 8868
    monitor-exit p0
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_5

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    move v8, v1

    move-object v11, v3

    goto :goto_b

    .line 8867
    :catchall_4
    move-exception v0

    :try_start_9
    monitor-exit v4
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_4

    :try_start_a
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .end local v1    # "opti":I
    .end local v2    # "proto":Landroid/util/proto/ProtoOutputStream;
    .end local v3    # "dumpPackage":Ljava/lang/String;
    .end local v15    # "dumpAll":Z
    .end local v16    # "dumpClient":Z
    .end local v17    # "dumpCheckin":Z
    .end local v18    # "dumpCheckinFormat":Z
    .end local v19    # "dumpNormalPriority":Z
    .end local v20    # "dumpVisibleStacksOnly":Z
    .end local v21    # "dumpFocusedStackOnly":Z
    .end local v22    # "origId":J
    .end local v28    # "cmd":Ljava/lang/String;
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "fd":Ljava/io/FileDescriptor;
    .end local p2    # "pw":Ljava/io/PrintWriter;
    .end local p3    # "args":[Ljava/lang/String;
    .end local p4    # "useProto":Z
    throw v0

    .line 8868
    .restart local v1    # "opti":I
    .restart local v2    # "proto":Landroid/util/proto/ProtoOutputStream;
    .restart local v3    # "dumpPackage":Ljava/lang/String;
    .restart local v15    # "dumpAll":Z
    .restart local v16    # "dumpClient":Z
    .restart local v17    # "dumpCheckin":Z
    .restart local v18    # "dumpCheckinFormat":Z
    .restart local v19    # "dumpNormalPriority":Z
    .restart local v20    # "dumpVisibleStacksOnly":Z
    .restart local v21    # "dumpFocusedStackOnly":Z
    .restart local v22    # "origId":J
    .restart local v28    # "cmd":Ljava/lang/String;
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "fd":Ljava/io/FileDescriptor;
    .restart local p2    # "pw":Ljava/io/PrintWriter;
    .restart local p3    # "args":[Ljava/lang/String;
    .restart local p4    # "useProto":Z
    :catchall_5
    move-exception v0

    monitor-exit p0
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_5

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 8833
    .end local v1    # "opti":I
    .end local v28    # "cmd":Ljava/lang/String;
    .local v3, "cmd":Ljava/lang/String;
    .restart local v8    # "opti":I
    .restart local v11    # "dumpPackage":Ljava/lang/String;
    :cond_18
    move-object/from16 v28, v3

    .line 8835
    .end local v3    # "cmd":Ljava/lang/String;
    .restart local v28    # "cmd":Ljava/lang/String;
    :goto_9
    monitor-enter p0

    :try_start_b
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 8836
    invoke-virtual {v12, v2}, Lcom/android/server/am/ActivityManagerService;->writeBroadcastsToProtoLocked(Landroid/util/proto/ProtoOutputStream;)V

    .line 8837
    monitor-exit p0
    :try_end_b
    .catchall {:try_start_b .. :try_end_b} :catchall_6

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    goto :goto_b

    :catchall_6
    move-exception v0

    :try_start_c
    monitor-exit p0
    :try_end_c
    .catchall {:try_start_c .. :try_end_c} :catchall_6

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 8830
    .end local v28    # "cmd":Ljava/lang/String;
    .restart local v3    # "cmd":Ljava/lang/String;
    :cond_19
    move-object/from16 v28, v3

    .line 8832
    .end local v3    # "cmd":Ljava/lang/String;
    .restart local v28    # "cmd":Ljava/lang/String;
    :goto_a
    iget-object v0, v12, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-virtual {v0, v2}, Lcom/android/server/wm/ActivityTaskManagerInternal;->writeActivitiesToProto(Landroid/util/proto/ProtoOutputStream;)V

    .line 8892
    :goto_b
    invoke-virtual {v2}, Landroid/util/proto/ProtoOutputStream;->flush()V

    .line 8893
    invoke-static/range {v22 .. v23}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8894
    return-void

    .line 8897
    .end local v2    # "proto":Landroid/util/proto/ProtoOutputStream;
    .end local v28    # "cmd":Ljava/lang/String;
    :cond_1a
    invoke-virtual {v12, v11}, Lcom/android/server/am/ActivityManagerService;->getAppId(Ljava/lang/String;)I

    move-result v24

    .line 8898
    .local v24, "dumpAppId":I
    const/16 v25, 0x0

    .line 8900
    .local v25, "more":Z
    array-length v2, v10

    if-ge v8, v2, :cond_53

    .line 8901
    aget-object v7, v10, v8

    .line 8902
    .local v7, "cmd":Ljava/lang/String;
    add-int/lit8 v8, v8, 0x1

    .line 8903
    const-string v2, "activities"

    invoke-virtual {v2, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_51

    const-string v2, "a"

    invoke-virtual {v2, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_51

    const-string/jumbo v2, "lastanr"

    .line 8904
    invoke-virtual {v2, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_50

    const-string/jumbo v2, "lastanr-traces"

    invoke-virtual {v2, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_50

    const-string/jumbo v2, "starter"

    .line 8905
    invoke-virtual {v2, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_4f

    const-string v2, "containers"

    invoke-virtual {v2, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_4f

    const-string/jumbo v2, "recents"

    .line 8906
    invoke-virtual {v2, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_4e

    const-string/jumbo v2, "r"

    invoke-virtual {v2, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_4e

    const-string/jumbo v2, "top-resumed"

    .line 8907
    invoke-virtual {v2, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_1b

    move-object v13, v7

    move v9, v8

    goto/16 :goto_1f

    .line 8910
    :cond_1b
    const-string v2, "binder-proxies"

    invoke-virtual {v2, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_1d

    .line 8911
    array-length v0, v10

    if-lt v8, v0, :cond_1c

    .line 8912
    invoke-virtual {v12, v14, v1}, Lcom/android/server/am/ActivityManagerService;->dumpBinderProxies(Ljava/io/PrintWriter;I)V

    move-object v13, v7

    move/from16 v26, v8

    goto/16 :goto_20

    .line 8914
    :cond_1c
    aget-object v0, v10, v8

    .line 8915
    .local v0, "uid":Ljava/lang/String;
    add-int/lit8 v8, v8, 0x1

    .line 8917
    invoke-static {}, Ljava/lang/System;->gc()V

    .line 8918
    invoke-static {}, Ljava/lang/System;->runFinalization()V

    .line 8919
    invoke-static {}, Ljava/lang/System;->gc()V

    .line 8920
    invoke-static {v0}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v1

    invoke-static {v1}, Lcom/android/internal/os/BinderInternal;->nGetBinderProxyCount(I)I

    move-result v1

    invoke-virtual {v14, v1}, Ljava/io/PrintWriter;->println(I)V

    .line 8921
    .end local v0    # "uid":Ljava/lang/String;
    move-object v13, v7

    goto/16 :goto_21

    .line 8922
    :cond_1d
    const-string v2, "allowed-associations"

    invoke-virtual {v2, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_1f

    .line 8923
    array-length v0, v10

    if-ge v8, v0, :cond_1e

    .line 8924
    aget-object v11, v10, v8

    .line 8925
    add-int/lit8 v8, v8, 0x1

    move/from16 v26, v8

    move-object/from16 v27, v11

    goto :goto_c

    .line 8923
    :cond_1e
    move/from16 v26, v8

    move-object/from16 v27, v11

    .line 8927
    .end local v8    # "opti":I
    .end local v11    # "dumpPackage":Ljava/lang/String;
    .local v26, "opti":I
    .local v27, "dumpPackage":Ljava/lang/String;
    :goto_c
    monitor-enter p0

    :try_start_d
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V
    :try_end_d
    .catchall {:try_start_d .. :try_end_d} :catchall_8

    .line 8928
    const/4 v6, 0x1

    move-object/from16 v1, p0

    move-object/from16 v2, p1

    move-object/from16 v3, p2

    move-object/from16 v4, p3

    move/from16 v5, v26

    move-object v8, v7

    .end local v7    # "cmd":Ljava/lang/String;
    .local v8, "cmd":Ljava/lang/String;
    move-object/from16 v7, v27

    :try_start_e
    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->dumpAllowedAssociationsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V

    .line 8929
    monitor-exit p0
    :try_end_e
    .catchall {:try_start_e .. :try_end_e} :catchall_7

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    move-object v13, v8

    move/from16 v8, v26

    move-object/from16 v11, v27

    goto/16 :goto_21

    :catchall_7
    move-exception v0

    goto :goto_d

    .end local v8    # "cmd":Ljava/lang/String;
    .restart local v7    # "cmd":Ljava/lang/String;
    :catchall_8
    move-exception v0

    move-object v8, v7

    .end local v7    # "cmd":Ljava/lang/String;
    .restart local v8    # "cmd":Ljava/lang/String;
    :goto_d
    :try_start_f
    monitor-exit p0
    :try_end_f
    .catchall {:try_start_f .. :try_end_f} :catchall_7

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 8930
    .end local v26    # "opti":I
    .end local v27    # "dumpPackage":Ljava/lang/String;
    .restart local v7    # "cmd":Ljava/lang/String;
    .local v8, "opti":I
    .restart local v11    # "dumpPackage":Ljava/lang/String;
    :cond_1f
    const-string v2, "broadcasts"

    invoke-virtual {v2, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_4c

    const-string v2, "b"

    invoke-virtual {v2, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_20

    move-object v13, v7

    move v9, v8

    goto/16 :goto_1d

    .line 8938
    :cond_20
    const-string v2, "broadcast-stats"

    invoke-virtual {v2, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_23

    .line 8939
    array-length v0, v10

    if-ge v8, v0, :cond_21

    .line 8940
    aget-object v11, v10, v8

    .line 8941
    add-int/lit8 v8, v8, 0x1

    move/from16 v26, v8

    move-object/from16 v27, v11

    goto :goto_e

    .line 8939
    :cond_21
    move/from16 v26, v8

    move-object/from16 v27, v11

    .line 8943
    .end local v8    # "opti":I
    .end local v11    # "dumpPackage":Ljava/lang/String;
    .restart local v26    # "opti":I
    .restart local v27    # "dumpPackage":Ljava/lang/String;
    :goto_e
    monitor-enter p0

    :try_start_10
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V
    :try_end_10
    .catchall {:try_start_10 .. :try_end_10} :catchall_9

    .line 8944
    if-eqz v18, :cond_22

    .line 8945
    move-object/from16 v1, p0

    move-object/from16 v2, p1

    move-object/from16 v3, p2

    move-object/from16 v4, p3

    move/from16 v5, v26

    move/from16 v6, v17

    move-object v8, v7

    .end local v7    # "cmd":Ljava/lang/String;
    .local v8, "cmd":Ljava/lang/String;
    move-object/from16 v7, v27

    :try_start_11
    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->dumpBroadcastStatsCheckinLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V

    goto :goto_f

    .line 8948
    .end local v8    # "cmd":Ljava/lang/String;
    .restart local v7    # "cmd":Ljava/lang/String;
    :cond_22
    move-object v8, v7

    .end local v7    # "cmd":Ljava/lang/String;
    .restart local v8    # "cmd":Ljava/lang/String;
    const/4 v6, 0x1

    move-object/from16 v1, p0

    move-object/from16 v2, p1

    move-object/from16 v3, p2

    move-object/from16 v4, p3

    move/from16 v5, v26

    move-object/from16 v7, v27

    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->dumpBroadcastStatsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V

    .line 8950
    :goto_f
    monitor-exit p0
    :try_end_11
    .catchall {:try_start_11 .. :try_end_11} :catchall_a

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    move-object v13, v8

    move/from16 v8, v26

    move-object/from16 v11, v27

    goto/16 :goto_21

    .end local v8    # "cmd":Ljava/lang/String;
    .restart local v7    # "cmd":Ljava/lang/String;
    :catchall_9
    move-exception v0

    move-object v8, v7

    .end local v7    # "cmd":Ljava/lang/String;
    .restart local v8    # "cmd":Ljava/lang/String;
    :goto_10
    :try_start_12
    monitor-exit p0
    :try_end_12
    .catchall {:try_start_12 .. :try_end_12} :catchall_a

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    :catchall_a
    move-exception v0

    goto :goto_10

    .line 8951
    .end local v26    # "opti":I
    .end local v27    # "dumpPackage":Ljava/lang/String;
    .restart local v7    # "cmd":Ljava/lang/String;
    .local v8, "opti":I
    .restart local v11    # "dumpPackage":Ljava/lang/String;
    :cond_23
    const-string v2, "intents"

    invoke-virtual {v2, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_4a

    const-string v2, "i"

    invoke-virtual {v2, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_24

    move-object v13, v7

    move v0, v9

    move v9, v8

    goto/16 :goto_1b

    .line 8957
    :cond_24
    const-string/jumbo v2, "processes"

    invoke-virtual {v2, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_48

    const-string/jumbo v2, "p"

    invoke-virtual {v2, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_25

    move-object v13, v7

    move/from16 v27, v8

    goto/16 :goto_19

    .line 8968
    :cond_25
    const-string/jumbo v2, "oom"

    invoke-virtual {v2, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_47

    const-string/jumbo v2, "o"

    invoke-virtual {v2, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_26

    move-object v13, v7

    move/from16 v27, v8

    goto/16 :goto_18

    .line 8972
    :cond_26
    const-string/jumbo v2, "lmk"

    invoke-virtual {v2, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_27

    .line 8973
    monitor-enter p0

    :try_start_13
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 8974
    invoke-virtual {v12, v14}, Lcom/android/server/am/ActivityManagerService;->dumpLmkLocked(Ljava/io/PrintWriter;)Z

    .line 8975
    monitor-exit p0
    :try_end_13
    .catchall {:try_start_13 .. :try_end_13} :catchall_b

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    move-object v13, v7

    move/from16 v26, v8

    goto/16 :goto_20

    :catchall_b
    move-exception v0

    :try_start_14
    monitor-exit p0
    :try_end_14
    .catchall {:try_start_14 .. :try_end_14} :catchall_b

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 8976
    :cond_27
    const-string/jumbo v2, "lru"

    invoke-virtual {v2, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    const/4 v6, 0x0

    if-eqz v2, :cond_28

    .line 8977
    monitor-enter p0

    :try_start_15
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 8978
    iget-object v0, v12, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v0, v14, v11, v6}, Lcom/android/server/am/ProcessList;->dumpLruLocked(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;)Z

    .line 8979
    monitor-exit p0
    :try_end_15
    .catchall {:try_start_15 .. :try_end_15} :catchall_c

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    move-object v13, v7

    move/from16 v26, v8

    goto/16 :goto_20

    :catchall_c
    move-exception v0

    :try_start_16
    monitor-exit p0
    :try_end_16
    .catchall {:try_start_16 .. :try_end_16} :catchall_c

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 8980
    :cond_28
    const-string/jumbo v2, "permissions"

    invoke-virtual {v2, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_46

    const-string/jumbo v2, "perm"

    invoke-virtual {v2, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_29

    move-object v13, v7

    move/from16 v27, v8

    goto/16 :goto_17

    .line 8982
    :cond_29
    const-string/jumbo v2, "provider"

    invoke-virtual {v2, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_2d

    .line 8985
    array-length v2, v10

    if-lt v8, v2, :cond_2a

    .line 8986
    const/4 v0, 0x0

    .line 8987
    .local v0, "name":Ljava/lang/String;
    sget-object v1, Lcom/android/server/am/ActivityManagerService;->EMPTY_STRING_ARRAY:[Ljava/lang/String;

    move v9, v8

    move-object v8, v1

    .local v1, "newArgs":[Ljava/lang/String;
    goto :goto_11

    .line 8989
    .end local v0    # "name":Ljava/lang/String;
    .end local v1    # "newArgs":[Ljava/lang/String;
    :cond_2a
    aget-object v2, v10, v8

    .line 8990
    .local v2, "name":Ljava/lang/String;
    add-int/lit8 v8, v8, 0x1

    .line 8991
    array-length v3, v10

    sub-int/2addr v3, v8

    new-array v3, v3, [Ljava/lang/String;

    .line 8992
    .local v3, "newArgs":[Ljava/lang/String;
    array-length v4, v10

    if-le v4, v0, :cond_2b

    array-length v0, v10

    sub-int/2addr v0, v8

    invoke-static {v10, v8, v3, v1, v0}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    .line 8994
    :cond_2b
    move-object v0, v2

    move v9, v8

    move-object v8, v3

    .end local v2    # "name":Ljava/lang/String;
    .end local v3    # "newArgs":[Ljava/lang/String;
    .restart local v0    # "name":Ljava/lang/String;
    .local v8, "newArgs":[Ljava/lang/String;
    .local v9, "opti":I
    :goto_11
    iget-object v1, v12, Lcom/android/server/am/ActivityManagerService;->mCpHelper:Lcom/android/server/am/ContentProviderHelper;

    const/4 v6, 0x0

    move-object/from16 v2, p1

    move-object/from16 v3, p2

    move-object v4, v0

    move-object v5, v8

    move/from16 v26, v9

    move-object v9, v7

    .end local v7    # "cmd":Ljava/lang/String;
    .local v9, "cmd":Ljava/lang/String;
    .restart local v26    # "opti":I
    move v7, v15

    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ContentProviderHelper;->dumpProvider(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Ljava/lang/String;[Ljava/lang/String;IZ)Z

    move-result v1

    if-nez v1, :cond_2c

    .line 8995
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "No providers match: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v14, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 8996
    const-string v1, "Use -h for help."

    invoke-virtual {v14, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 8998
    .end local v0    # "name":Ljava/lang/String;
    .end local v8    # "newArgs":[Ljava/lang/String;
    :cond_2c
    move-object v13, v9

    move/from16 v8, v26

    goto/16 :goto_21

    .end local v9    # "cmd":Ljava/lang/String;
    .end local v26    # "opti":I
    .restart local v7    # "cmd":Ljava/lang/String;
    .local v8, "opti":I
    :cond_2d
    move/from16 v31, v9

    move-object v9, v7

    move/from16 v7, v31

    .end local v7    # "cmd":Ljava/lang/String;
    .restart local v9    # "cmd":Ljava/lang/String;
    const-string/jumbo v2, "providers"

    invoke-virtual {v2, v9}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_45

    const-string/jumbo v2, "prov"

    invoke-virtual {v2, v9}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_2e

    move/from16 v27, v8

    move-object v13, v9

    goto/16 :goto_16

    .line 9002
    :cond_2e
    const-string/jumbo v2, "service"

    invoke-virtual {v2, v9}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_35

    .line 9005
    const/4 v2, 0x0

    .line 9006
    .local v2, "users":[I
    array-length v3, v10

    if-lt v8, v3, :cond_2f

    .line 9007
    const/4 v0, 0x0

    .line 9008
    .restart local v0    # "name":Ljava/lang/String;
    sget-object v1, Lcom/android/server/am/ActivityManagerService;->EMPTY_STRING_ARRAY:[Ljava/lang/String;

    move-object/from16 v26, v1

    move-object/from16 v27, v2

    move/from16 v28, v8

    .restart local v1    # "newArgs":[Ljava/lang/String;
    goto :goto_12

    .line 9010
    .end local v0    # "name":Ljava/lang/String;
    .end local v1    # "newArgs":[Ljava/lang/String;
    :cond_2f
    aget-object v3, v10, v8

    .line 9011
    .local v3, "name":Ljava/lang/String;
    add-int/lit8 v8, v8, 0x1

    .line 9012
    const-string v4, "--user"

    invoke-virtual {v4, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_32

    array-length v4, v10

    if-ge v8, v4, :cond_32

    .line 9013
    aget-object v4, v10, v8

    invoke-static {v4}, Landroid/os/UserHandle;->parseUserArg(Ljava/lang/String;)I

    move-result v4

    .line 9014
    .local v4, "userId":I
    add-int/lit8 v8, v8, 0x1

    .line 9015
    const/4 v5, -0x1

    if-eq v4, v5, :cond_31

    .line 9016
    const/4 v5, -0x2

    if-ne v4, v5, :cond_30

    .line 9017
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getCurrentUser()Landroid/content/pm/UserInfo;

    move-result-object v5

    iget v4, v5, Landroid/content/pm/UserInfo;->id:I

    .line 9019
    :cond_30
    new-array v5, v7, [I

    aput v4, v5, v1

    move-object v2, v5

    .line 9021
    :cond_31
    aget-object v3, v10, v8

    .line 9022
    add-int/2addr v8, v7

    .line 9024
    .end local v4    # "userId":I
    :cond_32
    array-length v4, v10

    sub-int/2addr v4, v8

    new-array v4, v4, [Ljava/lang/String;

    .line 9025
    .local v4, "newArgs":[Ljava/lang/String;
    array-length v5, v10

    if-le v5, v0, :cond_33

    array-length v0, v10

    sub-int/2addr v0, v8

    invoke-static {v10, v8, v4, v1, v0}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    .line 9028
    :cond_33
    move-object/from16 v27, v2

    move-object v0, v3

    move-object/from16 v26, v4

    move/from16 v28, v8

    .end local v2    # "users":[I
    .end local v3    # "name":Ljava/lang/String;
    .end local v4    # "newArgs":[Ljava/lang/String;
    .end local v8    # "opti":I
    .restart local v0    # "name":Ljava/lang/String;
    .local v26, "newArgs":[Ljava/lang/String;
    .local v27, "users":[I
    .local v28, "opti":I
    :goto_12
    iget-object v1, v12, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    const/4 v7, 0x0

    move-object/from16 v2, p1

    move-object/from16 v3, p2

    move-object v4, v0

    move-object/from16 v5, v27

    move-object/from16 v6, v26

    move v8, v15

    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActiveServices;->dumpService(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Ljava/lang/String;[I[Ljava/lang/String;IZ)Z

    move-result v1

    if-nez v1, :cond_34

    .line 9029
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "No services match: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v14, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 9030
    const-string v1, "Use -h for help."

    invoke-virtual {v14, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 9032
    .end local v0    # "name":Ljava/lang/String;
    .end local v26    # "newArgs":[Ljava/lang/String;
    .end local v27    # "users":[I
    :cond_34
    move-object v13, v9

    move/from16 v8, v28

    goto/16 :goto_21

    .end local v28    # "opti":I
    .restart local v8    # "opti":I
    :cond_35
    const-string/jumbo v2, "package"

    invoke-virtual {v2, v9}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_38

    .line 9034
    array-length v2, v10

    if-lt v8, v2, :cond_36

    .line 9035
    const-string/jumbo v0, "package: no package name specified"

    invoke-virtual {v14, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 9036
    const-string v0, "Use -h for help."

    invoke-virtual {v14, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    move-object v0, v10

    goto :goto_13

    .line 9038
    :cond_36
    aget-object v11, v10, v8

    .line 9039
    add-int/lit8 v8, v8, 0x1

    .line 9040
    array-length v2, v10

    sub-int/2addr v2, v8

    new-array v2, v2, [Ljava/lang/String;

    .line 9041
    .local v2, "newArgs":[Ljava/lang/String;
    array-length v3, v10

    if-le v3, v0, :cond_37

    array-length v0, v10

    sub-int/2addr v0, v8

    invoke-static {v10, v8, v2, v1, v0}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    .line 9043
    :cond_37
    move-object v0, v2

    .line 9044
    .end local p3    # "args":[Ljava/lang/String;
    .local v0, "args":[Ljava/lang/String;
    const/4 v8, 0x0

    .line 9045
    const/16 v25, 0x1

    .line 9047
    .end local v2    # "newArgs":[Ljava/lang/String;
    :goto_13
    move-object v10, v0

    move-object v13, v9

    goto/16 :goto_21

    .end local v0    # "args":[Ljava/lang/String;
    .restart local p3    # "args":[Ljava/lang/String;
    :cond_38
    const-string v0, "associations"

    invoke-virtual {v0, v9}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_44

    const-string v0, "as"

    invoke-virtual {v0, v9}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_39

    move/from16 v27, v8

    move-object v13, v9

    goto/16 :goto_15

    .line 9051
    :cond_39
    const-string/jumbo v0, "settings"

    invoke-virtual {v0, v9}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_3a

    .line 9052
    monitor-enter p0

    :try_start_17
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 9053
    iget-object v0, v12, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    invoke-virtual {v0, v14}, Lcom/android/server/am/ActivityManagerConstants;->dump(Ljava/io/PrintWriter;)V

    .line 9054
    monitor-exit p0
    :try_end_17
    .catchall {:try_start_17 .. :try_end_17} :catchall_e

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 9055
    iget-object v1, v12, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v1

    :try_start_18
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 9056
    iget-object v0, v12, Lcom/android/server/am/ActivityManagerService;->mOomAdjuster:Lcom/android/server/am/OomAdjuster;

    invoke-virtual {v0, v14}, Lcom/android/server/am/OomAdjuster;->dumpCachedAppOptimizerSettings(Ljava/io/PrintWriter;)V

    .line 9057
    iget-object v0, v12, Lcom/android/server/am/ActivityManagerService;->mOomAdjuster:Lcom/android/server/am/OomAdjuster;

    invoke-virtual {v0, v14}, Lcom/android/server/am/OomAdjuster;->dumpCacheOomRankerSettings(Ljava/io/PrintWriter;)V

    .line 9058
    monitor-exit v1
    :try_end_18
    .catchall {:try_start_18 .. :try_end_18} :catchall_d

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    move/from16 v26, v8

    move-object v13, v9

    goto/16 :goto_20

    :catchall_d
    move-exception v0

    :try_start_19
    monitor-exit v1
    :try_end_19
    .catchall {:try_start_19 .. :try_end_19} :catchall_d

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v0

    .line 9054
    :catchall_e
    move-exception v0

    :try_start_1a
    monitor-exit p0
    :try_end_1a
    .catchall {:try_start_1a .. :try_end_1a} :catchall_e

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 9059
    :cond_3a
    const-string/jumbo v0, "services"

    invoke-virtual {v0, v9}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_42

    const-string/jumbo v0, "s"

    invoke-virtual {v0, v9}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_3b

    move/from16 v27, v8

    move-object v13, v9

    goto/16 :goto_14

    .line 9073
    :cond_3b
    const-string/jumbo v0, "locks"

    invoke-virtual {v0, v9}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_3c

    .line 9074
    invoke-static/range {p1 .. p3}, Lcom/android/server/LockGuard;->dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V

    move/from16 v26, v8

    move-object v13, v9

    goto/16 :goto_20

    .line 9075
    :cond_3c
    const-string/jumbo v0, "users"

    invoke-virtual {v0, v9}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_3d

    .line 9076
    invoke-direct {v12, v14}, Lcom/android/server/am/ActivityManagerService;->dumpUsers(Ljava/io/PrintWriter;)V

    move/from16 v26, v8

    move-object v13, v9

    goto/16 :goto_20

    .line 9077
    :cond_3d
    const-string v0, "exit-info"

    invoke-virtual {v0, v9}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_3f

    .line 9078
    array-length v0, v10

    if-ge v8, v0, :cond_3e

    .line 9079
    aget-object v11, v10, v8

    .line 9080
    add-int/lit8 v8, v8, 0x1

    .line 9082
    :cond_3e
    iget-object v0, v12, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    iget-object v0, v0, Lcom/android/server/am/ProcessList;->mAppExitInfoTracker:Lcom/android/server/am/AppExitInfoTracker;

    invoke-virtual {v0, v14, v11}, Lcom/android/server/am/AppExitInfoTracker;->dumpHistoryProcessExitInfo(Ljava/io/PrintWriter;Ljava/lang/String;)V

    move-object v13, v9

    goto/16 :goto_21

    .line 9085
    :cond_3f
    iget-object v1, v12, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    move-object/from16 v2, p1

    move-object/from16 v3, p2

    move-object v4, v9

    move-object/from16 v5, p3

    move-object v0, v6

    move v6, v8

    move/from16 v26, v7

    move v7, v15

    move/from16 v27, v8

    .end local v8    # "opti":I
    .local v27, "opti":I
    move/from16 v8, v20

    move-object v13, v9

    move/from16 v0, v26

    .end local v9    # "cmd":Ljava/lang/String;
    .local v13, "cmd":Ljava/lang/String;
    move/from16 v9, v21

    invoke-virtual/range {v1 .. v9}, Lcom/android/server/wm/ActivityTaskManagerInternal;->dumpActivity(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Ljava/lang/String;[Ljava/lang/String;IZZZ)Z

    move-result v1

    if-nez v1, :cond_41

    .line 9087
    new-instance v1, Lcom/android/server/am/ActivityManagerShellCommand;

    invoke-direct {v1, v12, v0}, Lcom/android/server/am/ActivityManagerShellCommand;-><init>(Lcom/android/server/am/ActivityManagerService;Z)V

    .line 9088
    .local v1, "shell":Lcom/android/server/am/ActivityManagerShellCommand;
    const/4 v3, 0x0

    const/4 v5, 0x0

    const/4 v7, 0x0

    new-instance v8, Landroid/os/ResultReceiver;

    const/4 v0, 0x0

    invoke-direct {v8, v0}, Landroid/os/ResultReceiver;-><init>(Landroid/os/Handler;)V

    move-object/from16 v2, p0

    move-object/from16 v4, p1

    move-object/from16 v6, p3

    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerShellCommand;->exec(Landroid/os/Binder;Ljava/io/FileDescriptor;Ljava/io/FileDescriptor;Ljava/io/FileDescriptor;[Ljava/lang/String;Landroid/os/ShellCallback;Landroid/os/ResultReceiver;)I

    move-result v0

    .line 9090
    .local v0, "res":I
    if-gez v0, :cond_40

    .line 9091
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Bad activity command, or no activities match: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v14, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 9092
    const-string v2, "Use -h for help."

    invoke-virtual {v14, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    move/from16 v26, v27

    goto/16 :goto_20

    .line 9090
    :cond_40
    move/from16 v26, v27

    goto/16 :goto_20

    .line 9085
    .end local v0    # "res":I
    .end local v1    # "shell":Lcom/android/server/am/ActivityManagerShellCommand;
    :cond_41
    move/from16 v26, v27

    goto/16 :goto_20

    .line 9059
    .end local v13    # "cmd":Ljava/lang/String;
    .end local v27    # "opti":I
    .restart local v8    # "opti":I
    .restart local v9    # "cmd":Ljava/lang/String;
    :cond_42
    move/from16 v27, v8

    move-object v13, v9

    .line 9060
    .end local v8    # "opti":I
    .end local v9    # "cmd":Ljava/lang/String;
    .restart local v13    # "cmd":Ljava/lang/String;
    .restart local v27    # "opti":I
    :goto_14
    if-eqz v16, :cond_43

    .line 9062
    monitor-enter p0

    :try_start_1b
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 9063
    iget-object v1, v12, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    const/4 v6, 0x1

    move-object/from16 v2, p1

    move-object/from16 v3, p2

    move-object/from16 v4, p3

    move/from16 v5, v27

    move-object v7, v11

    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ActiveServices;->newServiceDumperLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)Lcom/android/server/am/ActiveServices$ServiceDumper;

    move-result-object v0

    .line 9065
    .local v0, "dumper":Lcom/android/server/am/ActiveServices$ServiceDumper;
    monitor-exit p0
    :try_end_1b
    .catchall {:try_start_1b .. :try_end_1b} :catchall_f

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 9066
    invoke-virtual {v0}, Lcom/android/server/am/ActiveServices$ServiceDumper;->dumpWithClient()V

    .line 9067
    .end local v0    # "dumper":Lcom/android/server/am/ActiveServices$ServiceDumper;
    move/from16 v26, v27

    goto/16 :goto_20

    .line 9065
    :catchall_f
    move-exception v0

    :try_start_1c
    monitor-exit p0
    :try_end_1c
    .catchall {:try_start_1c .. :try_end_1c} :catchall_f

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 9068
    :cond_43
    monitor-enter p0

    :try_start_1d
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 9069
    iget-object v1, v12, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    const/4 v6, 0x1

    move-object/from16 v2, p1

    move-object/from16 v3, p2

    move-object/from16 v4, p3

    move/from16 v5, v27

    move-object v7, v11

    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ActiveServices;->newServiceDumperLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)Lcom/android/server/am/ActiveServices$ServiceDumper;

    move-result-object v0

    .line 9070
    invoke-virtual {v0}, Lcom/android/server/am/ActiveServices$ServiceDumper;->dumpLocked()V

    .line 9071
    monitor-exit p0
    :try_end_1d
    .catchall {:try_start_1d .. :try_end_1d} :catchall_10

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    move/from16 v26, v27

    goto/16 :goto_20

    :catchall_10
    move-exception v0

    :try_start_1e
    monitor-exit p0
    :try_end_1e
    .catchall {:try_start_1e .. :try_end_1e} :catchall_10

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 9047
    .end local v13    # "cmd":Ljava/lang/String;
    .end local v27    # "opti":I
    .restart local v8    # "opti":I
    .restart local v9    # "cmd":Ljava/lang/String;
    :cond_44
    move/from16 v27, v8

    move-object v13, v9

    .line 9048
    .end local v8    # "opti":I
    .end local v9    # "cmd":Ljava/lang/String;
    .restart local v13    # "cmd":Ljava/lang/String;
    .restart local v27    # "opti":I
    :goto_15
    monitor-enter p0

    :try_start_1f
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 9049
    const/4 v6, 0x1

    move-object/from16 v1, p0

    move-object/from16 v2, p1

    move-object/from16 v3, p2

    move-object/from16 v4, p3

    move/from16 v5, v27

    move/from16 v7, v16

    move-object v8, v11

    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->dumpAssociationsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;)V

    .line 9050
    monitor-exit p0
    :try_end_1f
    .catchall {:try_start_1f .. :try_end_1f} :catchall_11

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    move/from16 v26, v27

    goto/16 :goto_20

    :catchall_11
    move-exception v0

    :try_start_20
    monitor-exit p0
    :try_end_20
    .catchall {:try_start_20 .. :try_end_20} :catchall_11

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 8998
    .end local v13    # "cmd":Ljava/lang/String;
    .end local v27    # "opti":I
    .restart local v8    # "opti":I
    .restart local v9    # "cmd":Ljava/lang/String;
    :cond_45
    move/from16 v27, v8

    move-object v13, v9

    .line 8999
    .end local v8    # "opti":I
    .end local v9    # "cmd":Ljava/lang/String;
    .restart local v13    # "cmd":Ljava/lang/String;
    .restart local v27    # "opti":I
    :goto_16
    monitor-enter p0

    :try_start_21
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 9000
    iget-object v1, v12, Lcom/android/server/am/ActivityManagerService;->mCpHelper:Lcom/android/server/am/ContentProviderHelper;

    const/4 v6, 0x1

    move-object/from16 v2, p1

    move-object/from16 v3, p2

    move-object/from16 v4, p3

    move/from16 v5, v27

    move-object v7, v11

    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ContentProviderHelper;->dumpProvidersLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V

    .line 9001
    monitor-exit p0
    :try_end_21
    .catchall {:try_start_21 .. :try_end_21} :catchall_12

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    move/from16 v26, v27

    goto/16 :goto_20

    :catchall_12
    move-exception v0

    :try_start_22
    monitor-exit p0
    :try_end_22
    .catchall {:try_start_22 .. :try_end_22} :catchall_12

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 8980
    .end local v13    # "cmd":Ljava/lang/String;
    .end local v27    # "opti":I
    .restart local v7    # "cmd":Ljava/lang/String;
    .restart local v8    # "opti":I
    :cond_46
    move-object v13, v7

    move/from16 v27, v8

    .line 8981
    .end local v7    # "cmd":Ljava/lang/String;
    .end local v8    # "opti":I
    .restart local v13    # "cmd":Ljava/lang/String;
    .restart local v27    # "opti":I
    :goto_17
    const/4 v6, 0x1

    move-object/from16 v1, p0

    move-object/from16 v2, p1

    move-object/from16 v3, p2

    move-object/from16 v4, p3

    move/from16 v5, v27

    move-object v7, v11

    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->dumpPermissions(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V

    move/from16 v26, v27

    goto/16 :goto_20

    .line 8968
    .end local v13    # "cmd":Ljava/lang/String;
    .end local v27    # "opti":I
    .restart local v7    # "cmd":Ljava/lang/String;
    .restart local v8    # "opti":I
    :cond_47
    move-object v13, v7

    move/from16 v27, v8

    .line 8969
    .end local v7    # "cmd":Ljava/lang/String;
    .end local v8    # "opti":I
    .restart local v13    # "cmd":Ljava/lang/String;
    .restart local v27    # "opti":I
    :goto_18
    monitor-enter p0

    :try_start_23
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 8970
    iget-object v1, v12, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    const/4 v4, 0x0

    const/4 v7, 0x1

    const/4 v9, 0x1

    move-object/from16 v2, p1

    move-object/from16 v3, p2

    move-object/from16 v5, p3

    move/from16 v6, v27

    move-object v8, v11

    invoke-virtual/range {v1 .. v9}, Lcom/android/server/am/ProcessList;->dumpOomLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Z[Ljava/lang/String;IZLjava/lang/String;Z)Z

    .line 8971
    monitor-exit p0
    :try_end_23
    .catchall {:try_start_23 .. :try_end_23} :catchall_13

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    move/from16 v26, v27

    goto/16 :goto_20

    :catchall_13
    move-exception v0

    :try_start_24
    monitor-exit p0
    :try_end_24
    .catchall {:try_start_24 .. :try_end_24} :catchall_13

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 8957
    .end local v13    # "cmd":Ljava/lang/String;
    .end local v27    # "opti":I
    .restart local v7    # "cmd":Ljava/lang/String;
    .restart local v8    # "opti":I
    :cond_48
    move-object v13, v7

    move/from16 v27, v8

    .line 8958
    .end local v7    # "cmd":Ljava/lang/String;
    .end local v8    # "opti":I
    .restart local v13    # "cmd":Ljava/lang/String;
    .restart local v27    # "opti":I
    :goto_19
    array-length v0, v10

    move/from16 v9, v27

    .end local v27    # "opti":I
    .local v9, "opti":I
    if-ge v9, v0, :cond_49

    .line 8959
    aget-object v11, v10, v9

    .line 8960
    add-int/lit8 v8, v9, 0x1

    move/from16 v26, v8

    move-object/from16 v27, v11

    .end local v9    # "opti":I
    .restart local v8    # "opti":I
    goto :goto_1a

    .line 8958
    .end local v8    # "opti":I
    .restart local v9    # "opti":I
    :cond_49
    move/from16 v26, v9

    move-object/from16 v27, v11

    .line 8962
    .end local v9    # "opti":I
    .end local v11    # "dumpPackage":Ljava/lang/String;
    .local v26, "opti":I
    .local v27, "dumpPackage":Ljava/lang/String;
    :goto_1a
    monitor-enter p0

    :try_start_25
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 8963
    iget-object v9, v12, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v9
    :try_end_25
    .catchall {:try_start_25 .. :try_end_25} :catchall_15

    :try_start_26
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 8964
    iget-object v1, v12, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    const/4 v6, 0x1

    move-object/from16 v2, p1

    move-object/from16 v3, p2

    move-object/from16 v4, p3

    move/from16 v5, v26

    move-object/from16 v7, v27

    move/from16 v8, v24

    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ProcessList;->dumpProcessesLSP(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;I)V

    .line 8966
    monitor-exit v9
    :try_end_26
    .catchall {:try_start_26 .. :try_end_26} :catchall_14

    :try_start_27
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 8967
    monitor-exit p0
    :try_end_27
    .catchall {:try_start_27 .. :try_end_27} :catchall_15

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    move/from16 v8, v26

    move-object/from16 v11, v27

    goto/16 :goto_21

    .line 8966
    :catchall_14
    move-exception v0

    :try_start_28
    monitor-exit v9
    :try_end_28
    .catchall {:try_start_28 .. :try_end_28} :catchall_14

    :try_start_29
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .end local v13    # "cmd":Ljava/lang/String;
    .end local v15    # "dumpAll":Z
    .end local v16    # "dumpClient":Z
    .end local v17    # "dumpCheckin":Z
    .end local v18    # "dumpCheckinFormat":Z
    .end local v19    # "dumpNormalPriority":Z
    .end local v20    # "dumpVisibleStacksOnly":Z
    .end local v21    # "dumpFocusedStackOnly":Z
    .end local v22    # "origId":J
    .end local v24    # "dumpAppId":I
    .end local v25    # "more":Z
    .end local v26    # "opti":I
    .end local v27    # "dumpPackage":Ljava/lang/String;
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "fd":Ljava/io/FileDescriptor;
    .end local p2    # "pw":Ljava/io/PrintWriter;
    .end local p3    # "args":[Ljava/lang/String;
    .end local p4    # "useProto":Z
    throw v0

    .line 8967
    .restart local v13    # "cmd":Ljava/lang/String;
    .restart local v15    # "dumpAll":Z
    .restart local v16    # "dumpClient":Z
    .restart local v17    # "dumpCheckin":Z
    .restart local v18    # "dumpCheckinFormat":Z
    .restart local v19    # "dumpNormalPriority":Z
    .restart local v20    # "dumpVisibleStacksOnly":Z
    .restart local v21    # "dumpFocusedStackOnly":Z
    .restart local v22    # "origId":J
    .restart local v24    # "dumpAppId":I
    .restart local v25    # "more":Z
    .restart local v26    # "opti":I
    .restart local v27    # "dumpPackage":Ljava/lang/String;
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "fd":Ljava/io/FileDescriptor;
    .restart local p2    # "pw":Ljava/io/PrintWriter;
    .restart local p3    # "args":[Ljava/lang/String;
    .restart local p4    # "useProto":Z
    :catchall_15
    move-exception v0

    monitor-exit p0
    :try_end_29
    .catchall {:try_start_29 .. :try_end_29} :catchall_15

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 8951
    .end local v13    # "cmd":Ljava/lang/String;
    .end local v26    # "opti":I
    .end local v27    # "dumpPackage":Ljava/lang/String;
    .restart local v7    # "cmd":Ljava/lang/String;
    .restart local v8    # "opti":I
    .restart local v11    # "dumpPackage":Ljava/lang/String;
    :cond_4a
    move-object v13, v7

    move v0, v9

    move v9, v8

    .line 8952
    .end local v7    # "cmd":Ljava/lang/String;
    .end local v8    # "opti":I
    .restart local v9    # "opti":I
    .restart local v13    # "cmd":Ljava/lang/String;
    :goto_1b
    array-length v1, v10

    if-ge v9, v1, :cond_4b

    .line 8953
    aget-object v11, v10, v9

    .line 8954
    add-int/lit8 v8, v9, 0x1

    .end local v9    # "opti":I
    .restart local v8    # "opti":I
    goto :goto_1c

    .line 8952
    .end local v8    # "opti":I
    .restart local v9    # "opti":I
    :cond_4b
    move v8, v9

    .line 8956
    .end local v9    # "opti":I
    .restart local v8    # "opti":I
    :goto_1c
    iget-object v1, v12, Lcom/android/server/am/ActivityManagerService;->mPendingIntentController:Lcom/android/server/am/PendingIntentController;

    invoke-virtual {v1, v14, v0, v11}, Lcom/android/server/am/PendingIntentController;->dumpPendingIntents(Ljava/io/PrintWriter;ZLjava/lang/String;)V

    goto/16 :goto_21

    .line 8930
    .end local v13    # "cmd":Ljava/lang/String;
    .restart local v7    # "cmd":Ljava/lang/String;
    :cond_4c
    move-object v13, v7

    move v9, v8

    .line 8931
    .end local v7    # "cmd":Ljava/lang/String;
    .end local v8    # "opti":I
    .restart local v9    # "opti":I
    .restart local v13    # "cmd":Ljava/lang/String;
    :goto_1d
    array-length v0, v10

    if-ge v9, v0, :cond_4d

    .line 8932
    aget-object v11, v10, v9

    .line 8933
    add-int/lit8 v8, v9, 0x1

    move-object/from16 v26, v11

    .end local v9    # "opti":I
    .restart local v8    # "opti":I
    goto :goto_1e

    .line 8931
    .end local v8    # "opti":I
    .restart local v9    # "opti":I
    :cond_4d
    move v8, v9

    move-object/from16 v26, v11

    .line 8935
    .end local v9    # "opti":I
    .end local v11    # "dumpPackage":Ljava/lang/String;
    .restart local v8    # "opti":I
    .local v26, "dumpPackage":Ljava/lang/String;
    :goto_1e
    monitor-enter p0

    :try_start_2a
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 8936
    const/4 v6, 0x1

    move-object/from16 v1, p0

    move-object/from16 v2, p1

    move-object/from16 v3, p2

    move-object/from16 v4, p3

    move v5, v8

    move-object/from16 v7, v26

    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->dumpBroadcastsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V

    .line 8937
    monitor-exit p0
    :try_end_2a
    .catchall {:try_start_2a .. :try_end_2a} :catchall_16

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    move-object/from16 v11, v26

    goto :goto_21

    :catchall_16
    move-exception v0

    :try_start_2b
    monitor-exit p0
    :try_end_2b
    .catchall {:try_start_2b .. :try_end_2b} :catchall_16

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 8906
    .end local v13    # "cmd":Ljava/lang/String;
    .end local v26    # "dumpPackage":Ljava/lang/String;
    .restart local v7    # "cmd":Ljava/lang/String;
    .restart local v11    # "dumpPackage":Ljava/lang/String;
    :cond_4e
    move-object v13, v7

    move v9, v8

    .end local v7    # "cmd":Ljava/lang/String;
    .end local v8    # "opti":I
    .restart local v9    # "opti":I
    .restart local v13    # "cmd":Ljava/lang/String;
    goto :goto_1f

    .line 8905
    .end local v9    # "opti":I
    .end local v13    # "cmd":Ljava/lang/String;
    .restart local v7    # "cmd":Ljava/lang/String;
    .restart local v8    # "opti":I
    :cond_4f
    move-object v13, v7

    move v9, v8

    .end local v7    # "cmd":Ljava/lang/String;
    .end local v8    # "opti":I
    .restart local v9    # "opti":I
    .restart local v13    # "cmd":Ljava/lang/String;
    goto :goto_1f

    .line 8904
    .end local v9    # "opti":I
    .end local v13    # "cmd":Ljava/lang/String;
    .restart local v7    # "cmd":Ljava/lang/String;
    .restart local v8    # "opti":I
    :cond_50
    move-object v13, v7

    move v9, v8

    .end local v7    # "cmd":Ljava/lang/String;
    .end local v8    # "opti":I
    .restart local v9    # "opti":I
    .restart local v13    # "cmd":Ljava/lang/String;
    goto :goto_1f

    .line 8903
    .end local v9    # "opti":I
    .end local v13    # "cmd":Ljava/lang/String;
    .restart local v7    # "cmd":Ljava/lang/String;
    .restart local v8    # "opti":I
    :cond_51
    move-object v13, v7

    move v9, v8

    .line 8908
    .end local v7    # "cmd":Ljava/lang/String;
    .end local v8    # "opti":I
    .restart local v9    # "opti":I
    .restart local v13    # "cmd":Ljava/lang/String;
    :goto_1f
    iget-object v1, v12, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    const/4 v7, 0x1

    move-object v2, v13

    move-object/from16 v3, p1

    move-object/from16 v4, p2

    move-object/from16 v5, p3

    move v6, v9

    move/from16 v8, v16

    move/from16 v26, v9

    .end local v9    # "opti":I
    .local v26, "opti":I
    move-object v9, v11

    invoke-virtual/range {v1 .. v9}, Lcom/android/server/wm/ActivityTaskManagerInternal;->dump(Ljava/lang/String;Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;)V

    .line 9096
    :goto_20
    move/from16 v8, v26

    .end local v26    # "opti":I
    .end local p3    # "args":[Ljava/lang/String;
    .restart local v8    # "opti":I
    .local v10, "args":[Ljava/lang/String;
    :goto_21
    if-nez v25, :cond_52

    .line 9097
    invoke-static/range {v22 .. v23}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9098
    return-void

    .line 9096
    :cond_52
    move-object v13, v10

    move-object/from16 v26, v11

    move/from16 v27, v25

    move/from16 v25, v8

    goto :goto_22

    .line 8900
    .end local v10    # "args":[Ljava/lang/String;
    .end local v13    # "cmd":Ljava/lang/String;
    .restart local p3    # "args":[Ljava/lang/String;
    :cond_53
    move-object v13, v10

    move-object/from16 v26, v11

    move/from16 v27, v25

    move/from16 v25, v8

    .line 9103
    .end local v8    # "opti":I
    .end local v11    # "dumpPackage":Ljava/lang/String;
    .end local p3    # "args":[Ljava/lang/String;
    .local v13, "args":[Ljava/lang/String;
    .local v25, "opti":I
    .local v26, "dumpPackage":Ljava/lang/String;
    .local v27, "more":Z
    :goto_22
    if-eqz v18, :cond_54

    .line 9104
    move-object/from16 v1, p0

    move-object/from16 v2, p1

    move-object/from16 v3, p2

    move-object v4, v13

    move/from16 v5, v25

    move/from16 v6, v17

    move-object/from16 v7, v26

    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->dumpBroadcastStatsCheckinLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V

    goto :goto_23

    .line 9106
    :cond_54
    if-eqz v16, :cond_55

    .line 9109
    const/4 v11, 0x1

    move-object/from16 v1, p0

    move-object/from16 v2, p1

    move-object/from16 v3, p2

    move-object v4, v13

    move/from16 v5, v25

    move v6, v15

    move-object/from16 v7, v26

    move/from16 v8, v16

    move/from16 v9, v19

    move/from16 v10, v24

    invoke-direct/range {v1 .. v11}, Lcom/android/server/am/ActivityManagerService;->dumpEverything(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;ZZIZ)V

    goto :goto_23

    .line 9115
    :cond_55
    monitor-enter p0

    :try_start_2c
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 9116
    const/4 v11, 0x0

    move-object/from16 v1, p0

    move-object/from16 v2, p1

    move-object/from16 v3, p2

    move-object v4, v13

    move/from16 v5, v25

    move v6, v15

    move-object/from16 v7, v26

    move/from16 v8, v16

    move/from16 v9, v19

    move/from16 v10, v24

    invoke-direct/range {v1 .. v11}, Lcom/android/server/am/ActivityManagerService;->dumpEverything(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;ZZIZ)V

    .line 9118
    monitor-exit p0
    :try_end_2c
    .catchall {:try_start_2c .. :try_end_2c} :catchall_17

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 9121
    :goto_23
    invoke-static/range {v22 .. v23}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9122
    return-void

    .line 9118
    :catchall_17
    move-exception v0

    :try_start_2d
    monitor-exit p0
    :try_end_2d
    .catchall {:try_start_2d .. :try_end_2d} :catchall_17

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method private final dumpApplicationMemoryUsage(Ljava/io/FileDescriptor;Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;[Ljava/lang/String;ZLjava/util/ArrayList;)V
    .locals 94
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "opts"    # Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;
    .param p3, "innerArgs"    # [Ljava/lang/String;
    .param p4, "brief"    # Z
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/io/FileDescriptor;",
            "Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;",
            "[",
            "Ljava/lang/String;",
            "Z",
            "Ljava/util/ArrayList<",
            "Lcom/android/server/am/ProcessRecord;",
            ">;)V"
        }
    .end annotation

    .line 11155
    .local p5, "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    move-object/from16 v1, p0

    move-object/from16 v2, p1

    move-object/from16 v15, p2

    move-object/from16 v14, p3

    move-object/from16 v13, p5

    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v11

    .line 11156
    .local v11, "uptimeMs":J
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v9

    .line 11157
    .local v9, "realtimeMs":J
    const/4 v8, 0x3

    new-array v7, v8, [J

    .line 11159
    .local v7, "tmpLong":[J
    move-object/from16 v20, v7

    .end local v7    # "tmpLong":[J
    .local v20, "tmpLong":[J
    const-wide v6, 0x10300000001L

    const/16 v22, 0x2

    const-wide/16 v23, 0x0

    const/4 v3, 0x0

    if-nez v13, :cond_9

    .line 11161
    const-string v0, "N/A"

    .line 11162
    .local v0, "proc":Ljava/lang/String;
    array-length v5, v14

    if-lez v5, :cond_8

    .line 11163
    aget-object v5, v14, v3

    .line 11164
    .end local v0    # "proc":Ljava/lang/String;
    .local v5, "proc":Ljava/lang/String;
    invoke-virtual {v5, v3}, Ljava/lang/String;->charAt(I)C

    move-result v0

    const/16 v8, 0x2d

    if-eq v0, v8, :cond_7

    .line 11165
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    move-object v8, v0

    .line 11167
    .local v8, "nativeProcs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/internal/os/ProcessCpuTracker$Stats;>;"
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateCpuStatsNow()V

    .line 11168
    const/16 v27, -0x1

    .line 11170
    .local v27, "findPid":I
    :try_start_0
    aget-object v0, v14, v3

    invoke-static {v0}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v0
    :try_end_0
    .catch Ljava/lang/NumberFormatException; {:try_start_0 .. :try_end_0} :catch_0

    move/from16 v27, v0

    .line 11172
    goto :goto_0

    .line 11171
    :catch_0
    move-exception v0

    .line 11173
    :goto_0
    move/from16 v0, v27

    .line 11174
    .local v0, "fFindPid":I
    iget-object v3, v1, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    new-instance v4, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda21;

    invoke-direct {v4, v0, v14, v8}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda21;-><init>(I[Ljava/lang/String;Ljava/util/ArrayList;)V

    invoke-virtual {v3, v4}, Lcom/android/server/am/AppProfiler;->forAllCpuStats(Ljava/util/function/Consumer;)V

    .line 11180
    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    move-result v3

    if-lez v3, :cond_6

    .line 11181
    new-instance v3, Landroid/util/proto/ProtoOutputStream;

    invoke-direct {v3, v2}, Landroid/util/proto/ProtoOutputStream;-><init>(Ljava/io/FileDescriptor;)V

    .line 11183
    .local v3, "proto":Landroid/util/proto/ProtoOutputStream;
    invoke-virtual {v3, v6, v7, v11, v12}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 11184
    const-wide v6, 0x10300000002L

    invoke-virtual {v3, v6, v7, v9, v10}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 11185
    const/4 v4, 0x0

    .line 11186
    .local v4, "mi":Landroid/os/Debug$MemoryInfo;
    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    move-result v6

    const/4 v7, 0x1

    sub-int/2addr v6, v7

    .local v6, "i":I
    :goto_1
    if-ltz v6, :cond_5

    .line 11187
    invoke-virtual {v8, v6}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/internal/os/ProcessCpuTracker$Stats;

    .line 11188
    .local v7, "r":Lcom/android/internal/os/ProcessCpuTracker$Stats;
    move/from16 v25, v0

    .end local v0    # "fFindPid":I
    .local v25, "fFindPid":I
    iget v0, v7, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    .line 11190
    .local v0, "pid":I
    if-nez v4, :cond_0

    .line 11191
    new-instance v26, Landroid/os/Debug$MemoryInfo;

    invoke-direct/range {v26 .. v26}, Landroid/os/Debug$MemoryInfo;-><init>()V

    move-object/from16 v4, v26

    .line 11193
    :cond_0
    move-object/from16 v26, v5

    .end local v5    # "proc":Ljava/lang/String;
    .local v26, "proc":Ljava/lang/String;
    iget-boolean v5, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDetails:Z

    if-nez v5, :cond_3

    if-nez p4, :cond_1

    iget-boolean v5, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->oomOnly:Z

    if-nez v5, :cond_1

    move-wide/from16 v46, v9

    move-object/from16 v5, v20

    move-object/from16 v20, v8

    goto :goto_2

    .line 11198
    :cond_1
    move-wide/from16 v46, v9

    move-object/from16 v5, v20

    move-object/from16 v20, v8

    const/4 v8, 0x0

    .end local v8    # "nativeProcs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/internal/os/ProcessCpuTracker$Stats;>;"
    .end local v9    # "realtimeMs":J
    .local v5, "tmpLong":[J
    .local v20, "nativeProcs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/internal/os/ProcessCpuTracker$Stats;>;"
    .local v46, "realtimeMs":J
    invoke-static {v0, v5, v8}, Landroid/os/Debug;->getPss(I[J[J)J

    move-result-wide v9

    .line 11199
    .local v9, "pss":J
    cmp-long v8, v9, v23

    if-nez v8, :cond_2

    .line 11200
    move-wide/from16 v48, v11

    goto :goto_4

    .line 11202
    :cond_2
    long-to-int v8, v9

    iput v8, v4, Landroid/os/Debug$MemoryInfo;->nativePss:I

    .line 11203
    move-wide/from16 v29, v9

    const/4 v8, 0x0

    .end local v9    # "pss":J
    .local v29, "pss":J
    aget-wide v9, v5, v8

    long-to-int v8, v9

    iput v8, v4, Landroid/os/Debug$MemoryInfo;->nativePrivateDirty:I

    .line 11204
    aget-wide v8, v5, v22

    long-to-int v8, v8

    iput v8, v4, Landroid/os/Debug$MemoryInfo;->nativeRss:I

    goto :goto_3

    .line 11193
    .end local v5    # "tmpLong":[J
    .end local v29    # "pss":J
    .end local v46    # "realtimeMs":J
    .restart local v8    # "nativeProcs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/internal/os/ProcessCpuTracker$Stats;>;"
    .local v9, "realtimeMs":J
    .local v20, "tmpLong":[J
    :cond_3
    move-wide/from16 v46, v9

    move-object/from16 v5, v20

    move-object/from16 v20, v8

    .line 11194
    .end local v8    # "nativeProcs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/internal/os/ProcessCpuTracker$Stats;>;"
    .end local v9    # "realtimeMs":J
    .restart local v5    # "tmpLong":[J
    .local v20, "nativeProcs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/internal/os/ProcessCpuTracker$Stats;>;"
    .restart local v46    # "realtimeMs":J
    :goto_2
    invoke-static {v0, v4}, Landroid/os/Debug;->getMemoryInfo(ILandroid/os/Debug$MemoryInfo;)Z

    move-result v8

    if-nez v8, :cond_4

    .line 11195
    move-wide/from16 v48, v11

    goto :goto_4

    .line 11207
    :cond_4
    :goto_3
    const-wide v8, 0x20b00000003L

    invoke-virtual {v3, v8, v9}, Landroid/util/proto/ProtoOutputStream;->start(J)J

    move-result-wide v8

    .line 11209
    .local v8, "nToken":J
    move-wide/from16 v48, v11

    const-wide v10, 0x10500000001L

    .end local v11    # "uptimeMs":J
    .local v48, "uptimeMs":J
    invoke-virtual {v3, v10, v11, v0}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 11210
    iget-object v10, v7, Lcom/android/internal/os/ProcessCpuTracker$Stats;->baseName:Ljava/lang/String;

    const-wide v11, 0x10900000002L

    invoke-virtual {v3, v11, v12, v10}, Landroid/util/proto/ProtoOutputStream;->write(JLjava/lang/String;)V

    .line 11212
    iget-boolean v10, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDalvik:Z

    iget-boolean v11, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpSummaryOnly:Z

    const-wide/16 v34, 0x0

    const-wide/16 v36, 0x0

    const-wide/16 v38, 0x0

    const-wide/16 v40, 0x0

    const-wide/16 v42, 0x0

    const-wide/16 v44, 0x0

    move-object/from16 v30, v3

    move-object/from16 v31, v4

    move/from16 v32, v10

    move/from16 v33, v11

    invoke-static/range {v30 .. v45}, Landroid/app/ActivityThread;->dumpMemInfoTable(Landroid/util/proto/ProtoOutputStream;Landroid/os/Debug$MemoryInfo;ZZJJJJJJ)V

    .line 11215
    invoke-virtual {v3, v8, v9}, Landroid/util/proto/ProtoOutputStream;->end(J)V

    .line 11186
    .end local v0    # "pid":I
    .end local v7    # "r":Lcom/android/internal/os/ProcessCpuTracker$Stats;
    .end local v8    # "nToken":J
    :goto_4
    add-int/lit8 v6, v6, -0x1

    move-object/from16 v8, v20

    move/from16 v0, v25

    move-wide/from16 v9, v46

    move-wide/from16 v11, v48

    move-object/from16 v20, v5

    move-object/from16 v5, v26

    goto/16 :goto_1

    .line 11218
    .end local v6    # "i":I
    .end local v25    # "fFindPid":I
    .end local v26    # "proc":Ljava/lang/String;
    .end local v46    # "realtimeMs":J
    .end local v48    # "uptimeMs":J
    .local v0, "fFindPid":I
    .local v5, "proc":Ljava/lang/String;
    .local v8, "nativeProcs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/internal/os/ProcessCpuTracker$Stats;>;"
    .restart local v9    # "realtimeMs":J
    .restart local v11    # "uptimeMs":J
    .local v20, "tmpLong":[J
    :cond_5
    invoke-virtual {v3}, Landroid/util/proto/ProtoOutputStream;->flush()V

    .line 11219
    return-void

    .line 11180
    .end local v3    # "proto":Landroid/util/proto/ProtoOutputStream;
    .end local v4    # "mi":Landroid/os/Debug$MemoryInfo;
    :cond_6
    move/from16 v25, v0

    move-object/from16 v26, v5

    move-wide/from16 v46, v9

    move-wide/from16 v48, v11

    move-object/from16 v5, v20

    move-object/from16 v20, v8

    .end local v0    # "fFindPid":I
    .end local v8    # "nativeProcs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/internal/os/ProcessCpuTracker$Stats;>;"
    .end local v9    # "realtimeMs":J
    .end local v11    # "uptimeMs":J
    .local v5, "tmpLong":[J
    .local v20, "nativeProcs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/internal/os/ProcessCpuTracker$Stats;>;"
    .restart local v25    # "fFindPid":I
    .restart local v26    # "proc":Ljava/lang/String;
    .restart local v46    # "realtimeMs":J
    .restart local v48    # "uptimeMs":J
    goto :goto_5

    .line 11164
    .end local v25    # "fFindPid":I
    .end local v26    # "proc":Ljava/lang/String;
    .end local v27    # "findPid":I
    .end local v46    # "realtimeMs":J
    .end local v48    # "uptimeMs":J
    .local v5, "proc":Ljava/lang/String;
    .restart local v9    # "realtimeMs":J
    .restart local v11    # "uptimeMs":J
    .local v20, "tmpLong":[J
    :cond_7
    move-object/from16 v26, v5

    move-wide/from16 v46, v9

    move-wide/from16 v48, v11

    move-object/from16 v5, v20

    .line 11223
    .end local v9    # "realtimeMs":J
    .end local v11    # "uptimeMs":J
    .end local v20    # "tmpLong":[J
    .local v5, "tmpLong":[J
    .restart local v26    # "proc":Ljava/lang/String;
    .restart local v46    # "realtimeMs":J
    .restart local v48    # "uptimeMs":J
    :goto_5
    move-object/from16 v0, v26

    goto :goto_6

    .line 11162
    .end local v5    # "tmpLong":[J
    .end local v26    # "proc":Ljava/lang/String;
    .end local v46    # "realtimeMs":J
    .end local v48    # "uptimeMs":J
    .local v0, "proc":Ljava/lang/String;
    .restart local v9    # "realtimeMs":J
    .restart local v11    # "uptimeMs":J
    .restart local v20    # "tmpLong":[J
    :cond_8
    move-wide/from16 v46, v9

    move-wide/from16 v48, v11

    move-object/from16 v5, v20

    .line 11223
    .end local v9    # "realtimeMs":J
    .end local v11    # "uptimeMs":J
    .end local v20    # "tmpLong":[J
    .restart local v5    # "tmpLong":[J
    .restart local v46    # "realtimeMs":J
    .restart local v48    # "uptimeMs":J
    :goto_6
    const-string v3, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "No process found for: "

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const/4 v6, 0x0

    aget-object v6, v14, v6

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 11224
    return-void

    .line 11227
    .end local v0    # "proc":Ljava/lang/String;
    .end local v5    # "tmpLong":[J
    .end local v46    # "realtimeMs":J
    .end local v48    # "uptimeMs":J
    .restart local v9    # "realtimeMs":J
    .restart local v11    # "uptimeMs":J
    .restart local v20    # "tmpLong":[J
    :cond_9
    move-wide/from16 v46, v9

    move-wide/from16 v48, v11

    move-object/from16 v5, v20

    .end local v9    # "realtimeMs":J
    .end local v11    # "uptimeMs":J
    .end local v20    # "tmpLong":[J
    .restart local v5    # "tmpLong":[J
    .restart local v46    # "realtimeMs":J
    .restart local v48    # "uptimeMs":J
    if-nez p4, :cond_c

    iget-boolean v0, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->oomOnly:Z

    if-nez v0, :cond_c

    invoke-virtual/range {p5 .. p5}, Ljava/util/ArrayList;->size()I

    move-result v0

    const/4 v3, 0x1

    if-eq v0, v3, :cond_b

    iget-boolean v0, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCheckinRequest:Z

    if-nez v0, :cond_b

    iget-boolean v0, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->packages:Z

    if-eqz v0, :cond_a

    goto :goto_7

    :cond_a
    const/4 v4, 0x1

    goto :goto_8

    .line 11228
    :cond_b
    :goto_7
    const/4 v4, 0x1

    iput-boolean v4, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDetails:Z

    goto :goto_8

    .line 11227
    :cond_c
    const/4 v4, 0x1

    .line 11230
    :goto_8
    invoke-virtual/range {p5 .. p5}, Ljava/util/ArrayList;->size()I

    move-result v12

    .line 11231
    .local v12, "numProcs":I
    if-le v12, v4, :cond_d

    iget-boolean v0, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->packages:Z

    if-nez v0, :cond_d

    move v0, v4

    goto :goto_9

    :cond_d
    const/4 v0, 0x0

    :goto_9
    move/from16 v27, v0

    .line 11232
    .local v27, "collectNative":Z
    if-eqz v27, :cond_e

    .line 11235
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateCpuStatsNow()V

    .line 11238
    :cond_e
    new-instance v0, Landroid/util/proto/ProtoOutputStream;

    invoke-direct {v0, v2}, Landroid/util/proto/ProtoOutputStream;-><init>(Ljava/io/FileDescriptor;)V

    move-object v11, v0

    .line 11240
    .local v11, "proto":Landroid/util/proto/ProtoOutputStream;
    move-wide/from16 v9, v48

    .end local v48    # "uptimeMs":J
    .local v9, "uptimeMs":J
    invoke-virtual {v11, v6, v7, v9, v10}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 11241
    move-wide/from16 v6, v46

    const-wide v8, 0x10300000002L

    .end local v9    # "uptimeMs":J
    .end local v46    # "realtimeMs":J
    .local v6, "realtimeMs":J
    .restart local v48    # "uptimeMs":J
    invoke-virtual {v11, v8, v9, v6, v7}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 11243
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    move-object v10, v0

    .line 11244
    .local v10, "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    new-instance v0, Landroid/util/SparseArray;

    invoke-direct {v0}, Landroid/util/SparseArray;-><init>()V

    move-object v9, v0

    .line 11245
    .local v9, "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    const/16 v0, 0xf

    new-array v8, v0, [J

    .line 11246
    .local v8, "ss":[J
    iget-boolean v3, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDalvik:Z

    if-eqz v3, :cond_f

    new-array v3, v0, [J

    goto :goto_a

    .line 11247
    :cond_f
    sget-object v3, Llibcore/util/EmptyArray;->LONG:[J

    :goto_a
    nop

    .line 11248
    .local v3, "dalvikSubitemPss":[J
    iget-boolean v4, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDalvik:Z

    if-eqz v4, :cond_10

    new-array v4, v0, [J

    goto :goto_b

    .line 11249
    :cond_10
    sget-object v4, Llibcore/util/EmptyArray;->LONG:[J

    :goto_b
    move-object/from16 v26, v4

    .line 11250
    .local v26, "dalvikSubitemSwapPss":[J
    iget-boolean v4, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDalvik:Z

    if-eqz v4, :cond_11

    new-array v0, v0, [J

    goto :goto_c

    .line 11251
    :cond_11
    sget-object v0, Llibcore/util/EmptyArray;->LONG:[J

    :goto_c
    move-object/from16 v45, v0

    .line 11252
    .local v45, "dalvikSubitemRss":[J
    const/16 v4, 0x11

    new-array v2, v4, [J

    .line 11253
    .local v2, "miscPss":[J
    new-array v14, v4, [J

    .line 11254
    .local v14, "miscSwapPss":[J
    move-object/from16 v46, v14

    .end local v14    # "miscSwapPss":[J
    .local v46, "miscSwapPss":[J
    new-array v14, v4, [J

    .line 11256
    .local v14, "miscRss":[J
    sget-object v0, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_LABEL:[Ljava/lang/String;

    array-length v4, v0

    new-array v4, v4, [J

    .line 11257
    .local v4, "oomPss":[J
    move-object/from16 v50, v3

    .end local v3    # "dalvikSubitemPss":[J
    .local v50, "dalvikSubitemPss":[J
    array-length v3, v0

    new-array v3, v3, [J

    .line 11258
    .local v3, "oomSwapPss":[J
    move-object/from16 v51, v3

    .end local v3    # "oomSwapPss":[J
    .local v51, "oomSwapPss":[J
    array-length v3, v0

    new-array v3, v3, [J

    .line 11259
    .local v3, "oomRss":[J
    array-length v0, v0

    move-object/from16 v52, v14

    .end local v14    # "miscRss":[J
    .local v52, "miscRss":[J
    new-array v14, v0, [Ljava/util/ArrayList;

    .line 11262
    .local v14, "oomProcs":[Ljava/util/ArrayList;, "[Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    const-wide/16 v29, 0x0

    .line 11263
    .local v29, "cachedPss":J
    const-wide/16 v31, 0x0

    .line 11264
    .local v31, "cachedSwapPss":J
    const/4 v0, 0x0

    .line 11266
    .local v0, "hasSwapPss":Z
    const/16 v33, 0x0

    .line 11267
    .local v33, "mi":Landroid/os/Debug$MemoryInfo;
    add-int/lit8 v34, v12, -0x1

    move/from16 v37, v0

    move/from16 v57, v12

    move-wide/from16 v53, v29

    move-wide/from16 v55, v31

    move/from16 v12, v34

    .end local v0    # "hasSwapPss":Z
    .end local v29    # "cachedPss":J
    .end local v31    # "cachedSwapPss":J
    .local v12, "i":I
    .local v37, "hasSwapPss":Z
    .local v53, "cachedPss":J
    .local v55, "cachedSwapPss":J
    .local v57, "numProcs":I
    :goto_d
    const/16 v58, 0x5

    const/16 v59, 0x4

    const/16 v60, 0x9

    const/16 v61, 0x8

    const/16 v62, 0x7

    const/16 v63, 0x6

    move-object/from16 v64, v14

    .end local v14    # "oomProcs":[Ljava/util/ArrayList;, "[Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .local v64, "oomProcs":[Ljava/util/ArrayList;, "[Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    if-ltz v12, :cond_26

    .line 11268
    invoke-virtual {v13, v12}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v0

    move-object v14, v0

    check-cast v14, Lcom/android/server/am/ProcessRecord;

    .line 11273
    .local v14, "r":Lcom/android/server/am/ProcessRecord;
    move-object/from16 v65, v3

    .end local v3    # "oomRss":[J
    .local v65, "oomRss":[J
    iget-object v3, v1, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v3

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 11274
    invoke-virtual {v14}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v0

    move-object/from16 v78, v0

    .line 11275
    .local v78, "thread":Landroid/app/IApplicationThread;
    invoke-virtual {v14}, Lcom/android/server/am/ProcessRecord;->getPid()I

    move-result v0

    move/from16 v79, v0

    .line 11276
    .local v79, "pid":I
    iget-object v0, v14, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    invoke-virtual {v0}, Lcom/android/server/am/ProcessStateRecord;->getSetAdjWithServices()I

    move-result v0

    move/from16 v80, v0

    .line 11277
    .local v80, "oomAdj":I
    invoke-virtual {v14}, Lcom/android/server/am/ProcessRecord;->hasActivities()Z

    move-result v0

    move/from16 v81, v0

    .line 11278
    .local v81, "hasActivities":Z
    monitor-exit v3
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_8

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 11279
    if-nez v78, :cond_12

    .line 11280
    move-object/from16 v25, v2

    move-object/from16 v88, v5

    move-wide/from16 v90, v6

    move-object/from16 v21, v8

    move-object v2, v9

    move-object/from16 v29, v11

    move/from16 v30, v12

    move-object/from16 v13, v50

    move-object/from16 v50, v51

    move-object/from16 v51, v65

    const-wide v16, 0x10900000002L

    const-wide v18, 0x10500000001L

    const/16 v44, 0x0

    const/16 v87, 0x0

    const/16 v89, 0x3

    move-object v7, v4

    move-object v12, v10

    goto/16 :goto_1f

    .line 11282
    :cond_12
    if-nez v33, :cond_13

    .line 11283
    new-instance v0, Landroid/os/Debug$MemoryInfo;

    invoke-direct {v0}, Landroid/os/Debug$MemoryInfo;-><init>()V

    move-object/from16 v33, v0

    move-object/from16 v3, v33

    goto :goto_e

    .line 11282
    :cond_13
    move-object/from16 v3, v33

    .line 11288
    .end local v33    # "mi":Landroid/os/Debug$MemoryInfo;
    .local v3, "mi":Landroid/os/Debug$MemoryInfo;
    :goto_e
    iget-boolean v0, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDetails:Z

    if-nez v0, :cond_16

    if-nez p4, :cond_14

    iget-boolean v0, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->oomOnly:Z

    if-nez v0, :cond_14

    move-wide/from16 v66, v6

    move-object/from16 v21, v8

    move/from16 v13, v79

    const/4 v6, 0x0

    goto :goto_f

    .line 11297
    :cond_14
    const/4 v0, 0x3

    .line 11298
    .local v0, "reportType":I
    invoke-static {}, Landroid/os/SystemClock;->currentThreadTimeMillis()J

    move-result-wide v29

    .line 11299
    .local v29, "startTime":J
    move-wide/from16 v66, v6

    move-object/from16 v21, v8

    move/from16 v13, v79

    const/4 v6, 0x0

    .end local v6    # "realtimeMs":J
    .end local v8    # "ss":[J
    .end local v79    # "pid":I
    .local v13, "pid":I
    .local v21, "ss":[J
    .local v66, "realtimeMs":J
    invoke-static {v13, v5, v6}, Landroid/os/Debug;->getPss(I[J[J)J

    move-result-wide v7

    .line 11300
    .local v7, "pss":J
    cmp-long v31, v7, v23

    if-nez v31, :cond_15

    .line 11301
    const/4 v6, 0x0

    goto :goto_10

    .line 11303
    :cond_15
    long-to-int v6, v7

    iput v6, v3, Landroid/os/Debug$MemoryInfo;->dalvikPss:I

    .line 11304
    invoke-static {}, Landroid/os/SystemClock;->currentThreadTimeMillis()J

    move-result-wide v31

    .line 11305
    .local v31, "endTime":J
    move-wide/from16 v33, v7

    const/4 v6, 0x0

    .end local v7    # "pss":J
    .local v33, "pss":J
    aget-wide v7, v5, v6

    long-to-int v7, v7

    iput v7, v3, Landroid/os/Debug$MemoryInfo;->dalvikPrivateDirty:I

    .line 11306
    aget-wide v7, v5, v22

    long-to-int v7, v7

    iput v7, v3, Landroid/os/Debug$MemoryInfo;->dalvikRss:I

    move/from16 v28, v0

    move-wide/from16 v82, v29

    move-wide/from16 v84, v31

    move/from16 v79, v37

    goto :goto_11

    .line 11288
    .end local v0    # "reportType":I
    .end local v13    # "pid":I
    .end local v21    # "ss":[J
    .end local v29    # "startTime":J
    .end local v31    # "endTime":J
    .end local v33    # "pss":J
    .end local v66    # "realtimeMs":J
    .restart local v6    # "realtimeMs":J
    .restart local v8    # "ss":[J
    .restart local v79    # "pid":I
    :cond_16
    move-wide/from16 v66, v6

    move-object/from16 v21, v8

    move/from16 v13, v79

    const/4 v6, 0x0

    .line 11289
    .end local v6    # "realtimeMs":J
    .end local v8    # "ss":[J
    .end local v79    # "pid":I
    .restart local v13    # "pid":I
    .restart local v21    # "ss":[J
    .restart local v66    # "realtimeMs":J
    :goto_f
    const/4 v0, 0x4

    .line 11290
    .restart local v0    # "reportType":I
    invoke-static {}, Landroid/os/SystemClock;->currentThreadTimeMillis()J

    move-result-wide v29

    .line 11291
    .restart local v29    # "startTime":J
    invoke-static {v13, v3}, Landroid/os/Debug;->getMemoryInfo(ILandroid/os/Debug$MemoryInfo;)Z

    move-result v7

    if-nez v7, :cond_17

    .line 11292
    nop

    .line 11267
    .end local v0    # "reportType":I
    .end local v13    # "pid":I
    .end local v14    # "r":Lcom/android/server/am/ProcessRecord;
    .end local v29    # "startTime":J
    .end local v78    # "thread":Landroid/app/IApplicationThread;
    .end local v80    # "oomAdj":I
    .end local v81    # "hasActivities":Z
    :goto_10
    move-object/from16 v25, v2

    move-object/from16 v33, v3

    move-object v7, v4

    move-object/from16 v88, v5

    move/from16 v44, v6

    move-object v2, v9

    move-object/from16 v29, v11

    move/from16 v30, v12

    move-object/from16 v13, v50

    move-object/from16 v50, v51

    move-object/from16 v51, v65

    move-wide/from16 v90, v66

    const-wide v16, 0x10900000002L

    const-wide v18, 0x10500000001L

    const/16 v87, 0x0

    const/16 v89, 0x3

    move-object v12, v10

    goto/16 :goto_1f

    .line 11294
    .restart local v0    # "reportType":I
    .restart local v13    # "pid":I
    .restart local v14    # "r":Lcom/android/server/am/ProcessRecord;
    .restart local v29    # "startTime":J
    .restart local v78    # "thread":Landroid/app/IApplicationThread;
    .restart local v80    # "oomAdj":I
    .restart local v81    # "hasActivities":Z
    :cond_17
    invoke-static {}, Landroid/os/SystemClock;->currentThreadTimeMillis()J

    move-result-wide v31

    .line 11295
    .restart local v31    # "endTime":J
    iget-boolean v7, v3, Landroid/os/Debug$MemoryInfo;->hasSwappedOutPss:Z

    move/from16 v28, v0

    move/from16 v79, v7

    move-wide/from16 v82, v29

    move-wide/from16 v84, v31

    .line 11308
    .end local v0    # "reportType":I
    .end local v29    # "startTime":J
    .end local v31    # "endTime":J
    .end local v37    # "hasSwapPss":Z
    .local v28, "reportType":I
    .local v79, "hasSwapPss":Z
    .local v82, "startTime":J
    .local v84, "endTime":J
    :goto_11
    iget-boolean v0, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDetails:Z

    if-eqz v0, :cond_19

    .line 11309
    iget-boolean v0, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->localOnly:Z

    if-eqz v0, :cond_18

    .line 11310
    const-wide v7, 0x20b00000004L

    invoke-virtual {v11, v7, v8}, Landroid/util/proto/ProtoOutputStream;->start(J)J

    move-result-wide v7

    .line 11311
    .local v7, "aToken":J
    move-wide/from16 v70, v7

    .end local v7    # "aToken":J
    .local v70, "aToken":J
    const-wide v6, 0x10b00000001L

    invoke-virtual {v11, v6, v7}, Landroid/util/proto/ProtoOutputStream;->start(J)J

    move-result-wide v6

    .line 11312
    .local v6, "mToken":J
    move-object/from16 v72, v4

    move-object v8, v5

    const-wide v4, 0x10500000001L

    .end local v4    # "oomPss":[J
    .end local v5    # "tmpLong":[J
    .local v8, "tmpLong":[J
    .local v72, "oomPss":[J
    invoke-virtual {v11, v4, v5, v13}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 11313
    iget-object v0, v14, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    const-wide v4, 0x10900000002L

    invoke-virtual {v11, v4, v5, v0}, Landroid/util/proto/ProtoOutputStream;->write(JLjava/lang/String;)V

    .line 11314
    iget-boolean v0, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDalvik:Z

    iget-boolean v4, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpSummaryOnly:Z

    const-wide/16 v33, 0x0

    const-wide/16 v35, 0x0

    const-wide/16 v37, 0x0

    const-wide/16 v39, 0x0

    const-wide/16 v41, 0x0

    const-wide/16 v43, 0x0

    move-object/from16 v29, v11

    move-object/from16 v30, v3

    move/from16 v31, v0

    move/from16 v32, v4

    invoke-static/range {v29 .. v44}, Landroid/app/ActivityThread;->dumpMemInfoTable(Landroid/util/proto/ProtoOutputStream;Landroid/os/Debug$MemoryInfo;ZZJJJJJJ)V

    .line 11316
    invoke-virtual {v11, v6, v7}, Landroid/util/proto/ProtoOutputStream;->end(J)V

    .line 11317
    move-wide/from16 v4, v70

    .end local v70    # "aToken":J
    .local v4, "aToken":J
    invoke-virtual {v11, v4, v5}, Landroid/util/proto/ProtoOutputStream;->end(J)V

    .line 11318
    .end local v4    # "aToken":J
    .end local v6    # "mToken":J
    move-object/from16 v25, v2

    move-object/from16 v31, v3

    move-object/from16 v88, v8

    move-object v2, v9

    move/from16 v30, v12

    move-object/from16 v20, v50

    move-object/from16 v50, v51

    move-object/from16 v51, v65

    move-wide/from16 v90, v66

    move-object/from16 v86, v72

    const-wide v16, 0x10900000002L

    const-wide v18, 0x10500000001L

    const/16 v44, 0x0

    const/16 v87, 0x0

    const/16 v89, 0x3

    move-object v12, v10

    goto/16 :goto_16

    .line 11320
    .end local v8    # "tmpLong":[J
    .end local v72    # "oomPss":[J
    .local v4, "oomPss":[J
    .restart local v5    # "tmpLong":[J
    :cond_18
    move-object/from16 v72, v4

    move-object v8, v5

    .end local v4    # "oomPss":[J
    .end local v5    # "tmpLong":[J
    .restart local v8    # "tmpLong":[J
    .restart local v72    # "oomPss":[J
    :try_start_2
    new-instance v0, Lcom/android/internal/os/ByteTransferPipe;

    invoke-direct {v0}, Lcom/android/internal/os/ByteTransferPipe;-><init>()V
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_4
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_3

    move-object/from16 v29, v0

    .line 11322
    .local v29, "tp":Lcom/android/internal/os/ByteTransferPipe;
    :try_start_3
    invoke-virtual/range {v29 .. v29}, Lcom/android/internal/os/ByteTransferPipe;->getWriteFd()Landroid/os/ParcelFileDescriptor;

    move-result-object v4

    iget-boolean v6, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpFullDetails:Z

    iget-boolean v7, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDalvik:Z

    iget-boolean v0, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpSummaryOnly:Z

    iget-boolean v5, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpUnreachable:Z
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    move-object/from16 v31, v3

    move/from16 v30, v12

    move-object/from16 v12, v50

    move-object/from16 v50, v51

    move-object/from16 v51, v65

    const/16 v44, 0x0

    .end local v3    # "mi":Landroid/os/Debug$MemoryInfo;
    .end local v65    # "oomRss":[J
    .local v12, "dalvikSubitemPss":[J
    .local v30, "i":I
    .local v31, "mi":Landroid/os/Debug$MemoryInfo;
    .local v50, "oomSwapPss":[J
    .local v51, "oomRss":[J
    move-object/from16 v3, v78

    move-object/from16 v25, v2

    move-object/from16 v86, v72

    const/4 v2, 0x1

    const-wide v16, 0x10900000002L

    const-wide v18, 0x10500000001L

    .end local v2    # "miscPss":[J
    .end local v72    # "oomPss":[J
    .local v25, "miscPss":[J
    .local v86, "oomPss":[J
    move/from16 v32, v5

    move-object/from16 v5, v31

    move-wide/from16 v33, v66

    const/16 v87, 0x0

    .end local v66    # "realtimeMs":J
    .local v33, "realtimeMs":J
    move-object/from16 v88, v8

    .end local v8    # "tmpLong":[J
    .local v88, "tmpLong":[J
    const/16 v89, 0x3

    move v8, v0

    move-object v2, v9

    move-wide/from16 v90, v33

    .end local v9    # "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .end local v33    # "realtimeMs":J
    .local v2, "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .local v90, "realtimeMs":J
    move/from16 v9, v32

    move-object/from16 v20, v12

    move-object v12, v10

    .end local v10    # "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .local v12, "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .local v20, "dalvikSubitemPss":[J
    move-object/from16 v10, p3

    :try_start_4
    invoke-interface/range {v3 .. v10}, Landroid/app/IApplicationThread;->dumpMemInfoProto(Landroid/os/ParcelFileDescriptor;Landroid/os/Debug$MemoryInfo;ZZZZ[Ljava/lang/String;)V

    .line 11325
    const-wide v3, 0x20b00000004L

    invoke-virtual/range {v29 .. v29}, Lcom/android/internal/os/ByteTransferPipe;->get()[B

    move-result-object v0

    invoke-virtual {v11, v3, v4, v0}, Landroid/util/proto/ProtoOutputStream;->write(J[B)V
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    .line 11327
    :try_start_5
    invoke-virtual/range {v29 .. v29}, Lcom/android/internal/os/ByteTransferPipe;->kill()V

    .line 11328
    goto/16 :goto_15

    .line 11327
    :catchall_0
    move-exception v0

    goto :goto_12

    .end local v20    # "dalvikSubitemPss":[J
    .end local v25    # "miscPss":[J
    .end local v30    # "i":I
    .end local v31    # "mi":Landroid/os/Debug$MemoryInfo;
    .end local v86    # "oomPss":[J
    .end local v88    # "tmpLong":[J
    .end local v90    # "realtimeMs":J
    .local v2, "miscPss":[J
    .restart local v3    # "mi":Landroid/os/Debug$MemoryInfo;
    .restart local v8    # "tmpLong":[J
    .restart local v9    # "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .restart local v10    # "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .local v12, "i":I
    .local v50, "dalvikSubitemPss":[J
    .local v51, "oomSwapPss":[J
    .restart local v65    # "oomRss":[J
    .restart local v66    # "realtimeMs":J
    .restart local v72    # "oomPss":[J
    :catchall_1
    move-exception v0

    move-object/from16 v25, v2

    move-object/from16 v31, v3

    move-object/from16 v88, v8

    move-object v2, v9

    move/from16 v30, v12

    move-object/from16 v20, v50

    move-object/from16 v50, v51

    move-object/from16 v51, v65

    move-wide/from16 v90, v66

    move-object/from16 v86, v72

    const-wide v16, 0x10900000002L

    const-wide v18, 0x10500000001L

    const/16 v44, 0x0

    const/16 v87, 0x0

    const/16 v89, 0x3

    move-object v12, v10

    .end local v3    # "mi":Landroid/os/Debug$MemoryInfo;
    .end local v8    # "tmpLong":[J
    .end local v9    # "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .end local v10    # "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .end local v65    # "oomRss":[J
    .end local v66    # "realtimeMs":J
    .end local v72    # "oomPss":[J
    .local v2, "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .local v12, "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .restart local v20    # "dalvikSubitemPss":[J
    .restart local v25    # "miscPss":[J
    .restart local v30    # "i":I
    .restart local v31    # "mi":Landroid/os/Debug$MemoryInfo;
    .local v50, "oomSwapPss":[J
    .local v51, "oomRss":[J
    .restart local v86    # "oomPss":[J
    .restart local v88    # "tmpLong":[J
    .restart local v90    # "realtimeMs":J
    :goto_12
    invoke-virtual/range {v29 .. v29}, Lcom/android/internal/os/ByteTransferPipe;->kill()V

    .line 11328
    nop

    .end local v2    # "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .end local v11    # "proto":Landroid/util/proto/ProtoOutputStream;
    .end local v12    # "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .end local v13    # "pid":I
    .end local v14    # "r":Lcom/android/server/am/ProcessRecord;
    .end local v20    # "dalvikSubitemPss":[J
    .end local v21    # "ss":[J
    .end local v25    # "miscPss":[J
    .end local v26    # "dalvikSubitemSwapPss":[J
    .end local v27    # "collectNative":Z
    .end local v28    # "reportType":I
    .end local v30    # "i":I
    .end local v31    # "mi":Landroid/os/Debug$MemoryInfo;
    .end local v45    # "dalvikSubitemRss":[J
    .end local v46    # "miscSwapPss":[J
    .end local v48    # "uptimeMs":J
    .end local v50    # "oomSwapPss":[J
    .end local v51    # "oomRss":[J
    .end local v52    # "miscRss":[J
    .end local v53    # "cachedPss":J
    .end local v55    # "cachedSwapPss":J
    .end local v57    # "numProcs":I
    .end local v64    # "oomProcs":[Ljava/util/ArrayList;, "[Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .end local v78    # "thread":Landroid/app/IApplicationThread;
    .end local v79    # "hasSwapPss":Z
    .end local v80    # "oomAdj":I
    .end local v81    # "hasActivities":Z
    .end local v82    # "startTime":J
    .end local v84    # "endTime":J
    .end local v86    # "oomPss":[J
    .end local v88    # "tmpLong":[J
    .end local v90    # "realtimeMs":J
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "fd":Ljava/io/FileDescriptor;
    .end local p2    # "opts":Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;
    .end local p3    # "innerArgs":[Ljava/lang/String;
    .end local p4    # "brief":Z
    .end local p5    # "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    throw v0
    :try_end_5
    .catch Ljava/io/IOException; {:try_start_5 .. :try_end_5} :catch_2
    .catch Landroid/os/RemoteException; {:try_start_5 .. :try_end_5} :catch_1

    .line 11331
    .end local v29    # "tp":Lcom/android/internal/os/ByteTransferPipe;
    .restart local v2    # "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .restart local v11    # "proto":Landroid/util/proto/ProtoOutputStream;
    .restart local v12    # "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .restart local v13    # "pid":I
    .restart local v14    # "r":Lcom/android/server/am/ProcessRecord;
    .restart local v20    # "dalvikSubitemPss":[J
    .restart local v21    # "ss":[J
    .restart local v25    # "miscPss":[J
    .restart local v26    # "dalvikSubitemSwapPss":[J
    .restart local v27    # "collectNative":Z
    .restart local v28    # "reportType":I
    .restart local v30    # "i":I
    .restart local v31    # "mi":Landroid/os/Debug$MemoryInfo;
    .restart local v45    # "dalvikSubitemRss":[J
    .restart local v46    # "miscSwapPss":[J
    .restart local v48    # "uptimeMs":J
    .restart local v50    # "oomSwapPss":[J
    .restart local v51    # "oomRss":[J
    .restart local v52    # "miscRss":[J
    .restart local v53    # "cachedPss":J
    .restart local v55    # "cachedSwapPss":J
    .restart local v57    # "numProcs":I
    .restart local v64    # "oomProcs":[Ljava/util/ArrayList;, "[Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .restart local v78    # "thread":Landroid/app/IApplicationThread;
    .restart local v79    # "hasSwapPss":Z
    .restart local v80    # "oomAdj":I
    .restart local v81    # "hasActivities":Z
    .restart local v82    # "startTime":J
    .restart local v84    # "endTime":J
    .restart local v86    # "oomPss":[J
    .restart local v88    # "tmpLong":[J
    .restart local v90    # "realtimeMs":J
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "fd":Ljava/io/FileDescriptor;
    .restart local p2    # "opts":Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;
    .restart local p3    # "innerArgs":[Ljava/lang/String;
    .restart local p4    # "brief":Z
    .restart local p5    # "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    :catch_1
    move-exception v0

    goto :goto_13

    .line 11329
    :catch_2
    move-exception v0

    goto :goto_14

    .line 11331
    .end local v20    # "dalvikSubitemPss":[J
    .end local v25    # "miscPss":[J
    .end local v30    # "i":I
    .end local v31    # "mi":Landroid/os/Debug$MemoryInfo;
    .end local v86    # "oomPss":[J
    .end local v88    # "tmpLong":[J
    .end local v90    # "realtimeMs":J
    .local v2, "miscPss":[J
    .restart local v3    # "mi":Landroid/os/Debug$MemoryInfo;
    .restart local v8    # "tmpLong":[J
    .restart local v9    # "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .restart local v10    # "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .local v12, "i":I
    .local v50, "dalvikSubitemPss":[J
    .local v51, "oomSwapPss":[J
    .restart local v65    # "oomRss":[J
    .restart local v66    # "realtimeMs":J
    .restart local v72    # "oomPss":[J
    :catch_3
    move-exception v0

    move-object/from16 v25, v2

    move-object/from16 v31, v3

    move-object/from16 v88, v8

    move-object v2, v9

    move/from16 v30, v12

    move-object/from16 v20, v50

    move-object/from16 v50, v51

    move-object/from16 v51, v65

    move-wide/from16 v90, v66

    move-object/from16 v86, v72

    const-wide v16, 0x10900000002L

    const-wide v18, 0x10500000001L

    const/16 v44, 0x0

    const/16 v87, 0x0

    const/16 v89, 0x3

    move-object v12, v10

    .line 11332
    .end local v3    # "mi":Landroid/os/Debug$MemoryInfo;
    .end local v8    # "tmpLong":[J
    .end local v9    # "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .end local v10    # "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .end local v65    # "oomRss":[J
    .end local v66    # "realtimeMs":J
    .end local v72    # "oomPss":[J
    .local v0, "e":Landroid/os/RemoteException;
    .local v2, "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .local v12, "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .restart local v20    # "dalvikSubitemPss":[J
    .restart local v25    # "miscPss":[J
    .restart local v30    # "i":I
    .restart local v31    # "mi":Landroid/os/Debug$MemoryInfo;
    .local v50, "oomSwapPss":[J
    .local v51, "oomRss":[J
    .restart local v86    # "oomPss":[J
    .restart local v88    # "tmpLong":[J
    .restart local v90    # "realtimeMs":J
    :goto_13
    const-string v3, "ActivityManager"

    const-string v4, "Got RemoteException!"

    invoke-static {v3, v4, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    goto :goto_16

    .line 11329
    .end local v0    # "e":Landroid/os/RemoteException;
    .end local v20    # "dalvikSubitemPss":[J
    .end local v25    # "miscPss":[J
    .end local v30    # "i":I
    .end local v31    # "mi":Landroid/os/Debug$MemoryInfo;
    .end local v86    # "oomPss":[J
    .end local v88    # "tmpLong":[J
    .end local v90    # "realtimeMs":J
    .local v2, "miscPss":[J
    .restart local v3    # "mi":Landroid/os/Debug$MemoryInfo;
    .restart local v8    # "tmpLong":[J
    .restart local v9    # "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .restart local v10    # "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .local v12, "i":I
    .local v50, "dalvikSubitemPss":[J
    .local v51, "oomSwapPss":[J
    .restart local v65    # "oomRss":[J
    .restart local v66    # "realtimeMs":J
    .restart local v72    # "oomPss":[J
    :catch_4
    move-exception v0

    move-object/from16 v25, v2

    move-object/from16 v31, v3

    move-object/from16 v88, v8

    move-object v2, v9

    move/from16 v30, v12

    move-object/from16 v20, v50

    move-object/from16 v50, v51

    move-object/from16 v51, v65

    move-wide/from16 v90, v66

    move-object/from16 v86, v72

    const-wide v16, 0x10900000002L

    const-wide v18, 0x10500000001L

    const/16 v44, 0x0

    const/16 v87, 0x0

    const/16 v89, 0x3

    move-object v12, v10

    .line 11330
    .end local v3    # "mi":Landroid/os/Debug$MemoryInfo;
    .end local v8    # "tmpLong":[J
    .end local v9    # "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .end local v10    # "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .end local v65    # "oomRss":[J
    .end local v66    # "realtimeMs":J
    .end local v72    # "oomPss":[J
    .local v0, "e":Ljava/io/IOException;
    .local v2, "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .local v12, "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .restart local v20    # "dalvikSubitemPss":[J
    .restart local v25    # "miscPss":[J
    .restart local v30    # "i":I
    .restart local v31    # "mi":Landroid/os/Debug$MemoryInfo;
    .local v50, "oomSwapPss":[J
    .local v51, "oomRss":[J
    .restart local v86    # "oomPss":[J
    .restart local v88    # "tmpLong":[J
    .restart local v90    # "realtimeMs":J
    :goto_14
    const-string v3, "ActivityManager"

    const-string v4, "Got IOException!"

    invoke-static {v3, v4, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 11333
    .end local v0    # "e":Ljava/io/IOException;
    :goto_15
    goto :goto_16

    .line 11308
    .end local v20    # "dalvikSubitemPss":[J
    .end local v25    # "miscPss":[J
    .end local v30    # "i":I
    .end local v31    # "mi":Landroid/os/Debug$MemoryInfo;
    .end local v86    # "oomPss":[J
    .end local v88    # "tmpLong":[J
    .end local v90    # "realtimeMs":J
    .local v2, "miscPss":[J
    .restart local v3    # "mi":Landroid/os/Debug$MemoryInfo;
    .restart local v4    # "oomPss":[J
    .restart local v5    # "tmpLong":[J
    .restart local v9    # "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .restart local v10    # "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .local v12, "i":I
    .local v50, "dalvikSubitemPss":[J
    .local v51, "oomSwapPss":[J
    .restart local v65    # "oomRss":[J
    .restart local v66    # "realtimeMs":J
    :cond_19
    move-object/from16 v25, v2

    move-object/from16 v31, v3

    move-object/from16 v86, v4

    move-object/from16 v88, v5

    move/from16 v44, v6

    move-object v2, v9

    move/from16 v30, v12

    move-object/from16 v20, v50

    move-object/from16 v50, v51

    move-object/from16 v51, v65

    move-wide/from16 v90, v66

    const-wide v16, 0x10900000002L

    const-wide v18, 0x10500000001L

    const/16 v87, 0x0

    const/16 v89, 0x3

    move-object v12, v10

    .line 11337
    .end local v3    # "mi":Landroid/os/Debug$MemoryInfo;
    .end local v4    # "oomPss":[J
    .end local v5    # "tmpLong":[J
    .end local v9    # "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .end local v10    # "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .end local v65    # "oomRss":[J
    .end local v66    # "realtimeMs":J
    .local v2, "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .local v12, "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .restart local v20    # "dalvikSubitemPss":[J
    .restart local v25    # "miscPss":[J
    .restart local v30    # "i":I
    .restart local v31    # "mi":Landroid/os/Debug$MemoryInfo;
    .local v50, "oomSwapPss":[J
    .local v51, "oomRss":[J
    .restart local v86    # "oomPss":[J
    .restart local v88    # "tmpLong":[J
    .restart local v90    # "realtimeMs":J
    :goto_16
    invoke-virtual/range {v31 .. v31}, Landroid/os/Debug$MemoryInfo;->getTotalPss()I

    move-result v0

    int-to-long v4, v0

    .line 11338
    .local v4, "myTotalPss":J
    invoke-virtual/range {v31 .. v31}, Landroid/os/Debug$MemoryInfo;->getTotalUss()I

    move-result v0

    int-to-long v6, v0

    .line 11339
    .local v6, "myTotalUss":J
    invoke-virtual/range {v31 .. v31}, Landroid/os/Debug$MemoryInfo;->getTotalRss()I

    move-result v0

    int-to-long v8, v0

    .line 11340
    .local v8, "myTotalRss":J
    invoke-virtual/range {v31 .. v31}, Landroid/os/Debug$MemoryInfo;->getTotalSwappedOutPss()I

    move-result v0

    move-object/from16 v29, v11

    .end local v11    # "proto":Landroid/util/proto/ProtoOutputStream;
    .local v29, "proto":Landroid/util/proto/ProtoOutputStream;
    int-to-long v10, v0

    .line 11342
    .local v10, "myTotalSwapPss":J
    iget-object v3, v1, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v3

    :try_start_6
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 11343
    invoke-virtual {v14}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_6

    if-eqz v0, :cond_1b

    :try_start_7
    iget-object v0, v14, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    invoke-virtual {v0}, Lcom/android/server/am/ProcessStateRecord;->getSetAdjWithServices()I

    move-result v0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_4

    move/from16 v1, v80

    .end local v80    # "oomAdj":I
    .local v1, "oomAdj":I
    if-ne v1, v0, :cond_1a

    .line 11345
    :try_start_8
    iget-object v0, v14, Lcom/android/server/am/ProcessRecord;->mProfile:Lcom/android/server/am/ProcessProfileRecord;

    const/16 v40, 0x1

    sub-long v42, v84, v82

    move-object/from16 v33, v0

    move-wide/from16 v34, v4

    move-wide/from16 v36, v6

    move-wide/from16 v38, v8

    move/from16 v41, v28

    invoke-virtual/range {v33 .. v43}, Lcom/android/server/am/ProcessProfileRecord;->addPss(JJJZIJ)V

    .line 11347
    invoke-virtual {v14}, Lcom/android/server/am/ProcessRecord;->getPkgList()Lcom/android/server/am/PackageList;

    move-result-object v0
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_3

    move/from16 v32, v1

    .end local v1    # "oomAdj":I
    .local v32, "oomAdj":I
    :try_start_9
    new-instance v1, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda30;

    move-object/from16 v65, v1

    move-object/from16 v66, v14

    move-wide/from16 v67, v4

    move-wide/from16 v69, v6

    move-wide/from16 v71, v8

    move/from16 v73, v28

    move-wide/from16 v74, v84

    move-wide/from16 v76, v82

    invoke-direct/range {v65 .. v77}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda30;-><init>(Lcom/android/server/am/ProcessRecord;JJJIJJ)V

    invoke-virtual {v0, v1}, Lcom/android/server/am/PackageList;->forEachPackageProcessStats(Ljava/util/function/Consumer;)V
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_2

    goto :goto_17

    .line 11356
    :catchall_2
    move-exception v0

    move-wide/from16 v34, v6

    move/from16 v38, v13

    move-object/from16 v36, v14

    move-object/from16 v13, v20

    move-object/from16 v1, v31

    move/from16 v6, v32

    move-wide/from16 v14, v53

    move-object/from16 v7, v86

    goto/16 :goto_20

    .end local v32    # "oomAdj":I
    .restart local v1    # "oomAdj":I
    :catchall_3
    move-exception v0

    move-wide/from16 v34, v6

    move/from16 v38, v13

    move-object/from16 v36, v14

    move-object/from16 v13, v20

    move-wide/from16 v14, v53

    move-object/from16 v7, v86

    move v6, v1

    move-object/from16 v1, v31

    .end local v1    # "oomAdj":I
    .restart local v32    # "oomAdj":I
    goto/16 :goto_20

    .line 11343
    .end local v32    # "oomAdj":I
    .restart local v1    # "oomAdj":I
    :cond_1a
    move/from16 v32, v1

    .end local v1    # "oomAdj":I
    .restart local v32    # "oomAdj":I
    goto :goto_17

    .line 11356
    .end local v32    # "oomAdj":I
    .restart local v80    # "oomAdj":I
    :catchall_4
    move-exception v0

    move-wide/from16 v34, v6

    move/from16 v38, v13

    move-object/from16 v36, v14

    move-object/from16 v13, v20

    move-object/from16 v1, v31

    move-wide/from16 v14, v53

    move/from16 v6, v80

    move-object/from16 v7, v86

    .end local v80    # "oomAdj":I
    .restart local v32    # "oomAdj":I
    goto/16 :goto_20

    .line 11343
    .end local v32    # "oomAdj":I
    .restart local v80    # "oomAdj":I
    :cond_1b
    move/from16 v32, v80

    .line 11356
    .end local v80    # "oomAdj":I
    .restart local v32    # "oomAdj":I
    :goto_17
    :try_start_a
    monitor-exit v3
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_5

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 11358
    iget-boolean v0, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCheckinRequest:Z

    if-nez v0, :cond_25

    move-object/from16 v1, v31

    .end local v31    # "mi":Landroid/os/Debug$MemoryInfo;
    .local v1, "mi":Landroid/os/Debug$MemoryInfo;
    if-eqz v1, :cond_24

    .line 11359
    aget-wide v33, v21, v60

    add-long v33, v33, v4

    aput-wide v33, v21, v60

    .line 11360
    const/16 v31, 0xa

    aget-wide v33, v21, v31

    add-long v33, v33, v10

    aput-wide v33, v21, v31

    .line 11361
    const/16 v0, 0xb

    aget-wide v33, v21, v0

    add-long v33, v33, v8

    aput-wide v33, v21, v0

    .line 11362
    new-instance v0, Lcom/android/server/am/ActivityManagerService$MemItem;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    move-wide/from16 v34, v6

    .end local v6    # "myTotalUss":J
    .local v34, "myTotalUss":J
    iget-object v6, v14, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v6, " (pid "

    invoke-virtual {v3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v13}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 11363
    if-eqz v81, :cond_1c

    const-string v6, " / activities)"

    goto :goto_18

    :cond_1c
    const-string v6, ")"

    :goto_18
    invoke-virtual {v3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v67

    iget-object v3, v14, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v66, v0

    move-object/from16 v68, v3

    move-wide/from16 v69, v4

    move-wide/from16 v71, v10

    move-wide/from16 v73, v8

    move/from16 v75, v13

    move/from16 v76, v81

    invoke-direct/range {v66 .. v76}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JJJIZ)V

    .line 11365
    .local v0, "pssItem":Lcom/android/server/am/ActivityManagerService$MemItem;
    invoke-virtual {v12, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 11366
    invoke-virtual {v2, v13, v0}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 11368
    aget-wide v6, v21, v44

    iget v3, v1, Landroid/os/Debug$MemoryInfo;->nativePss:I

    move/from16 v38, v13

    move-object/from16 v36, v14

    .end local v13    # "pid":I
    .end local v14    # "r":Lcom/android/server/am/ProcessRecord;
    .local v36, "r":Lcom/android/server/am/ProcessRecord;
    .local v38, "pid":I
    int-to-long v13, v3

    add-long/2addr v6, v13

    aput-wide v6, v21, v44

    .line 11369
    const/4 v3, 0x1

    aget-wide v6, v21, v3

    iget v13, v1, Landroid/os/Debug$MemoryInfo;->nativeSwappedOutPss:I

    int-to-long v13, v13

    add-long/2addr v6, v13

    aput-wide v6, v21, v3

    .line 11370
    aget-wide v6, v21, v22

    iget v3, v1, Landroid/os/Debug$MemoryInfo;->nativeRss:I

    int-to-long v13, v3

    add-long/2addr v6, v13

    aput-wide v6, v21, v22

    .line 11371
    aget-wide v6, v21, v89

    iget v3, v1, Landroid/os/Debug$MemoryInfo;->dalvikPss:I

    int-to-long v13, v3

    add-long/2addr v6, v13

    aput-wide v6, v21, v89

    .line 11372
    aget-wide v6, v21, v59

    iget v3, v1, Landroid/os/Debug$MemoryInfo;->dalvikSwappedOutPss:I

    int-to-long v13, v3

    add-long/2addr v6, v13

    aput-wide v6, v21, v59

    .line 11373
    aget-wide v6, v21, v58

    iget v3, v1, Landroid/os/Debug$MemoryInfo;->dalvikRss:I

    int-to-long v13, v3

    add-long/2addr v6, v13

    aput-wide v6, v21, v58

    .line 11374
    const/4 v3, 0x0

    .local v3, "j":I
    :goto_19
    move-object/from16 v13, v20

    .end local v20    # "dalvikSubitemPss":[J
    .local v13, "dalvikSubitemPss":[J
    array-length v6, v13

    if-ge v3, v6, :cond_1d

    .line 11375
    aget-wide v6, v13, v3

    add-int/lit8 v14, v3, 0x11

    invoke-virtual {v1, v14}, Landroid/os/Debug$MemoryInfo;->getOtherPss(I)I

    move-result v14

    int-to-long v14, v14

    add-long/2addr v6, v14

    aput-wide v6, v13, v3

    .line 11376
    aget-wide v6, v26, v3

    add-int/lit8 v14, v3, 0x11

    .line 11377
    invoke-virtual {v1, v14}, Landroid/os/Debug$MemoryInfo;->getOtherSwappedOutPss(I)I

    move-result v14

    int-to-long v14, v14

    add-long/2addr v6, v14

    aput-wide v6, v26, v3

    .line 11378
    aget-wide v6, v45, v3

    add-int/lit8 v14, v3, 0x11

    invoke-virtual {v1, v14}, Landroid/os/Debug$MemoryInfo;->getOtherRss(I)I

    move-result v14

    int-to-long v14, v14

    add-long/2addr v6, v14

    aput-wide v6, v45, v3

    .line 11374
    add-int/lit8 v3, v3, 0x1

    move-object/from16 v15, p2

    move-object/from16 v20, v13

    goto :goto_19

    .line 11380
    .end local v3    # "j":I
    :cond_1d
    aget-wide v6, v21, v63

    iget v3, v1, Landroid/os/Debug$MemoryInfo;->otherPss:I

    int-to-long v14, v3

    add-long/2addr v6, v14

    aput-wide v6, v21, v63

    .line 11381
    aget-wide v6, v21, v61

    iget v3, v1, Landroid/os/Debug$MemoryInfo;->otherRss:I

    int-to-long v14, v3

    add-long/2addr v6, v14

    aput-wide v6, v21, v61

    .line 11382
    aget-wide v6, v21, v62

    iget v3, v1, Landroid/os/Debug$MemoryInfo;->otherSwappedOutPss:I

    int-to-long v14, v3

    add-long/2addr v6, v14

    aput-wide v6, v21, v62

    .line 11383
    const/4 v3, 0x0

    .restart local v3    # "j":I
    :goto_1a
    const/16 v6, 0x11

    if-ge v3, v6, :cond_1e

    .line 11384
    invoke-virtual {v1, v3}, Landroid/os/Debug$MemoryInfo;->getOtherPss(I)I

    move-result v6

    int-to-long v6, v6

    .line 11385
    .local v6, "mem":J
    aget-wide v14, v25, v3

    add-long/2addr v14, v6

    aput-wide v14, v25, v3

    .line 11386
    aget-wide v14, v21, v63

    sub-long/2addr v14, v6

    aput-wide v14, v21, v63

    .line 11387
    invoke-virtual {v1, v3}, Landroid/os/Debug$MemoryInfo;->getOtherSwappedOutPss(I)I

    move-result v14

    int-to-long v6, v14

    .line 11388
    aget-wide v14, v46, v3

    add-long/2addr v14, v6

    aput-wide v14, v46, v3

    .line 11389
    aget-wide v14, v21, v62

    sub-long/2addr v14, v6

    aput-wide v14, v21, v62

    .line 11390
    invoke-virtual {v1, v3}, Landroid/os/Debug$MemoryInfo;->getOtherRss(I)I

    move-result v14

    int-to-long v6, v14

    .line 11391
    aget-wide v14, v52, v3

    add-long/2addr v14, v6

    aput-wide v14, v52, v3

    .line 11392
    aget-wide v14, v21, v61

    sub-long/2addr v14, v6

    aput-wide v14, v21, v61

    .line 11383
    .end local v6    # "mem":J
    add-int/lit8 v3, v3, 0x1

    goto :goto_1a

    .line 11395
    .end local v3    # "j":I
    :cond_1e
    const/16 v3, 0x384

    move/from16 v6, v32

    .end local v32    # "oomAdj":I
    .local v6, "oomAdj":I
    if-lt v6, v3, :cond_1f

    .line 11396
    move-wide/from16 v14, v53

    .end local v53    # "cachedPss":J
    .local v14, "cachedPss":J
    add-long v53, v14, v4

    .line 11397
    .end local v14    # "cachedPss":J
    .restart local v53    # "cachedPss":J
    add-long v55, v55, v10

    goto :goto_1b

    .line 11395
    :cond_1f
    move-wide/from16 v14, v53

    .line 11400
    :goto_1b
    const/4 v3, 0x0

    .local v3, "oomIndex":I
    :goto_1c
    move-object/from16 v7, v86

    .end local v86    # "oomPss":[J
    .local v7, "oomPss":[J
    array-length v14, v7

    if-ge v3, v14, :cond_23

    .line 11401
    array-length v14, v7

    const/4 v15, 0x1

    sub-int/2addr v14, v15

    if-eq v3, v14, :cond_21

    sget-object v14, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_ADJ:[I

    aget v15, v14, v3

    if-lt v6, v15, :cond_20

    add-int/lit8 v15, v3, 0x1

    aget v14, v14, v15

    if-ge v6, v14, :cond_20

    goto :goto_1d

    .line 11400
    :cond_20
    add-int/lit8 v3, v3, 0x1

    move-object/from16 v86, v7

    goto :goto_1c

    .line 11404
    :cond_21
    :goto_1d
    aget-wide v14, v7, v3

    add-long/2addr v14, v4

    aput-wide v14, v7, v3

    .line 11405
    aget-wide v14, v50, v3

    add-long/2addr v14, v10

    aput-wide v14, v50, v3

    .line 11406
    aget-object v14, v64, v3

    if-nez v14, :cond_22

    .line 11407
    new-instance v14, Ljava/util/ArrayList;

    invoke-direct {v14}, Ljava/util/ArrayList;-><init>()V

    aput-object v14, v64, v3

    .line 11409
    :cond_22
    aget-object v14, v64, v3

    invoke-virtual {v14, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 11410
    aget-wide v14, v51, v3

    add-long/2addr v14, v8

    aput-wide v14, v51, v3

    .line 11267
    .end local v0    # "pssItem":Lcom/android/server/am/ActivityManagerService$MemItem;
    .end local v3    # "oomIndex":I
    .end local v4    # "myTotalPss":J
    .end local v6    # "oomAdj":I
    .end local v8    # "myTotalRss":J
    .end local v10    # "myTotalSwapPss":J
    .end local v28    # "reportType":I
    .end local v34    # "myTotalUss":J
    .end local v36    # "r":Lcom/android/server/am/ProcessRecord;
    .end local v38    # "pid":I
    .end local v78    # "thread":Landroid/app/IApplicationThread;
    .end local v81    # "hasActivities":Z
    .end local v82    # "startTime":J
    .end local v84    # "endTime":J
    :cond_23
    move-object/from16 v33, v1

    move/from16 v37, v79

    goto :goto_1f

    .line 11358
    .end local v7    # "oomPss":[J
    .restart local v4    # "myTotalPss":J
    .local v6, "myTotalUss":J
    .restart local v8    # "myTotalRss":J
    .restart local v10    # "myTotalSwapPss":J
    .local v13, "pid":I
    .local v14, "r":Lcom/android/server/am/ProcessRecord;
    .restart local v20    # "dalvikSubitemPss":[J
    .restart local v28    # "reportType":I
    .restart local v32    # "oomAdj":I
    .restart local v78    # "thread":Landroid/app/IApplicationThread;
    .restart local v81    # "hasActivities":Z
    .restart local v82    # "startTime":J
    .restart local v84    # "endTime":J
    .restart local v86    # "oomPss":[J
    :cond_24
    move-wide/from16 v34, v6

    move/from16 v38, v13

    move-object/from16 v36, v14

    move-object/from16 v13, v20

    move/from16 v6, v32

    move-wide/from16 v14, v53

    move-object/from16 v7, v86

    .end local v20    # "dalvikSubitemPss":[J
    .end local v32    # "oomAdj":I
    .end local v53    # "cachedPss":J
    .end local v86    # "oomPss":[J
    .local v6, "oomAdj":I
    .restart local v7    # "oomPss":[J
    .local v13, "dalvikSubitemPss":[J
    .local v14, "cachedPss":J
    .restart local v34    # "myTotalUss":J
    .restart local v36    # "r":Lcom/android/server/am/ProcessRecord;
    .restart local v38    # "pid":I
    goto :goto_1e

    .end local v1    # "mi":Landroid/os/Debug$MemoryInfo;
    .end local v7    # "oomPss":[J
    .end local v34    # "myTotalUss":J
    .end local v36    # "r":Lcom/android/server/am/ProcessRecord;
    .end local v38    # "pid":I
    .local v6, "myTotalUss":J
    .local v13, "pid":I
    .local v14, "r":Lcom/android/server/am/ProcessRecord;
    .restart local v20    # "dalvikSubitemPss":[J
    .restart local v31    # "mi":Landroid/os/Debug$MemoryInfo;
    .restart local v32    # "oomAdj":I
    .restart local v53    # "cachedPss":J
    .restart local v86    # "oomPss":[J
    :cond_25
    move-wide/from16 v34, v6

    move/from16 v38, v13

    move-object/from16 v36, v14

    move-object/from16 v13, v20

    move-object/from16 v1, v31

    move/from16 v6, v32

    move-wide/from16 v14, v53

    move-object/from16 v7, v86

    .line 11267
    .end local v4    # "myTotalPss":J
    .end local v6    # "myTotalUss":J
    .end local v8    # "myTotalRss":J
    .end local v10    # "myTotalSwapPss":J
    .end local v20    # "dalvikSubitemPss":[J
    .end local v28    # "reportType":I
    .end local v31    # "mi":Landroid/os/Debug$MemoryInfo;
    .end local v32    # "oomAdj":I
    .end local v53    # "cachedPss":J
    .end local v78    # "thread":Landroid/app/IApplicationThread;
    .end local v81    # "hasActivities":Z
    .end local v82    # "startTime":J
    .end local v84    # "endTime":J
    .end local v86    # "oomPss":[J
    .restart local v1    # "mi":Landroid/os/Debug$MemoryInfo;
    .restart local v7    # "oomPss":[J
    .local v13, "dalvikSubitemPss":[J
    .local v14, "cachedPss":J
    :goto_1e
    move-object/from16 v33, v1

    move-wide/from16 v53, v14

    move/from16 v37, v79

    .end local v1    # "mi":Landroid/os/Debug$MemoryInfo;
    .end local v14    # "cachedPss":J
    .end local v79    # "hasSwapPss":Z
    .local v33, "mi":Landroid/os/Debug$MemoryInfo;
    .restart local v37    # "hasSwapPss":Z
    .restart local v53    # "cachedPss":J
    :goto_1f
    add-int/lit8 v0, v30, -0x1

    move-object/from16 v1, p0

    move-object/from16 v15, p2

    move-object v9, v2

    move-object v4, v7

    move-object v10, v12

    move-object/from16 v8, v21

    move-object/from16 v2, v25

    move-object/from16 v11, v29

    move-object/from16 v3, v51

    move-object/from16 v14, v64

    move-object/from16 v5, v88

    move-wide/from16 v6, v90

    move v12, v0

    move-object/from16 v51, v50

    move-object/from16 v50, v13

    move-object/from16 v13, p5

    .end local v30    # "i":I
    .local v0, "i":I
    goto/16 :goto_d

    .line 11356
    .end local v0    # "i":I
    .end local v7    # "oomPss":[J
    .end local v33    # "mi":Landroid/os/Debug$MemoryInfo;
    .end local v37    # "hasSwapPss":Z
    .restart local v4    # "myTotalPss":J
    .restart local v6    # "myTotalUss":J
    .restart local v8    # "myTotalRss":J
    .restart local v10    # "myTotalSwapPss":J
    .local v13, "pid":I
    .local v14, "r":Lcom/android/server/am/ProcessRecord;
    .restart local v20    # "dalvikSubitemPss":[J
    .restart local v28    # "reportType":I
    .restart local v30    # "i":I
    .restart local v31    # "mi":Landroid/os/Debug$MemoryInfo;
    .restart local v32    # "oomAdj":I
    .restart local v78    # "thread":Landroid/app/IApplicationThread;
    .restart local v79    # "hasSwapPss":Z
    .restart local v81    # "hasActivities":Z
    .restart local v82    # "startTime":J
    .restart local v84    # "endTime":J
    .restart local v86    # "oomPss":[J
    :catchall_5
    move-exception v0

    move-wide/from16 v34, v6

    move/from16 v38, v13

    move-object/from16 v36, v14

    move-object/from16 v13, v20

    move-object/from16 v1, v31

    move/from16 v6, v32

    move-wide/from16 v14, v53

    move-object/from16 v7, v86

    .end local v20    # "dalvikSubitemPss":[J
    .end local v31    # "mi":Landroid/os/Debug$MemoryInfo;
    .end local v32    # "oomAdj":I
    .end local v53    # "cachedPss":J
    .end local v86    # "oomPss":[J
    .restart local v1    # "mi":Landroid/os/Debug$MemoryInfo;
    .local v6, "oomAdj":I
    .restart local v7    # "oomPss":[J
    .local v13, "dalvikSubitemPss":[J
    .local v14, "cachedPss":J
    .restart local v34    # "myTotalUss":J
    .restart local v36    # "r":Lcom/android/server/am/ProcessRecord;
    .restart local v38    # "pid":I
    goto :goto_20

    .end local v1    # "mi":Landroid/os/Debug$MemoryInfo;
    .end local v7    # "oomPss":[J
    .end local v34    # "myTotalUss":J
    .end local v36    # "r":Lcom/android/server/am/ProcessRecord;
    .end local v38    # "pid":I
    .local v6, "myTotalUss":J
    .local v13, "pid":I
    .local v14, "r":Lcom/android/server/am/ProcessRecord;
    .restart local v20    # "dalvikSubitemPss":[J
    .restart local v31    # "mi":Landroid/os/Debug$MemoryInfo;
    .restart local v53    # "cachedPss":J
    .restart local v80    # "oomAdj":I
    .restart local v86    # "oomPss":[J
    :catchall_6
    move-exception v0

    move-wide/from16 v34, v6

    move/from16 v38, v13

    move-object/from16 v36, v14

    move-object/from16 v13, v20

    move-object/from16 v1, v31

    move-wide/from16 v14, v53

    move/from16 v6, v80

    move-object/from16 v7, v86

    .end local v20    # "dalvikSubitemPss":[J
    .end local v31    # "mi":Landroid/os/Debug$MemoryInfo;
    .end local v53    # "cachedPss":J
    .end local v80    # "oomAdj":I
    .end local v86    # "oomPss":[J
    .restart local v1    # "mi":Landroid/os/Debug$MemoryInfo;
    .local v6, "oomAdj":I
    .restart local v7    # "oomPss":[J
    .local v13, "dalvikSubitemPss":[J
    .local v14, "cachedPss":J
    .restart local v34    # "myTotalUss":J
    .restart local v36    # "r":Lcom/android/server/am/ProcessRecord;
    .restart local v38    # "pid":I
    :goto_20
    :try_start_b
    monitor-exit v3
    :try_end_b
    .catchall {:try_start_b .. :try_end_b} :catchall_7

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v0

    :catchall_7
    move-exception v0

    goto :goto_20

    .line 11278
    .end local v1    # "mi":Landroid/os/Debug$MemoryInfo;
    .end local v7    # "oomPss":[J
    .end local v13    # "dalvikSubitemPss":[J
    .end local v21    # "ss":[J
    .end local v25    # "miscPss":[J
    .end local v28    # "reportType":I
    .end local v29    # "proto":Landroid/util/proto/ProtoOutputStream;
    .end local v30    # "i":I
    .end local v34    # "myTotalUss":J
    .end local v36    # "r":Lcom/android/server/am/ProcessRecord;
    .end local v38    # "pid":I
    .end local v78    # "thread":Landroid/app/IApplicationThread;
    .end local v79    # "hasSwapPss":Z
    .end local v81    # "hasActivities":Z
    .end local v82    # "startTime":J
    .end local v84    # "endTime":J
    .end local v88    # "tmpLong":[J
    .end local v90    # "realtimeMs":J
    .local v2, "miscPss":[J
    .local v4, "oomPss":[J
    .restart local v5    # "tmpLong":[J
    .local v6, "realtimeMs":J
    .local v8, "ss":[J
    .restart local v9    # "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .local v10, "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .restart local v11    # "proto":Landroid/util/proto/ProtoOutputStream;
    .local v12, "i":I
    .local v14, "r":Lcom/android/server/am/ProcessRecord;
    .restart local v33    # "mi":Landroid/os/Debug$MemoryInfo;
    .restart local v37    # "hasSwapPss":Z
    .local v50, "dalvikSubitemPss":[J
    .local v51, "oomSwapPss":[J
    .restart local v53    # "cachedPss":J
    .restart local v65    # "oomRss":[J
    :catchall_8
    move-exception v0

    move-object/from16 v25, v2

    move-object/from16 v88, v5

    move-wide/from16 v90, v6

    move-object/from16 v21, v8

    move-object v2, v9

    move-object/from16 v29, v11

    move/from16 v30, v12

    move-object/from16 v36, v14

    move-object/from16 v13, v50

    move-object/from16 v50, v51

    move-wide/from16 v14, v53

    move-object/from16 v51, v65

    move-object v7, v4

    move-object v12, v10

    .end local v4    # "oomPss":[J
    .end local v5    # "tmpLong":[J
    .end local v6    # "realtimeMs":J
    .end local v8    # "ss":[J
    .end local v9    # "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .end local v10    # "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .end local v11    # "proto":Landroid/util/proto/ProtoOutputStream;
    .end local v53    # "cachedPss":J
    .end local v65    # "oomRss":[J
    .local v2, "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .restart local v7    # "oomPss":[J
    .local v12, "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .restart local v13    # "dalvikSubitemPss":[J
    .local v14, "cachedPss":J
    .restart local v21    # "ss":[J
    .restart local v25    # "miscPss":[J
    .restart local v29    # "proto":Landroid/util/proto/ProtoOutputStream;
    .restart local v30    # "i":I
    .restart local v36    # "r":Lcom/android/server/am/ProcessRecord;
    .local v50, "oomSwapPss":[J
    .local v51, "oomRss":[J
    .restart local v88    # "tmpLong":[J
    .restart local v90    # "realtimeMs":J
    :goto_21
    :try_start_c
    monitor-exit v3
    :try_end_c
    .catchall {:try_start_c .. :try_end_c} :catchall_9

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v0

    :catchall_9
    move-exception v0

    goto :goto_21

    .line 11267
    .end local v7    # "oomPss":[J
    .end local v13    # "dalvikSubitemPss":[J
    .end local v14    # "cachedPss":J
    .end local v21    # "ss":[J
    .end local v25    # "miscPss":[J
    .end local v29    # "proto":Landroid/util/proto/ProtoOutputStream;
    .end local v30    # "i":I
    .end local v36    # "r":Lcom/android/server/am/ProcessRecord;
    .end local v88    # "tmpLong":[J
    .end local v90    # "realtimeMs":J
    .local v2, "miscPss":[J
    .local v3, "oomRss":[J
    .restart local v4    # "oomPss":[J
    .restart local v5    # "tmpLong":[J
    .restart local v6    # "realtimeMs":J
    .restart local v8    # "ss":[J
    .restart local v9    # "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .restart local v10    # "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .restart local v11    # "proto":Landroid/util/proto/ProtoOutputStream;
    .local v12, "i":I
    .local v50, "dalvikSubitemPss":[J
    .local v51, "oomSwapPss":[J
    .restart local v53    # "cachedPss":J
    :cond_26
    move-object/from16 v25, v2

    move-object/from16 v88, v5

    move-wide/from16 v90, v6

    move-object/from16 v21, v8

    move-object v2, v9

    move-object/from16 v29, v11

    move/from16 v30, v12

    move-object/from16 v13, v50

    move-object/from16 v50, v51

    move-wide/from16 v14, v53

    const/16 v31, 0xa

    const/16 v44, 0x0

    const/16 v89, 0x3

    move-object/from16 v51, v3

    move-object v7, v4

    move-object v12, v10

    .line 11417
    .end local v3    # "oomRss":[J
    .end local v4    # "oomPss":[J
    .end local v5    # "tmpLong":[J
    .end local v6    # "realtimeMs":J
    .end local v8    # "ss":[J
    .end local v9    # "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .end local v10    # "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .end local v11    # "proto":Landroid/util/proto/ProtoOutputStream;
    .end local v53    # "cachedPss":J
    .local v2, "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .restart local v7    # "oomPss":[J
    .local v12, "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .restart local v13    # "dalvikSubitemPss":[J
    .restart local v14    # "cachedPss":J
    .restart local v21    # "ss":[J
    .restart local v25    # "miscPss":[J
    .restart local v29    # "proto":Landroid/util/proto/ProtoOutputStream;
    .local v50, "oomSwapPss":[J
    .local v51, "oomRss":[J
    .restart local v88    # "tmpLong":[J
    .restart local v90    # "realtimeMs":J
    const-wide/16 v38, 0x0

    .line 11419
    .local v38, "nativeProcTotalPss":J
    if-eqz v27, :cond_3a

    .line 11420
    const/4 v1, 0x0

    .line 11421
    .end local v33    # "mi":Landroid/os/Debug$MemoryInfo;
    .restart local v1    # "mi":Landroid/os/Debug$MemoryInfo;
    const/4 v3, 0x1

    new-array v11, v3, [Landroid/os/Debug$MemoryInfo;

    .local v11, "memInfos":[Landroid/os/Debug$MemoryInfo;
    move-object v5, v11

    .line 11422
    move-object/from16 v10, p0

    iget-object v0, v10, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    new-instance v9, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda22;

    move-object v3, v9

    move-object v4, v2

    move/from16 v6, p4

    move-object v8, v7

    .end local v7    # "oomPss":[J
    .local v8, "oomPss":[J
    move-object/from16 v7, p2

    move-object/from16 v86, v8

    .end local v8    # "oomPss":[J
    .restart local v86    # "oomPss":[J
    move-object/from16 v8, v88

    move-object/from16 v28, v1

    move-object v1, v9

    .end local v1    # "mi":Landroid/os/Debug$MemoryInfo;
    .local v28, "mi":Landroid/os/Debug$MemoryInfo;
    move-object/from16 v9, v21

    move-object/from16 v40, v2

    move-object v2, v10

    .end local v2    # "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .local v40, "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    move-object v10, v12

    move-object/from16 v43, v29

    move-wide/from16 v41, v48

    move-object/from16 v48, v11

    .end local v11    # "memInfos":[Landroid/os/Debug$MemoryInfo;
    .end local v29    # "proto":Landroid/util/proto/ProtoOutputStream;
    .local v41, "uptimeMs":J
    .local v43, "proto":Landroid/util/proto/ProtoOutputStream;
    .local v48, "memInfos":[Landroid/os/Debug$MemoryInfo;
    move-object v11, v13

    move-object/from16 v53, v12

    move/from16 v49, v57

    .end local v12    # "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .end local v57    # "numProcs":I
    .local v49, "numProcs":I
    .local v53, "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    move-object/from16 v12, v26

    move-object v2, v13

    .end local v13    # "dalvikSubitemPss":[J
    .local v2, "dalvikSubitemPss":[J
    move-object/from16 v13, v45

    move-wide/from16 v92, v14

    move/from16 v15, v31

    move-object/from16 v54, v64

    .end local v14    # "cachedPss":J
    .end local v64    # "oomProcs":[Ljava/util/ArrayList;, "[Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .local v54, "oomProcs":[Ljava/util/ArrayList;, "[Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .local v92, "cachedPss":J
    move-object/from16 v14, v25

    move-object/from16 v15, v46

    move-object/from16 v16, v52

    move-object/from16 v17, v86

    move-object/from16 v18, v50

    move-object/from16 v19, v54

    move-object/from16 v20, v51

    invoke-direct/range {v3 .. v20}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda22;-><init>(Landroid/util/SparseArray;[Landroid/os/Debug$MemoryInfo;ZLcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;[J[JLjava/util/ArrayList;[J[J[J[J[J[J[J[J[Ljava/util/ArrayList;[J)V

    invoke-virtual {v0, v1}, Lcom/android/server/am/AppProfiler;->forAllCpuStats(Ljava/util/function/Consumer;)V

    .line 11493
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    move-object v1, v0

    .line 11495
    .local v1, "catMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    new-instance v0, Lcom/android/server/am/ActivityManagerService$MemItem;

    const-string v4, "Native"

    const-string v5, "Native"

    aget-wide v6, v21, v44

    const/4 v3, 0x1

    aget-wide v8, v21, v3

    aget-wide v10, v21, v22

    const/4 v12, -0x1

    move-object v3, v0

    invoke-direct/range {v3 .. v12}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JJJI)V

    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 11497
    const/4 v3, -0x2

    .line 11498
    .local v3, "dalvikId":I
    new-instance v0, Lcom/android/server/am/ActivityManagerService$MemItem;

    const-string v5, "Dalvik"

    const-string v6, "Dalvik"

    aget-wide v7, v21, v89

    aget-wide v9, v21, v59

    aget-wide v11, v21, v58

    const/4 v13, -0x2

    move-object v4, v0

    invoke-direct/range {v4 .. v13}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JJJI)V

    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 11500
    new-instance v0, Lcom/android/server/am/ActivityManagerService$MemItem;

    const-string v65, "Unknown"

    const-string v66, "Unknown"

    aget-wide v67, v21, v63

    aget-wide v69, v21, v62

    aget-wide v71, v21, v61

    const/16 v73, -0x3

    move-object/from16 v64, v0

    invoke-direct/range {v64 .. v73}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JJJI)V

    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 11502
    const/4 v0, 0x0

    .local v0, "j":I
    :goto_22
    const/16 v14, 0x11

    if-ge v0, v14, :cond_27

    .line 11503
    invoke-static {v0}, Landroid/os/Debug$MemoryInfo;->getOtherLabel(I)Ljava/lang/String;

    move-result-object v15

    .line 11504
    .local v15, "label":Ljava/lang/String;
    new-instance v13, Lcom/android/server/am/ActivityManagerService$MemItem;

    aget-wide v7, v25, v0

    aget-wide v9, v46, v0

    aget-wide v11, v52, v0

    move-object v4, v13

    move-object v5, v15

    move-object v6, v15

    move-object v14, v13

    move v13, v0

    invoke-direct/range {v4 .. v13}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JJJI)V

    invoke-virtual {v1, v14}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 11502
    .end local v15    # "label":Ljava/lang/String;
    add-int/lit8 v0, v0, 0x1

    goto :goto_22

    .line 11506
    .end local v0    # "j":I
    :cond_27
    array-length v0, v2

    const/16 v4, 0xc

    if-lez v0, :cond_2d

    .line 11508
    invoke-virtual {v1}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v0

    :goto_23
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v5

    if-eqz v5, :cond_2d

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/am/ActivityManagerService$MemItem;

    .line 11509
    .local v5, "memItem":Lcom/android/server/am/ActivityManagerService$MemItem;
    const/4 v6, 0x0

    .local v6, "memItemStart":I
    const/4 v7, 0x0

    .line 11510
    .local v7, "memItemEnd":I
    iget v8, v5, Lcom/android/server/am/ActivityManagerService$MemItem;->id:I

    const/4 v9, -0x2

    if-ne v8, v9, :cond_28

    .line 11511
    const/4 v6, 0x0

    .line 11512
    const/4 v7, 0x3

    const/16 v9, 0xa

    goto :goto_24

    .line 11513
    :cond_28
    iget v8, v5, Lcom/android/server/am/ActivityManagerService$MemItem;->id:I

    if-nez v8, :cond_29

    .line 11514
    const/4 v6, 0x4

    .line 11515
    const/16 v7, 0x9

    const/16 v9, 0xa

    goto :goto_24

    .line 11516
    :cond_29
    iget v8, v5, Lcom/android/server/am/ActivityManagerService$MemItem;->id:I

    const/16 v9, 0xa

    if-ne v8, v9, :cond_2a

    .line 11517
    const/16 v6, 0xa

    .line 11518
    const/16 v7, 0xc

    goto :goto_24

    .line 11519
    :cond_2a
    iget v8, v5, Lcom/android/server/am/ActivityManagerService$MemItem;->id:I

    if-ne v8, v4, :cond_2c

    .line 11520
    const/16 v6, 0xd

    .line 11521
    const/16 v7, 0xe

    .line 11525
    :goto_24
    new-instance v8, Ljava/util/ArrayList;

    invoke-direct {v8}, Ljava/util/ArrayList;-><init>()V

    iput-object v8, v5, Lcom/android/server/am/ActivityManagerService$MemItem;->subitems:Ljava/util/ArrayList;

    .line 11526
    move v8, v6

    .local v8, "j":I
    :goto_25
    if-gt v8, v7, :cond_2b

    .line 11527
    add-int/lit8 v10, v8, 0x11

    invoke-static {v10}, Landroid/os/Debug$MemoryInfo;->getOtherLabel(I)Ljava/lang/String;

    move-result-object v20

    .line 11529
    .local v20, "name":Ljava/lang/String;
    iget-object v15, v5, Lcom/android/server/am/ActivityManagerService$MemItem;->subitems:Ljava/util/ArrayList;

    new-instance v13, Lcom/android/server/am/ActivityManagerService$MemItem;

    aget-wide v16, v2, v8

    aget-wide v18, v26, v8

    aget-wide v29, v45, v8

    move-object v10, v13

    move-object/from16 v11, v20

    move-object/from16 v12, v20

    move-object v4, v13

    move-wide/from16 v13, v16

    move-object v9, v15

    move-wide/from16 v15, v18

    move-wide/from16 v17, v29

    move/from16 v19, v8

    invoke-direct/range {v10 .. v19}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JJJI)V

    invoke-virtual {v9, v4}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 11526
    .end local v20    # "name":Ljava/lang/String;
    add-int/lit8 v8, v8, 0x1

    const/16 v4, 0xc

    const/16 v9, 0xa

    goto :goto_25

    .line 11532
    .end local v5    # "memItem":Lcom/android/server/am/ActivityManagerService$MemItem;
    .end local v6    # "memItemStart":I
    .end local v7    # "memItemEnd":I
    .end local v8    # "j":I
    :cond_2b
    const/16 v4, 0xc

    goto :goto_23

    .line 11519
    .restart local v5    # "memItem":Lcom/android/server/am/ActivityManagerService$MemItem;
    .restart local v6    # "memItemStart":I
    .restart local v7    # "memItemEnd":I
    :cond_2c
    const/16 v4, 0xc

    goto :goto_23

    .line 11535
    .end local v5    # "memItem":Lcom/android/server/am/ActivityManagerService$MemItem;
    .end local v6    # "memItemStart":I
    .end local v7    # "memItemEnd":I
    :cond_2d
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    move-object v4, v0

    .line 11536
    .local v4, "oomMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    const/4 v0, 0x0

    .restart local v0    # "j":I
    :goto_26
    move-object/from16 v5, v86

    .end local v86    # "oomPss":[J
    .local v5, "oomPss":[J
    array-length v6, v5

    if-ge v0, v6, :cond_30

    .line 11537
    aget-wide v6, v5, v0

    cmp-long v6, v6, v23

    if-eqz v6, :cond_2f

    .line 11538
    move-object/from16 v6, p2

    iget-boolean v7, v6, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCompact:Z

    if-eqz v7, :cond_2e

    sget-object v7, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_COMPACT_LABEL:[Ljava/lang/String;

    aget-object v7, v7, v0

    move-object v9, v7

    goto :goto_27

    .line 11539
    :cond_2e
    sget-object v7, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_LABEL:[Ljava/lang/String;

    aget-object v7, v7, v0

    move-object v9, v7

    :goto_27
    nop

    .line 11540
    .local v9, "label":Ljava/lang/String;
    new-instance v7, Lcom/android/server/am/ActivityManagerService$MemItem;

    aget-wide v11, v5, v0

    aget-wide v13, v50, v0

    aget-wide v15, v51, v0

    sget-object v8, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_ADJ:[I

    aget v17, v8, v0

    move-object v8, v7

    move-object v10, v9

    invoke-direct/range {v8 .. v17}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JJJI)V

    .line 11542
    .local v7, "item":Lcom/android/server/am/ActivityManagerService$MemItem;
    aget-object v8, v54, v0

    iput-object v8, v7, Lcom/android/server/am/ActivityManagerService$MemItem;->subitems:Ljava/util/ArrayList;

    .line 11543
    invoke-virtual {v4, v7}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_28

    .line 11537
    .end local v7    # "item":Lcom/android/server/am/ActivityManagerService$MemItem;
    .end local v9    # "label":Ljava/lang/String;
    :cond_2f
    move-object/from16 v6, p2

    .line 11536
    :goto_28
    add-int/lit8 v0, v0, 0x1

    move-object/from16 v86, v5

    goto :goto_26

    :cond_30
    move-object/from16 v6, p2

    .line 11547
    .end local v0    # "j":I
    iget-boolean v0, v6, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->oomOnly:Z

    if-nez v0, :cond_31

    .line 11548
    const-wide v30, 0x20b0000001dL

    const-string/jumbo v32, "proc"

    const/16 v34, 0x1

    const/16 v35, 0x0

    const/16 v36, 0x0

    move-object/from16 v29, v43

    move-object/from16 v33, v53

    invoke-static/range {v29 .. v36}, Lcom/android/server/am/ActivityManagerService;->dumpMemItems(Landroid/util/proto/ProtoOutputStream;JLjava/lang/String;Ljava/util/ArrayList;ZZZ)V

    .line 11551
    :cond_31
    const-wide v30, 0x20b0000001eL

    const-string/jumbo v32, "oom"

    const/16 v34, 0x0

    const/16 v35, 0x0

    const/16 v36, 0x0

    move-object/from16 v29, v43

    move-object/from16 v33, v4

    invoke-static/range {v29 .. v36}, Lcom/android/server/am/ActivityManagerService;->dumpMemItems(Landroid/util/proto/ProtoOutputStream;JLjava/lang/String;Ljava/util/ArrayList;ZZZ)V

    .line 11553
    if-nez p4, :cond_32

    iget-boolean v0, v6, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->oomOnly:Z

    if-nez v0, :cond_32

    .line 11554
    const-wide v30, 0x20b0000001fL

    const-string v32, "cat"

    const/16 v34, 0x1

    const/16 v35, 0x0

    const/16 v36, 0x0

    move-object/from16 v29, v43

    move-object/from16 v33, v1

    invoke-static/range {v29 .. v36}, Lcom/android/server/am/ActivityManagerService;->dumpMemItems(Landroid/util/proto/ProtoOutputStream;JLjava/lang/String;Ljava/util/ArrayList;ZZZ)V

    .line 11558
    :cond_32
    iget-boolean v0, v6, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpSwapPss:Z

    if-eqz v0, :cond_33

    if-eqz v37, :cond_33

    const/16 v7, 0xa

    aget-wide v8, v21, v7

    cmp-long v0, v8, v23

    if-eqz v0, :cond_33

    const/4 v0, 0x1

    goto :goto_29

    :cond_33
    move/from16 v0, v44

    :goto_29
    iput-boolean v0, v6, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpSwapPss:Z

    .line 11559
    iget-boolean v0, v6, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->oomOnly:Z

    if-nez v0, :cond_34

    .line 11560
    const-wide v30, 0x20b00000005L

    const-string/jumbo v32, "proc"

    const/16 v34, 0x1

    const/16 v35, 0x1

    iget-boolean v0, v6, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpSwapPss:Z

    move-object/from16 v29, v43

    move-object/from16 v33, v53

    move/from16 v36, v0

    invoke-static/range {v29 .. v36}, Lcom/android/server/am/ActivityManagerService;->dumpMemItems(Landroid/util/proto/ProtoOutputStream;JLjava/lang/String;Ljava/util/ArrayList;ZZZ)V

    .line 11563
    :cond_34
    const-wide v30, 0x20b00000006L

    const-string/jumbo v32, "oom"

    const/16 v34, 0x0

    const/16 v35, 0x1

    iget-boolean v0, v6, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpSwapPss:Z

    move-object/from16 v29, v43

    move-object/from16 v33, v4

    move/from16 v36, v0

    invoke-static/range {v29 .. v36}, Lcom/android/server/am/ActivityManagerService;->dumpMemItems(Landroid/util/proto/ProtoOutputStream;JLjava/lang/String;Ljava/util/ArrayList;ZZZ)V

    .line 11565
    if-nez p4, :cond_35

    iget-boolean v0, v6, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->oomOnly:Z

    if-nez v0, :cond_35

    .line 11566
    const-wide v30, 0x20b00000007L

    const-string v32, "cat"

    const/16 v34, 0x1

    const/16 v35, 0x1

    iget-boolean v0, v6, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpSwapPss:Z

    move-object/from16 v29, v43

    move-object/from16 v33, v1

    move/from16 v36, v0

    invoke-static/range {v29 .. v36}, Lcom/android/server/am/ActivityManagerService;->dumpMemItems(Landroid/util/proto/ProtoOutputStream;JLjava/lang/String;Ljava/util/ArrayList;ZZZ)V

    .line 11569
    :cond_35
    new-instance v0, Lcom/android/internal/util/MemInfoReader;

    invoke-direct {v0}, Lcom/android/internal/util/MemInfoReader;-><init>()V

    move-object v7, v0

    .line 11570
    .local v7, "memInfo":Lcom/android/internal/util/MemInfoReader;
    invoke-virtual {v7}, Lcom/android/internal/util/MemInfoReader;->readMemInfo()V

    .line 11571
    const/16 v0, 0xc

    aget-wide v8, v21, v0

    cmp-long v0, v8, v23

    const-wide/16 v8, 0x400

    if-lez v0, :cond_36

    .line 11572
    move-object v10, v2

    move-object/from16 v2, p0

    .end local v2    # "dalvikSubitemPss":[J
    .local v10, "dalvikSubitemPss":[J
    iget-object v0, v2, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    iget-object v11, v0, Lcom/android/server/am/ProcessStatsService;->mLock:Ljava/lang/Object;

    monitor-enter v11

    .line 11573
    :try_start_d
    invoke-virtual {v7}, Lcom/android/internal/util/MemInfoReader;->getCachedSizeKb()J

    move-result-wide v12

    .line 11574
    .local v12, "cachedKb":J
    invoke-virtual {v7}, Lcom/android/internal/util/MemInfoReader;->getFreeSizeKb()J

    move-result-wide v14

    .line 11575
    .local v14, "freeKb":J
    invoke-virtual {v7}, Lcom/android/internal/util/MemInfoReader;->getZramTotalSizeKb()J

    move-result-wide v16

    .line 11576
    .local v16, "zramKb":J
    invoke-virtual {v7}, Lcom/android/internal/util/MemInfoReader;->getKernelUsedSizeKb()J

    move-result-wide v18

    .line 11577
    .local v18, "kernelKb":J
    mul-long v61, v12, v8

    mul-long v63, v14, v8

    mul-long v65, v16, v8

    mul-long v67, v18, v8

    const/16 v0, 0xc

    aget-wide v29, v21, v0

    mul-long v69, v29, v8

    invoke-static/range {v61 .. v70}, Lcom/android/server/am/EventLogTags;->writeAmMeminfo(JJJJJ)V

    .line 11579
    iget-object v0, v2, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    const/16 v20, 0xc

    aget-wide v70, v21, v20

    move-object/from16 v61, v0

    move-wide/from16 v62, v12

    move-wide/from16 v64, v14

    move-wide/from16 v66, v16

    move-wide/from16 v68, v18

    invoke-virtual/range {v61 .. v71}, Lcom/android/server/am/ProcessStatsService;->addSysMemUsageLocked(JJJJJ)V

    .line 11581
    .end local v12    # "cachedKb":J
    .end local v14    # "freeKb":J
    .end local v16    # "zramKb":J
    .end local v18    # "kernelKb":J
    monitor-exit v11

    goto :goto_2a

    :catchall_a
    move-exception v0

    monitor-exit v11
    :try_end_d
    .catchall {:try_start_d .. :try_end_d} :catchall_a

    throw v0

    .line 11571
    .end local v10    # "dalvikSubitemPss":[J
    .restart local v2    # "dalvikSubitemPss":[J
    :cond_36
    move-object v10, v2

    move-object/from16 v2, p0

    .line 11583
    .end local v2    # "dalvikSubitemPss":[J
    .restart local v10    # "dalvikSubitemPss":[J
    :goto_2a
    if-nez p4, :cond_37

    .line 11584
    const-wide v11, 0x10300000008L

    invoke-virtual {v7}, Lcom/android/internal/util/MemInfoReader;->getTotalSizeKb()J

    move-result-wide v13

    move-object/from16 v15, v43

    .end local v43    # "proto":Landroid/util/proto/ProtoOutputStream;
    .local v15, "proto":Landroid/util/proto/ProtoOutputStream;
    invoke-virtual {v15, v11, v12, v13, v14}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 11585
    const-wide v11, 0x10e00000009L

    iget-object v0, v2, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    invoke-virtual {v0}, Lcom/android/server/am/AppProfiler;->getLastMemoryLevelLocked()I

    move-result v0

    invoke-virtual {v15, v11, v12, v0}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 11586
    const-wide v11, 0x1030000000aL

    move-wide/from16 v13, v92

    .end local v92    # "cachedPss":J
    .local v13, "cachedPss":J
    invoke-virtual {v15, v11, v12, v13, v14}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 11587
    const-wide v11, 0x1030000000bL

    invoke-virtual {v7}, Lcom/android/internal/util/MemInfoReader;->getCachedSizeKb()J

    move-result-wide v8

    invoke-virtual {v15, v11, v12, v8, v9}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 11588
    const-wide v8, 0x1030000000cL

    invoke-virtual {v7}, Lcom/android/internal/util/MemInfoReader;->getFreeSizeKb()J

    move-result-wide v11

    invoke-virtual {v15, v8, v9, v11, v12}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    goto :goto_2b

    .line 11583
    .end local v13    # "cachedPss":J
    .end local v15    # "proto":Landroid/util/proto/ProtoOutputStream;
    .restart local v43    # "proto":Landroid/util/proto/ProtoOutputStream;
    .restart local v92    # "cachedPss":J
    :cond_37
    move-object/from16 v15, v43

    move-wide/from16 v13, v92

    .line 11590
    .end local v43    # "proto":Landroid/util/proto/ProtoOutputStream;
    .end local v92    # "cachedPss":J
    .restart local v13    # "cachedPss":J
    .restart local v15    # "proto":Landroid/util/proto/ProtoOutputStream;
    :goto_2b
    invoke-virtual {v7}, Lcom/android/internal/util/MemInfoReader;->getTotalSizeKb()J

    move-result-wide v8

    aget-wide v11, v21, v60

    const/16 v18, 0xa

    aget-wide v18, v21, v18

    sub-long v11, v11, v18

    sub-long/2addr v8, v11

    .line 11592
    invoke-virtual {v7}, Lcom/android/internal/util/MemInfoReader;->getFreeSizeKb()J

    move-result-wide v11

    sub-long/2addr v8, v11

    invoke-virtual {v7}, Lcom/android/internal/util/MemInfoReader;->getCachedSizeKb()J

    move-result-wide v11

    sub-long/2addr v8, v11

    .line 11593
    invoke-virtual {v7}, Lcom/android/internal/util/MemInfoReader;->getKernelUsedSizeKb()J

    move-result-wide v11

    sub-long/2addr v8, v11

    invoke-virtual {v7}, Lcom/android/internal/util/MemInfoReader;->getZramTotalSizeKb()J

    move-result-wide v11

    sub-long/2addr v8, v11

    .line 11594
    .local v8, "lostRAM":J
    const-wide v11, 0x1030000000dL

    aget-wide v18, v21, v60

    move-object/from16 v20, v1

    .end local v1    # "catMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .local v20, "catMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    sub-long v0, v18, v13

    invoke-virtual {v15, v11, v12, v0, v1}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 11595
    const-wide v0, 0x1030000000eL

    invoke-virtual {v7}, Lcom/android/internal/util/MemInfoReader;->getKernelUsedSizeKb()J

    move-result-wide v11

    invoke-virtual {v15, v0, v1, v11, v12}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 11596
    const-wide v0, 0x1030000000fL

    invoke-virtual {v15, v0, v1, v8, v9}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 11597
    if-nez p4, :cond_39

    .line 11598
    invoke-virtual {v7}, Lcom/android/internal/util/MemInfoReader;->getZramTotalSizeKb()J

    move-result-wide v0

    cmp-long v0, v0, v23

    if-eqz v0, :cond_38

    .line 11599
    const-wide v0, 0x10300000010L

    invoke-virtual {v7}, Lcom/android/internal/util/MemInfoReader;->getZramTotalSizeKb()J

    move-result-wide v11

    invoke-virtual {v15, v0, v1, v11, v12}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 11600
    const-wide v0, 0x10300000011L

    .line 11601
    invoke-virtual {v7}, Lcom/android/internal/util/MemInfoReader;->getSwapTotalSizeKb()J

    move-result-wide v11

    invoke-virtual {v7}, Lcom/android/internal/util/MemInfoReader;->getSwapFreeSizeKb()J

    move-result-wide v18

    sub-long v11, v11, v18

    .line 11600
    invoke-virtual {v15, v0, v1, v11, v12}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 11602
    const-wide v0, 0x10300000012L

    invoke-virtual {v7}, Lcom/android/internal/util/MemInfoReader;->getSwapTotalSizeKb()J

    move-result-wide v11

    invoke-virtual {v15, v0, v1, v11, v12}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 11604
    :cond_38
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->getKsmInfo()[J

    move-result-object v0

    .line 11605
    .local v0, "ksm":[J
    const-wide v11, 0x10300000013L

    move/from16 v18, v3

    move-object/from16 v19, v4

    const/4 v1, 0x1

    .end local v3    # "dalvikId":I
    .end local v4    # "oomMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .local v18, "dalvikId":I
    .local v19, "oomMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    aget-wide v3, v0, v1

    invoke-virtual {v15, v11, v12, v3, v4}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 11606
    const-wide v3, 0x10300000014L

    aget-wide v11, v0, v44

    invoke-virtual {v15, v3, v4, v11, v12}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 11607
    const-wide v3, 0x10300000015L

    aget-wide v11, v0, v22

    invoke-virtual {v15, v3, v4, v11, v12}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 11608
    const-wide v3, 0x10300000016L

    aget-wide v11, v0, v89

    invoke-virtual {v15, v3, v4, v11, v12}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 11610
    const-wide v3, 0x10500000017L

    invoke-static {}, Landroid/app/ActivityManager;->staticGetMemoryClass()I

    move-result v1

    invoke-virtual {v15, v3, v4, v1}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 11611
    const-wide v3, 0x10500000018L

    invoke-static {}, Landroid/app/ActivityManager;->staticGetLargeMemoryClass()I

    move-result v1

    invoke-virtual {v15, v3, v4, v1}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 11612
    const-wide v3, 0x10300000019L

    iget-object v1, v2, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    const/16 v11, 0x3e7

    .line 11613
    invoke-virtual {v1, v11}, Lcom/android/server/am/ProcessList;->getMemLevel(I)J

    move-result-wide v11

    const-wide/16 v16, 0x400

    div-long v11, v11, v16

    .line 11612
    invoke-virtual {v15, v3, v4, v11, v12}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 11614
    const-wide v3, 0x1030000001aL

    iget-object v1, v2, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    .line 11615
    invoke-virtual {v1}, Lcom/android/server/am/ProcessList;->getCachedRestoreThresholdKb()J

    move-result-wide v11

    .line 11614
    invoke-virtual {v15, v3, v4, v11, v12}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 11617
    const-wide v3, 0x1080000001bL

    invoke-static {}, Landroid/app/ActivityManager;->isLowRamDeviceStatic()Z

    move-result v1

    invoke-virtual {v15, v3, v4, v1}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 11618
    const-wide v3, 0x1080000001cL

    invoke-static {}, Landroid/app/ActivityManager;->isHighEndGfx()Z

    move-result v1

    invoke-virtual {v15, v3, v4, v1}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    goto :goto_2c

    .line 11597
    .end local v0    # "ksm":[J
    .end local v18    # "dalvikId":I
    .end local v19    # "oomMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .restart local v3    # "dalvikId":I
    .restart local v4    # "oomMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    :cond_39
    move/from16 v18, v3

    move-object/from16 v19, v4

    .line 11622
    .end local v3    # "dalvikId":I
    .end local v4    # "oomMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .end local v7    # "memInfo":Lcom/android/internal/util/MemInfoReader;
    .end local v8    # "lostRAM":J
    .end local v20    # "catMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .end local v48    # "memInfos":[Landroid/os/Debug$MemoryInfo;
    :goto_2c
    move-object/from16 v33, v28

    goto :goto_2d

    .line 11419
    .end local v5    # "oomPss":[J
    .end local v10    # "dalvikSubitemPss":[J
    .end local v15    # "proto":Landroid/util/proto/ProtoOutputStream;
    .end local v28    # "mi":Landroid/os/Debug$MemoryInfo;
    .end local v40    # "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .end local v41    # "uptimeMs":J
    .end local v49    # "numProcs":I
    .end local v53    # "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .end local v54    # "oomProcs":[Ljava/util/ArrayList;, "[Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .local v2, "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .local v7, "oomPss":[J
    .local v12, "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .local v13, "dalvikSubitemPss":[J
    .local v14, "cachedPss":J
    .restart local v29    # "proto":Landroid/util/proto/ProtoOutputStream;
    .restart local v33    # "mi":Landroid/os/Debug$MemoryInfo;
    .local v48, "uptimeMs":J
    .restart local v57    # "numProcs":I
    .restart local v64    # "oomProcs":[Ljava/util/ArrayList;, "[Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    :cond_3a
    move-object/from16 v6, p2

    move-object/from16 v40, v2

    move-object v5, v7

    move-object/from16 v53, v12

    move-object v10, v13

    move-wide v13, v14

    move-object/from16 v15, v29

    move-wide/from16 v41, v48

    move/from16 v49, v57

    move-object/from16 v54, v64

    move-object/from16 v2, p0

    .line 11622
    .end local v2    # "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .end local v7    # "oomPss":[J
    .end local v12    # "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .end local v14    # "cachedPss":J
    .end local v29    # "proto":Landroid/util/proto/ProtoOutputStream;
    .end local v48    # "uptimeMs":J
    .end local v57    # "numProcs":I
    .end local v64    # "oomProcs":[Ljava/util/ArrayList;, "[Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .restart local v5    # "oomPss":[J
    .restart local v10    # "dalvikSubitemPss":[J
    .local v13, "cachedPss":J
    .restart local v15    # "proto":Landroid/util/proto/ProtoOutputStream;
    .restart local v40    # "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .restart local v41    # "uptimeMs":J
    .restart local v49    # "numProcs":I
    .restart local v53    # "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .restart local v54    # "oomProcs":[Ljava/util/ArrayList;, "[Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    :goto_2d
    invoke-virtual {v15}, Landroid/util/proto/ProtoOutputStream;->flush()V

    .line 11623
    return-void
.end method

.method private final dumpApplicationMemoryUsage(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;[Ljava/lang/String;ZLjava/util/ArrayList;Ljava/io/PrintWriter;)V
    .locals 98
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "prefix"    # Ljava/lang/String;
    .param p4, "opts"    # Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;
    .param p5, "innerArgs"    # [Ljava/lang/String;
    .param p6, "brief"    # Z
    .param p8, "categoryPw"    # Ljava/io/PrintWriter;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/io/FileDescriptor;",
            "Ljava/io/PrintWriter;",
            "Ljava/lang/String;",
            "Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;",
            "[",
            "Ljava/lang/String;",
            "Z",
            "Ljava/util/ArrayList<",
            "Lcom/android/server/am/ProcessRecord;",
            ">;",
            "Ljava/io/PrintWriter;",
            ")V"
        }
    .end annotation

    .line 10506
    .local p7, "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    move-object/from16 v9, p0

    move-object/from16 v11, p2

    move-object/from16 v10, p4

    move-object/from16 v15, p5

    move-object/from16 v14, p7

    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v30

    .line 10507
    .local v30, "uptime":J
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v32

    .line 10508
    .local v32, "realtime":J
    const/4 v13, 0x3

    new-array v12, v13, [J

    .line 10510
    .local v12, "tmpLong":[J
    const/16 v34, 0x2

    const/4 v8, 0x0

    const-wide/16 v35, 0x0

    const/4 v7, 0x1

    if-nez v14, :cond_b

    .line 10512
    const-string v0, "N/A"

    .line 10513
    .local v0, "proc":Ljava/lang/String;
    array-length v1, v15

    if-lez v1, :cond_a

    .line 10514
    aget-object v13, v15, v8

    .line 10515
    .end local v0    # "proc":Ljava/lang/String;
    .local v13, "proc":Ljava/lang/String;
    invoke-virtual {v13, v8}, Ljava/lang/String;->charAt(I)C

    move-result v0

    const/16 v1, 0x2d

    if-eq v0, v1, :cond_9

    .line 10516
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    move-object v5, v0

    .line 10518
    .local v5, "nativeProcs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/internal/os/ProcessCpuTracker$Stats;>;"
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateCpuStatsNow()V

    .line 10519
    const/4 v1, -0x1

    .line 10521
    .local v1, "findPid":I
    :try_start_0
    aget-object v0, v15, v8

    invoke-static {v0}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v0
    :try_end_0
    .catch Ljava/lang/NumberFormatException; {:try_start_0 .. :try_end_0} :catch_0

    move v1, v0

    .line 10523
    goto :goto_0

    .line 10522
    :catch_0
    move-exception v0

    move v0, v1

    .line 10524
    .end local v1    # "findPid":I
    .local v0, "findPid":I
    :goto_0
    move v6, v0

    .line 10525
    .local v6, "fFindPid":I
    iget-object v1, v9, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    new-instance v2, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda20;

    invoke-direct {v2, v6, v15, v5}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda20;-><init>(I[Ljava/lang/String;Ljava/util/ArrayList;)V

    invoke-virtual {v1, v2}, Lcom/android/server/am/AppProfiler;->forAllCpuStats(Ljava/util/function/Consumer;)V

    .line 10531
    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    move-result v1

    if-lez v1, :cond_8

    .line 10532
    iget-boolean v3, v10, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCheckinRequest:Z

    iget-boolean v4, v10, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCompact:Z

    move-object/from16 v1, p0

    move-object/from16 v2, p2

    move/from16 v16, v3

    move/from16 v17, v4

    move-wide/from16 v3, v30

    move-object/from16 v37, v5

    move/from16 v38, v6

    .end local v5    # "nativeProcs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/internal/os/ProcessCpuTracker$Stats;>;"
    .end local v6    # "fFindPid":I
    .local v37, "nativeProcs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/internal/os/ProcessCpuTracker$Stats;>;"
    .local v38, "fFindPid":I
    move-wide/from16 v5, v32

    move v15, v7

    move/from16 v7, v16

    move/from16 v39, v8

    move/from16 v8, v17

    invoke-direct/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->dumpApplicationMemoryUsageHeader(Ljava/io/PrintWriter;JJZZ)V

    .line 10534
    const/4 v1, 0x0

    .line 10535
    .local v1, "mi":Landroid/os/Debug$MemoryInfo;
    invoke-virtual/range {v37 .. v37}, Ljava/util/ArrayList;->size()I

    move-result v2

    sub-int/2addr v2, v15

    .local v2, "i":I
    :goto_1
    if-ltz v2, :cond_7

    .line 10536
    move-object/from16 v3, v37

    .end local v37    # "nativeProcs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/internal/os/ProcessCpuTracker$Stats;>;"
    .local v3, "nativeProcs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/internal/os/ProcessCpuTracker$Stats;>;"
    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/internal/os/ProcessCpuTracker$Stats;

    .line 10537
    .local v4, "r":Lcom/android/internal/os/ProcessCpuTracker$Stats;
    iget v5, v4, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    .line 10538
    .local v5, "pid":I
    if-nez v1, :cond_0

    .line 10539
    new-instance v6, Landroid/os/Debug$MemoryInfo;

    invoke-direct {v6}, Landroid/os/Debug$MemoryInfo;-><init>()V

    move-object v1, v6

    .line 10541
    :cond_0
    iget-boolean v6, v10, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDetails:Z

    if-nez v6, :cond_3

    if-nez p6, :cond_1

    iget-boolean v6, v10, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->oomOnly:Z

    if-nez v6, :cond_1

    goto :goto_2

    .line 10546
    :cond_1
    const/4 v6, 0x0

    invoke-static {v5, v12, v6}, Landroid/os/Debug;->getPss(I[J[J)J

    move-result-wide v6

    .line 10547
    .local v6, "pss":J
    cmp-long v8, v6, v35

    if-nez v8, :cond_2

    .line 10548
    move-object v6, v10

    move-object v9, v11

    move-object v8, v12

    move-object v7, v13

    goto/16 :goto_4

    .line 10550
    :cond_2
    long-to-int v8, v6

    iput v8, v1, Landroid/os/Debug$MemoryInfo;->nativePss:I

    .line 10551
    move-wide v15, v6

    .end local v6    # "pss":J
    .local v15, "pss":J
    aget-wide v6, v12, v39

    long-to-int v6, v6

    iput v6, v1, Landroid/os/Debug$MemoryInfo;->nativePrivateDirty:I

    .line 10552
    aget-wide v6, v12, v34

    long-to-int v6, v6

    iput v6, v1, Landroid/os/Debug$MemoryInfo;->nativeRss:I

    goto :goto_3

    .line 10542
    .end local v15    # "pss":J
    :cond_3
    :goto_2
    invoke-static {v5, v1}, Landroid/os/Debug;->getMemoryInfo(ILandroid/os/Debug$MemoryInfo;)Z

    move-result v6

    if-nez v6, :cond_4

    .line 10543
    move-object v6, v10

    move-object v9, v11

    move-object v8, v12

    move-object v7, v13

    goto :goto_4

    .line 10554
    :cond_4
    :goto_3
    iget-boolean v6, v10, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCheckinRequest:Z

    if-nez v6, :cond_5

    iget-boolean v6, v10, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDetails:Z

    if-eqz v6, :cond_5

    .line 10555
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "\n** MEMINFO in pid "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v7, " ["

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v7, v4, Lcom/android/internal/os/ProcessCpuTracker$Stats;->baseName:Ljava/lang/String;

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v7, "] **"

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v11, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10558
    :cond_5
    iget-boolean v6, v10, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCheckinRequest:Z

    move-object v8, v12

    .end local v12    # "tmpLong":[J
    .local v8, "tmpLong":[J
    move v12, v6

    iget-boolean v6, v10, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpFullDetails:Z

    move-object v7, v13

    .end local v13    # "proc":Ljava/lang/String;
    .local v7, "proc":Ljava/lang/String;
    move v13, v6

    iget-boolean v6, v10, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDalvik:Z

    move-object v15, v14

    move v14, v6

    iget-boolean v6, v10, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpSummaryOnly:Z

    move-object v9, v15

    move v15, v6

    iget-object v6, v4, Lcom/android/internal/os/ProcessCpuTracker$Stats;->baseName:Ljava/lang/String;

    move-object/from16 v17, v6

    const-wide/16 v18, 0x0

    const-wide/16 v20, 0x0

    const-wide/16 v22, 0x0

    const-wide/16 v24, 0x0

    const-wide/16 v26, 0x0

    const-wide/16 v28, 0x0

    move-object v6, v10

    move-object/from16 v10, p2

    move-object v9, v11

    move-object v11, v1

    move/from16 v16, v5

    invoke-static/range {v10 .. v29}, Landroid/app/ActivityThread;->dumpMemInfoTable(Ljava/io/PrintWriter;Landroid/os/Debug$MemoryInfo;ZZZZILjava/lang/String;JJJJJJ)V

    .line 10561
    iget-boolean v10, v6, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCheckinRequest:Z

    if-eqz v10, :cond_6

    .line 10562
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 10535
    .end local v4    # "r":Lcom/android/internal/os/ProcessCpuTracker$Stats;
    .end local v5    # "pid":I
    :cond_6
    :goto_4
    add-int/lit8 v2, v2, -0x1

    move-object/from16 v14, p7

    move-object/from16 v37, v3

    move-object v10, v6

    move-object v13, v7

    move-object v12, v8

    move-object v11, v9

    move-object/from16 v9, p0

    goto/16 :goto_1

    .line 10565
    .end local v2    # "i":I
    .end local v3    # "nativeProcs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/internal/os/ProcessCpuTracker$Stats;>;"
    .end local v7    # "proc":Ljava/lang/String;
    .end local v8    # "tmpLong":[J
    .restart local v12    # "tmpLong":[J
    .restart local v13    # "proc":Ljava/lang/String;
    .restart local v37    # "nativeProcs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/internal/os/ProcessCpuTracker$Stats;>;"
    :cond_7
    return-void

    .line 10531
    .end local v1    # "mi":Landroid/os/Debug$MemoryInfo;
    .end local v37    # "nativeProcs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/internal/os/ProcessCpuTracker$Stats;>;"
    .end local v38    # "fFindPid":I
    .local v5, "nativeProcs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/internal/os/ProcessCpuTracker$Stats;>;"
    .local v6, "fFindPid":I
    :cond_8
    move-object v3, v5

    move/from16 v38, v6

    move-object v6, v10

    move-object v9, v11

    move-object v8, v12

    move-object v7, v13

    .end local v5    # "nativeProcs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/internal/os/ProcessCpuTracker$Stats;>;"
    .end local v6    # "fFindPid":I
    .end local v12    # "tmpLong":[J
    .end local v13    # "proc":Ljava/lang/String;
    .restart local v3    # "nativeProcs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/internal/os/ProcessCpuTracker$Stats;>;"
    .restart local v7    # "proc":Ljava/lang/String;
    .restart local v8    # "tmpLong":[J
    .restart local v38    # "fFindPid":I
    goto :goto_5

    .line 10515
    .end local v0    # "findPid":I
    .end local v3    # "nativeProcs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/internal/os/ProcessCpuTracker$Stats;>;"
    .end local v7    # "proc":Ljava/lang/String;
    .end local v8    # "tmpLong":[J
    .end local v38    # "fFindPid":I
    .restart local v12    # "tmpLong":[J
    .restart local v13    # "proc":Ljava/lang/String;
    :cond_9
    move-object v6, v10

    move-object v9, v11

    move-object v8, v12

    move-object v7, v13

    .line 10569
    .end local v12    # "tmpLong":[J
    .end local v13    # "proc":Ljava/lang/String;
    .restart local v7    # "proc":Ljava/lang/String;
    .restart local v8    # "tmpLong":[J
    :goto_5
    move-object v0, v7

    goto :goto_6

    .line 10513
    .end local v7    # "proc":Ljava/lang/String;
    .end local v8    # "tmpLong":[J
    .local v0, "proc":Ljava/lang/String;
    .restart local v12    # "tmpLong":[J
    :cond_a
    move-object v6, v10

    move-object v9, v11

    move-object v8, v12

    .line 10569
    .end local v12    # "tmpLong":[J
    .restart local v8    # "tmpLong":[J
    :goto_6
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "No process found for: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v9, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10570
    return-void

    .line 10573
    .end local v0    # "proc":Ljava/lang/String;
    .end local v8    # "tmpLong":[J
    .restart local v12    # "tmpLong":[J
    :cond_b
    move v15, v7

    move/from16 v39, v8

    move-object v6, v10

    move-object v9, v11

    move-object v8, v12

    .end local v12    # "tmpLong":[J
    .restart local v8    # "tmpLong":[J
    if-nez p6, :cond_d

    iget-boolean v0, v6, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->oomOnly:Z

    if-nez v0, :cond_d

    invoke-virtual/range {p7 .. p7}, Ljava/util/ArrayList;->size()I

    move-result v0

    if-eq v0, v15, :cond_c

    iget-boolean v0, v6, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCheckinRequest:Z

    if-nez v0, :cond_c

    iget-boolean v0, v6, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->packages:Z

    if-eqz v0, :cond_d

    .line 10574
    :cond_c
    iput-boolean v15, v6, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDetails:Z

    .line 10576
    :cond_d
    invoke-virtual/range {p7 .. p7}, Ljava/util/ArrayList;->size()I

    move-result v11

    .line 10577
    .local v11, "numProcs":I
    iget-boolean v0, v6, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCheckinRequest:Z

    if-nez v0, :cond_e

    if-le v11, v15, :cond_e

    iget-boolean v0, v6, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->packages:Z

    if-nez v0, :cond_e

    move v0, v15

    goto :goto_7

    :cond_e
    move/from16 v0, v39

    :goto_7
    move/from16 v37, v0

    .line 10578
    .local v37, "collectNative":Z
    if-eqz v37, :cond_f

    .line 10581
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateCpuStatsNow()V

    .line 10584
    :cond_f
    iget-boolean v7, v6, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCheckinRequest:Z

    iget-boolean v0, v6, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCompact:Z

    move-object/from16 v1, p0

    move-object/from16 v2, p2

    move-wide/from16 v3, v30

    move-object v10, v6

    move-wide/from16 v5, v32

    move-object v14, v8

    .end local v8    # "tmpLong":[J
    .local v14, "tmpLong":[J
    move v8, v0

    invoke-direct/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->dumpApplicationMemoryUsageHeader(Ljava/io/PrintWriter;JJZZ)V

    .line 10586
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    move-object v8, v0

    .line 10587
    .local v8, "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    new-instance v0, Landroid/util/SparseArray;

    invoke-direct {v0}, Landroid/util/SparseArray;-><init>()V

    move-object v7, v0

    .line 10588
    .local v7, "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    const/16 v1, 0xf

    new-array v6, v1, [J

    .line 10589
    .local v6, "ss":[J
    iget-boolean v0, v10, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDalvik:Z

    if-eqz v0, :cond_10

    new-array v0, v1, [J

    goto :goto_8

    .line 10590
    :cond_10
    sget-object v0, Llibcore/util/EmptyArray;->LONG:[J

    :goto_8
    move-object v5, v0

    .line 10591
    .local v5, "dalvikSubitemPss":[J
    iget-boolean v0, v10, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDalvik:Z

    if-eqz v0, :cond_11

    new-array v0, v1, [J

    goto :goto_9

    .line 10592
    :cond_11
    sget-object v0, Llibcore/util/EmptyArray;->LONG:[J

    :goto_9
    move-object/from16 v38, v0

    .line 10593
    .local v38, "dalvikSubitemSwapPss":[J
    iget-boolean v0, v10, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDalvik:Z

    if-eqz v0, :cond_12

    new-array v0, v1, [J

    goto :goto_a

    .line 10594
    :cond_12
    sget-object v0, Llibcore/util/EmptyArray;->LONG:[J

    :goto_a
    move-object/from16 v40, v0

    .line 10595
    .local v40, "dalvikSubitemRss":[J
    const/16 v2, 0x11

    new-array v4, v2, [J

    .line 10596
    .local v4, "miscPss":[J
    new-array v3, v2, [J

    .line 10597
    .local v3, "miscSwapPss":[J
    new-array v12, v2, [J

    .line 10598
    .local v12, "miscRss":[J
    const/4 v2, 0x4

    new-array v1, v2, [J

    .line 10600
    .local v1, "memtrackTmp":[J
    sget-object v0, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_LABEL:[Ljava/lang/String;

    array-length v13, v0

    new-array v13, v13, [J

    .line 10601
    .local v13, "oomPss":[J
    array-length v2, v0

    new-array v2, v2, [J

    .line 10602
    .local v2, "oomSwapPss":[J
    array-length v15, v0

    new-array v15, v15, [J

    .line 10603
    .local v15, "oomRss":[J
    array-length v0, v0

    new-array v9, v0, [Ljava/util/ArrayList;

    .line 10606
    .local v9, "oomProcs":[Ljava/util/ArrayList;, "[Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    const-wide/16 v44, 0x0

    .line 10607
    .local v44, "totalSwapPss":J
    const-wide/16 v46, 0x0

    .line 10608
    .local v46, "totalRss":J
    const-wide/16 v18, 0x0

    .line 10609
    .local v18, "cachedPss":J
    const-wide/16 v20, 0x0

    .line 10610
    .local v20, "cachedSwapPss":J
    const/4 v0, 0x0

    .line 10612
    .local v0, "hasSwapPss":Z
    const/16 v22, 0x0

    .line 10613
    .local v22, "mi":Landroid/os/Debug$MemoryInfo;
    add-int/lit8 v23, v11, -0x1

    move/from16 v29, v0

    move-object/from16 v52, v9

    move-wide/from16 v48, v18

    move-wide/from16 v50, v20

    move/from16 v9, v23

    .end local v0    # "hasSwapPss":Z
    .end local v18    # "cachedPss":J
    .end local v20    # "cachedSwapPss":J
    .local v9, "i":I
    .local v29, "hasSwapPss":Z
    .local v48, "cachedPss":J
    .local v50, "cachedSwapPss":J
    .local v52, "oomProcs":[Ljava/util/ArrayList;, "[Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    :goto_b
    const/16 v53, 0x5

    const/16 v54, 0xd

    move-object/from16 v55, v2

    .end local v2    # "oomSwapPss":[J
    .local v55, "oomSwapPss":[J
    const/16 v56, 0x8

    const/16 v57, 0x7

    const/16 v58, 0x6

    const/16 v59, 0x9

    if-ltz v9, :cond_2b

    .line 10614
    move-object/from16 v2, p2

    move/from16 v60, v11

    move-object/from16 v11, p7

    .end local v11    # "numProcs":I
    .local v60, "numProcs":I
    invoke-virtual {v11, v9}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v0

    move/from16 v74, v9

    .end local v9    # "i":I
    .local v74, "i":I
    move-object v9, v0

    check-cast v9, Lcom/android/server/am/ProcessRecord;

    .line 10619
    .local v9, "r":Lcom/android/server/am/ProcessRecord;
    move-object/from16 v11, p0

    move-object/from16 v18, v12

    .end local v12    # "miscRss":[J
    .local v18, "miscRss":[J
    iget-object v12, v11, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v12

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 10620
    invoke-virtual {v9}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v0

    move-object/from16 v75, v0

    .line 10621
    .local v75, "thread":Landroid/app/IApplicationThread;
    invoke-virtual {v9}, Lcom/android/server/am/ProcessRecord;->getPid()I

    move-result v0

    move/from16 v76, v0

    .line 10622
    .local v76, "pid":I
    iget-object v0, v9, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    invoke-virtual {v0}, Lcom/android/server/am/ProcessStateRecord;->getSetAdjWithServices()I

    move-result v0

    move/from16 v77, v0

    .line 10623
    .local v77, "oomAdj":I
    invoke-virtual {v9}, Lcom/android/server/am/ProcessRecord;->hasActivities()Z

    move-result v0

    move/from16 v78, v0

    .line 10624
    .local v78, "hasActivities":Z
    monitor-exit v12
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_9

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 10625
    if-eqz v75, :cond_2a

    .line 10626
    if-nez v22, :cond_13

    .line 10627
    new-instance v0, Landroid/os/Debug$MemoryInfo;

    invoke-direct {v0}, Landroid/os/Debug$MemoryInfo;-><init>()V

    move-object/from16 v22, v0

    move-object/from16 v12, v22

    goto :goto_c

    .line 10626
    :cond_13
    move-object/from16 v12, v22

    .line 10632
    .end local v22    # "mi":Landroid/os/Debug$MemoryInfo;
    .local v12, "mi":Landroid/os/Debug$MemoryInfo;
    :goto_c
    const-wide/16 v19, 0x0

    .line 10633
    .local v19, "memtrackGraphics":J
    const-wide/16 v21, 0x0

    .line 10634
    .local v21, "memtrackGl":J
    iget-boolean v0, v10, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDetails:Z

    if-nez v0, :cond_16

    if-nez p6, :cond_14

    iget-boolean v0, v10, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->oomOnly:Z

    if-nez v0, :cond_14

    move-object/from16 v79, v3

    move-object/from16 v80, v4

    move/from16 v3, v76

    const/4 v4, 0x1

    move-object/from16 v76, v5

    goto :goto_d

    .line 10645
    :cond_14
    const/4 v0, 0x3

    .line 10646
    .local v0, "reportType":I
    invoke-static {}, Landroid/os/SystemClock;->currentThreadTimeMillis()J

    move-result-wide v23

    .line 10647
    .local v23, "startTime":J
    move-object/from16 v79, v3

    move-object/from16 v80, v4

    move/from16 v3, v76

    move-object/from16 v76, v5

    .end local v4    # "miscPss":[J
    .end local v5    # "dalvikSubitemPss":[J
    .local v3, "pid":I
    .local v76, "dalvikSubitemPss":[J
    .local v79, "miscSwapPss":[J
    .local v80, "miscPss":[J
    invoke-static {v3, v14, v1}, Landroid/os/Debug;->getPss(I[J[J)J

    move-result-wide v4

    .line 10648
    .local v4, "pss":J
    cmp-long v25, v4, v35

    if-nez v25, :cond_15

    .line 10649
    const/4 v4, 0x1

    goto :goto_e

    .line 10651
    :cond_15
    move/from16 v25, v0

    .end local v0    # "reportType":I
    .local v25, "reportType":I
    long-to-int v0, v4

    iput v0, v12, Landroid/os/Debug$MemoryInfo;->dalvikPss:I

    .line 10652
    invoke-static {}, Landroid/os/SystemClock;->currentThreadTimeMillis()J

    move-result-wide v26

    .line 10653
    .local v26, "endTime":J
    move-wide/from16 v61, v4

    .end local v4    # "pss":J
    .local v61, "pss":J
    aget-wide v4, v14, v39

    long-to-int v0, v4

    iput v0, v12, Landroid/os/Debug$MemoryInfo;->dalvikPrivateDirty:I

    .line 10654
    aget-wide v4, v14, v34

    long-to-int v0, v4

    iput v0, v12, Landroid/os/Debug$MemoryInfo;->dalvikRss:I

    .line 10655
    const/4 v4, 0x1

    aget-wide v19, v1, v4

    .line 10656
    aget-wide v21, v1, v34

    move-wide/from16 v81, v19

    move-wide/from16 v83, v21

    move-wide/from16 v85, v23

    move/from16 v4, v25

    move-wide/from16 v87, v26

    move/from16 v5, v29

    goto :goto_f

    .line 10634
    .end local v23    # "startTime":J
    .end local v25    # "reportType":I
    .end local v26    # "endTime":J
    .end local v61    # "pss":J
    .end local v79    # "miscSwapPss":[J
    .end local v80    # "miscPss":[J
    .local v3, "miscSwapPss":[J
    .local v4, "miscPss":[J
    .restart local v5    # "dalvikSubitemPss":[J
    .local v76, "pid":I
    :cond_16
    move-object/from16 v79, v3

    move-object/from16 v80, v4

    move/from16 v3, v76

    const/4 v4, 0x1

    move-object/from16 v76, v5

    .line 10635
    .end local v4    # "miscPss":[J
    .end local v5    # "dalvikSubitemPss":[J
    .local v3, "pid":I
    .local v76, "dalvikSubitemPss":[J
    .restart local v79    # "miscSwapPss":[J
    .restart local v80    # "miscPss":[J
    :goto_d
    const/4 v0, 0x4

    .line 10636
    .restart local v0    # "reportType":I
    invoke-static {}, Landroid/os/SystemClock;->currentThreadTimeMillis()J

    move-result-wide v23

    .line 10637
    .restart local v23    # "startTime":J
    invoke-static {v3, v12}, Landroid/os/Debug;->getMemoryInfo(ILandroid/os/Debug$MemoryInfo;)Z

    move-result v5

    if-nez v5, :cond_17

    .line 10638
    nop

    .line 10613
    .end local v0    # "reportType":I
    .end local v3    # "pid":I
    .end local v9    # "r":Lcom/android/server/am/ProcessRecord;
    .end local v19    # "memtrackGraphics":J
    .end local v21    # "memtrackGl":J
    .end local v23    # "startTime":J
    .end local v75    # "thread":Landroid/app/IApplicationThread;
    .end local v77    # "oomAdj":I
    .end local v78    # "hasActivities":Z
    :goto_e
    move-object/from16 v91, v1

    move-object/from16 v96, v7

    move-object v4, v8

    move-object v1, v10

    move-object/from16 v22, v12

    move-object/from16 v93, v14

    move-object/from16 v94, v15

    move-object/from16 v90, v18

    move-object/from16 v9, v76

    const/16 v92, 0x3

    move-object v15, v13

    goto/16 :goto_1f

    .line 10640
    .restart local v0    # "reportType":I
    .restart local v3    # "pid":I
    .restart local v9    # "r":Lcom/android/server/am/ProcessRecord;
    .restart local v19    # "memtrackGraphics":J
    .restart local v21    # "memtrackGl":J
    .restart local v23    # "startTime":J
    .restart local v75    # "thread":Landroid/app/IApplicationThread;
    .restart local v77    # "oomAdj":I
    .restart local v78    # "hasActivities":Z
    :cond_17
    invoke-static {}, Landroid/os/SystemClock;->currentThreadTimeMillis()J

    move-result-wide v26

    .line 10641
    .restart local v26    # "endTime":J
    iget-boolean v5, v12, Landroid/os/Debug$MemoryInfo;->hasSwappedOutPss:Z

    .line 10642
    .end local v29    # "hasSwapPss":Z
    .local v5, "hasSwapPss":Z
    move/from16 v25, v0

    const/16 v4, 0xe

    .end local v0    # "reportType":I
    .restart local v25    # "reportType":I
    invoke-virtual {v12, v4}, Landroid/os/Debug$MemoryInfo;->getOtherPrivate(I)I

    move-result v0

    move/from16 v28, v5

    .end local v5    # "hasSwapPss":Z
    .local v28, "hasSwapPss":Z
    int-to-long v4, v0

    .line 10643
    .end local v19    # "memtrackGraphics":J
    .local v4, "memtrackGraphics":J
    move-wide/from16 v19, v4

    const/16 v4, 0xf

    .end local v4    # "memtrackGraphics":J
    .restart local v19    # "memtrackGraphics":J
    invoke-virtual {v12, v4}, Landroid/os/Debug$MemoryInfo;->getOtherPrivate(I)I

    move-result v0

    int-to-long v4, v0

    move-wide/from16 v83, v4

    move-wide/from16 v81, v19

    move-wide/from16 v85, v23

    move/from16 v4, v25

    move-wide/from16 v87, v26

    move/from16 v5, v28

    .line 10658
    .end local v19    # "memtrackGraphics":J
    .end local v21    # "memtrackGl":J
    .end local v23    # "startTime":J
    .end local v25    # "reportType":I
    .end local v26    # "endTime":J
    .end local v28    # "hasSwapPss":Z
    .local v4, "reportType":I
    .restart local v5    # "hasSwapPss":Z
    .local v81, "memtrackGraphics":J
    .local v83, "memtrackGl":J
    .local v85, "startTime":J
    .local v87, "endTime":J
    :goto_f
    iget-boolean v0, v10, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCheckinRequest:Z

    if-nez v0, :cond_18

    iget-boolean v0, v10, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDetails:Z

    if-eqz v0, :cond_18

    .line 10659
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    move/from16 v89, v5

    .end local v5    # "hasSwapPss":Z
    .local v89, "hasSwapPss":Z
    const-string v5, "\n** MEMINFO in pid "

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v5, " ["

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v5, v9, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v5, "] **"

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto :goto_10

    .line 10658
    .end local v89    # "hasSwapPss":Z
    .restart local v5    # "hasSwapPss":Z
    :cond_18
    move/from16 v89, v5

    .line 10661
    .end local v5    # "hasSwapPss":Z
    .restart local v89    # "hasSwapPss":Z
    :goto_10
    iget-boolean v0, v10, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDetails:Z

    if-eqz v0, :cond_1d

    .line 10662
    iget-boolean v0, v10, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->localOnly:Z

    if-eqz v0, :cond_1a

    .line 10663
    iget-boolean v0, v10, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCheckinRequest:Z

    move-object v5, v12

    move-object/from16 v90, v18

    .end local v12    # "mi":Landroid/os/Debug$MemoryInfo;
    .end local v18    # "miscRss":[J
    .local v5, "mi":Landroid/os/Debug$MemoryInfo;
    .local v90, "miscRss":[J
    move v12, v0

    iget-boolean v0, v10, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpFullDetails:Z

    move-object/from16 v91, v1

    move-object v1, v13

    const/16 v92, 0x3

    .end local v13    # "oomPss":[J
    .local v1, "oomPss":[J
    .local v91, "memtrackTmp":[J
    move v13, v0

    iget-boolean v0, v10, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDalvik:Z

    move-object/from16 v93, v14

    .end local v14    # "tmpLong":[J
    .local v93, "tmpLong":[J
    move v14, v0

    iget-boolean v0, v10, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpSummaryOnly:Z

    move-object/from16 v95, v1

    move-object/from16 v94, v15

    const/4 v1, 0x1

    .end local v1    # "oomPss":[J
    .end local v15    # "oomRss":[J
    .local v94, "oomRss":[J
    .local v95, "oomPss":[J
    move v15, v0

    iget-object v0, v9, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v17, v0

    const-wide/16 v18, 0x0

    const-wide/16 v20, 0x0

    const-wide/16 v22, 0x0

    const-wide/16 v24, 0x0

    const-wide/16 v26, 0x0

    const-wide/16 v28, 0x0

    move-object v1, v10

    move-object/from16 v10, p2

    move-object/from16 v96, v7

    move-object v7, v11

    .end local v7    # "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .local v96, "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    move-object v11, v5

    move/from16 v16, v3

    invoke-static/range {v10 .. v29}, Landroid/app/ActivityThread;->dumpMemInfoTable(Ljava/io/PrintWriter;Landroid/os/Debug$MemoryInfo;ZZZZILjava/lang/String;JJJJJJ)V

    .line 10665
    iget-boolean v0, v1, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCheckinRequest:Z

    if-eqz v0, :cond_19

    .line 10666
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    move-object/from16 v15, p1

    move-object/from16 v97, v8

    goto/16 :goto_16

    .line 10665
    :cond_19
    move-object/from16 v15, p1

    move-object/from16 v97, v8

    goto/16 :goto_16

    .line 10669
    .end local v5    # "mi":Landroid/os/Debug$MemoryInfo;
    .end local v90    # "miscRss":[J
    .end local v91    # "memtrackTmp":[J
    .end local v93    # "tmpLong":[J
    .end local v94    # "oomRss":[J
    .end local v95    # "oomPss":[J
    .end local v96    # "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .local v1, "memtrackTmp":[J
    .restart local v7    # "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .restart local v12    # "mi":Landroid/os/Debug$MemoryInfo;
    .restart local v13    # "oomPss":[J
    .restart local v14    # "tmpLong":[J
    .restart local v15    # "oomRss":[J
    .restart local v18    # "miscRss":[J
    :cond_1a
    move-object/from16 v91, v1

    move-object/from16 v96, v7

    move-object v1, v10

    move-object v7, v11

    move-object v5, v12

    move-object/from16 v95, v13

    move-object/from16 v93, v14

    move-object/from16 v94, v15

    move-object/from16 v90, v18

    const/16 v92, 0x3

    .end local v1    # "memtrackTmp":[J
    .end local v7    # "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .end local v12    # "mi":Landroid/os/Debug$MemoryInfo;
    .end local v13    # "oomPss":[J
    .end local v14    # "tmpLong":[J
    .end local v15    # "oomRss":[J
    .end local v18    # "miscRss":[J
    .restart local v5    # "mi":Landroid/os/Debug$MemoryInfo;
    .restart local v90    # "miscRss":[J
    .restart local v91    # "memtrackTmp":[J
    .restart local v93    # "tmpLong":[J
    .restart local v94    # "oomRss":[J
    .restart local v95    # "oomPss":[J
    .restart local v96    # "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->flush()V

    .line 10671
    :try_start_2
    new-instance v0, Lcom/android/internal/os/TransferPipe;

    invoke-direct {v0}, Lcom/android/internal/os/TransferPipe;-><init>()V
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_4
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_3

    move-object v15, v0

    .line 10673
    .local v15, "tp":Lcom/android/internal/os/TransferPipe;
    :try_start_3
    invoke-virtual {v15}, Lcom/android/internal/os/TransferPipe;->getWriteFd()Landroid/os/ParcelFileDescriptor;

    move-result-object v11

    iget-boolean v13, v1, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCheckinRequest:Z

    iget-boolean v14, v1, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpFullDetails:Z

    iget-boolean v0, v1, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDalvik:Z

    iget-boolean v12, v1, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpSummaryOnly:Z

    iget-boolean v10, v1, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpUnreachable:Z
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_2

    move/from16 v17, v10

    move-object/from16 v10, v75

    move/from16 v16, v12

    move-object v12, v5

    move-object/from16 v97, v8

    move-object v8, v15

    .end local v15    # "tp":Lcom/android/internal/os/TransferPipe;
    .local v8, "tp":Lcom/android/internal/os/TransferPipe;
    .local v97, "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    move v15, v0

    move-object/from16 v18, p5

    :try_start_4
    invoke-interface/range {v10 .. v18}, Landroid/app/IApplicationThread;->dumpMemInfo(Landroid/os/ParcelFileDescriptor;Landroid/os/Debug$MemoryInfo;ZZZZZ[Ljava/lang/String;)V

    .line 10676
    iget-boolean v0, v1, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpUnreachable:Z
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    if-eqz v0, :cond_1b

    const-wide/16 v10, 0x7530

    goto :goto_11

    :cond_1b
    const-wide/16 v10, 0x1388

    :goto_11
    move-object/from16 v15, p1

    :try_start_5
    invoke-virtual {v8, v15, v10, v11}, Lcom/android/internal/os/TransferPipe;->go(Ljava/io/FileDescriptor;J)V
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    .line 10678
    :try_start_6
    invoke-virtual {v8}, Lcom/android/internal/os/TransferPipe;->kill()V

    .line 10679
    goto :goto_15

    .line 10678
    :catchall_0
    move-exception v0

    goto :goto_12

    :catchall_1
    move-exception v0

    move-object/from16 v15, p1

    goto :goto_12

    .end local v97    # "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .local v8, "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .restart local v15    # "tp":Lcom/android/internal/os/TransferPipe;
    :catchall_2
    move-exception v0

    move-object/from16 v97, v8

    move-object v8, v15

    move-object/from16 v15, p1

    .end local v15    # "tp":Lcom/android/internal/os/TransferPipe;
    .local v8, "tp":Lcom/android/internal/os/TransferPipe;
    .restart local v97    # "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    :goto_12
    invoke-virtual {v8}, Lcom/android/internal/os/TransferPipe;->kill()V

    .line 10679
    nop

    .end local v3    # "pid":I
    .end local v4    # "reportType":I
    .end local v5    # "mi":Landroid/os/Debug$MemoryInfo;
    .end local v6    # "ss":[J
    .end local v9    # "r":Lcom/android/server/am/ProcessRecord;
    .end local v30    # "uptime":J
    .end local v32    # "realtime":J
    .end local v37    # "collectNative":Z
    .end local v38    # "dalvikSubitemSwapPss":[J
    .end local v40    # "dalvikSubitemRss":[J
    .end local v44    # "totalSwapPss":J
    .end local v46    # "totalRss":J
    .end local v48    # "cachedPss":J
    .end local v50    # "cachedSwapPss":J
    .end local v52    # "oomProcs":[Ljava/util/ArrayList;, "[Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .end local v55    # "oomSwapPss":[J
    .end local v60    # "numProcs":I
    .end local v74    # "i":I
    .end local v75    # "thread":Landroid/app/IApplicationThread;
    .end local v76    # "dalvikSubitemPss":[J
    .end local v77    # "oomAdj":I
    .end local v78    # "hasActivities":Z
    .end local v79    # "miscSwapPss":[J
    .end local v80    # "miscPss":[J
    .end local v81    # "memtrackGraphics":J
    .end local v83    # "memtrackGl":J
    .end local v85    # "startTime":J
    .end local v87    # "endTime":J
    .end local v89    # "hasSwapPss":Z
    .end local v90    # "miscRss":[J
    .end local v91    # "memtrackTmp":[J
    .end local v93    # "tmpLong":[J
    .end local v94    # "oomRss":[J
    .end local v95    # "oomPss":[J
    .end local v96    # "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .end local v97    # "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "fd":Ljava/io/FileDescriptor;
    .end local p2    # "pw":Ljava/io/PrintWriter;
    .end local p3    # "prefix":Ljava/lang/String;
    .end local p4    # "opts":Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;
    .end local p5    # "innerArgs":[Ljava/lang/String;
    .end local p6    # "brief":Z
    .end local p7    # "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    .end local p8    # "categoryPw":Ljava/io/PrintWriter;
    throw v0
    :try_end_6
    .catch Ljava/io/IOException; {:try_start_6 .. :try_end_6} :catch_2
    .catch Landroid/os/RemoteException; {:try_start_6 .. :try_end_6} :catch_1

    .line 10685
    .end local v8    # "tp":Lcom/android/internal/os/TransferPipe;
    .restart local v3    # "pid":I
    .restart local v4    # "reportType":I
    .restart local v5    # "mi":Landroid/os/Debug$MemoryInfo;
    .restart local v6    # "ss":[J
    .restart local v9    # "r":Lcom/android/server/am/ProcessRecord;
    .restart local v30    # "uptime":J
    .restart local v32    # "realtime":J
    .restart local v37    # "collectNative":Z
    .restart local v38    # "dalvikSubitemSwapPss":[J
    .restart local v40    # "dalvikSubitemRss":[J
    .restart local v44    # "totalSwapPss":J
    .restart local v46    # "totalRss":J
    .restart local v48    # "cachedPss":J
    .restart local v50    # "cachedSwapPss":J
    .restart local v52    # "oomProcs":[Ljava/util/ArrayList;, "[Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .restart local v55    # "oomSwapPss":[J
    .restart local v60    # "numProcs":I
    .restart local v74    # "i":I
    .restart local v75    # "thread":Landroid/app/IApplicationThread;
    .restart local v76    # "dalvikSubitemPss":[J
    .restart local v77    # "oomAdj":I
    .restart local v78    # "hasActivities":Z
    .restart local v79    # "miscSwapPss":[J
    .restart local v80    # "miscPss":[J
    .restart local v81    # "memtrackGraphics":J
    .restart local v83    # "memtrackGl":J
    .restart local v85    # "startTime":J
    .restart local v87    # "endTime":J
    .restart local v89    # "hasSwapPss":Z
    .restart local v90    # "miscRss":[J
    .restart local v91    # "memtrackTmp":[J
    .restart local v93    # "tmpLong":[J
    .restart local v94    # "oomRss":[J
    .restart local v95    # "oomPss":[J
    .restart local v96    # "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .restart local v97    # "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "fd":Ljava/io/FileDescriptor;
    .restart local p2    # "pw":Ljava/io/PrintWriter;
    .restart local p3    # "prefix":Ljava/lang/String;
    .restart local p4    # "opts":Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;
    .restart local p5    # "innerArgs":[Ljava/lang/String;
    .restart local p6    # "brief":Z
    .restart local p7    # "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    .restart local p8    # "categoryPw":Ljava/io/PrintWriter;
    :catch_1
    move-exception v0

    goto :goto_13

    .line 10680
    :catch_2
    move-exception v0

    goto :goto_14

    .line 10685
    .end local v97    # "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .local v8, "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    :catch_3
    move-exception v0

    move-object/from16 v15, p1

    move-object/from16 v97, v8

    .line 10686
    .end local v8    # "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .local v0, "e":Landroid/os/RemoteException;
    .restart local v97    # "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    :goto_13
    iget-boolean v8, v1, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCheckinRequest:Z

    if-nez v8, :cond_1e

    .line 10687
    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string v10, "Got RemoteException! "

    invoke-virtual {v8, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v8, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-virtual {v2, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10688
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->flush()V

    goto :goto_16

    .line 10680
    .end local v0    # "e":Landroid/os/RemoteException;
    .end local v97    # "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .restart local v8    # "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    :catch_4
    move-exception v0

    move-object/from16 v15, p1

    move-object/from16 v97, v8

    .line 10681
    .end local v8    # "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .local v0, "e":Ljava/io/IOException;
    .restart local v97    # "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    :goto_14
    iget-boolean v8, v1, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCheckinRequest:Z

    if-nez v8, :cond_1c

    .line 10682
    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string v10, "Got IoException! "

    invoke-virtual {v8, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v8, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-virtual {v2, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10683
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->flush()V

    .line 10690
    .end local v0    # "e":Ljava/io/IOException;
    :cond_1c
    :goto_15
    goto :goto_16

    .line 10661
    .end local v5    # "mi":Landroid/os/Debug$MemoryInfo;
    .end local v90    # "miscRss":[J
    .end local v91    # "memtrackTmp":[J
    .end local v93    # "tmpLong":[J
    .end local v94    # "oomRss":[J
    .end local v95    # "oomPss":[J
    .end local v96    # "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .end local v97    # "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .restart local v1    # "memtrackTmp":[J
    .restart local v7    # "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .restart local v8    # "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .restart local v12    # "mi":Landroid/os/Debug$MemoryInfo;
    .restart local v13    # "oomPss":[J
    .restart local v14    # "tmpLong":[J
    .local v15, "oomRss":[J
    .restart local v18    # "miscRss":[J
    :cond_1d
    move-object/from16 v91, v1

    move-object/from16 v96, v7

    move-object/from16 v97, v8

    move-object v1, v10

    move-object v7, v11

    move-object v5, v12

    move-object/from16 v95, v13

    move-object/from16 v93, v14

    move-object/from16 v94, v15

    move-object/from16 v90, v18

    const/16 v92, 0x3

    move-object/from16 v15, p1

    .line 10694
    .end local v1    # "memtrackTmp":[J
    .end local v7    # "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .end local v8    # "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .end local v12    # "mi":Landroid/os/Debug$MemoryInfo;
    .end local v13    # "oomPss":[J
    .end local v14    # "tmpLong":[J
    .end local v15    # "oomRss":[J
    .end local v18    # "miscRss":[J
    .restart local v5    # "mi":Landroid/os/Debug$MemoryInfo;
    .restart local v90    # "miscRss":[J
    .restart local v91    # "memtrackTmp":[J
    .restart local v93    # "tmpLong":[J
    .restart local v94    # "oomRss":[J
    .restart local v95    # "oomPss":[J
    .restart local v96    # "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .restart local v97    # "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    :cond_1e
    :goto_16
    invoke-virtual {v5}, Landroid/os/Debug$MemoryInfo;->getTotalPss()I

    move-result v0

    int-to-long v10, v0

    .line 10695
    .local v10, "myTotalPss":J
    invoke-virtual {v5}, Landroid/os/Debug$MemoryInfo;->getTotalUss()I

    move-result v0

    int-to-long v12, v0

    .line 10696
    .local v12, "myTotalUss":J
    invoke-virtual {v5}, Landroid/os/Debug$MemoryInfo;->getTotalRss()I

    move-result v0

    int-to-long v14, v0

    .line 10697
    .local v14, "myTotalRss":J
    invoke-virtual {v5}, Landroid/os/Debug$MemoryInfo;->getTotalSwappedOutPss()I

    move-result v0

    move v8, v3

    .end local v3    # "pid":I
    .local v8, "pid":I
    int-to-long v2, v0

    .line 10699
    .local v2, "myTotalSwapPss":J
    move/from16 v16, v8

    .end local v8    # "pid":I
    .local v16, "pid":I
    iget-object v8, v7, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v8

    :try_start_7
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 10700
    invoke-virtual {v9}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_7

    if-eqz v0, :cond_20

    :try_start_8
    iget-object v0, v9, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    invoke-virtual {v0}, Lcom/android/server/am/ProcessStateRecord;->getSetAdjWithServices()I

    move-result v0
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_5

    move/from16 v7, v77

    .end local v77    # "oomAdj":I
    .local v7, "oomAdj":I
    if-ne v7, v0, :cond_1f

    .line 10702
    :try_start_9
    iget-object v0, v9, Lcom/android/server/am/ProcessRecord;->mProfile:Lcom/android/server/am/ProcessProfileRecord;

    const/16 v68, 0x1

    sub-long v70, v87, v85

    move-object/from16 v61, v0

    move-wide/from16 v62, v10

    move-wide/from16 v64, v12

    move-wide/from16 v66, v14

    move/from16 v69, v4

    invoke-virtual/range {v61 .. v71}, Lcom/android/server/am/ProcessProfileRecord;->addPss(JJJZIJ)V

    .line 10704
    invoke-virtual {v9}, Lcom/android/server/am/ProcessRecord;->getPkgList()Lcom/android/server/am/PackageList;

    move-result-object v0
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_4

    move/from16 v17, v7

    .end local v7    # "oomAdj":I
    .local v17, "oomAdj":I
    :try_start_a
    new-instance v7, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda29;

    move-object/from16 v61, v7

    move-object/from16 v62, v9

    move-wide/from16 v63, v10

    move-wide/from16 v65, v12

    move-wide/from16 v67, v14

    move/from16 v69, v4

    move-wide/from16 v70, v87

    move-wide/from16 v72, v85

    invoke-direct/range {v61 .. v73}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda29;-><init>(Lcom/android/server/am/ProcessRecord;JJJIJJ)V

    invoke-virtual {v0, v7}, Lcom/android/server/am/PackageList;->forEachPackageProcessStats(Ljava/util/function/Consumer;)V
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_3

    goto :goto_17

    .line 10714
    :catchall_3
    move-exception v0

    move/from16 v18, v4

    move-object/from16 v21, v9

    move-wide/from16 v19, v12

    move-wide/from16 v23, v14

    move/from16 v7, v16

    move/from16 v12, v17

    move-object/from16 v9, v76

    move-object/from16 v15, v95

    move-object/from16 v4, v97

    goto/16 :goto_1e

    .end local v17    # "oomAdj":I
    .restart local v7    # "oomAdj":I
    :catchall_4
    move-exception v0

    move/from16 v18, v4

    move-object/from16 v21, v9

    move-wide/from16 v19, v12

    move-wide/from16 v23, v14

    move-object/from16 v9, v76

    move-object/from16 v15, v95

    move-object/from16 v4, v97

    move v12, v7

    move/from16 v7, v16

    .end local v7    # "oomAdj":I
    .restart local v17    # "oomAdj":I
    goto/16 :goto_1e

    .line 10700
    .end local v17    # "oomAdj":I
    .restart local v7    # "oomAdj":I
    :cond_1f
    move/from16 v17, v7

    .end local v7    # "oomAdj":I
    .restart local v17    # "oomAdj":I
    goto :goto_17

    .line 10714
    .end local v17    # "oomAdj":I
    .restart local v77    # "oomAdj":I
    :catchall_5
    move-exception v0

    move/from16 v18, v4

    move-object/from16 v21, v9

    move-wide/from16 v19, v12

    move-wide/from16 v23, v14

    move/from16 v7, v16

    move-object/from16 v9, v76

    move/from16 v12, v77

    move-object/from16 v15, v95

    move-object/from16 v4, v97

    .end local v77    # "oomAdj":I
    .restart local v17    # "oomAdj":I
    goto/16 :goto_1e

    .line 10700
    .end local v17    # "oomAdj":I
    .restart local v77    # "oomAdj":I
    :cond_20
    move/from16 v17, v77

    .line 10714
    .end local v77    # "oomAdj":I
    .restart local v17    # "oomAdj":I
    :goto_17
    :try_start_b
    monitor-exit v8
    :try_end_b
    .catchall {:try_start_b .. :try_end_b} :catchall_6

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 10716
    iget-boolean v0, v1, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCheckinRequest:Z

    if-nez v0, :cond_28

    if-eqz v5, :cond_28

    .line 10717
    aget-wide v7, v6, v59

    add-long/2addr v7, v10

    aput-wide v7, v6, v59

    .line 10718
    const/16 v7, 0xa

    aget-wide v18, v6, v7

    add-long v18, v18, v2

    aput-wide v18, v6, v7

    .line 10719
    const/16 v0, 0xb

    aget-wide v7, v6, v0

    add-long/2addr v7, v14

    aput-wide v7, v6, v0

    .line 10720
    aget-wide v7, v6, v54

    add-long v7, v7, v81

    aput-wide v7, v6, v54

    .line 10721
    const/16 v7, 0xe

    aget-wide v18, v6, v7

    add-long v18, v18, v83

    aput-wide v18, v6, v7

    .line 10722
    new-instance v0, Lcom/android/server/am/ActivityManagerService$MemItem;

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    iget-object v8, v9, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v8, " (pid "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move/from16 v8, v16

    .end local v16    # "pid":I
    .restart local v8    # "pid":I
    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 10723
    if-eqz v78, :cond_21

    const-string v16, " / activities)"

    goto :goto_18

    :cond_21
    const-string v16, ")"

    :goto_18
    move/from16 v18, v4

    move-object/from16 v4, v16

    .end local v4    # "reportType":I
    .local v18, "reportType":I
    invoke-virtual {v7, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v62

    iget-object v4, v9, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v61, v0

    move-object/from16 v63, v4

    move-wide/from16 v64, v10

    move-wide/from16 v66, v2

    move-wide/from16 v68, v14

    move/from16 v70, v8

    move/from16 v71, v78

    invoke-direct/range {v61 .. v71}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JJJIZ)V

    .line 10725
    .local v0, "pssItem":Lcom/android/server/am/ActivityManagerService$MemItem;
    move-object/from16 v4, v97

    .end local v97    # "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .local v4, "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    invoke-virtual {v4, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 10726
    move-object/from16 v7, v96

    .end local v96    # "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .local v7, "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    invoke-virtual {v7, v8, v0}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 10728
    aget-wide v19, v6, v39

    .end local v7    # "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .restart local v96    # "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    iget v7, v5, Landroid/os/Debug$MemoryInfo;->nativePss:I

    move/from16 v16, v8

    .end local v8    # "pid":I
    .restart local v16    # "pid":I
    int-to-long v7, v7

    add-long v19, v19, v7

    aput-wide v19, v6, v39

    .line 10729
    const/4 v7, 0x1

    aget-wide v19, v6, v7

    iget v8, v5, Landroid/os/Debug$MemoryInfo;->nativeSwappedOutPss:I

    move-object/from16 v21, v9

    .end local v9    # "r":Lcom/android/server/am/ProcessRecord;
    .local v21, "r":Lcom/android/server/am/ProcessRecord;
    int-to-long v8, v8

    add-long v19, v19, v8

    aput-wide v19, v6, v7

    .line 10730
    aget-wide v7, v6, v34

    iget v9, v5, Landroid/os/Debug$MemoryInfo;->nativeRss:I

    move-wide/from16 v19, v12

    .end local v12    # "myTotalUss":J
    .local v19, "myTotalUss":J
    int-to-long v12, v9

    add-long/2addr v7, v12

    aput-wide v7, v6, v34

    .line 10731
    aget-wide v7, v6, v92

    iget v9, v5, Landroid/os/Debug$MemoryInfo;->dalvikPss:I

    int-to-long v12, v9

    add-long/2addr v7, v12

    aput-wide v7, v6, v92

    .line 10732
    const/4 v7, 0x4

    aget-wide v8, v6, v7

    iget v12, v5, Landroid/os/Debug$MemoryInfo;->dalvikSwappedOutPss:I

    int-to-long v12, v12

    add-long/2addr v8, v12

    aput-wide v8, v6, v7

    .line 10733
    aget-wide v7, v6, v53

    iget v9, v5, Landroid/os/Debug$MemoryInfo;->dalvikRss:I

    int-to-long v12, v9

    add-long/2addr v7, v12

    aput-wide v7, v6, v53

    .line 10734
    const/4 v7, 0x0

    .local v7, "j":I
    :goto_19
    move-object/from16 v9, v76

    .end local v76    # "dalvikSubitemPss":[J
    .local v9, "dalvikSubitemPss":[J
    array-length v8, v9

    if-ge v7, v8, :cond_22

    .line 10735
    aget-wide v12, v9, v7

    add-int/lit8 v8, v7, 0x11

    invoke-virtual {v5, v8}, Landroid/os/Debug$MemoryInfo;->getOtherPss(I)I

    move-result v8

    move-wide/from16 v23, v14

    .end local v14    # "myTotalRss":J
    .local v23, "myTotalRss":J
    int-to-long v14, v8

    add-long/2addr v12, v14

    aput-wide v12, v9, v7

    .line 10736
    aget-wide v12, v38, v7

    add-int/lit8 v8, v7, 0x11

    .line 10737
    invoke-virtual {v5, v8}, Landroid/os/Debug$MemoryInfo;->getOtherSwappedOutPss(I)I

    move-result v8

    int-to-long v14, v8

    add-long/2addr v12, v14

    aput-wide v12, v38, v7

    .line 10738
    aget-wide v12, v40, v7

    add-int/lit8 v8, v7, 0x11

    invoke-virtual {v5, v8}, Landroid/os/Debug$MemoryInfo;->getOtherRss(I)I

    move-result v8

    int-to-long v14, v8

    add-long/2addr v12, v14

    aput-wide v12, v40, v7

    .line 10734
    add-int/lit8 v7, v7, 0x1

    move-object/from16 v76, v9

    move-wide/from16 v14, v23

    goto :goto_19

    .end local v23    # "myTotalRss":J
    .restart local v14    # "myTotalRss":J
    :cond_22
    move-wide/from16 v23, v14

    .line 10740
    .end local v7    # "j":I
    .end local v14    # "myTotalRss":J
    .restart local v23    # "myTotalRss":J
    aget-wide v7, v6, v58

    iget v12, v5, Landroid/os/Debug$MemoryInfo;->otherPss:I

    int-to-long v12, v12

    add-long/2addr v7, v12

    aput-wide v7, v6, v58

    .line 10741
    aget-wide v7, v6, v56

    iget v12, v5, Landroid/os/Debug$MemoryInfo;->otherRss:I

    int-to-long v12, v12

    add-long/2addr v7, v12

    aput-wide v7, v6, v56

    .line 10742
    aget-wide v7, v6, v57

    iget v12, v5, Landroid/os/Debug$MemoryInfo;->otherSwappedOutPss:I

    int-to-long v12, v12

    add-long/2addr v7, v12

    aput-wide v7, v6, v57

    .line 10743
    const/4 v7, 0x0

    .restart local v7    # "j":I
    :goto_1a
    const/16 v8, 0x11

    if-ge v7, v8, :cond_23

    .line 10744
    invoke-virtual {v5, v7}, Landroid/os/Debug$MemoryInfo;->getOtherPss(I)I

    move-result v8

    int-to-long v12, v8

    .line 10745
    .local v12, "mem":J
    aget-wide v14, v80, v7

    add-long/2addr v14, v12

    aput-wide v14, v80, v7

    .line 10746
    aget-wide v14, v6, v58

    sub-long/2addr v14, v12

    aput-wide v14, v6, v58

    .line 10747
    invoke-virtual {v5, v7}, Landroid/os/Debug$MemoryInfo;->getOtherSwappedOutPss(I)I

    move-result v8

    int-to-long v12, v8

    .line 10748
    aget-wide v14, v79, v7

    add-long/2addr v14, v12

    aput-wide v14, v79, v7

    .line 10749
    aget-wide v14, v6, v57

    sub-long/2addr v14, v12

    aput-wide v14, v6, v57

    .line 10750
    invoke-virtual {v5, v7}, Landroid/os/Debug$MemoryInfo;->getOtherRss(I)I

    move-result v8

    int-to-long v12, v8

    .line 10751
    aget-wide v14, v90, v7

    add-long/2addr v14, v12

    aput-wide v14, v90, v7

    .line 10752
    aget-wide v14, v6, v56

    sub-long/2addr v14, v12

    aput-wide v14, v6, v56

    .line 10743
    .end local v12    # "mem":J
    add-int/lit8 v7, v7, 0x1

    goto :goto_1a

    .line 10755
    .end local v7    # "j":I
    :cond_23
    const/16 v7, 0x384

    move/from16 v12, v17

    .end local v17    # "oomAdj":I
    .local v12, "oomAdj":I
    if-lt v12, v7, :cond_24

    .line 10756
    add-long v48, v48, v10

    .line 10757
    add-long v50, v50, v2

    .line 10760
    :cond_24
    const/4 v7, 0x0

    .local v7, "oomIndex":I
    :goto_1b
    move-object/from16 v15, v95

    .end local v95    # "oomPss":[J
    .local v15, "oomPss":[J
    array-length v8, v15

    if-ge v7, v8, :cond_29

    .line 10761
    array-length v8, v15

    const/4 v13, 0x1

    sub-int/2addr v8, v13

    if-eq v7, v8, :cond_26

    sget-object v8, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_ADJ:[I

    aget v13, v8, v7

    if-lt v12, v13, :cond_25

    add-int/lit8 v13, v7, 0x1

    aget v8, v8, v13

    if-ge v12, v8, :cond_25

    goto :goto_1c

    .line 10760
    :cond_25
    add-int/lit8 v7, v7, 0x1

    move-object/from16 v95, v15

    goto :goto_1b

    .line 10764
    :cond_26
    :goto_1c
    aget-wide v13, v15, v7

    add-long/2addr v13, v10

    aput-wide v13, v15, v7

    .line 10765
    aget-wide v13, v55, v7

    add-long/2addr v13, v2

    aput-wide v13, v55, v7

    .line 10766
    aget-object v8, v52, v7

    if-nez v8, :cond_27

    .line 10767
    new-instance v8, Ljava/util/ArrayList;

    invoke-direct {v8}, Ljava/util/ArrayList;-><init>()V

    aput-object v8, v52, v7

    .line 10769
    :cond_27
    aget-object v8, v52, v7

    invoke-virtual {v8, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 10770
    aget-wide v13, v94, v7

    add-long v13, v13, v23

    aput-wide v13, v94, v7

    .line 10771
    goto :goto_1d

    .line 10716
    .end local v0    # "pssItem":Lcom/android/server/am/ActivityManagerService$MemItem;
    .end local v7    # "oomIndex":I
    .end local v15    # "oomPss":[J
    .end local v18    # "reportType":I
    .end local v19    # "myTotalUss":J
    .end local v21    # "r":Lcom/android/server/am/ProcessRecord;
    .end local v23    # "myTotalRss":J
    .local v4, "reportType":I
    .local v9, "r":Lcom/android/server/am/ProcessRecord;
    .local v12, "myTotalUss":J
    .restart local v14    # "myTotalRss":J
    .restart local v17    # "oomAdj":I
    .restart local v76    # "dalvikSubitemPss":[J
    .restart local v95    # "oomPss":[J
    .restart local v97    # "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    :cond_28
    move/from16 v18, v4

    move-object/from16 v21, v9

    move-wide/from16 v19, v12

    move-wide/from16 v23, v14

    move/from16 v12, v17

    move-object/from16 v9, v76

    move-object/from16 v15, v95

    move-object/from16 v4, v97

    .line 10613
    .end local v2    # "myTotalSwapPss":J
    .end local v10    # "myTotalPss":J
    .end local v12    # "myTotalUss":J
    .end local v14    # "myTotalRss":J
    .end local v16    # "pid":I
    .end local v17    # "oomAdj":I
    .end local v75    # "thread":Landroid/app/IApplicationThread;
    .end local v76    # "dalvikSubitemPss":[J
    .end local v78    # "hasActivities":Z
    .end local v81    # "memtrackGraphics":J
    .end local v83    # "memtrackGl":J
    .end local v85    # "startTime":J
    .end local v87    # "endTime":J
    .end local v95    # "oomPss":[J
    .end local v97    # "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .local v4, "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .local v9, "dalvikSubitemPss":[J
    .restart local v15    # "oomPss":[J
    :cond_29
    :goto_1d
    move-object/from16 v22, v5

    move/from16 v29, v89

    goto :goto_1f

    .line 10714
    .end local v15    # "oomPss":[J
    .restart local v2    # "myTotalSwapPss":J
    .local v4, "reportType":I
    .local v9, "r":Lcom/android/server/am/ProcessRecord;
    .restart local v10    # "myTotalPss":J
    .restart local v12    # "myTotalUss":J
    .restart local v14    # "myTotalRss":J
    .restart local v16    # "pid":I
    .restart local v17    # "oomAdj":I
    .restart local v75    # "thread":Landroid/app/IApplicationThread;
    .restart local v76    # "dalvikSubitemPss":[J
    .restart local v78    # "hasActivities":Z
    .restart local v81    # "memtrackGraphics":J
    .restart local v83    # "memtrackGl":J
    .restart local v85    # "startTime":J
    .restart local v87    # "endTime":J
    .restart local v95    # "oomPss":[J
    .restart local v97    # "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    :catchall_6
    move-exception v0

    move/from16 v18, v4

    move-object/from16 v21, v9

    move-wide/from16 v19, v12

    move-wide/from16 v23, v14

    move/from16 v7, v16

    move/from16 v12, v17

    move-object/from16 v9, v76

    move-object/from16 v15, v95

    move-object/from16 v4, v97

    .end local v14    # "myTotalRss":J
    .end local v16    # "pid":I
    .end local v17    # "oomAdj":I
    .end local v76    # "dalvikSubitemPss":[J
    .end local v95    # "oomPss":[J
    .end local v97    # "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .local v4, "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .local v7, "pid":I
    .local v9, "dalvikSubitemPss":[J
    .local v12, "oomAdj":I
    .restart local v15    # "oomPss":[J
    .restart local v18    # "reportType":I
    .restart local v19    # "myTotalUss":J
    .restart local v21    # "r":Lcom/android/server/am/ProcessRecord;
    .restart local v23    # "myTotalRss":J
    goto :goto_1e

    .end local v7    # "pid":I
    .end local v15    # "oomPss":[J
    .end local v18    # "reportType":I
    .end local v19    # "myTotalUss":J
    .end local v21    # "r":Lcom/android/server/am/ProcessRecord;
    .end local v23    # "myTotalRss":J
    .local v4, "reportType":I
    .local v9, "r":Lcom/android/server/am/ProcessRecord;
    .local v12, "myTotalUss":J
    .restart local v14    # "myTotalRss":J
    .restart local v16    # "pid":I
    .restart local v76    # "dalvikSubitemPss":[J
    .restart local v77    # "oomAdj":I
    .restart local v95    # "oomPss":[J
    .restart local v97    # "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    :catchall_7
    move-exception v0

    move/from16 v18, v4

    move-object/from16 v21, v9

    move-wide/from16 v19, v12

    move-wide/from16 v23, v14

    move/from16 v7, v16

    move-object/from16 v9, v76

    move/from16 v12, v77

    move-object/from16 v15, v95

    move-object/from16 v4, v97

    .end local v14    # "myTotalRss":J
    .end local v16    # "pid":I
    .end local v76    # "dalvikSubitemPss":[J
    .end local v77    # "oomAdj":I
    .end local v95    # "oomPss":[J
    .end local v97    # "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .local v4, "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .restart local v7    # "pid":I
    .local v9, "dalvikSubitemPss":[J
    .local v12, "oomAdj":I
    .restart local v15    # "oomPss":[J
    .restart local v18    # "reportType":I
    .restart local v19    # "myTotalUss":J
    .restart local v21    # "r":Lcom/android/server/am/ProcessRecord;
    .restart local v23    # "myTotalRss":J
    :goto_1e
    :try_start_c
    monitor-exit v8
    :try_end_c
    .catchall {:try_start_c .. :try_end_c} :catchall_8

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v0

    :catchall_8
    move-exception v0

    goto :goto_1e

    .line 10625
    .end local v2    # "myTotalSwapPss":J
    .end local v10    # "myTotalPss":J
    .end local v12    # "oomAdj":I
    .end local v19    # "myTotalUss":J
    .end local v21    # "r":Lcom/android/server/am/ProcessRecord;
    .end local v23    # "myTotalRss":J
    .end local v79    # "miscSwapPss":[J
    .end local v80    # "miscPss":[J
    .end local v81    # "memtrackGraphics":J
    .end local v83    # "memtrackGl":J
    .end local v85    # "startTime":J
    .end local v87    # "endTime":J
    .end local v89    # "hasSwapPss":Z
    .end local v90    # "miscRss":[J
    .end local v91    # "memtrackTmp":[J
    .end local v93    # "tmpLong":[J
    .end local v94    # "oomRss":[J
    .end local v96    # "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .restart local v1    # "memtrackTmp":[J
    .local v3, "miscSwapPss":[J
    .local v4, "miscPss":[J
    .local v5, "dalvikSubitemPss":[J
    .local v7, "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .local v8, "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .local v9, "r":Lcom/android/server/am/ProcessRecord;
    .restart local v13    # "oomPss":[J
    .local v14, "tmpLong":[J
    .local v15, "oomRss":[J
    .local v18, "miscRss":[J
    .restart local v22    # "mi":Landroid/os/Debug$MemoryInfo;
    .restart local v29    # "hasSwapPss":Z
    .local v76, "pid":I
    .restart local v77    # "oomAdj":I
    :cond_2a
    move-object/from16 v91, v1

    move-object/from16 v79, v3

    move-object/from16 v80, v4

    move-object/from16 v96, v7

    move-object v4, v8

    move-object/from16 v21, v9

    move-object v1, v10

    move-object/from16 v93, v14

    move-object/from16 v94, v15

    move-object/from16 v90, v18

    move/from16 v7, v76

    move/from16 v12, v77

    const/16 v92, 0x3

    move-object v9, v5

    move-object v15, v13

    .line 10613
    .end local v1    # "memtrackTmp":[J
    .end local v3    # "miscSwapPss":[J
    .end local v5    # "dalvikSubitemPss":[J
    .end local v7    # "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .end local v8    # "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .end local v13    # "oomPss":[J
    .end local v14    # "tmpLong":[J
    .end local v18    # "miscRss":[J
    .end local v75    # "thread":Landroid/app/IApplicationThread;
    .end local v76    # "pid":I
    .end local v77    # "oomAdj":I
    .end local v78    # "hasActivities":Z
    .local v4, "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .local v9, "dalvikSubitemPss":[J
    .local v15, "oomPss":[J
    .restart local v79    # "miscSwapPss":[J
    .restart local v80    # "miscPss":[J
    .restart local v90    # "miscRss":[J
    .restart local v91    # "memtrackTmp":[J
    .restart local v93    # "tmpLong":[J
    .restart local v94    # "oomRss":[J
    .restart local v96    # "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    :goto_1f
    add-int/lit8 v0, v74, -0x1

    move-object v10, v1

    move-object v8, v4

    move-object v5, v9

    move-object v13, v15

    move-object/from16 v2, v55

    move/from16 v11, v60

    move-object/from16 v3, v79

    move-object/from16 v4, v80

    move-object/from16 v12, v90

    move-object/from16 v1, v91

    move-object/from16 v14, v93

    move-object/from16 v15, v94

    move-object/from16 v7, v96

    move v9, v0

    .end local v74    # "i":I
    .local v0, "i":I
    goto/16 :goto_b

    .line 10624
    .end local v0    # "i":I
    .end local v79    # "miscSwapPss":[J
    .end local v80    # "miscPss":[J
    .end local v90    # "miscRss":[J
    .end local v91    # "memtrackTmp":[J
    .end local v93    # "tmpLong":[J
    .end local v94    # "oomRss":[J
    .end local v96    # "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .restart local v1    # "memtrackTmp":[J
    .restart local v3    # "miscSwapPss":[J
    .local v4, "miscPss":[J
    .restart local v5    # "dalvikSubitemPss":[J
    .restart local v7    # "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .restart local v8    # "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .local v9, "r":Lcom/android/server/am/ProcessRecord;
    .restart local v13    # "oomPss":[J
    .restart local v14    # "tmpLong":[J
    .local v15, "oomRss":[J
    .restart local v18    # "miscRss":[J
    .restart local v74    # "i":I
    :catchall_9
    move-exception v0

    move-object/from16 v91, v1

    move-object/from16 v79, v3

    move-object/from16 v80, v4

    move-object/from16 v96, v7

    move-object v4, v8

    move-object/from16 v21, v9

    move-object v1, v10

    move-object/from16 v93, v14

    move-object/from16 v94, v15

    move-object/from16 v90, v18

    move-object v9, v5

    move-object v15, v13

    .end local v1    # "memtrackTmp":[J
    .end local v3    # "miscSwapPss":[J
    .end local v5    # "dalvikSubitemPss":[J
    .end local v7    # "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .end local v8    # "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .end local v13    # "oomPss":[J
    .end local v14    # "tmpLong":[J
    .end local v18    # "miscRss":[J
    .local v4, "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .local v9, "dalvikSubitemPss":[J
    .local v15, "oomPss":[J
    .restart local v21    # "r":Lcom/android/server/am/ProcessRecord;
    .restart local v79    # "miscSwapPss":[J
    .restart local v80    # "miscPss":[J
    .restart local v90    # "miscRss":[J
    .restart local v91    # "memtrackTmp":[J
    .restart local v93    # "tmpLong":[J
    .restart local v94    # "oomRss":[J
    .restart local v96    # "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    :goto_20
    :try_start_d
    monitor-exit v12
    :try_end_d
    .catchall {:try_start_d .. :try_end_d} :catchall_a

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v0

    :catchall_a
    move-exception v0

    goto :goto_20

    .line 10613
    .end local v21    # "r":Lcom/android/server/am/ProcessRecord;
    .end local v60    # "numProcs":I
    .end local v74    # "i":I
    .end local v79    # "miscSwapPss":[J
    .end local v80    # "miscPss":[J
    .end local v90    # "miscRss":[J
    .end local v91    # "memtrackTmp":[J
    .end local v93    # "tmpLong":[J
    .end local v94    # "oomRss":[J
    .end local v96    # "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .restart local v1    # "memtrackTmp":[J
    .restart local v3    # "miscSwapPss":[J
    .local v4, "miscPss":[J
    .restart local v5    # "dalvikSubitemPss":[J
    .restart local v7    # "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .restart local v8    # "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .local v9, "i":I
    .restart local v11    # "numProcs":I
    .local v12, "miscRss":[J
    .restart local v13    # "oomPss":[J
    .restart local v14    # "tmpLong":[J
    .local v15, "oomRss":[J
    :cond_2b
    move-object/from16 v91, v1

    move-object/from16 v79, v3

    move-object/from16 v80, v4

    move-object v4, v8

    move/from16 v74, v9

    move-object v1, v10

    move/from16 v60, v11

    move-object/from16 v90, v12

    move-object/from16 v93, v14

    move-object/from16 v94, v15

    const/16 v92, 0x3

    move-object v9, v5

    move-object v8, v7

    move-object v15, v13

    const/16 v7, 0xe

    .line 10778
    .end local v1    # "memtrackTmp":[J
    .end local v3    # "miscSwapPss":[J
    .end local v5    # "dalvikSubitemPss":[J
    .end local v7    # "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .end local v11    # "numProcs":I
    .end local v12    # "miscRss":[J
    .end local v13    # "oomPss":[J
    .end local v14    # "tmpLong":[J
    .local v4, "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .local v8, "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .local v9, "dalvikSubitemPss":[J
    .local v15, "oomPss":[J
    .restart local v60    # "numProcs":I
    .restart local v79    # "miscSwapPss":[J
    .restart local v80    # "miscPss":[J
    .restart local v90    # "miscRss":[J
    .restart local v91    # "memtrackTmp":[J
    .restart local v93    # "tmpLong":[J
    .restart local v94    # "oomRss":[J
    const-wide/16 v61, 0x0

    .line 10780
    .local v61, "nativeProcTotalPss":J
    if-eqz v37, :cond_57

    .line 10781
    const/16 v42, 0x0

    .line 10782
    .end local v22    # "mi":Landroid/os/Debug$MemoryInfo;
    .local v42, "mi":Landroid/os/Debug$MemoryInfo;
    const/4 v2, 0x1

    new-array v5, v2, [Landroid/os/Debug$MemoryInfo;

    .local v5, "memInfos":[Landroid/os/Debug$MemoryInfo;
    move-object v12, v5

    .line 10783
    move-object/from16 v3, p0

    iget-object v0, v3, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    new-instance v2, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda23;

    move-object v10, v2

    move-object v11, v8

    move/from16 v13, p6

    move-object/from16 v14, p4

    move-object/from16 v95, v15

    .end local v15    # "oomPss":[J
    .restart local v95    # "oomPss":[J
    move-object/from16 v15, v93

    move-object/from16 v16, v91

    move-object/from16 v17, v6

    move-object/from16 v18, v4

    move-object/from16 v19, v9

    move-object/from16 v20, v38

    move-object/from16 v21, v40

    move-object/from16 v22, v80

    move-object/from16 v23, v79

    move-object/from16 v24, v90

    move-object/from16 v25, v95

    move-object/from16 v26, v55

    move-object/from16 v27, v52

    move-object/from16 v28, v94

    invoke-direct/range {v10 .. v28}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda23;-><init>(Landroid/util/SparseArray;[Landroid/os/Debug$MemoryInfo;ZLcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;[J[J[JLjava/util/ArrayList;[J[J[J[J[J[J[J[J[Ljava/util/ArrayList;[J)V

    invoke-virtual {v0, v2}, Lcom/android/server/am/AppProfiler;->forAllCpuStats(Ljava/util/function/Consumer;)V

    .line 10862
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    move-object v15, v0

    .line 10864
    .local v15, "catMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    new-instance v0, Lcom/android/server/am/ActivityManagerService$MemItem;

    const-string v17, "Native"

    const-string v18, "Native"

    aget-wide v19, v6, v39

    const/4 v2, 0x1

    aget-wide v21, v6, v2

    aget-wide v23, v6, v34

    const/16 v25, -0x1

    move-object/from16 v16, v0

    invoke-direct/range {v16 .. v25}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JJJI)V

    invoke-virtual {v15, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 10866
    const/16 v18, -0x2

    .line 10867
    .local v18, "dalvikId":I
    new-instance v0, Lcom/android/server/am/ActivityManagerService$MemItem;

    const-string v20, "Dalvik"

    const-string v21, "Dalvik"

    aget-wide v22, v6, v92

    const/4 v10, 0x4

    aget-wide v24, v6, v10

    aget-wide v26, v6, v53

    const/16 v28, -0x2

    move-object/from16 v19, v0

    invoke-direct/range {v19 .. v28}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JJJI)V

    invoke-virtual {v15, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 10869
    new-instance v0, Lcom/android/server/am/ActivityManagerService$MemItem;

    const-string v64, "Unknown"

    const-string v65, "Unknown"

    aget-wide v66, v6, v58

    aget-wide v68, v6, v57

    aget-wide v70, v6, v56

    const/16 v72, -0x3

    move-object/from16 v63, v0

    invoke-direct/range {v63 .. v72}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JJJI)V

    invoke-virtual {v15, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 10871
    const/4 v0, 0x0

    .local v0, "j":I
    :goto_21
    const/16 v10, 0x11

    if-ge v0, v10, :cond_2c

    .line 10872
    invoke-static {v0}, Landroid/os/Debug$MemoryInfo;->getOtherLabel(I)Ljava/lang/String;

    move-result-object v11

    .line 10873
    .local v11, "label":Ljava/lang/String;
    new-instance v12, Lcom/android/server/am/ActivityManagerService$MemItem;

    aget-wide v22, v80, v0

    aget-wide v24, v79, v0

    aget-wide v26, v90, v0

    move-object/from16 v19, v12

    move-object/from16 v20, v11

    move-object/from16 v21, v11

    move/from16 v28, v0

    invoke-direct/range {v19 .. v28}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JJJI)V

    invoke-virtual {v15, v12}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 10871
    .end local v11    # "label":Ljava/lang/String;
    add-int/lit8 v0, v0, 0x1

    goto :goto_21

    .line 10875
    .end local v0    # "j":I
    :cond_2c
    array-length v0, v9

    const/16 v14, 0xc

    if-lez v0, :cond_32

    .line 10877
    invoke-virtual {v15}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v0

    :goto_22
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v10

    if-eqz v10, :cond_32

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v10

    check-cast v10, Lcom/android/server/am/ActivityManagerService$MemItem;

    .line 10878
    .local v10, "memItem":Lcom/android/server/am/ActivityManagerService$MemItem;
    const/4 v11, 0x0

    .local v11, "memItemStart":I
    const/4 v12, 0x0

    .line 10879
    .local v12, "memItemEnd":I
    iget v13, v10, Lcom/android/server/am/ActivityManagerService$MemItem;->id:I

    const/4 v2, -0x2

    if-ne v13, v2, :cond_2d

    .line 10880
    const/4 v2, 0x0

    .line 10881
    .end local v11    # "memItemStart":I
    .local v2, "memItemStart":I
    const/4 v11, 0x3

    const/16 v13, 0xa

    .end local v12    # "memItemEnd":I
    .local v11, "memItemEnd":I
    goto :goto_23

    .line 10882
    .end local v2    # "memItemStart":I
    .local v11, "memItemStart":I
    .restart local v12    # "memItemEnd":I
    :cond_2d
    iget v2, v10, Lcom/android/server/am/ActivityManagerService$MemItem;->id:I

    if-nez v2, :cond_2e

    .line 10883
    const/4 v2, 0x4

    .line 10884
    .end local v11    # "memItemStart":I
    .restart local v2    # "memItemStart":I
    const/16 v11, 0x9

    const/16 v13, 0xa

    .end local v12    # "memItemEnd":I
    .local v11, "memItemEnd":I
    goto :goto_23

    .line 10885
    .end local v2    # "memItemStart":I
    .local v11, "memItemStart":I
    .restart local v12    # "memItemEnd":I
    :cond_2e
    iget v2, v10, Lcom/android/server/am/ActivityManagerService$MemItem;->id:I

    const/16 v13, 0xa

    if-ne v2, v13, :cond_2f

    .line 10886
    const/16 v2, 0xa

    .line 10887
    .end local v11    # "memItemStart":I
    .restart local v2    # "memItemStart":I
    const/16 v11, 0xc

    .end local v12    # "memItemEnd":I
    .local v11, "memItemEnd":I
    goto :goto_23

    .line 10888
    .end local v2    # "memItemStart":I
    .local v11, "memItemStart":I
    .restart local v12    # "memItemEnd":I
    :cond_2f
    iget v2, v10, Lcom/android/server/am/ActivityManagerService$MemItem;->id:I

    if-ne v2, v14, :cond_31

    .line 10889
    const/16 v2, 0xd

    .line 10890
    .end local v11    # "memItemStart":I
    .restart local v2    # "memItemStart":I
    const/16 v11, 0xe

    .line 10894
    .end local v12    # "memItemEnd":I
    .local v11, "memItemEnd":I
    :goto_23
    new-instance v12, Ljava/util/ArrayList;

    invoke-direct {v12}, Ljava/util/ArrayList;-><init>()V

    iput-object v12, v10, Lcom/android/server/am/ActivityManagerService$MemItem;->subitems:Ljava/util/ArrayList;

    .line 10895
    move v12, v2

    .local v12, "j":I
    :goto_24
    if-gt v12, v11, :cond_30

    .line 10896
    add-int/lit8 v16, v12, 0x11

    invoke-static/range {v16 .. v16}, Landroid/os/Debug$MemoryInfo;->getOtherLabel(I)Ljava/lang/String;

    move-result-object v16

    .line 10898
    .local v16, "name":Ljava/lang/String;
    iget-object v7, v10, Lcom/android/server/am/ActivityManagerService$MemItem;->subitems:Ljava/util/ArrayList;

    new-instance v13, Lcom/android/server/am/ActivityManagerService$MemItem;

    aget-wide v22, v9, v12

    aget-wide v24, v38, v12

    aget-wide v26, v40, v12

    move-object/from16 v19, v13

    move-object/from16 v20, v16

    move-object/from16 v21, v16

    move/from16 v28, v12

    invoke-direct/range {v19 .. v28}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JJJI)V

    invoke-virtual {v7, v13}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 10895
    .end local v16    # "name":Ljava/lang/String;
    add-int/lit8 v12, v12, 0x1

    const/16 v7, 0xe

    const/16 v13, 0xa

    goto :goto_24

    .line 10901
    .end local v2    # "memItemStart":I
    .end local v10    # "memItem":Lcom/android/server/am/ActivityManagerService$MemItem;
    .end local v11    # "memItemEnd":I
    .end local v12    # "j":I
    :cond_30
    const/4 v2, 0x1

    const/16 v7, 0xe

    goto :goto_22

    .line 10888
    .restart local v10    # "memItem":Lcom/android/server/am/ActivityManagerService$MemItem;
    .local v11, "memItemStart":I
    .local v12, "memItemEnd":I
    :cond_31
    const/4 v2, 0x1

    const/16 v7, 0xe

    goto :goto_22

    .line 10904
    .end local v10    # "memItem":Lcom/android/server/am/ActivityManagerService$MemItem;
    .end local v11    # "memItemStart":I
    .end local v12    # "memItemEnd":I
    :cond_32
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    move-object v13, v0

    .line 10905
    .local v13, "oomMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    const/4 v0, 0x0

    .restart local v0    # "j":I
    :goto_25
    move-object/from16 v2, v95

    .end local v95    # "oomPss":[J
    .local v2, "oomPss":[J
    array-length v7, v2

    if-ge v0, v7, :cond_35

    .line 10906
    aget-wide v10, v2, v0

    cmp-long v7, v10, v35

    if-eqz v7, :cond_34

    .line 10907
    iget-boolean v7, v1, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCompact:Z

    if-eqz v7, :cond_33

    sget-object v7, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_COMPACT_LABEL:[Ljava/lang/String;

    aget-object v7, v7, v0

    move-object/from16 v20, v7

    goto :goto_26

    .line 10908
    :cond_33
    sget-object v7, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_LABEL:[Ljava/lang/String;

    aget-object v7, v7, v0

    move-object/from16 v20, v7

    :goto_26
    nop

    .line 10909
    .local v20, "label":Ljava/lang/String;
    new-instance v7, Lcom/android/server/am/ActivityManagerService$MemItem;

    aget-wide v22, v2, v0

    aget-wide v24, v55, v0

    aget-wide v26, v94, v0

    sget-object v10, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_ADJ:[I

    aget v28, v10, v0

    move-object/from16 v19, v7

    move-object/from16 v21, v20

    invoke-direct/range {v19 .. v28}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JJJI)V

    .line 10911
    .local v7, "item":Lcom/android/server/am/ActivityManagerService$MemItem;
    aget-object v10, v52, v0

    iput-object v10, v7, Lcom/android/server/am/ActivityManagerService$MemItem;->subitems:Ljava/util/ArrayList;

    .line 10912
    invoke-virtual {v13, v7}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 10905
    .end local v7    # "item":Lcom/android/server/am/ActivityManagerService$MemItem;
    .end local v20    # "label":Ljava/lang/String;
    :cond_34
    add-int/lit8 v0, v0, 0x1

    move-object/from16 v95, v2

    goto :goto_25

    .line 10915
    .end local v0    # "j":I
    :cond_35
    iget-boolean v0, v1, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCompact:Z

    if-nez v0, :cond_36

    .line 10916
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 10918
    :cond_36
    if-nez p6, :cond_37

    iget-boolean v0, v1, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->oomOnly:Z

    if-nez v0, :cond_37

    iget-boolean v0, v1, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCompact:Z

    if-nez v0, :cond_37

    .line 10919
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 10920
    const-string v0, "Total RSS by process:"

    move-object/from16 v7, p2

    invoke-virtual {v7, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10921
    const-string v0, "  "

    const-string/jumbo v10, "proc"

    const/4 v11, 0x1

    iget-boolean v12, v1, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCompact:Z

    const/16 v16, 0x0

    const/16 v19, 0x0

    move-object/from16 v21, v2

    move-object/from16 v20, v91

    const/16 v22, 0x1

    move-object v2, v1

    .end local v2    # "oomPss":[J
    .end local v91    # "memtrackTmp":[J
    .local v20, "memtrackTmp":[J
    .local v21, "oomPss":[J
    move-object/from16 v1, p2

    move-object v14, v2

    move-object/from16 v23, v55

    const/16 v24, 0xe

    const/16 v25, 0xa

    .end local v55    # "oomSwapPss":[J
    .local v23, "oomSwapPss":[J
    move-object v2, v0

    move-object/from16 v26, v79

    .end local v79    # "miscSwapPss":[J
    .local v26, "miscSwapPss":[J
    move-object v3, v10

    move-object v10, v4

    move-object/from16 v27, v80

    .end local v4    # "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .end local v80    # "miscPss":[J
    .local v10, "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .local v27, "miscPss":[J
    move-object/from16 v28, v5

    .end local v5    # "memInfos":[Landroid/os/Debug$MemoryInfo;
    .local v28, "memInfos":[Landroid/os/Debug$MemoryInfo;
    move v5, v11

    move-object/from16 v41, v6

    .end local v6    # "ss":[J
    .local v41, "ss":[J
    move v6, v12

    move-object/from16 v12, p0

    move-object v11, v7

    move-object/from16 v43, v8

    .end local v8    # "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .local v43, "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    move/from16 v7, v16

    move-object/from16 v53, v10

    .end local v10    # "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .local v53, "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    move/from16 v8, v19

    invoke-static/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->dumpMemItems(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;Ljava/util/ArrayList;ZZZZ)V

    .line 10922
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    goto :goto_27

    .line 10918
    .end local v20    # "memtrackTmp":[J
    .end local v21    # "oomPss":[J
    .end local v23    # "oomSwapPss":[J
    .end local v26    # "miscSwapPss":[J
    .end local v27    # "miscPss":[J
    .end local v28    # "memInfos":[Landroid/os/Debug$MemoryInfo;
    .end local v41    # "ss":[J
    .end local v43    # "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .end local v53    # "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .restart local v2    # "oomPss":[J
    .restart local v4    # "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .restart local v5    # "memInfos":[Landroid/os/Debug$MemoryInfo;
    .restart local v6    # "ss":[J
    .restart local v8    # "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .restart local v55    # "oomSwapPss":[J
    .restart local v79    # "miscSwapPss":[J
    .restart local v80    # "miscPss":[J
    .restart local v91    # "memtrackTmp":[J
    :cond_37
    move-object/from16 v11, p2

    move-object v14, v1

    move-object/from16 v21, v2

    move-object v12, v3

    move-object/from16 v53, v4

    move-object/from16 v28, v5

    move-object/from16 v41, v6

    move-object/from16 v43, v8

    move-object/from16 v23, v55

    move-object/from16 v26, v79

    move-object/from16 v27, v80

    move-object/from16 v20, v91

    const/16 v22, 0x1

    const/16 v24, 0xe

    const/16 v25, 0xa

    .line 10924
    .end local v2    # "oomPss":[J
    .end local v4    # "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .end local v5    # "memInfos":[Landroid/os/Debug$MemoryInfo;
    .end local v6    # "ss":[J
    .end local v8    # "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .end local v55    # "oomSwapPss":[J
    .end local v79    # "miscSwapPss":[J
    .end local v80    # "miscPss":[J
    .end local v91    # "memtrackTmp":[J
    .restart local v20    # "memtrackTmp":[J
    .restart local v21    # "oomPss":[J
    .restart local v23    # "oomSwapPss":[J
    .restart local v26    # "miscSwapPss":[J
    .restart local v27    # "miscPss":[J
    .restart local v28    # "memInfos":[Landroid/os/Debug$MemoryInfo;
    .restart local v41    # "ss":[J
    .restart local v43    # "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .restart local v53    # "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    :goto_27
    iget-boolean v0, v14, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCompact:Z

    if-nez v0, :cond_38

    .line 10925
    const-string v0, "Total RSS by OOM adjustment:"

    invoke-virtual {v11, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10927
    :cond_38
    const-string v2, "  "

    const-string/jumbo v3, "oom"

    const/4 v5, 0x0

    iget-boolean v6, v14, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCompact:Z

    const/4 v7, 0x0

    const/4 v8, 0x0

    move-object/from16 v1, p2

    move-object v4, v13

    invoke-static/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->dumpMemItems(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;Ljava/util/ArrayList;ZZZZ)V

    .line 10928
    if-nez p6, :cond_3b

    iget-boolean v0, v14, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->oomOnly:Z

    if-nez v0, :cond_3b

    .line 10929
    if-eqz p8, :cond_39

    move-object/from16 v0, p8

    goto :goto_28

    :cond_39
    move-object v0, v11

    .line 10930
    .local v0, "out":Ljava/io/PrintWriter;
    :goto_28
    iget-boolean v1, v14, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCompact:Z

    if-nez v1, :cond_3a

    .line 10931
    invoke-virtual {v0}, Ljava/io/PrintWriter;->println()V

    .line 10932
    const-string v1, "Total RSS by category:"

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10934
    :cond_3a
    const-string v1, "  "

    const-string v2, "cat"

    const/4 v3, 0x1

    iget-boolean v4, v14, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCompact:Z

    const/16 v16, 0x0

    const/4 v5, 0x0

    move-object v10, v0

    move-object v8, v11

    move-object v11, v1

    move-object v7, v12

    move-object v12, v2

    move-object/from16 v19, v13

    .end local v13    # "oomMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .local v19, "oomMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    move-object v13, v15

    move-object v6, v14

    const/16 v55, 0xc

    move v14, v3

    move-object/from16 v56, v15

    .end local v15    # "catMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .local v56, "catMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    move v15, v4

    move/from16 v17, v5

    invoke-static/range {v10 .. v17}, Lcom/android/server/am/ActivityManagerService;->dumpMemItems(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;Ljava/util/ArrayList;ZZZZ)V

    goto :goto_29

    .line 10928
    .end local v0    # "out":Ljava/io/PrintWriter;
    .end local v19    # "oomMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .end local v56    # "catMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .restart local v13    # "oomMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .restart local v15    # "catMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    :cond_3b
    move-object v8, v11

    move-object v7, v12

    move-object/from16 v19, v13

    move-object v6, v14

    move-object/from16 v56, v15

    const/16 v55, 0xc

    .line 10936
    .end local v13    # "oomMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .end local v15    # "catMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .restart local v19    # "oomMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .restart local v56    # "catMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    :goto_29
    iget-boolean v0, v6, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpSwapPss:Z

    if-eqz v0, :cond_3c

    if-eqz v29, :cond_3c

    aget-wide v0, v41, v25

    cmp-long v0, v0, v35

    if-eqz v0, :cond_3c

    move/from16 v0, v22

    goto :goto_2a

    :cond_3c
    move/from16 v0, v39

    :goto_2a
    iput-boolean v0, v6, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpSwapPss:Z

    .line 10937
    if-nez p6, :cond_3d

    iget-boolean v0, v6, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->oomOnly:Z

    if-nez v0, :cond_3d

    iget-boolean v0, v6, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCompact:Z

    if-nez v0, :cond_3d

    .line 10938
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 10939
    const-string v0, "Total PSS by process:"

    invoke-virtual {v8, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10940
    const-string v2, "  "

    const-string/jumbo v3, "proc"

    const/4 v5, 0x1

    iget-boolean v0, v6, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCompact:Z

    const/4 v10, 0x1

    iget-boolean v11, v6, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpSwapPss:Z

    move-object/from16 v1, p2

    move-object/from16 v4, v53

    move-object v15, v6

    move v6, v0

    move-object v14, v7

    move v7, v10

    move-object v13, v8

    move v8, v11

    invoke-static/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->dumpMemItems(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;Ljava/util/ArrayList;ZZZZ)V

    .line 10942
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    goto :goto_2b

    .line 10937
    :cond_3d
    move-object v15, v6

    move-object v14, v7

    move-object v13, v8

    .line 10944
    :goto_2b
    iget-boolean v0, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCompact:Z

    if-nez v0, :cond_3e

    .line 10945
    const-string v0, "Total PSS by OOM adjustment:"

    invoke-virtual {v13, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10947
    :cond_3e
    const-string v2, "  "

    const-string/jumbo v3, "oom"

    const/4 v5, 0x0

    iget-boolean v6, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCompact:Z

    const/4 v7, 0x1

    iget-boolean v8, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpSwapPss:Z

    move-object/from16 v1, p2

    move-object/from16 v4, v19

    invoke-static/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->dumpMemItems(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;Ljava/util/ArrayList;ZZZZ)V

    .line 10948
    if-nez p6, :cond_41

    iget-boolean v0, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->oomOnly:Z

    if-nez v0, :cond_41

    .line 10949
    if-eqz p8, :cond_3f

    move-object/from16 v11, p8

    goto :goto_2c

    :cond_3f
    move-object v11, v13

    :goto_2c
    move-object v0, v11

    .line 10950
    .restart local v0    # "out":Ljava/io/PrintWriter;
    iget-boolean v1, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCompact:Z

    if-nez v1, :cond_40

    .line 10951
    invoke-virtual {v0}, Ljava/io/PrintWriter;->println()V

    .line 10952
    const-string v1, "Total PSS by category:"

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10954
    :cond_40
    const-string v11, "  "

    const-string v12, "cat"

    const/4 v1, 0x1

    iget-boolean v2, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCompact:Z

    const/16 v16, 0x1

    iget-boolean v3, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpSwapPss:Z

    move-object v10, v0

    move-object v4, v13

    move-object/from16 v13, v56

    move-object v5, v14

    move v14, v1

    move-object v1, v15

    move v15, v2

    move/from16 v17, v3

    invoke-static/range {v10 .. v17}, Lcom/android/server/am/ActivityManagerService;->dumpMemItems(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;Ljava/util/ArrayList;ZZZZ)V

    goto :goto_2d

    .line 10948
    .end local v0    # "out":Ljava/io/PrintWriter;
    :cond_41
    move-object v4, v13

    move-object v5, v14

    move-object v1, v15

    .line 10957
    :goto_2d
    iget-boolean v0, v1, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCompact:Z

    if-nez v0, :cond_42

    .line 10958
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 10960
    :cond_42
    new-instance v0, Lcom/android/internal/util/MemInfoReader;

    invoke-direct {v0}, Lcom/android/internal/util/MemInfoReader;-><init>()V

    move-object v2, v0

    .line 10961
    .local v2, "memInfo":Lcom/android/internal/util/MemInfoReader;
    invoke-virtual {v2}, Lcom/android/internal/util/MemInfoReader;->readMemInfo()V

    .line 10962
    aget-wide v6, v41, v55

    cmp-long v0, v6, v35

    const-wide/16 v6, 0x400

    if-lez v0, :cond_43

    .line 10963
    iget-object v0, v5, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    iget-object v3, v0, Lcom/android/server/am/ProcessStatsService;->mLock:Ljava/lang/Object;

    monitor-enter v3

    .line 10964
    :try_start_e
    invoke-virtual {v2}, Lcom/android/internal/util/MemInfoReader;->getCachedSizeKb()J

    move-result-wide v10

    .line 10965
    .local v10, "cachedKb":J
    invoke-virtual {v2}, Lcom/android/internal/util/MemInfoReader;->getFreeSizeKb()J

    move-result-wide v12

    .line 10966
    .local v12, "freeKb":J
    invoke-virtual {v2}, Lcom/android/internal/util/MemInfoReader;->getZramTotalSizeKb()J

    move-result-wide v14

    .line 10967
    .local v14, "zramKb":J
    invoke-virtual {v2}, Lcom/android/internal/util/MemInfoReader;->getKernelUsedSizeKb()J

    move-result-wide v16

    .line 10968
    .local v16, "kernelKb":J
    mul-long v63, v10, v6

    mul-long v65, v12, v6

    mul-long v67, v14, v6

    mul-long v69, v16, v6

    aget-wide v57, v41, v55

    mul-long v71, v57, v6

    invoke-static/range {v63 .. v72}, Lcom/android/server/am/EventLogTags;->writeAmMeminfo(JJJJJ)V

    .line 10970
    iget-object v0, v5, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    aget-wide v72, v41, v55

    move-object/from16 v63, v0

    move-wide/from16 v64, v10

    move-wide/from16 v66, v12

    move-wide/from16 v68, v14

    move-wide/from16 v70, v16

    invoke-virtual/range {v63 .. v73}, Lcom/android/server/am/ProcessStatsService;->addSysMemUsageLocked(JJJJJ)V

    .line 10972
    .end local v10    # "cachedKb":J
    .end local v12    # "freeKb":J
    .end local v14    # "zramKb":J
    .end local v16    # "kernelKb":J
    monitor-exit v3

    goto :goto_2e

    :catchall_b
    move-exception v0

    monitor-exit v3
    :try_end_e
    .catchall {:try_start_e .. :try_end_e} :catchall_b

    throw v0

    .line 10974
    :cond_43
    :goto_2e
    if-nez p6, :cond_45

    .line 10975
    iget-boolean v0, v1, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCompact:Z

    if-nez v0, :cond_44

    .line 10976
    const-string v0, "Total RAM: "

    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {v2}, Lcom/android/internal/util/MemInfoReader;->getTotalSizeKb()J

    move-result-wide v10

    invoke-static {v10, v11}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 10977
    const-string v0, " (status "

    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 10978
    iget-object v0, v5, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    invoke-virtual {v0, v4}, Lcom/android/server/am/AppProfiler;->dumpLastMemoryLevelLocked(Ljava/io/PrintWriter;)V

    .line 10979
    const-string v0, " Free RAM: "

    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 10980
    invoke-virtual {v2}, Lcom/android/internal/util/MemInfoReader;->getCachedSizeKb()J

    move-result-wide v10

    add-long v10, v48, v10

    .line 10981
    invoke-virtual {v2}, Lcom/android/internal/util/MemInfoReader;->getFreeSizeKb()J

    move-result-wide v12

    add-long/2addr v10, v12

    .line 10980
    invoke-static {v10, v11}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 10982
    const-string v0, " ("

    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 10983
    invoke-static/range {v48 .. v49}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 10984
    const-string v0, " cached pss + "

    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 10985
    invoke-virtual {v2}, Lcom/android/internal/util/MemInfoReader;->getCachedSizeKb()J

    move-result-wide v10

    invoke-static {v10, v11}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 10986
    const-string v0, " cached kernel + "

    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 10987
    invoke-virtual {v2}, Lcom/android/internal/util/MemInfoReader;->getFreeSizeKb()J

    move-result-wide v10

    invoke-static {v10, v11}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 10988
    const-string v0, " free)"

    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto :goto_2f

    .line 10990
    :cond_44
    const-string/jumbo v0, "ram,"

    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {v2}, Lcom/android/internal/util/MemInfoReader;->getTotalSizeKb()J

    move-result-wide v10

    invoke-virtual {v4, v10, v11}, Ljava/io/PrintWriter;->print(J)V

    const-string v0, ","

    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 10991
    invoke-virtual {v2}, Lcom/android/internal/util/MemInfoReader;->getCachedSizeKb()J

    move-result-wide v10

    add-long v10, v48, v10

    .line 10992
    invoke-virtual {v2}, Lcom/android/internal/util/MemInfoReader;->getFreeSizeKb()J

    move-result-wide v12

    add-long/2addr v10, v12

    .line 10991
    invoke-virtual {v4, v10, v11}, Ljava/io/PrintWriter;->print(J)V

    .line 10992
    const-string v0, ","

    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 10993
    aget-wide v10, v41, v59

    sub-long v10, v10, v48

    invoke-virtual {v4, v10, v11}, Ljava/io/PrintWriter;->println(J)V

    .line 10996
    :cond_45
    :goto_2f
    invoke-virtual {v2}, Lcom/android/internal/util/MemInfoReader;->getKernelUsedSizeKb()J

    move-result-wide v10

    .line 10997
    .local v10, "kernelUsed":J
    invoke-static {}, Landroid/os/Debug;->getIonHeapsSizeKb()J

    move-result-wide v12

    .line 10998
    .local v12, "ionHeap":J
    invoke-static {}, Landroid/os/Debug;->getIonPoolsSizeKb()J

    move-result-wide v14

    .line 10999
    .local v14, "ionPool":J
    invoke-static {}, Landroid/os/Debug;->getDmabufMappedSizeKb()J

    move-result-wide v16

    .line 11000
    .local v16, "dmabufMapped":J
    cmp-long v0, v12, v35

    if-ltz v0, :cond_46

    cmp-long v0, v14, v35

    if-ltz v0, :cond_46

    .line 11001
    sub-long v57, v12, v16

    .line 11002
    .local v57, "ionUnmapped":J
    const-string v0, "      ION: "

    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 11003
    add-long v63, v12, v14

    invoke-static/range {v63 .. v64}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 11004
    const-string v0, " ("

    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 11005
    invoke-static/range {v16 .. v17}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 11006
    const-string v0, " mapped + "

    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 11007
    invoke-static/range {v57 .. v58}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 11008
    const-string v0, " unmapped + "

    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 11009
    invoke-static {v14, v15}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 11010
    const-string v0, " pools)"

    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 11011
    add-long v10, v10, v57

    .line 11015
    aget-wide v63, v41, v59

    aget-wide v54, v41, v54

    sub-long v63, v63, v54

    aput-wide v63, v41, v59

    .line 11016
    aget-wide v54, v41, v59

    add-long v54, v54, v16

    aput-wide v54, v41, v59

    .line 11017
    .end local v57    # "ionUnmapped":J
    goto :goto_30

    .line 11018
    :cond_46
    invoke-static {}, Landroid/os/Debug;->getDmabufTotalExportedKb()J

    move-result-wide v57

    .line 11019
    .local v57, "totalExportedDmabuf":J
    cmp-long v0, v57, v35

    if-ltz v0, :cond_47

    .line 11020
    sub-long v63, v57, v16

    .line 11021
    .local v63, "dmabufUnmapped":J
    const-string v0, "DMA-BUF: "

    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 11022
    invoke-static/range {v57 .. v58}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 11023
    const-string v0, " ("

    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 11024
    invoke-static/range {v16 .. v17}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 11025
    const-string v0, " mapped + "

    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 11026
    invoke-static/range {v63 .. v64}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 11027
    const-string v0, " unmapped)"

    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 11029
    add-long v10, v10, v63

    .line 11031
    aget-wide v65, v41, v59

    aget-wide v54, v41, v54

    sub-long v65, v65, v54

    aput-wide v65, v41, v59

    .line 11032
    aget-wide v54, v41, v59

    add-long v54, v54, v16

    aput-wide v54, v41, v59

    .line 11037
    .end local v63    # "dmabufUnmapped":J
    :cond_47
    invoke-static {}, Landroid/os/Debug;->getDmabufHeapTotalExportedKb()J

    move-result-wide v54

    .line 11038
    .local v54, "totalDmabufHeapExported":J
    cmp-long v0, v54, v35

    if-ltz v0, :cond_48

    .line 11039
    const-string v0, "DMA-BUF Heaps: "

    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 11040
    invoke-static/range {v54 .. v55}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 11043
    :cond_48
    invoke-static {}, Landroid/os/Debug;->getDmabufHeapPoolsSizeKb()J

    move-result-wide v63

    .line 11044
    .local v63, "totalDmabufHeapPool":J
    cmp-long v0, v63, v35

    if-ltz v0, :cond_49

    .line 11045
    const-string v0, "DMA-BUF Heaps pool: "

    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 11046
    invoke-static/range {v63 .. v64}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 11049
    .end local v54    # "totalDmabufHeapExported":J
    .end local v57    # "totalExportedDmabuf":J
    .end local v63    # "totalDmabufHeapPool":J
    :cond_49
    :goto_30
    invoke-static {}, Landroid/os/Debug;->getGpuTotalUsageKb()J

    move-result-wide v54

    .line 11050
    .local v54, "gpuUsage":J
    cmp-long v0, v54, v35

    if-ltz v0, :cond_4b

    .line 11051
    invoke-static {}, Landroid/os/Debug;->getGpuDmaBufUsageKb()J

    move-result-wide v57

    .line 11052
    .local v57, "gpuDmaBufUsage":J
    cmp-long v0, v57, v35

    if-ltz v0, :cond_4a

    .line 11053
    sub-long v63, v54, v57

    .line 11054
    .local v63, "gpuPrivateUsage":J
    const-string v0, "      GPU: "

    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 11055
    invoke-static/range {v54 .. v55}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 11056
    const-string v0, " ("

    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 11057
    invoke-static/range {v57 .. v58}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 11058
    const-string v0, " dmabuf + "

    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 11059
    invoke-static/range {v63 .. v64}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 11060
    const-string v0, " private)"

    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 11063
    aget-wide v65, v41, v59

    aget-wide v67, v41, v24

    sub-long v65, v65, v67

    aput-wide v65, v41, v59

    .line 11064
    add-long v10, v10, v63

    .line 11065
    .end local v63    # "gpuPrivateUsage":J
    goto :goto_31

    .line 11066
    :cond_4a
    const-string v0, "      GPU: "

    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-static/range {v54 .. v55}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 11072
    .end local v57    # "gpuDmaBufUsage":J
    :cond_4b
    :goto_31
    invoke-virtual {v2}, Lcom/android/internal/util/MemInfoReader;->getTotalSizeKb()J

    move-result-wide v57

    aget-wide v63, v41, v59

    aget-wide v24, v41, v25

    sub-long v63, v63, v24

    sub-long v57, v57, v63

    .line 11074
    invoke-virtual {v2}, Lcom/android/internal/util/MemInfoReader;->getFreeSizeKb()J

    move-result-wide v24

    sub-long v57, v57, v24

    invoke-virtual {v2}, Lcom/android/internal/util/MemInfoReader;->getCachedSizeKb()J

    move-result-wide v24

    sub-long v57, v57, v24

    sub-long v57, v57, v10

    .line 11075
    invoke-virtual {v2}, Lcom/android/internal/util/MemInfoReader;->getZramTotalSizeKb()J

    move-result-wide v24

    sub-long v6, v57, v24

    .line 11076
    .local v6, "lostRAM":J
    iget-boolean v0, v1, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCompact:Z

    if-nez v0, :cond_4c

    .line 11077
    const-string v0, " Used RAM: "

    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    aget-wide v24, v41, v59

    sub-long v24, v24, v48

    add-long v24, v24, v10

    invoke-static/range {v24 .. v25}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 11078
    const-string v0, " ("

    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 11079
    aget-wide v24, v41, v59

    sub-long v24, v24, v48

    invoke-static/range {v24 .. v25}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string v0, " used pss + "

    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 11080
    invoke-static {v10, v11}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string v0, " kernel)\n"

    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 11081
    const-string v0, " Lost RAM: "

    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-static {v6, v7}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto :goto_32

    .line 11083
    :cond_4c
    const-string/jumbo v0, "lostram,"

    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {v4, v6, v7}, Ljava/io/PrintWriter;->println(J)V

    .line 11085
    :goto_32
    if-nez p6, :cond_56

    .line 11086
    invoke-virtual {v2}, Lcom/android/internal/util/MemInfoReader;->getZramTotalSizeKb()J

    move-result-wide v24

    cmp-long v0, v24, v35

    if-eqz v0, :cond_4e

    .line 11087
    iget-boolean v0, v1, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCompact:Z

    if-nez v0, :cond_4d

    .line 11088
    const-string v0, "     ZRAM: "

    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 11089
    invoke-virtual {v2}, Lcom/android/internal/util/MemInfoReader;->getZramTotalSizeKb()J

    move-result-wide v24

    invoke-static/range {v24 .. v25}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 11090
    const-string v0, " physical used for "

    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 11091
    invoke-virtual {v2}, Lcom/android/internal/util/MemInfoReader;->getSwapTotalSizeKb()J

    move-result-wide v24

    .line 11092
    invoke-virtual {v2}, Lcom/android/internal/util/MemInfoReader;->getSwapFreeSizeKb()J

    move-result-wide v57

    sub-long v24, v24, v57

    .line 11091
    invoke-static/range {v24 .. v25}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 11093
    const-string v0, " in swap ("

    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 11094
    invoke-virtual {v2}, Lcom/android/internal/util/MemInfoReader;->getSwapTotalSizeKb()J

    move-result-wide v24

    invoke-static/range {v24 .. v25}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 11095
    const-string v0, " total swap)"

    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    move-wide/from16 v24, v6

    goto :goto_33

    .line 11097
    :cond_4d
    const-string/jumbo v0, "zram,"

    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    move-wide/from16 v24, v6

    .end local v6    # "lostRAM":J
    .local v24, "lostRAM":J
    invoke-virtual {v2}, Lcom/android/internal/util/MemInfoReader;->getZramTotalSizeKb()J

    move-result-wide v6

    invoke-virtual {v4, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    const-string v0, ","

    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 11098
    invoke-virtual {v2}, Lcom/android/internal/util/MemInfoReader;->getSwapTotalSizeKb()J

    move-result-wide v6

    invoke-virtual {v4, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    const-string v0, ","

    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 11099
    invoke-virtual {v2}, Lcom/android/internal/util/MemInfoReader;->getSwapFreeSizeKb()J

    move-result-wide v6

    invoke-virtual {v4, v6, v7}, Ljava/io/PrintWriter;->println(J)V

    goto :goto_33

    .line 11086
    .end local v24    # "lostRAM":J
    .restart local v6    # "lostRAM":J
    :cond_4e
    move-wide/from16 v24, v6

    .line 11102
    .end local v6    # "lostRAM":J
    .restart local v24    # "lostRAM":J
    :goto_33
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->getKsmInfo()[J

    move-result-object v0

    .line 11103
    .local v0, "ksm":[J
    iget-boolean v3, v1, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCompact:Z

    const/16 v6, 0x3e7

    if-nez v3, :cond_53

    .line 11104
    aget-wide v7, v0, v22

    cmp-long v3, v7, v35

    if-nez v3, :cond_4f

    aget-wide v7, v0, v39

    cmp-long v3, v7, v35

    if-nez v3, :cond_4f

    aget-wide v7, v0, v34

    cmp-long v3, v7, v35

    if-nez v3, :cond_4f

    aget-wide v7, v0, v92

    cmp-long v3, v7, v35

    if-eqz v3, :cond_50

    .line 11106
    :cond_4f
    const-string v3, "      KSM: "

    invoke-virtual {v4, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    aget-wide v7, v0, v22

    invoke-static {v7, v8}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v4, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 11107
    const-string v3, " saved from shared "

    invoke-virtual {v4, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 11108
    aget-wide v7, v0, v39

    invoke-static {v7, v8}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v4, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 11109
    const-string v3, "           "

    invoke-virtual {v4, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    aget-wide v7, v0, v34

    invoke-static {v7, v8}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v4, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 11110
    const-string v3, " unshared; "

    invoke-virtual {v4, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 11111
    aget-wide v7, v0, v92

    invoke-static {v7, v8}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v4, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 11112
    const-string v3, " volatile"

    invoke-virtual {v4, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 11114
    :cond_50
    const-string v3, "   Tuning: "

    invoke-virtual {v4, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 11115
    invoke-static {}, Landroid/app/ActivityManager;->staticGetMemoryClass()I

    move-result v3

    invoke-virtual {v4, v3}, Ljava/io/PrintWriter;->print(I)V

    .line 11116
    const-string v3, " (large "

    invoke-virtual {v4, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 11117
    invoke-static {}, Landroid/app/ActivityManager;->staticGetLargeMemoryClass()I

    move-result v3

    invoke-virtual {v4, v3}, Ljava/io/PrintWriter;->print(I)V

    .line 11118
    const-string v3, "), oom "

    invoke-virtual {v4, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 11119
    iget-object v3, v5, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    .line 11120
    invoke-virtual {v3, v6}, Lcom/android/server/am/ProcessList;->getMemLevel(I)J

    move-result-wide v6

    const/16 v3, 0x400

    .line 11119
    invoke-static {v6, v7, v3}, Lcom/android/server/am/ActivityManagerService;->stringifySize(JI)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v4, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 11121
    const-string v3, ", restore limit "

    invoke-virtual {v4, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 11122
    iget-object v3, v5, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v3}, Lcom/android/server/am/ProcessList;->getCachedRestoreThresholdKb()J

    move-result-wide v6

    invoke-static {v6, v7}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v4, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 11123
    invoke-static {}, Landroid/app/ActivityManager;->isLowRamDeviceStatic()Z

    move-result v3

    if-eqz v3, :cond_51

    .line 11124
    const-string v3, " (low-ram)"

    invoke-virtual {v4, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 11126
    :cond_51
    invoke-static {}, Landroid/app/ActivityManager;->isHighEndGfx()Z

    move-result v3

    if-eqz v3, :cond_52

    .line 11127
    const-string v3, " (high-end-gfx)"

    invoke-virtual {v4, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 11129
    :cond_52
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    goto :goto_34

    .line 11131
    :cond_53
    const-string/jumbo v3, "ksm,"

    invoke-virtual {v4, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    aget-wide v7, v0, v22

    invoke-virtual {v4, v7, v8}, Ljava/io/PrintWriter;->print(J)V

    const-string v3, ","

    invoke-virtual {v4, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 11132
    aget-wide v7, v0, v39

    invoke-virtual {v4, v7, v8}, Ljava/io/PrintWriter;->print(J)V

    const-string v3, ","

    invoke-virtual {v4, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    aget-wide v7, v0, v34

    invoke-virtual {v4, v7, v8}, Ljava/io/PrintWriter;->print(J)V

    .line 11133
    const-string v3, ","

    invoke-virtual {v4, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    aget-wide v7, v0, v92

    invoke-virtual {v4, v7, v8}, Ljava/io/PrintWriter;->println(J)V

    .line 11134
    const-string/jumbo v3, "tuning,"

    invoke-virtual {v4, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 11135
    invoke-static {}, Landroid/app/ActivityManager;->staticGetMemoryClass()I

    move-result v3

    invoke-virtual {v4, v3}, Ljava/io/PrintWriter;->print(I)V

    .line 11136
    const/16 v3, 0x2c

    invoke-virtual {v4, v3}, Ljava/io/PrintWriter;->print(C)V

    .line 11137
    invoke-static {}, Landroid/app/ActivityManager;->staticGetLargeMemoryClass()I

    move-result v7

    invoke-virtual {v4, v7}, Ljava/io/PrintWriter;->print(I)V

    .line 11138
    invoke-virtual {v4, v3}, Ljava/io/PrintWriter;->print(C)V

    .line 11139
    iget-object v3, v5, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v3, v6}, Lcom/android/server/am/ProcessList;->getMemLevel(I)J

    move-result-wide v6

    const-wide/16 v34, 0x400

    div-long v6, v6, v34

    invoke-virtual {v4, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    .line 11140
    invoke-static {}, Landroid/app/ActivityManager;->isLowRamDeviceStatic()Z

    move-result v3

    if-eqz v3, :cond_54

    .line 11141
    const-string v3, ",low-ram"

    invoke-virtual {v4, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 11143
    :cond_54
    invoke-static {}, Landroid/app/ActivityManager;->isHighEndGfx()Z

    move-result v3

    if-eqz v3, :cond_55

    .line 11144
    const-string v3, ",high-end-gfx"

    invoke-virtual {v4, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 11146
    :cond_55
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    goto :goto_34

    .line 11085
    .end local v0    # "ksm":[J
    .end local v24    # "lostRAM":J
    .restart local v6    # "lostRAM":J
    :cond_56
    move-wide/from16 v24, v6

    .line 11150
    .end local v2    # "memInfo":Lcom/android/internal/util/MemInfoReader;
    .end local v6    # "lostRAM":J
    .end local v10    # "kernelUsed":J
    .end local v12    # "ionHeap":J
    .end local v14    # "ionPool":J
    .end local v16    # "dmabufMapped":J
    .end local v18    # "dalvikId":I
    .end local v19    # "oomMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .end local v28    # "memInfos":[Landroid/os/Debug$MemoryInfo;
    .end local v54    # "gpuUsage":J
    .end local v56    # "catMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    :goto_34
    move-object/from16 v22, v42

    goto :goto_35

    .line 10780
    .end local v20    # "memtrackTmp":[J
    .end local v21    # "oomPss":[J
    .end local v23    # "oomSwapPss":[J
    .end local v26    # "miscSwapPss":[J
    .end local v27    # "miscPss":[J
    .end local v41    # "ss":[J
    .end local v42    # "mi":Landroid/os/Debug$MemoryInfo;
    .end local v43    # "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .end local v53    # "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .restart local v4    # "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .local v6, "ss":[J
    .restart local v8    # "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .local v15, "oomPss":[J
    .restart local v22    # "mi":Landroid/os/Debug$MemoryInfo;
    .restart local v55    # "oomSwapPss":[J
    .restart local v79    # "miscSwapPss":[J
    .restart local v80    # "miscPss":[J
    .restart local v91    # "memtrackTmp":[J
    :cond_57
    move-object/from16 v5, p0

    move-object/from16 v53, v4

    move-object/from16 v41, v6

    move-object/from16 v43, v8

    move-object/from16 v21, v15

    move-object/from16 v23, v55

    move-object/from16 v26, v79

    move-object/from16 v27, v80

    move-object/from16 v20, v91

    move-object/from16 v4, p2

    .line 11150
    .end local v4    # "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .end local v6    # "ss":[J
    .end local v8    # "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .end local v15    # "oomPss":[J
    .end local v55    # "oomSwapPss":[J
    .end local v79    # "miscSwapPss":[J
    .end local v80    # "miscPss":[J
    .end local v91    # "memtrackTmp":[J
    .restart local v20    # "memtrackTmp":[J
    .restart local v21    # "oomPss":[J
    .restart local v23    # "oomSwapPss":[J
    .restart local v26    # "miscSwapPss":[J
    .restart local v27    # "miscPss":[J
    .restart local v41    # "ss":[J
    .restart local v43    # "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .restart local v53    # "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    :goto_35
    return-void
.end method

.method private final dumpApplicationMemoryUsageHeader(Ljava/io/PrintWriter;JJZZ)V
    .locals 2
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "uptime"    # J
    .param p4, "realtime"    # J
    .param p6, "isCheckinRequest"    # Z
    .param p7, "isCompact"    # Z

    .line 10342
    if-eqz p7, :cond_0

    .line 10343
    const-string/jumbo v0, "version,"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const/4 v0, 0x1

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(I)V

    .line 10345
    :cond_0
    if-nez p6, :cond_2

    if-eqz p7, :cond_1

    goto :goto_0

    .line 10349
    :cond_1
    const-string v0, "Applications Memory Usage (in Kilobytes):"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10350
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Uptime: "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p2, p3}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string v1, " Realtime: "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p4, p5}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto :goto_1

    .line 10347
    :cond_2
    :goto_0
    const-string/jumbo v0, "time,"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, p2, p3}, Ljava/io/PrintWriter;->print(J)V

    const-string v0, ","

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, p4, p5}, Ljava/io/PrintWriter;->println(J)V

    .line 10352
    :goto_1
    return-void
.end method

.method private dumpEverything(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;ZZIZ)V
    .locals 20
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "args"    # [Ljava/lang/String;
    .param p4, "opti"    # I
    .param p5, "dumpAll"    # Z
    .param p6, "dumpPackage"    # Ljava/lang/String;
    .param p7, "dumpClient"    # Z
    .param p8, "dumpNormalPriority"    # Z
    .param p9, "dumpAppId"    # I
    .param p10, "dumpProxies"    # Z

    .line 8623
    move-object/from16 v9, p0

    move-object/from16 v8, p2

    move/from16 v15, p5

    move-object/from16 v14, p6

    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 8624
    iget-object v0, v9, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    invoke-virtual {v0, v8}, Lcom/android/server/am/ActivityManagerConstants;->dump(Ljava/io/PrintWriter;)V

    .line 8625
    iget-object v1, v9, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_6

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 8626
    iget-object v0, v9, Lcom/android/server/am/ActivityManagerService;->mOomAdjuster:Lcom/android/server/am/OomAdjuster;

    invoke-virtual {v0, v8}, Lcom/android/server/am/OomAdjuster;->dumpCachedAppOptimizerSettings(Ljava/io/PrintWriter;)V

    .line 8627
    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_4

    :try_start_2
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 8628
    iget-object v0, v9, Lcom/android/server/am/ActivityManagerService;->mOomAdjuster:Lcom/android/server/am/OomAdjuster;

    invoke-virtual {v0, v8}, Lcom/android/server/am/OomAdjuster;->dumpCacheOomRankerSettings(Ljava/io/PrintWriter;)V

    .line 8629
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 8630
    if-eqz v15, :cond_0

    .line 8631
    const-string v0, "-------------------------------------------------------------------------------"

    invoke-virtual {v8, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 8634
    :cond_0
    invoke-virtual/range {p0 .. p6}, Lcom/android/server/am/ActivityManagerService;->dumpAllowedAssociationsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V

    .line 8635
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 8636
    if-eqz v15, :cond_1

    .line 8637
    const-string v0, "-------------------------------------------------------------------------------"

    invoke-virtual {v8, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 8640
    :cond_1
    iget-object v0, v9, Lcom/android/server/am/ActivityManagerService;->mPendingIntentController:Lcom/android/server/am/PendingIntentController;

    invoke-virtual {v0, v8, v15, v14}, Lcom/android/server/am/PendingIntentController;->dumpPendingIntents(Ljava/io/PrintWriter;ZLjava/lang/String;)V

    .line 8641
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 8642
    if-eqz v15, :cond_2

    .line 8643
    const-string v0, "-------------------------------------------------------------------------------"

    invoke-virtual {v8, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 8645
    :cond_2
    invoke-virtual/range {p0 .. p6}, Lcom/android/server/am/ActivityManagerService;->dumpBroadcastsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V

    .line 8646
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 8647
    if-eqz v15, :cond_3

    .line 8648
    const-string v0, "-------------------------------------------------------------------------------"

    invoke-virtual {v8, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 8650
    :cond_3
    if-nez v15, :cond_4

    if-eqz v14, :cond_5

    .line 8651
    :cond_4
    invoke-virtual/range {p0 .. p6}, Lcom/android/server/am/ActivityManagerService;->dumpBroadcastStatsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V

    .line 8652
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 8653
    if-eqz v15, :cond_5

    .line 8654
    const-string v0, "-------------------------------------------------------------------------------"

    invoke-virtual {v8, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 8657
    :cond_5
    iget-object v1, v9, Lcom/android/server/am/ActivityManagerService;->mCpHelper:Lcom/android/server/am/ContentProviderHelper;

    move-object/from16 v2, p1

    move-object/from16 v3, p2

    move-object/from16 v4, p3

    move/from16 v5, p4

    move/from16 v6, p5

    move-object/from16 v7, p6

    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ContentProviderHelper;->dumpProvidersLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V

    .line 8658
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 8659
    if-eqz v15, :cond_6

    .line 8660
    const-string v0, "-------------------------------------------------------------------------------"

    invoke-virtual {v8, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 8662
    :cond_6
    invoke-virtual/range {p0 .. p6}, Lcom/android/server/am/ActivityManagerService;->dumpPermissions(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V

    .line 8663
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 8664
    iget-object v1, v9, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    move-object/from16 v2, p1

    move-object/from16 v3, p2

    move-object/from16 v4, p3

    move/from16 v5, p4

    move/from16 v6, p5

    move-object/from16 v7, p6

    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ActiveServices;->newServiceDumperLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)Lcom/android/server/am/ActiveServices$ServiceDumper;

    move-result-object v0

    move-object/from16 v19, v0

    .line 8665
    .local v19, "sdumper":Lcom/android/server/am/ActiveServices$ServiceDumper;
    if-nez p7, :cond_8

    .line 8666
    if-eqz v15, :cond_7

    .line 8667
    const-string v0, "-------------------------------------------------------------------------------"

    invoke-virtual {v8, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 8669
    :cond_7
    invoke-virtual/range {v19 .. v19}, Lcom/android/server/am/ActiveServices$ServiceDumper;->dumpLocked()V

    .line 8671
    :cond_8
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_6

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 8675
    if-eqz p7, :cond_a

    .line 8676
    if-eqz v15, :cond_9

    .line 8677
    const-string v0, "-------------------------------------------------------------------------------"

    invoke-virtual {v8, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 8679
    :cond_9
    invoke-virtual/range {v19 .. v19}, Lcom/android/server/am/ActiveServices$ServiceDumper;->dumpWithClient()V

    .line 8681
    :cond_a
    if-nez v14, :cond_c

    if-eqz p10, :cond_c

    .line 8688
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 8689
    if-eqz v15, :cond_b

    .line 8690
    const-string v0, "-------------------------------------------------------------------------------"

    invoke-virtual {v8, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 8692
    :cond_b
    const/16 v0, 0x1770

    invoke-virtual {v9, v8, v0}, Lcom/android/server/am/ActivityManagerService;->dumpBinderProxies(Ljava/io/PrintWriter;I)V

    .line 8694
    :cond_c
    monitor-enter p0

    :try_start_3
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 8695
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 8696
    if-eqz v15, :cond_d

    .line 8697
    const-string v0, "-------------------------------------------------------------------------------"

    invoke-virtual {v8, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 8699
    :cond_d
    iget-object v10, v9, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    const-string/jumbo v11, "recents"
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_2

    move-object/from16 v12, p1

    move-object/from16 v13, p2

    move-object v7, v14

    move-object/from16 v14, p3

    move/from16 v15, p4

    move/from16 v16, p5

    move/from16 v17, p7

    move-object/from16 v18, p6

    :try_start_4
    invoke-virtual/range {v10 .. v18}, Lcom/android/server/wm/ActivityTaskManagerInternal;->dump(Ljava/lang/String;Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;)V

    .line 8701
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 8702
    if-eqz p5, :cond_e

    .line 8703
    const-string v0, "-------------------------------------------------------------------------------"

    invoke-virtual {v8, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 8705
    :cond_e
    iget-object v10, v9, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    const-string/jumbo v11, "lastanr"

    move-object/from16 v12, p1

    move-object/from16 v13, p2

    move-object/from16 v14, p3

    move/from16 v15, p4

    move/from16 v16, p5

    move/from16 v17, p7

    move-object/from16 v18, p6

    invoke-virtual/range {v10 .. v18}, Lcom/android/server/wm/ActivityTaskManagerInternal;->dump(Ljava/lang/String;Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;)V

    .line 8707
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 8708
    if-eqz p5, :cond_f

    .line 8709
    const-string v0, "-------------------------------------------------------------------------------"

    invoke-virtual {v8, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 8711
    :cond_f
    iget-object v10, v9, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    const-string/jumbo v11, "starter"

    move-object/from16 v12, p1

    move-object/from16 v13, p2

    move-object/from16 v14, p3

    move/from16 v15, p4

    move/from16 v16, p5

    move/from16 v17, p7

    move-object/from16 v18, p6

    invoke-virtual/range {v10 .. v18}, Lcom/android/server/wm/ActivityTaskManagerInternal;->dump(Ljava/lang/String;Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;)V

    .line 8713
    if-nez v7, :cond_11

    .line 8714
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 8715
    if-eqz p5, :cond_10

    .line 8716
    const-string v0, "-------------------------------------------------------------------------------"

    invoke-virtual {v8, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 8718
    :cond_10
    iget-object v10, v9, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    const-string v11, "containers"

    move-object/from16 v12, p1

    move-object/from16 v13, p2

    move-object/from16 v14, p3

    move/from16 v15, p4

    move/from16 v16, p5

    move/from16 v17, p7

    move-object/from16 v18, p6

    invoke-virtual/range {v10 .. v18}, Lcom/android/server/wm/ActivityTaskManagerInternal;->dump(Ljava/lang/String;Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;)V

    .line 8723
    :cond_11
    if-nez p8, :cond_13

    .line 8724
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 8725
    if-eqz p5, :cond_12

    .line 8726
    const-string v0, "-------------------------------------------------------------------------------"

    invoke-virtual {v8, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 8728
    :cond_12
    iget-object v10, v9, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    const-string v11, "activities"

    move-object/from16 v12, p1

    move-object/from16 v13, p2

    move-object/from16 v14, p3

    move/from16 v15, p4

    move/from16 v16, p5

    move/from16 v17, p7

    move-object/from16 v18, p6

    invoke-virtual/range {v10 .. v18}, Lcom/android/server/wm/ActivityTaskManagerInternal;->dump(Ljava/lang/String;Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;)V

    .line 8731
    :cond_13
    iget-object v0, v9, Lcom/android/server/am/ActivityManagerService;->mAssociations:Landroid/util/SparseArray;

    invoke-virtual {v0}, Landroid/util/SparseArray;->size()I

    move-result v0

    if-lez v0, :cond_15

    .line 8732
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 8733
    if-eqz p5, :cond_14

    .line 8734
    const-string v0, "-------------------------------------------------------------------------------"

    invoke-virtual {v8, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 8736
    :cond_14
    move-object/from16 v1, p0

    move-object/from16 v2, p1

    move-object/from16 v3, p2

    move-object/from16 v4, p3

    move/from16 v5, p4

    move/from16 v6, p5

    move-object v10, v7

    move/from16 v7, p7

    move-object v11, v8

    move-object/from16 v8, p6

    :try_start_5
    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->dumpAssociationsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;)V

    goto :goto_0

    .line 8731
    :cond_15
    move-object v10, v7

    move-object v11, v8

    .line 8738
    :goto_0
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 8739
    if-eqz p5, :cond_16

    .line 8740
    const-string v0, "-------------------------------------------------------------------------------"

    invoke-virtual {v11, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 8742
    :cond_16
    iget-object v0, v9, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    iget-object v0, v0, Lcom/android/server/am/ProcessList;->mAppExitInfoTracker:Lcom/android/server/am/AppExitInfoTracker;

    invoke-virtual {v0, v11, v10}, Lcom/android/server/am/AppExitInfoTracker;->dumpHistoryProcessExitInfo(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 8743
    if-nez v10, :cond_19

    .line 8744
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 8745
    if-eqz p5, :cond_17

    .line 8746
    const-string v0, "-------------------------------------------------------------------------------"

    invoke-virtual {v11, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 8748
    :cond_17
    iget-object v0, v9, Lcom/android/server/am/ActivityManagerService;->mOomAdjProfiler:Lcom/android/server/am/OomAdjProfiler;

    invoke-virtual {v0, v11}, Lcom/android/server/am/OomAdjProfiler;->dump(Ljava/io/PrintWriter;)V

    .line 8749
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 8750
    if-eqz p5, :cond_18

    .line 8751
    const-string v0, "-------------------------------------------------------------------------------"

    invoke-virtual {v11, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 8753
    :cond_18
    invoke-virtual {v9, v11}, Lcom/android/server/am/ActivityManagerService;->dumpLmkLocked(Ljava/io/PrintWriter;)Z

    .line 8755
    :cond_19
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 8756
    if-eqz p5, :cond_1a

    .line 8757
    const-string v0, "-------------------------------------------------------------------------------"

    invoke-virtual {v11, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 8759
    :cond_1a
    iget-object v12, v9, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v12
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_3

    :try_start_6
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 8760
    iget-object v1, v9, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    move-object/from16 v2, p1

    move-object/from16 v3, p2

    move-object/from16 v4, p3

    move/from16 v5, p4

    move/from16 v6, p5

    move-object/from16 v7, p6

    move/from16 v8, p9

    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ProcessList;->dumpProcessesLSP(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;I)V

    .line 8761
    monitor-exit v12
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    :try_start_7
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 8762
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 8763
    if-eqz p5, :cond_1b

    .line 8764
    const-string v0, "-------------------------------------------------------------------------------"

    invoke-virtual {v11, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 8766
    :cond_1b
    invoke-direct {v9, v11}, Lcom/android/server/am/ActivityManagerService;->dumpUsers(Ljava/io/PrintWriter;)V

    .line 8767
    monitor-exit p0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_3

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 8768
    return-void

    .line 8761
    :catchall_0
    move-exception v0

    :try_start_8
    monitor-exit v12
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_0

    :try_start_9
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .end local v19    # "sdumper":Lcom/android/server/am/ActiveServices$ServiceDumper;
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "fd":Ljava/io/FileDescriptor;
    .end local p2    # "pw":Ljava/io/PrintWriter;
    .end local p3    # "args":[Ljava/lang/String;
    .end local p4    # "opti":I
    .end local p5    # "dumpAll":Z
    .end local p6    # "dumpPackage":Ljava/lang/String;
    .end local p7    # "dumpClient":Z
    .end local p8    # "dumpNormalPriority":Z
    .end local p9    # "dumpAppId":I
    .end local p10    # "dumpProxies":Z
    throw v0

    .line 8767
    .restart local v19    # "sdumper":Lcom/android/server/am/ActiveServices$ServiceDumper;
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "fd":Ljava/io/FileDescriptor;
    .restart local p2    # "pw":Ljava/io/PrintWriter;
    .restart local p3    # "args":[Ljava/lang/String;
    .restart local p4    # "opti":I
    .restart local p5    # "dumpAll":Z
    .restart local p6    # "dumpPackage":Ljava/lang/String;
    .restart local p7    # "dumpClient":Z
    .restart local p8    # "dumpNormalPriority":Z
    .restart local p9    # "dumpAppId":I
    .restart local p10    # "dumpProxies":Z
    :catchall_1
    move-exception v0

    move-object v10, v7

    move-object v11, v8

    goto :goto_1

    :catchall_2
    move-exception v0

    move-object v11, v8

    move-object v10, v14

    :goto_1
    monitor-exit p0
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_3

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    :catchall_3
    move-exception v0

    goto :goto_1

    .line 8627
    .end local v19    # "sdumper":Lcom/android/server/am/ActiveServices$ServiceDumper;
    :catchall_4
    move-exception v0

    move-object v11, v8

    move-object v10, v14

    :goto_2
    :try_start_a
    monitor-exit v1
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_5

    :try_start_b
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "fd":Ljava/io/FileDescriptor;
    .end local p2    # "pw":Ljava/io/PrintWriter;
    .end local p3    # "args":[Ljava/lang/String;
    .end local p4    # "opti":I
    .end local p5    # "dumpAll":Z
    .end local p6    # "dumpPackage":Ljava/lang/String;
    .end local p7    # "dumpClient":Z
    .end local p8    # "dumpNormalPriority":Z
    .end local p9    # "dumpAppId":I
    .end local p10    # "dumpProxies":Z
    throw v0

    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "fd":Ljava/io/FileDescriptor;
    .restart local p2    # "pw":Ljava/io/PrintWriter;
    .restart local p3    # "args":[Ljava/lang/String;
    .restart local p4    # "opti":I
    .restart local p5    # "dumpAll":Z
    .restart local p6    # "dumpPackage":Ljava/lang/String;
    .restart local p7    # "dumpClient":Z
    .restart local p8    # "dumpNormalPriority":Z
    .restart local p9    # "dumpAppId":I
    .restart local p10    # "dumpProxies":Z
    :catchall_5
    move-exception v0

    goto :goto_2

    .line 8671
    :catchall_6
    move-exception v0

    move-object v11, v8

    move-object v10, v14

    :goto_3
    monitor-exit p0
    :try_end_b
    .catchall {:try_start_b .. :try_end_b} :catchall_7

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    :catchall_7
    move-exception v0

    goto :goto_3
.end method

.method private static dumpJavaTracesTombstoned(ILjava/lang/String;J)J
    .locals 8
    .param p0, "pid"    # I
    .param p1, "fileName"    # Ljava/lang/String;
    .param p2, "timeoutMs"    # J

    .line 3311
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v0

    .line 3312
    .local v0, "timeStart":J
    const-wide/16 v2, 0x3e8

    div-long v2, p2, v2

    long-to-int v2, v2

    invoke-static {p0, p1, v2}, Landroid/os/Debug;->dumpJavaBacktraceToFileTimeout(ILjava/lang/String;I)Z

    move-result v2

    .line 3314
    .local v2, "javaSuccess":Z
    const-string v3, "ActivityManager"

    if-eqz v2, :cond_1

    .line 3318
    :try_start_0
    new-instance v4, Ljava/io/File;

    invoke-direct {v4, p1}, Ljava/io/File;-><init>(Ljava/lang/String;)V

    invoke-virtual {v4}, Ljava/io/File;->length()J

    move-result-wide v4

    .line 3319
    .local v4, "size":J
    const-wide/16 v6, 0x64

    cmp-long v6, v4, v6

    if-gez v6, :cond_0

    .line 3320
    const-string v6, "Successfully created Java ANR file is empty!"

    invoke-static {v3, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    .line 3321
    const/4 v2, 0x0

    .line 3326
    .end local v4    # "size":J
    :cond_0
    goto :goto_0

    .line 3323
    :catch_0
    move-exception v4

    .line 3324
    .local v4, "e":Ljava/lang/Exception;
    const-string v5, "Unable to get ANR file size"

    invoke-static {v3, v5, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 3325
    const/4 v2, 0x0

    .line 3328
    .end local v4    # "e":Ljava/lang/Exception;
    :cond_1
    :goto_0
    if-nez v2, :cond_2

    .line 3329
    const-string v4, "Dumping Java threads failed, initiating native stack dump."

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 3330
    sget v4, Lcom/android/server/am/ActivityManagerService;->NATIVE_DUMP_TIMEOUT_MS:I

    div-int/lit16 v4, v4, 0x3e8

    invoke-static {p0, p1, v4}, Landroid/os/Debug;->dumpNativeBacktraceToFileTimeout(ILjava/lang/String;I)Z

    move-result v4

    if-nez v4, :cond_2

    .line 3332
    const-string v4, "Native stack dump failed!"

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 3336
    :cond_2
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v3

    sub-long/2addr v3, v0

    return-wide v3
.end method

.method static final dumpMemItems(Landroid/util/proto/ProtoOutputStream;JLjava/lang/String;Ljava/util/ArrayList;ZZZ)V
    .locals 16
    .param p0, "proto"    # Landroid/util/proto/ProtoOutputStream;
    .param p1, "fieldId"    # J
    .param p3, "tag"    # Ljava/lang/String;
    .param p5, "sort"    # Z
    .param p6, "dumpPss"    # Z
    .param p7, "dumpSwapPss"    # Z
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/util/proto/ProtoOutputStream;",
            "J",
            "Ljava/lang/String;",
            "Ljava/util/ArrayList<",
            "Lcom/android/server/am/ActivityManagerService$MemItem;",
            ">;ZZZ)V"
        }
    .end annotation

    .line 10258
    .local p4, "items":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    move-object/from16 v8, p0

    move-object/from16 v9, p4

    if-eqz p5, :cond_0

    .line 10259
    move/from16 v10, p6

    invoke-static {v9, v10}, Lcom/android/server/am/ActivityManagerService;->sortMemItems(Ljava/util/List;Z)V

    goto :goto_0

    .line 10258
    :cond_0
    move/from16 v10, p6

    .line 10262
    :goto_0
    const/4 v0, 0x0

    move v11, v0

    .local v11, "i":I
    :goto_1
    invoke-virtual/range {p4 .. p4}, Ljava/util/ArrayList;->size()I

    move-result v0

    if-ge v11, v0, :cond_3

    .line 10263
    invoke-virtual {v9, v11}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v0

    move-object v12, v0

    check-cast v12, Lcom/android/server/am/ActivityManagerService$MemItem;

    .line 10264
    .local v12, "mi":Lcom/android/server/am/ActivityManagerService$MemItem;
    invoke-virtual/range {p0 .. p2}, Landroid/util/proto/ProtoOutputStream;->start(J)J

    move-result-wide v13

    .line 10266
    .local v13, "token":J
    const-wide v0, 0x10900000001L

    move-object/from16 v15, p3

    invoke-virtual {v8, v0, v1, v15}, Landroid/util/proto/ProtoOutputStream;->write(JLjava/lang/String;)V

    .line 10267
    const-wide v0, 0x10900000002L

    iget-object v2, v12, Lcom/android/server/am/ActivityManagerService$MemItem;->shortLabel:Ljava/lang/String;

    invoke-virtual {v8, v0, v1, v2}, Landroid/util/proto/ProtoOutputStream;->write(JLjava/lang/String;)V

    .line 10268
    const-wide v0, 0x10800000004L

    iget-boolean v2, v12, Lcom/android/server/am/ActivityManagerService$MemItem;->isProc:Z

    invoke-virtual {v8, v0, v1, v2}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 10269
    const-wide v0, 0x10500000003L

    iget v2, v12, Lcom/android/server/am/ActivityManagerService$MemItem;->id:I

    invoke-virtual {v8, v0, v1, v2}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 10270
    const-wide v0, 0x10800000005L

    iget-boolean v2, v12, Lcom/android/server/am/ActivityManagerService$MemItem;->hasActivities:Z

    invoke-virtual {v8, v0, v1, v2}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 10271
    const-wide v0, 0x10300000006L

    iget-wide v2, v12, Lcom/android/server/am/ActivityManagerService$MemItem;->pss:J

    invoke-virtual {v8, v0, v1, v2, v3}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 10272
    const-wide v0, 0x10300000009L

    iget-wide v2, v12, Lcom/android/server/am/ActivityManagerService$MemItem;->mRss:J

    invoke-virtual {v8, v0, v1, v2, v3}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 10273
    if-eqz p7, :cond_1

    .line 10274
    const-wide v0, 0x10300000007L

    iget-wide v2, v12, Lcom/android/server/am/ActivityManagerService$MemItem;->swapPss:J

    invoke-virtual {v8, v0, v1, v2, v3}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 10276
    :cond_1
    iget-object v0, v12, Lcom/android/server/am/ActivityManagerService$MemItem;->subitems:Ljava/util/ArrayList;

    if-eqz v0, :cond_2

    .line 10277
    const-wide v1, 0x20b00000008L

    iget-object v3, v12, Lcom/android/server/am/ActivityManagerService$MemItem;->shortLabel:Ljava/lang/String;

    iget-object v4, v12, Lcom/android/server/am/ActivityManagerService$MemItem;->subitems:Ljava/util/ArrayList;

    const/4 v5, 0x1

    move-object/from16 v0, p0

    move/from16 v6, p6

    move/from16 v7, p7

    invoke-static/range {v0 .. v7}, Lcom/android/server/am/ActivityManagerService;->dumpMemItems(Landroid/util/proto/ProtoOutputStream;JLjava/lang/String;Ljava/util/ArrayList;ZZZ)V

    .line 10280
    :cond_2
    invoke-virtual {v8, v13, v14}, Landroid/util/proto/ProtoOutputStream;->end(J)V

    .line 10262
    .end local v12    # "mi":Lcom/android/server/am/ActivityManagerService$MemItem;
    .end local v13    # "token":J
    add-int/lit8 v11, v11, 0x1

    goto :goto_1

    :cond_3
    move-object/from16 v15, p3

    .line 10282
    .end local v11    # "i":I
    return-void
.end method

.method static final dumpMemItems(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;Ljava/util/ArrayList;ZZZZ)V
    .locals 15
    .param p0, "pw"    # Ljava/io/PrintWriter;
    .param p1, "prefix"    # Ljava/lang/String;
    .param p2, "tag"    # Ljava/lang/String;
    .param p4, "sort"    # Z
    .param p5, "isCompact"    # Z
    .param p6, "dumpPss"    # Z
    .param p7, "dumpSwapPss"    # Z
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/io/PrintWriter;",
            "Ljava/lang/String;",
            "Ljava/lang/String;",
            "Ljava/util/ArrayList<",
            "Lcom/android/server/am/ActivityManagerService$MemItem;",
            ">;ZZZZ)V"
        }
    .end annotation

    .line 10224
    .local p3, "items":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    move-object v8, p0

    move-object/from16 v9, p1

    move-object/from16 v10, p2

    move-object/from16 v11, p3

    move/from16 v12, p6

    if-eqz p4, :cond_0

    if-nez p5, :cond_0

    .line 10225
    invoke-static {v11, v12}, Lcom/android/server/am/ActivityManagerService;->sortMemItems(Ljava/util/List;Z)V

    .line 10228
    :cond_0
    const/4 v0, 0x0

    move v13, v0

    .local v13, "i":I
    :goto_0
    invoke-virtual/range {p3 .. p3}, Ljava/util/ArrayList;->size()I

    move-result v0

    if-ge v13, v0, :cond_b

    .line 10229
    invoke-virtual {v11, v13}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v0

    move-object v14, v0

    check-cast v14, Lcom/android/server/am/ActivityManagerService$MemItem;

    .line 10230
    .local v14, "mi":Lcom/android/server/am/ActivityManagerService$MemItem;
    if-nez p5, :cond_3

    .line 10231
    const/4 v0, 0x2

    const/4 v1, 0x0

    const/4 v2, 0x3

    const/4 v3, 0x1

    if-eqz v12, :cond_1

    if-eqz p7, :cond_1

    .line 10232
    const/4 v4, 0x4

    new-array v4, v4, [Ljava/lang/Object;

    aput-object v9, v4, v1

    iget-wide v5, v14, Lcom/android/server/am/ActivityManagerService$MemItem;->pss:J

    invoke-static {v5, v6}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v1

    aput-object v1, v4, v3

    iget-object v1, v14, Lcom/android/server/am/ActivityManagerService$MemItem;->label:Ljava/lang/String;

    aput-object v1, v4, v0

    iget-wide v0, v14, Lcom/android/server/am/ActivityManagerService$MemItem;->swapPss:J

    .line 10233
    invoke-static {v0, v1}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v0

    aput-object v0, v4, v2

    .line 10232
    const-string v0, "%s%s: %-60s (%s in swap)\n"

    invoke-virtual {p0, v0, v4}, Ljava/io/PrintWriter;->printf(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintWriter;

    goto/16 :goto_5

    .line 10235
    :cond_1
    new-array v2, v2, [Ljava/lang/Object;

    aput-object v9, v2, v1

    if-eqz v12, :cond_2

    iget-wide v4, v14, Lcom/android/server/am/ActivityManagerService$MemItem;->pss:J

    goto :goto_1

    :cond_2
    iget-wide v4, v14, Lcom/android/server/am/ActivityManagerService$MemItem;->mRss:J

    :goto_1
    invoke-static {v4, v5}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v1

    aput-object v1, v2, v3

    iget-object v1, v14, Lcom/android/server/am/ActivityManagerService$MemItem;->label:Ljava/lang/String;

    aput-object v1, v2, v0

    const-string v0, "%s%s: %s\n"

    invoke-virtual {p0, v0, v2}, Ljava/io/PrintWriter;->printf(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintWriter;

    goto :goto_5

    .line 10238
    :cond_3
    iget-boolean v0, v14, Lcom/android/server/am/ActivityManagerService$MemItem;->isProc:Z

    const-string v1, "N/A"

    const-string v2, ","

    if-eqz v0, :cond_7

    .line 10239
    const-string/jumbo v0, "proc,"

    invoke-virtual {p0, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p0, v10}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p0, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v0, v14, Lcom/android/server/am/ActivityManagerService$MemItem;->shortLabel:Ljava/lang/String;

    invoke-virtual {p0, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 10240
    invoke-virtual {p0, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, v14, Lcom/android/server/am/ActivityManagerService$MemItem;->id:I

    invoke-virtual {p0, v0}, Ljava/io/PrintWriter;->print(I)V

    invoke-virtual {p0, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 10241
    if-eqz v12, :cond_4

    iget-wide v3, v14, Lcom/android/server/am/ActivityManagerService$MemItem;->pss:J

    goto :goto_2

    :cond_4
    iget-wide v3, v14, Lcom/android/server/am/ActivityManagerService$MemItem;->mRss:J

    :goto_2
    invoke-virtual {p0, v3, v4}, Ljava/io/PrintWriter;->print(J)V

    invoke-virtual {p0, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 10242
    if-eqz p7, :cond_5

    iget-wide v0, v14, Lcom/android/server/am/ActivityManagerService$MemItem;->swapPss:J

    invoke-static {v0, v1}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v1

    :cond_5
    invoke-virtual {p0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    .line 10243
    iget-boolean v0, v14, Lcom/android/server/am/ActivityManagerService$MemItem;->hasActivities:Z

    if-eqz v0, :cond_6

    const-string v0, ",a"

    goto :goto_3

    :cond_6
    const-string v0, ",e"

    :goto_3
    invoke-virtual {p0, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto :goto_5

    .line 10245
    :cond_7
    invoke-virtual {p0, v10}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p0, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v0, v14, Lcom/android/server/am/ActivityManagerService$MemItem;->shortLabel:Ljava/lang/String;

    invoke-virtual {p0, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p0, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 10246
    if-eqz v12, :cond_8

    iget-wide v3, v14, Lcom/android/server/am/ActivityManagerService$MemItem;->pss:J

    goto :goto_4

    :cond_8
    iget-wide v3, v14, Lcom/android/server/am/ActivityManagerService$MemItem;->mRss:J

    :goto_4
    invoke-virtual {p0, v3, v4}, Ljava/io/PrintWriter;->print(J)V

    invoke-virtual {p0, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 10247
    if-eqz p7, :cond_9

    iget-wide v0, v14, Lcom/android/server/am/ActivityManagerService$MemItem;->swapPss:J

    invoke-static {v0, v1}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v1

    :cond_9
    invoke-virtual {p0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 10249
    :goto_5
    iget-object v0, v14, Lcom/android/server/am/ActivityManagerService$MemItem;->subitems:Ljava/util/ArrayList;

    if-eqz v0, :cond_a

    .line 10250
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "    "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    iget-object v2, v14, Lcom/android/server/am/ActivityManagerService$MemItem;->shortLabel:Ljava/lang/String;

    iget-object v3, v14, Lcom/android/server/am/ActivityManagerService$MemItem;->subitems:Ljava/util/ArrayList;

    const/4 v4, 0x1

    move-object v0, p0

    move/from16 v5, p5

    move/from16 v6, p6

    move/from16 v7, p7

    invoke-static/range {v0 .. v7}, Lcom/android/server/am/ActivityManagerService;->dumpMemItems(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;Ljava/util/ArrayList;ZZZZ)V

    .line 10228
    .end local v14    # "mi":Lcom/android/server/am/ActivityManagerService$MemItem;
    :cond_a
    add-int/lit8 v13, v13, 0x1

    goto/16 :goto_0

    .line 10254
    .end local v13    # "i":I
    :cond_b
    return-void
.end method

.method private static dumpProcessList(Ljava/io/PrintWriter;Lcom/android/server/am/ActivityManagerService;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I
    .locals 7
    .param p0, "pw"    # Ljava/io/PrintWriter;
    .param p1, "service"    # Lcom/android/server/am/ActivityManagerService;
    .param p2, "list"    # Ljava/util/List;
    .param p3, "prefix"    # Ljava/lang/String;
    .param p4, "normalLabel"    # Ljava/lang/String;
    .param p5, "persistentLabel"    # Ljava/lang/String;
    .param p6, "dumpPackage"    # Ljava/lang/String;

    .line 10034
    const/4 v0, 0x0

    .line 10035
    .local v0, "numPers":I
    invoke-interface {p2}, Ljava/util/List;->size()I

    move-result v1

    const/4 v2, 0x1

    sub-int/2addr v1, v2

    .local v1, "i":I
    :goto_0
    if-ltz v1, :cond_3

    .line 10036
    invoke-interface {p2, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/ProcessRecord;

    .line 10037
    .local v3, "r":Lcom/android/server/am/ProcessRecord;
    if-eqz p6, :cond_0

    iget-object v4, v3, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v4, v4, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {p6, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_0

    .line 10038
    goto :goto_2

    .line 10040
    :cond_0
    const/4 v4, 0x4

    new-array v4, v4, [Ljava/lang/Object;

    const/4 v5, 0x0

    aput-object p3, v4, v5

    .line 10041
    invoke-virtual {v3}, Lcom/android/server/am/ProcessRecord;->isPersistent()Z

    move-result v5

    if-eqz v5, :cond_1

    move-object v5, p5

    goto :goto_1

    :cond_1
    move-object v5, p4

    :goto_1
    aput-object v5, v4, v2

    const/4 v5, 0x2

    .line 10042
    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v6

    aput-object v6, v4, v5

    const/4 v5, 0x3

    invoke-virtual {v3}, Lcom/android/server/am/ProcessRecord;->toString()Ljava/lang/String;

    move-result-object v6

    aput-object v6, v4, v5

    .line 10040
    const-string v5, "%s%s #%2d: %s"

    invoke-static {v5, v4}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v4

    invoke-virtual {p0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10043
    invoke-virtual {v3}, Lcom/android/server/am/ProcessRecord;->isPersistent()Z

    move-result v4

    if-eqz v4, :cond_2

    .line 10044
    add-int/lit8 v0, v0, 0x1

    .line 10035
    .end local v3    # "r":Lcom/android/server/am/ProcessRecord;
    :cond_2
    :goto_2
    add-int/lit8 v1, v1, -0x1

    goto :goto_0

    .line 10047
    .end local v1    # "i":I
    :cond_3
    return v0
.end method

.method public static dumpStackTraces(Ljava/lang/String;Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/ArrayList;)Landroid/util/Pair;
    .locals 24
    .param p0, "tracesFile"    # Ljava/lang/String;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/lang/String;",
            "Ljava/util/ArrayList<",
            "Ljava/lang/Integer;",
            ">;",
            "Ljava/util/ArrayList<",
            "Ljava/lang/Integer;",
            ">;",
            "Ljava/util/ArrayList<",
            "Ljava/lang/Integer;",
            ">;)",
            "Landroid/util/Pair<",
            "Ljava/lang/Long;",
            "Ljava/lang/Long;",
            ">;"
        }
    .end annotation

    .line 3345
    .local p1, "firstPids":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Ljava/lang/Integer;>;"
    .local p2, "nativePids":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Ljava/lang/Integer;>;"
    .local p3, "extraPids":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Ljava/lang/Integer;>;"
    move-object/from16 v0, p0

    move-object/from16 v1, p1

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Dumping to "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    const-string v3, "ActivityManager"

    invoke-static {v3, v2}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 3352
    const-wide/16 v4, 0x4e20

    .line 3357
    .local v4, "remainingTime":J
    const-wide/16 v6, -0x1

    .line 3358
    .local v6, "firstPidStart":J
    const-wide/16 v8, -0x1

    .line 3361
    .local v8, "firstPidEnd":J
    const-string v2, "); deadline exceeded."

    if-eqz v1, :cond_6

    .line 3362
    invoke-virtual/range {p1 .. p1}, Ljava/util/ArrayList;->size()I

    move-result v13

    .line 3363
    .local v13, "num":I
    const/4 v14, 0x0

    .local v14, "i":I
    :goto_0
    if-ge v14, v13, :cond_6

    .line 3364
    invoke-virtual {v1, v14}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v15

    check-cast v15, Ljava/lang/Integer;

    invoke-virtual {v15}, Ljava/lang/Integer;->intValue()I

    move-result v15

    .line 3366
    .local v15, "pid":I
    if-nez v14, :cond_0

    sget v10, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    if-eq v10, v15, :cond_0

    const/4 v10, 0x1

    goto :goto_1

    :cond_0
    const/4 v10, 0x0

    .line 3367
    .local v10, "firstPid":Z
    :goto_1
    const/16 v17, 0x0

    .line 3368
    .local v17, "tf":Ljava/io/File;
    if-eqz v10, :cond_2

    .line 3369
    new-instance v11, Ljava/io/File;

    invoke-direct {v11, v0}, Ljava/io/File;-><init>(Ljava/lang/String;)V

    move-object/from16 v17, v11

    .line 3370
    invoke-virtual/range {v17 .. v17}, Ljava/io/File;->exists()Z

    move-result v11

    if-eqz v11, :cond_1

    invoke-virtual/range {v17 .. v17}, Ljava/io/File;->length()J

    move-result-wide v11

    goto :goto_2

    :cond_1
    const-wide/16 v11, 0x0

    :goto_2
    move-wide v6, v11

    .line 3373
    :cond_2
    new-instance v11, Ljava/lang/StringBuilder;

    invoke-direct {v11}, Ljava/lang/StringBuilder;-><init>()V

    const-string v12, "Collecting stacks for pid "

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v11, v15}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v11}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v11

    invoke-static {v3, v11}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 3374
    invoke-static {v15, v0, v4, v5}, Lcom/android/server/am/ActivityManagerService;->dumpJavaTracesTombstoned(ILjava/lang/String;J)J

    move-result-wide v11

    .line 3377
    .local v11, "timeTaken":J
    sub-long/2addr v4, v11

    .line 3378
    const-wide/16 v18, 0x0

    cmp-long v20, v4, v18

    if-gtz v20, :cond_4

    .line 3379
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    move-wide/from16 v20, v4

    .end local v4    # "remainingTime":J
    .local v20, "remainingTime":J
    const-string v4, "Aborting stack trace dump (current firstPid="

    invoke-virtual {v1, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v15}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v3, v1}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 3381
    const-wide/16 v1, 0x0

    cmp-long v1, v6, v1

    if-ltz v1, :cond_3

    new-instance v1, Landroid/util/Pair;

    invoke-static {v6, v7}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v2

    invoke-static {v8, v9}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v3

    invoke-direct {v1, v2, v3}, Landroid/util/Pair;-><init>(Ljava/lang/Object;Ljava/lang/Object;)V

    move-object/from16 v16, v1

    goto :goto_3

    :cond_3
    const/16 v16, 0x0

    :goto_3
    return-object v16

    .line 3384
    .end local v20    # "remainingTime":J
    .restart local v4    # "remainingTime":J
    :cond_4
    move-wide/from16 v20, v4

    .end local v4    # "remainingTime":J
    .restart local v20    # "remainingTime":J
    if-eqz v10, :cond_5

    .line 3385
    invoke-virtual/range {v17 .. v17}, Ljava/io/File;->length()J

    move-result-wide v8

    .line 3363
    .end local v10    # "firstPid":Z
    .end local v11    # "timeTaken":J
    .end local v15    # "pid":I
    .end local v17    # "tf":Ljava/io/File;
    :cond_5
    add-int/lit8 v14, v14, 0x1

    move-object/from16 v1, p1

    move-wide/from16 v4, v20

    goto/16 :goto_0

    .line 3394
    .end local v13    # "num":I
    .end local v14    # "i":I
    .end local v20    # "remainingTime":J
    .restart local v4    # "remainingTime":J
    :cond_6
    if-eqz p2, :cond_a

    .line 3395
    invoke-virtual/range {p2 .. p2}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :goto_4
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v10

    if-eqz v10, :cond_9

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v10

    check-cast v10, Ljava/lang/Integer;

    invoke-virtual {v10}, Ljava/lang/Integer;->intValue()I

    move-result v10

    .line 3396
    .local v10, "pid":I
    new-instance v11, Ljava/lang/StringBuilder;

    invoke-direct {v11}, Ljava/lang/StringBuilder;-><init>()V

    const-string v12, "Collecting stacks for native pid "

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v11, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v11}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v11

    invoke-static {v3, v11}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 3397
    sget v11, Lcom/android/server/am/ActivityManagerService;->NATIVE_DUMP_TIMEOUT_MS:I

    int-to-long v11, v11

    invoke-static {v11, v12, v4, v5}, Ljava/lang/Math;->min(JJ)J

    move-result-wide v11

    .line 3399
    .local v11, "nativeDumpTimeoutMs":J
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v13

    .line 3400
    .local v13, "start":J
    const-wide/16 v20, 0x3e8

    move-wide/from16 v22, v8

    .end local v8    # "firstPidEnd":J
    .local v22, "firstPidEnd":J
    div-long v8, v11, v20

    long-to-int v8, v8

    invoke-static {v10, v0, v8}, Landroid/os/Debug;->dumpNativeBacktraceToFileTimeout(ILjava/lang/String;I)Z

    .line 3402
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v8

    sub-long/2addr v8, v13

    .line 3404
    .local v8, "timeTaken":J
    sub-long/2addr v4, v8

    .line 3405
    const-wide/16 v17, 0x0

    cmp-long v15, v4, v17

    if-gtz v15, :cond_8

    .line 3406
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v15, "Aborting stack trace dump (current native pid="

    invoke-virtual {v1, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v3, v1}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 3408
    const-wide/16 v1, 0x0

    cmp-long v1, v6, v1

    if-ltz v1, :cond_7

    new-instance v1, Landroid/util/Pair;

    invoke-static {v6, v7}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v2

    invoke-static/range {v22 .. v23}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v3

    invoke-direct {v1, v2, v3}, Landroid/util/Pair;-><init>(Ljava/lang/Object;Ljava/lang/Object;)V

    move-object/from16 v16, v1

    goto :goto_5

    :cond_7
    const/16 v16, 0x0

    :goto_5
    return-object v16

    .line 3414
    .end local v8    # "timeTaken":J
    .end local v10    # "pid":I
    .end local v11    # "nativeDumpTimeoutMs":J
    .end local v13    # "start":J
    :cond_8
    move-wide/from16 v8, v22

    goto :goto_4

    .line 3395
    .end local v22    # "firstPidEnd":J
    .local v8, "firstPidEnd":J
    :cond_9
    move-wide/from16 v22, v8

    .end local v8    # "firstPidEnd":J
    .restart local v22    # "firstPidEnd":J
    goto :goto_6

    .line 3394
    .end local v22    # "firstPidEnd":J
    .restart local v8    # "firstPidEnd":J
    :cond_a
    move-wide/from16 v22, v8

    .line 3418
    .end local v8    # "firstPidEnd":J
    .restart local v22    # "firstPidEnd":J
    :goto_6
    if-eqz p3, :cond_d

    .line 3419
    invoke-virtual/range {p3 .. p3}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :goto_7
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v8

    if-eqz v8, :cond_d

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Ljava/lang/Integer;

    invoke-virtual {v8}, Ljava/lang/Integer;->intValue()I

    move-result v8

    .line 3420
    .local v8, "pid":I
    new-instance v9, Ljava/lang/StringBuilder;

    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V

    const-string v10, "Collecting stacks for extra pid "

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v9, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v9

    invoke-static {v3, v9}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 3422
    invoke-static {v8, v0, v4, v5}, Lcom/android/server/am/ActivityManagerService;->dumpJavaTracesTombstoned(ILjava/lang/String;J)J

    move-result-wide v9

    .line 3424
    .local v9, "timeTaken":J
    sub-long/2addr v4, v9

    .line 3425
    const-wide/16 v11, 0x0

    cmp-long v13, v4, v11

    if-gtz v13, :cond_c

    .line 3426
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v11, "Aborting stack trace dump (current extra pid="

    invoke-virtual {v1, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v3, v1}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 3428
    const-wide/16 v1, 0x0

    cmp-long v1, v6, v1

    if-ltz v1, :cond_b

    new-instance v1, Landroid/util/Pair;

    invoke-static {v6, v7}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v2

    invoke-static/range {v22 .. v23}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v3

    invoke-direct {v1, v2, v3}, Landroid/util/Pair;-><init>(Ljava/lang/Object;Ljava/lang/Object;)V

    move-object/from16 v16, v1

    goto :goto_8

    :cond_b
    const/16 v16, 0x0

    :goto_8
    return-object v16

    .line 3434
    .end local v8    # "pid":I
    .end local v9    # "timeTaken":J
    :cond_c
    goto :goto_7

    .line 3436
    :cond_d
    const-string v1, "Done dumping"

    invoke-static {v3, v1}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 3437
    const-wide/16 v1, 0x0

    cmp-long v1, v6, v1

    if-ltz v1, :cond_e

    new-instance v10, Landroid/util/Pair;

    invoke-static {v6, v7}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v1

    invoke-static/range {v22 .. v23}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v2

    invoke-direct {v10, v1, v2}, Landroid/util/Pair;-><init>(Ljava/lang/Object;Ljava/lang/Object;)V

    goto :goto_9

    :cond_e
    const/4 v10, 0x0

    :goto_9
    return-object v10
.end method

.method public static dumpStackTraces(Ljava/util/ArrayList;Lcom/android/internal/os/ProcessCpuTracker;Landroid/util/SparseArray;Ljava/util/ArrayList;Ljava/io/StringWriter;)Ljava/io/File;
    .locals 7
    .param p1, "processCpuTracker"    # Lcom/android/internal/os/ProcessCpuTracker;
    .param p4, "logExceptionCreatingFile"    # Ljava/io/StringWriter;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/ArrayList<",
            "Ljava/lang/Integer;",
            ">;",
            "Lcom/android/internal/os/ProcessCpuTracker;",
            "Landroid/util/SparseArray<",
            "Ljava/lang/Boolean;",
            ">;",
            "Ljava/util/ArrayList<",
            "Ljava/lang/Integer;",
            ">;",
            "Ljava/io/StringWriter;",
            ")",
            "Ljava/io/File;"
        }
    .end annotation

    .line 3159
    .local p0, "firstPids":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Ljava/lang/Integer;>;"
    .local p2, "lastPids":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Ljava/lang/Boolean;>;"
    .local p3, "nativePids":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Ljava/lang/Integer;>;"
    const/4 v5, 0x0

    const/4 v6, 0x0

    move-object v0, p0

    move-object v1, p1

    move-object v2, p2

    move-object v3, p3

    move-object v4, p4

    invoke-static/range {v0 .. v6}, Lcom/android/server/am/ActivityManagerService;->dumpStackTraces(Ljava/util/ArrayList;Lcom/android/internal/os/ProcessCpuTracker;Landroid/util/SparseArray;Ljava/util/ArrayList;Ljava/io/StringWriter;[JLjava/lang/String;)Ljava/io/File;

    move-result-object v0

    return-object v0
.end method

.method public static dumpStackTraces(Ljava/util/ArrayList;Lcom/android/internal/os/ProcessCpuTracker;Landroid/util/SparseArray;Ljava/util/ArrayList;Ljava/io/StringWriter;Ljava/lang/String;)Ljava/io/File;
    .locals 7
    .param p1, "processCpuTracker"    # Lcom/android/internal/os/ProcessCpuTracker;
    .param p4, "logExceptionCreatingFile"    # Ljava/io/StringWriter;
    .param p5, "subject"    # Ljava/lang/String;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/ArrayList<",
            "Ljava/lang/Integer;",
            ">;",
            "Lcom/android/internal/os/ProcessCpuTracker;",
            "Landroid/util/SparseArray<",
            "Ljava/lang/Boolean;",
            ">;",
            "Ljava/util/ArrayList<",
            "Ljava/lang/Integer;",
            ">;",
            "Ljava/io/StringWriter;",
            "Ljava/lang/String;",
            ")",
            "Ljava/io/File;"
        }
    .end annotation

    .line 3175
    .local p0, "firstPids":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Ljava/lang/Integer;>;"
    .local p2, "lastPids":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Ljava/lang/Boolean;>;"
    .local p3, "nativePids":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Ljava/lang/Integer;>;"
    const/4 v5, 0x0

    move-object v0, p0

    move-object v1, p1

    move-object v2, p2

    move-object v3, p3

    move-object v4, p4

    move-object v6, p5

    invoke-static/range {v0 .. v6}, Lcom/android/server/am/ActivityManagerService;->dumpStackTraces(Ljava/util/ArrayList;Lcom/android/internal/os/ProcessCpuTracker;Landroid/util/SparseArray;Ljava/util/ArrayList;Ljava/io/StringWriter;[JLjava/lang/String;)Ljava/io/File;

    move-result-object v0

    return-object v0
.end method

.method static dumpStackTraces(Ljava/util/ArrayList;Lcom/android/internal/os/ProcessCpuTracker;Landroid/util/SparseArray;Ljava/util/ArrayList;Ljava/io/StringWriter;[JLjava/lang/String;)Ljava/io/File;
    .locals 8
    .param p1, "processCpuTracker"    # Lcom/android/internal/os/ProcessCpuTracker;
    .param p4, "logExceptionCreatingFile"    # Ljava/io/StringWriter;
    .param p5, "firstPidOffsets"    # [J
    .param p6, "subject"    # Ljava/lang/String;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/ArrayList<",
            "Ljava/lang/Integer;",
            ">;",
            "Lcom/android/internal/os/ProcessCpuTracker;",
            "Landroid/util/SparseArray<",
            "Ljava/lang/Boolean;",
            ">;",
            "Ljava/util/ArrayList<",
            "Ljava/lang/Integer;",
            ">;",
            "Ljava/io/StringWriter;",
            "[J",
            "Ljava/lang/String;",
            ")",
            "Ljava/io/File;"
        }
    .end annotation

    .line 3187
    .local p0, "firstPids":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Ljava/lang/Integer;>;"
    .local p2, "lastPids":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Ljava/lang/Boolean;>;"
    .local p3, "nativePids":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Ljava/lang/Integer;>;"
    const/4 v0, 0x0

    .line 3189
    .local v0, "extraPids":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Ljava/lang/Integer;>;"
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "dumpStackTraces pids="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v2, " nativepids="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    const-string v2, "ActivityManager"

    invoke-static {v2, v1}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 3193
    if-eqz p1, :cond_1

    .line 3194
    invoke-virtual {p1}, Lcom/android/internal/os/ProcessCpuTracker;->init()V

    .line 3196
    const-wide/16 v3, 0xc8

    :try_start_0
    invoke-static {v3, v4}, Ljava/lang/Thread;->sleep(J)V
    :try_end_0
    .catch Ljava/lang/InterruptedException; {:try_start_0 .. :try_end_0} :catch_0

    .line 3198
    goto :goto_0

    .line 3197
    :catch_0
    move-exception v1

    .line 3200
    :goto_0
    invoke-virtual {p1}, Lcom/android/internal/os/ProcessCpuTracker;->update()V

    .line 3203
    invoke-virtual {p1}, Lcom/android/internal/os/ProcessCpuTracker;->countWorkingStats()I

    move-result v1

    .line 3204
    .local v1, "N":I
    new-instance v3, Ljava/util/ArrayList;

    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    move-object v0, v3

    .line 3205
    const/4 v3, 0x0

    .local v3, "i":I
    :goto_1
    if-ge v3, v1, :cond_1

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v4

    const/4 v5, 0x5

    if-ge v4, v5, :cond_1

    .line 3206
    invoke-virtual {p1, v3}, Lcom/android/internal/os/ProcessCpuTracker;->getWorkingStats(I)Lcom/android/internal/os/ProcessCpuTracker$Stats;

    move-result-object v4

    .line 3207
    .local v4, "stats":Lcom/android/internal/os/ProcessCpuTracker$Stats;
    iget v5, v4, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    invoke-virtual {p2, v5}, Landroid/util/SparseArray;->indexOfKey(I)I

    move-result v5

    if-ltz v5, :cond_0

    .line 3210
    iget v5, v4, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    invoke-static {v5}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v5

    invoke-virtual {v0, v5}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_2

    .line 3212
    :cond_0
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Skipping next CPU consuming process, not a java proc: "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v6, v4, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v2, v5}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 3205
    .end local v4    # "stats":Lcom/android/internal/os/ProcessCpuTracker$Stats;
    :goto_2
    add-int/lit8 v3, v3, 0x1

    goto :goto_1

    .line 3218
    .end local v1    # "N":I
    .end local v3    # "i":I
    :cond_1
    new-instance v1, Ljava/io/File;

    const-string v3, "/data/anr"

    invoke-direct {v1, v3}, Ljava/io/File;-><init>(Ljava/lang/String;)V

    .line 3221
    .local v1, "tracesDir":Ljava/io/File;
    invoke-static {v1}, Lcom/android/server/am/ActivityManagerService;->maybePruneOldTraces(Ljava/io/File;)V

    .line 3228
    :try_start_1
    invoke-static {v1}, Lcom/android/server/am/ActivityManagerService;->createAnrDumpFile(Ljava/io/File;)Ljava/io/File;

    move-result-object v3
    :try_end_1
    .catch Ljava/io/IOException; {:try_start_1 .. :try_end_1} :catch_2

    .line 3236
    .local v3, "tracesFile":Ljava/io/File;
    nop

    .line 3238
    const/4 v4, 0x1

    if-eqz p6, :cond_2

    .line 3239
    :try_start_2
    new-instance v5, Ljava/io/FileOutputStream;

    invoke-direct {v5, v3, v4}, Ljava/io/FileOutputStream;-><init>(Ljava/io/File;Z)V
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_1

    .line 3240
    .local v5, "fos":Ljava/io/FileOutputStream;
    :try_start_3
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Subject: "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6, p6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v7, "\n"

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    .line 3241
    .local v6, "header":Ljava/lang/String;
    sget-object v7, Ljava/nio/charset/StandardCharsets;->UTF_8:Ljava/nio/charset/Charset;

    invoke-virtual {v6, v7}, Ljava/lang/String;->getBytes(Ljava/nio/charset/Charset;)[B

    move-result-object v7

    invoke-virtual {v5, v7}, Ljava/io/FileOutputStream;->write([B)V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 3242
    .end local v6    # "header":Ljava/lang/String;
    :try_start_4
    invoke-virtual {v5}, Ljava/io/FileOutputStream;->close()V
    :try_end_4
    .catch Ljava/io/IOException; {:try_start_4 .. :try_end_4} :catch_1

    .line 3244
    .end local v5    # "fos":Ljava/io/FileOutputStream;
    goto :goto_4

    .line 3239
    .restart local v5    # "fos":Ljava/io/FileOutputStream;
    :catchall_0
    move-exception v6

    :try_start_5
    invoke-virtual {v5}, Ljava/io/FileOutputStream;->close()V
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    goto :goto_3

    :catchall_1
    move-exception v7

    :try_start_6
    invoke-virtual {v6, v7}, Ljava/lang/Throwable;->addSuppressed(Ljava/lang/Throwable;)V

    .end local v0    # "extraPids":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Ljava/lang/Integer;>;"
    .end local v1    # "tracesDir":Ljava/io/File;
    .end local v3    # "tracesFile":Ljava/io/File;
    .end local p0    # "firstPids":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Ljava/lang/Integer;>;"
    .end local p1    # "processCpuTracker":Lcom/android/internal/os/ProcessCpuTracker;
    .end local p2    # "lastPids":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Ljava/lang/Boolean;>;"
    .end local p3    # "nativePids":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Ljava/lang/Integer;>;"
    .end local p4    # "logExceptionCreatingFile":Ljava/io/StringWriter;
    .end local p5    # "firstPidOffsets":[J
    .end local p6    # "subject":Ljava/lang/String;
    :goto_3
    throw v6
    :try_end_6
    .catch Ljava/io/IOException; {:try_start_6 .. :try_end_6} :catch_1

    .line 3242
    .end local v5    # "fos":Ljava/io/FileOutputStream;
    .restart local v0    # "extraPids":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Ljava/lang/Integer;>;"
    .restart local v1    # "tracesDir":Ljava/io/File;
    .restart local v3    # "tracesFile":Ljava/io/File;
    .restart local p0    # "firstPids":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Ljava/lang/Integer;>;"
    .restart local p1    # "processCpuTracker":Lcom/android/internal/os/ProcessCpuTracker;
    .restart local p2    # "lastPids":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Ljava/lang/Boolean;>;"
    .restart local p3    # "nativePids":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Ljava/lang/Integer;>;"
    .restart local p4    # "logExceptionCreatingFile":Ljava/io/StringWriter;
    .restart local p5    # "firstPidOffsets":[J
    .restart local p6    # "subject":Ljava/lang/String;
    :catch_1
    move-exception v5

    .line 3243
    .local v5, "e":Ljava/io/IOException;
    const-string v6, "Exception writing subject to ANR dump file:"

    invoke-static {v2, v6, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 3247
    .end local v5    # "e":Ljava/io/IOException;
    :cond_2
    :goto_4
    nop

    .line 3248
    invoke-virtual {v3}, Ljava/io/File;->getAbsolutePath()Ljava/lang/String;

    move-result-object v2

    .line 3247
    invoke-static {v2, p0, p3, v0}, Lcom/android/server/am/ActivityManagerService;->dumpStackTraces(Ljava/lang/String;Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/ArrayList;)Landroid/util/Pair;

    move-result-object v2

    .line 3249
    .local v2, "offsets":Landroid/util/Pair;, "Landroid/util/Pair<Ljava/lang/Long;Ljava/lang/Long;>;"
    if-eqz p5, :cond_4

    .line 3250
    const/4 v5, 0x0

    if-nez v2, :cond_3

    .line 3251
    const-wide/16 v6, -0x1

    aput-wide v6, p5, v4

    aput-wide v6, p5, v5

    goto :goto_5

    .line 3253
    :cond_3
    iget-object v6, v2, Landroid/util/Pair;->first:Ljava/lang/Object;

    check-cast v6, Ljava/lang/Long;

    invoke-virtual {v6}, Ljava/lang/Long;->longValue()J

    move-result-wide v6

    aput-wide v6, p5, v5

    .line 3254
    iget-object v5, v2, Landroid/util/Pair;->second:Ljava/lang/Object;

    check-cast v5, Ljava/lang/Long;

    invoke-virtual {v5}, Ljava/lang/Long;->longValue()J

    move-result-wide v5

    aput-wide v5, p5, v4

    .line 3257
    :cond_4
    :goto_5
    return-object v3

    .line 3229
    .end local v2    # "offsets":Landroid/util/Pair;, "Landroid/util/Pair<Ljava/lang/Long;Ljava/lang/Long;>;"
    .end local v3    # "tracesFile":Ljava/io/File;
    :catch_2
    move-exception v3

    .line 3230
    .local v3, "e":Ljava/io/IOException;
    const-string v4, "Exception creating ANR dump file:"

    invoke-static {v2, v4, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 3231
    if-eqz p4, :cond_5

    .line 3232
    const-string v2, "----- Exception creating ANR dump file -----\n"

    invoke-virtual {p4, v2}, Ljava/io/StringWriter;->append(Ljava/lang/CharSequence;)Ljava/io/StringWriter;

    .line 3233
    new-instance v2, Ljava/io/PrintWriter;

    invoke-direct {v2, p4}, Ljava/io/PrintWriter;-><init>(Ljava/io/Writer;)V

    invoke-virtual {v3, v2}, Ljava/io/IOException;->printStackTrace(Ljava/io/PrintWriter;)V

    .line 3235
    :cond_5
    const/4 v2, 0x0

    return-object v2
.end method

.method private dumpUsers(Ljava/io/PrintWriter;)V
    .locals 1
    .param p1, "pw"    # Ljava/io/PrintWriter;

    .line 9532
    const-string v0, "ACTIVITY MANAGER USERS (dumpsys activity users)"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 9533
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {v0, p1}, Lcom/android/server/am/UserController;->dump(Ljava/io/PrintWriter;)V

    .line 9534
    return-void
.end method

.method private enforceWriteSettingsPermission(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
    .locals 3
    .param p1, "func"    # Ljava/lang/String;
    .param p2, "callingPackage"    # Ljava/lang/String;
    .param p3, "callingAttributionTag"    # Ljava/lang/String;

    .line 14046
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 14047
    .local v0, "uid":I
    if-nez v0, :cond_0

    .line 14048
    return-void

    .line 14051
    :cond_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    const/4 v2, 0x0

    invoke-static {v1, v0, p2, p3, v2}, Landroid/provider/Settings;->checkAndNoteWriteSettingsOperation(Landroid/content/Context;ILjava/lang/String;Ljava/lang/String;Z)Z

    move-result v1

    if-eqz v1, :cond_1

    .line 14053
    return-void

    .line 14056
    :cond_1
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Permission Denial: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, " from pid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 14057
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, ", uid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, " requires "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "android.permission.WRITE_SETTINGS"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    .line 14060
    .local v1, "msg":Ljava/lang/String;
    const-string v2, "ActivityManager"

    invoke-static {v2, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 14061
    new-instance v2, Ljava/lang/SecurityException;

    invoke-direct {v2, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2
.end method

.method private ensureAllowedAssociations()V
    .locals 9

    .line 2428
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAllowedAssociations:Landroid/util/ArrayMap;

    if-nez v0, :cond_2

    .line 2430
    invoke-static {}, Lcom/android/server/SystemConfig;->getInstance()Lcom/android/server/SystemConfig;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/server/SystemConfig;->getAllowedAssociations()Landroid/util/ArrayMap;

    move-result-object v0

    .line 2431
    .local v0, "allowedAssociations":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Landroid/util/ArraySet<Ljava/lang/String;>;>;"
    new-instance v1, Landroid/util/ArrayMap;

    invoke-virtual {v0}, Landroid/util/ArrayMap;->size()I

    move-result v2

    invoke-direct {v1, v2}, Landroid/util/ArrayMap;-><init>(I)V

    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mAllowedAssociations:Landroid/util/ArrayMap;

    .line 2432
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getPackageManagerInternal()Landroid/content/pm/PackageManagerInternal;

    move-result-object v1

    .line 2433
    .local v1, "pm":Landroid/content/pm/PackageManagerInternal;
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_0
    invoke-virtual {v0}, Landroid/util/ArrayMap;->size()I

    move-result v3

    if-ge v2, v3, :cond_2

    .line 2434
    invoke-virtual {v0, v2}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Ljava/lang/String;

    .line 2435
    .local v3, "pkg":Ljava/lang/String;
    invoke-virtual {v0, v2}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Landroid/util/ArraySet;

    .line 2438
    .local v4, "asc":Landroid/util/ArraySet;, "Landroid/util/ArraySet<Ljava/lang/String;>;"
    const/4 v5, 0x0

    .line 2440
    .local v5, "isDebuggable":Z
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v6

    const/high16 v7, 0x20000

    .line 2441
    const/4 v8, 0x0

    invoke-interface {v6, v3, v7, v8}, Landroid/content/pm/IPackageManager;->getApplicationInfo(Ljava/lang/String;II)Landroid/content/pm/ApplicationInfo;

    move-result-object v6

    .line 2442
    .local v6, "ai":Landroid/content/pm/ApplicationInfo;
    if-eqz v6, :cond_1

    .line 2443
    iget v7, v6, Landroid/content/pm/ApplicationInfo;->flags:I
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    and-int/lit8 v7, v7, 0x2

    if-eqz v7, :cond_0

    const/4 v8, 0x1

    :cond_0
    move v5, v8

    .line 2447
    .end local v6    # "ai":Landroid/content/pm/ApplicationInfo;
    :cond_1
    goto :goto_1

    .line 2445
    :catch_0
    move-exception v6

    .line 2448
    :goto_1
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mAllowedAssociations:Landroid/util/ArrayMap;

    new-instance v7, Lcom/android/server/am/ActivityManagerService$PackageAssociationInfo;

    invoke-direct {v7, p0, v3, v4, v5}, Lcom/android/server/am/ActivityManagerService$PackageAssociationInfo;-><init>(Lcom/android/server/am/ActivityManagerService;Ljava/lang/String;Landroid/util/ArraySet;Z)V

    invoke-virtual {v6, v3, v7}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 2433
    .end local v3    # "pkg":Ljava/lang/String;
    .end local v4    # "asc":Landroid/util/ArraySet;, "Landroid/util/ArraySet<Ljava/lang/String;>;"
    .end local v5    # "isDebuggable":Z
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 2451
    .end local v0    # "allowedAssociations":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Landroid/util/ArraySet<Ljava/lang/String;>;>;"
    .end local v1    # "pm":Landroid/content/pm/PackageManagerInternal;
    .end local v2    # "i":I
    :cond_2
    return-void
.end method

.method private findAppProcess(Landroid/os/IBinder;Ljava/lang/String;)Lcom/android/server/am/ProcessRecord;
    .locals 2
    .param p1, "app"    # Landroid/os/IBinder;
    .param p2, "reason"    # Ljava/lang/String;

    .line 8135
    if-nez p1, :cond_0

    .line 8136
    const/4 v0, 0x0

    return-object v0

    .line 8139
    :cond_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 8140
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v1, p1, p2}, Lcom/android/server/am/ProcessList;->findAppProcessLOSP(Landroid/os/IBinder;Ljava/lang/String;)Lcom/android/server/am/ProcessRecord;

    move-result-object v1

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    return-object v1

    .line 8141
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v1
.end method

.method private findProcessLOSP(Ljava/lang/String;ILjava/lang/String;)Lcom/android/server/am/ProcessRecord;
    .locals 8
    .param p1, "process"    # Ljava/lang/String;
    .param p2, "userId"    # I
    .param p3, "callName"    # Ljava/lang/String;

    .line 14900
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    const/4 v4, 0x1

    const/4 v5, 0x2

    const/4 v7, 0x0

    move v3, p2

    move-object v6, p3

    invoke-virtual/range {v0 .. v7}, Lcom/android/server/am/UserController;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p2

    .line 14902
    const/4 v0, 0x0

    .line 14904
    .local v0, "proc":Lcom/android/server/am/ProcessRecord;
    :try_start_0
    invoke-static {p1}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v1

    .line 14905
    .local v1, "pid":I
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    monitor-enter v2
    :try_end_0
    .catch Ljava/lang/NumberFormatException; {:try_start_0 .. :try_end_0} :catch_0

    .line 14906
    :try_start_1
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-virtual {v3, v1}, Lcom/android/server/am/ActivityManagerService$PidMap;->get(I)Lcom/android/server/am/ProcessRecord;

    move-result-object v3

    move-object v0, v3

    .line 14907
    monitor-exit v2

    .line 14909
    .end local v1    # "pid":I
    goto :goto_0

    .line 14907
    .restart local v1    # "pid":I
    :catchall_0
    move-exception v3

    monitor-exit v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .end local v0    # "proc":Lcom/android/server/am/ProcessRecord;
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "process":Ljava/lang/String;
    .end local p2    # "userId":I
    .end local p3    # "callName":Ljava/lang/String;
    :try_start_2
    throw v3
    :try_end_2
    .catch Ljava/lang/NumberFormatException; {:try_start_2 .. :try_end_2} :catch_0

    .line 14908
    .end local v1    # "pid":I
    .restart local v0    # "proc":Lcom/android/server/am/ProcessRecord;
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "process":Ljava/lang/String;
    .restart local p2    # "userId":I
    .restart local p3    # "callName":Ljava/lang/String;
    :catch_0
    move-exception v1

    .line 14911
    :goto_0
    if-nez v0, :cond_1

    .line 14912
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    .line 14913
    invoke-virtual {v1}, Lcom/android/server/am/ProcessList;->getProcessNamesLOSP()Lcom/android/server/am/ProcessList$MyProcessMap;

    move-result-object v1

    invoke-virtual {v1}, Lcom/android/server/am/ProcessList$MyProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v1

    .line 14914
    .local v1, "all":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;>;"
    invoke-virtual {v1, p1}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/util/SparseArray;

    .line 14915
    .local v2, "procs":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    if-eqz v2, :cond_1

    invoke-virtual {v2}, Landroid/util/SparseArray;->size()I

    move-result v3

    if-lez v3, :cond_1

    .line 14916
    const/4 v3, 0x0

    invoke-virtual {v2, v3}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v3

    move-object v0, v3

    check-cast v0, Lcom/android/server/am/ProcessRecord;

    .line 14917
    const/4 v3, -0x1

    if-eq p2, v3, :cond_1

    iget v3, v0, Lcom/android/server/am/ProcessRecord;->userId:I

    if-eq v3, p2, :cond_1

    .line 14918
    const/4 v3, 0x1

    .local v3, "i":I
    :goto_1
    invoke-virtual {v2}, Landroid/util/SparseArray;->size()I

    move-result v4

    if-ge v3, v4, :cond_1

    .line 14919
    invoke-virtual {v2, v3}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/ProcessRecord;

    .line 14920
    .local v4, "thisProc":Lcom/android/server/am/ProcessRecord;
    iget v5, v4, Lcom/android/server/am/ProcessRecord;->userId:I

    if-ne v5, p2, :cond_0

    .line 14921
    move-object v0, v4

    .line 14922
    goto :goto_2

    .line 14918
    .end local v4    # "thisProc":Lcom/android/server/am/ProcessRecord;
    :cond_0
    add-int/lit8 v3, v3, 0x1

    goto :goto_1

    .line 14929
    .end local v1    # "all":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;>;"
    .end local v2    # "procs":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    .end local v3    # "i":I
    :cond_1
    :goto_2
    return-object v0
.end method

.method private finishForceStopPackageLocked(Ljava/lang/String;I)V
    .locals 25
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "uid"    # I

    .line 4002
    new-instance v0, Landroid/content/Intent;

    .line 4003
    const-string/jumbo v1, "package"

    const/4 v2, 0x0

    move-object/from16 v3, p1

    invoke-static {v1, v3, v2}, Landroid/net/Uri;->fromParts(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/net/Uri;

    move-result-object v1

    const-string v2, "android.intent.action.PACKAGE_RESTARTED"

    invoke-direct {v0, v2, v1}, Landroid/content/Intent;-><init>(Ljava/lang/String;Landroid/net/Uri;)V

    .line 4004
    .local v0, "intent":Landroid/content/Intent;
    move-object/from16 v1, p0

    iget-boolean v2, v1, Lcom/android/server/am/ActivityManagerService;->mProcessesReady:Z

    if-nez v2, :cond_0

    .line 4005
    const/high16 v2, 0x50000000

    invoke-virtual {v0, v2}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 4008
    :cond_0
    const-string v2, "android.intent.extra.UID"

    move/from16 v8, p2

    invoke-virtual {v0, v2, v8}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 4009
    invoke-static/range {p2 .. p2}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v2

    const-string v4, "android.intent.extra.user_handle"

    invoke-virtual {v0, v4, v2}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 4010
    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v9, 0x0

    const/4 v10, 0x0

    const/4 v11, 0x0

    const/4 v12, 0x0

    const/4 v13, 0x0

    const/4 v14, 0x0

    const/4 v15, 0x0

    const/16 v16, -0x1

    const/16 v17, 0x0

    const/16 v18, 0x0

    const/16 v19, 0x0

    sget v20, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    const/16 v21, 0x3e8

    .line 4012
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v22

    .line 4013
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v23

    invoke-static/range {p2 .. p2}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v24

    .line 4010
    move-object/from16 v4, p0

    move-object v8, v0

    invoke-virtual/range {v4 .. v24}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;[Ljava/lang/String;ILandroid/os/Bundle;ZZIIIII)I

    .line 4014
    return-void
.end method

.method private forceStopPackageLocked(Ljava/lang/String;ILjava/lang/String;)V
    .locals 10
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "uid"    # I
    .param p3, "reason"    # Ljava/lang/String;

    .line 3996
    invoke-static {p2}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v2

    .line 3997
    invoke-static {p2}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v8

    .line 3996
    const/4 v3, 0x0

    const/4 v4, 0x0

    const/4 v5, 0x1

    const/4 v6, 0x0

    const/4 v7, 0x0

    move-object v0, p0

    move-object v1, p1

    move-object v9, p3

    invoke-virtual/range {v0 .. v9}, Lcom/android/server/am/ActivityManagerService;->forceStopPackageLocked(Ljava/lang/String;IZZZZZILjava/lang/String;)Z

    .line 3998
    return-void
.end method

.method private getBackgroundLaunchBroadcasts()Landroid/util/ArraySet;
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Landroid/util/ArraySet<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation

    .line 2378
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBackgroundLaunchBroadcasts:Landroid/util/ArraySet;

    if-nez v0, :cond_0

    .line 2379
    invoke-static {}, Lcom/android/server/SystemConfig;->getInstance()Lcom/android/server/SystemConfig;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/server/SystemConfig;->getAllowImplicitBroadcasts()Landroid/util/ArraySet;

    move-result-object v0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBackgroundLaunchBroadcasts:Landroid/util/ArraySet;

    .line 2381
    :cond_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBackgroundLaunchBroadcasts:Landroid/util/ArraySet;

    return-object v0
.end method

.method private getCommonServicesLocked(Z)Landroid/util/ArrayMap;
    .locals 4
    .param p1, "isolated"    # Z
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(Z)",
            "Landroid/util/ArrayMap<",
            "Ljava/lang/String;",
            "Landroid/os/IBinder;",
            ">;"
        }
    .end annotation

    .line 2559
    const-string/jumbo v0, "permissionmgr"

    const-string/jumbo v1, "package"

    if-eqz p1, :cond_1

    .line 2560
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mIsolatedAppBindArgs:Landroid/util/ArrayMap;

    if-nez v2, :cond_0

    .line 2561
    new-instance v2, Landroid/util/ArrayMap;

    const/4 v3, 0x1

    invoke-direct {v2, v3}, Landroid/util/ArrayMap;-><init>(I)V

    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mIsolatedAppBindArgs:Landroid/util/ArrayMap;

    .line 2562
    invoke-static {v2, v1}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 2563
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mIsolatedAppBindArgs:Landroid/util/ArrayMap;

    invoke-static {v1, v0}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 2565
    :cond_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mIsolatedAppBindArgs:Landroid/util/ArrayMap;

    return-object v0

    .line 2568
    :cond_1
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    if-nez v2, :cond_2

    .line 2569
    new-instance v2, Landroid/util/ArrayMap;

    invoke-direct {v2}, Landroid/util/ArrayMap;-><init>()V

    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    .line 2574
    invoke-static {v2, v1}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 2575
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    invoke-static {v1, v0}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 2576
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    const-string/jumbo v1, "window"

    invoke-static {v0, v1}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 2577
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    const-string v1, "alarm"

    invoke-static {v0, v1}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 2578
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    const-string v1, "display"

    invoke-static {v0, v1}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 2579
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    const-string/jumbo v1, "network_management"

    invoke-static {v0, v1}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 2580
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    const-string v1, "connectivity"

    invoke-static {v0, v1}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 2581
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    const-string v1, "accessibility"

    invoke-static {v0, v1}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 2582
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    const-string v1, "input_method"

    invoke-static {v0, v1}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 2583
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    const-string v1, "input"

    invoke-static {v0, v1}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 2584
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    const-string v1, "graphicsstats"

    invoke-static {v0, v1}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 2585
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    const-string v1, "appops"

    invoke-static {v0, v1}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 2586
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    const-string v1, "content"

    invoke-static {v0, v1}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 2587
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    const-string/jumbo v1, "jobscheduler"

    invoke-static {v0, v1}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 2588
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    const-string/jumbo v1, "notification"

    invoke-static {v0, v1}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 2589
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    const-string/jumbo v1, "vibrator"

    invoke-static {v0, v1}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 2590
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    const-string v1, "account"

    invoke-static {v0, v1}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 2591
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    const-string/jumbo v1, "power"

    invoke-static {v0, v1}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 2592
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    const-string/jumbo v1, "user"

    invoke-static {v0, v1}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 2593
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    const-string/jumbo v1, "mount"

    invoke-static {v0, v1}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 2594
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    const-string/jumbo v1, "platform_compat"

    invoke-static {v0, v1}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 2596
    :cond_2
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    return-object v0
.end method

.method static final getKsmInfo()[J
    .locals 15

    .line 10360
    const/4 v0, 0x4

    new-array v0, v0, [J

    .line 10361
    .local v0, "longOut":[J
    const/4 v1, 0x1

    new-array v2, v1, [I

    const/16 v3, 0x2020

    const/4 v4, 0x0

    aput v3, v2, v4

    .line 10364
    .local v2, "SINGLE_LONG_FORMAT":[I
    new-array v3, v1, [J

    .line 10365
    .local v3, "longTmp":[J
    const-string v5, "/sys/kernel/mm/ksm/pages_shared"

    const/4 v6, 0x0

    invoke-static {v5, v2, v6, v3, v6}, Landroid/os/Process;->readProcFile(Ljava/lang/String;[I[Ljava/lang/String;[J[F)Z

    .line 10367
    aget-wide v7, v3, v4

    const-wide/16 v9, 0x1000

    mul-long/2addr v7, v9

    const-wide/16 v11, 0x400

    div-long/2addr v7, v11

    aput-wide v7, v0, v4

    .line 10368
    const-wide/16 v7, 0x0

    aput-wide v7, v3, v4

    .line 10369
    const-string v5, "/sys/kernel/mm/ksm/pages_sharing"

    invoke-static {v5, v2, v6, v3, v6}, Landroid/os/Process;->readProcFile(Ljava/lang/String;[I[Ljava/lang/String;[J[F)Z

    .line 10371
    aget-wide v13, v3, v4

    mul-long/2addr v13, v9

    div-long/2addr v13, v11

    aput-wide v13, v0, v1

    .line 10372
    aput-wide v7, v3, v4

    .line 10373
    const-string v1, "/sys/kernel/mm/ksm/pages_unshared"

    invoke-static {v1, v2, v6, v3, v6}, Landroid/os/Process;->readProcFile(Ljava/lang/String;[I[Ljava/lang/String;[J[F)Z

    .line 10375
    aget-wide v13, v3, v4

    mul-long/2addr v13, v9

    div-long/2addr v13, v11

    const/4 v1, 0x2

    aput-wide v13, v0, v1

    .line 10376
    aput-wide v7, v3, v4

    .line 10377
    const-string v1, "/sys/kernel/mm/ksm/pages_volatile"

    invoke-static {v1, v2, v6, v3, v6}, Landroid/os/Process;->readProcFile(Ljava/lang/String;[I[Ljava/lang/String;[J[F)Z

    .line 10379
    aget-wide v4, v3, v4

    mul-long/2addr v4, v9

    div-long/2addr v4, v11

    const/4 v1, 0x3

    aput-wide v4, v0, v1

    .line 10380
    return-object v0
.end method

.method private getPermissionManagerInternal()Lcom/android/server/pm/permission/PermissionManagerServiceInternal;
    .locals 1

    .line 5939
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPermissionManagerInt:Lcom/android/server/pm/permission/PermissionManagerServiceInternal;

    if-nez v0, :cond_0

    .line 5940
    const-class v0, Lcom/android/server/pm/permission/PermissionManagerServiceInternal;

    .line 5941
    invoke-static {v0}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/pm/permission/PermissionManagerServiceInternal;

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPermissionManagerInt:Lcom/android/server/pm/permission/PermissionManagerServiceInternal;

    .line 5943
    :cond_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPermissionManagerInt:Lcom/android/server/pm/permission/PermissionManagerServiceInternal;

    return-object v0
.end method

.method private getTestUtilityServiceLocked()Landroid/content/pm/TestUtilityService;
    .locals 1

    .line 5947
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mTestUtilityService:Landroid/content/pm/TestUtilityService;

    if-nez v0, :cond_0

    .line 5948
    const-class v0, Landroid/content/pm/TestUtilityService;

    .line 5949
    invoke-static {v0}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/content/pm/TestUtilityService;

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mTestUtilityService:Landroid/content/pm/TestUtilityService;

    .line 5951
    :cond_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mTestUtilityService:Landroid/content/pm/TestUtilityService;

    return-object v0
.end method

.method private getUidFromIntent(Landroid/content/Intent;)I
    .locals 4
    .param p1, "intent"    # Landroid/content/Intent;

    .line 13484
    const/4 v0, -0x1

    if-nez p1, :cond_0

    .line 13485
    return v0

    .line 13487
    :cond_0
    invoke-virtual {p1}, Landroid/content/Intent;->getExtras()Landroid/os/Bundle;

    move-result-object v1

    .line 13488
    .local v1, "intentExtras":Landroid/os/Bundle;
    const-string v2, "android.intent.extra.UID"

    invoke-virtual {p1, v2}, Landroid/content/Intent;->hasExtra(Ljava/lang/String;)Z

    move-result v3

    if-eqz v3, :cond_1

    .line 13489
    invoke-virtual {v1, v2}, Landroid/os/Bundle;->getInt(Ljava/lang/String;)I

    move-result v0

    goto :goto_0

    :cond_1
    nop

    .line 13488
    :goto_0
    return v0
.end method

.method private handleBinderHeavyHitterAutoSamplerTimeOut()V
    .locals 3

    .line 16700
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 16701
    sget-boolean v1, Lcom/android/server/am/ActivityManagerConstants;->BINDER_HEAVY_HITTER_WATCHER_ENABLED:Z

    if-eqz v1, :cond_0

    .line 16703
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    return-void

    .line 16705
    :cond_0
    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 16706
    const/4 v0, 0x0

    const/4 v1, 0x0

    const/4 v2, 0x0

    invoke-static {v2, v2, v0, v1}, Landroid/os/Binder;->setHeavyHitterWatcherConfig(ZIFLcom/android/internal/os/BinderCallHeavyHitterWatcher$BinderCallHeavyHitterListener;)V

    .line 16707
    return-void

    .line 16705
    :catchall_0
    move-exception v1

    :try_start_2
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v1
.end method

.method private handleBinderHeavyHitters(Ljava/util/List;IFJ)V
    .locals 17
    .param p2, "totalBinderCalls"    # I
    .param p3, "threshold"    # F
    .param p4, "timeSpan"    # J
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/List<",
            "Lcom/android/internal/os/BinderCallHeavyHitterWatcher$HeavyHitterContainer;",
            ">;IFJ)V"
        }
    .end annotation

    .line 16714
    .local p1, "hitters":Ljava/util/List;, "Ljava/util/List<Lcom/android/internal/os/BinderCallHeavyHitterWatcher$HeavyHitterContainer;>;"
    invoke-interface/range {p1 .. p1}, Ljava/util/List;->size()I

    move-result v0

    .line 16715
    .local v0, "size":I
    if-nez v0, :cond_0

    .line 16716
    return-void

    .line 16719
    :cond_0
    const-string v1, "%.1f%%"

    .line 16720
    .local v1, "pfmt":Ljava/lang/String;
    new-instance v2, Lcom/android/internal/os/BinderTransactionNameResolver;

    invoke-direct {v2}, Lcom/android/internal/os/BinderTransactionNameResolver;-><init>()V

    .line 16721
    .local v2, "resolver":Lcom/android/internal/os/BinderTransactionNameResolver;
    new-instance v3, Ljava/lang/StringBuilder;

    const-string v4, "Excessive incoming binder calls(>"

    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    const/4 v4, 0x1

    new-array v5, v4, [Ljava/lang/Object;

    const/high16 v6, 0x42c80000    # 100.0f

    mul-float v7, p3, v6

    .line 16722
    invoke-static {v7}, Ljava/lang/Float;->valueOf(F)Ljava/lang/Float;

    move-result-object v7

    const/4 v8, 0x0

    aput-object v7, v5, v8

    const-string v7, "%.1f%%"

    invoke-static {v7, v5}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 16723
    const/16 v5, 0x2c

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    move/from16 v9, p2

    invoke-virtual {v3, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 16724
    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    move-wide/from16 v10, p4

    invoke-virtual {v3, v10, v11}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 16725
    const-string/jumbo v12, "ms): "

    invoke-virtual {v3, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    .line 16726
    .local v3, "sb":Ljava/lang/StringBuilder;
    const/4 v12, 0x0

    .local v12, "i":I
    :goto_0
    if-ge v12, v0, :cond_2

    .line 16727
    if-lez v12, :cond_1

    .line 16728
    const-string v13, ", "

    invoke-virtual {v3, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 16730
    :cond_1
    move-object/from16 v13, p1

    invoke-interface {v13, v12}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v14

    check-cast v14, Lcom/android/internal/os/BinderCallHeavyHitterWatcher$HeavyHitterContainer;

    .line 16731
    .local v14, "container":Lcom/android/internal/os/BinderCallHeavyHitterWatcher$HeavyHitterContainer;
    const/16 v15, 0x5b

    invoke-virtual {v3, v15}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    iget v15, v14, Lcom/android/internal/os/BinderCallHeavyHitterWatcher$HeavyHitterContainer;->mUid:I

    invoke-virtual {v3, v15}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 16732
    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    iget-object v15, v14, Lcom/android/internal/os/BinderCallHeavyHitterWatcher$HeavyHitterContainer;->mClass:Ljava/lang/Class;

    invoke-virtual {v15}, Ljava/lang/Class;->getName()Ljava/lang/String;

    move-result-object v15

    invoke-virtual {v3, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 16733
    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    iget-object v15, v14, Lcom/android/internal/os/BinderCallHeavyHitterWatcher$HeavyHitterContainer;->mClass:Ljava/lang/Class;

    iget v8, v14, Lcom/android/internal/os/BinderCallHeavyHitterWatcher$HeavyHitterContainer;->mCode:I

    invoke-virtual {v2, v15, v8}, Lcom/android/internal/os/BinderTransactionNameResolver;->getMethodName(Ljava/lang/Class;I)Ljava/lang/String;

    move-result-object v8

    invoke-virtual {v3, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 16734
    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    iget v8, v14, Lcom/android/internal/os/BinderCallHeavyHitterWatcher$HeavyHitterContainer;->mCode:I

    invoke-virtual {v3, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 16735
    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    new-array v8, v4, [Ljava/lang/Object;

    iget v15, v14, Lcom/android/internal/os/BinderCallHeavyHitterWatcher$HeavyHitterContainer;->mFrequency:F

    mul-float/2addr v15, v6

    invoke-static {v15}, Ljava/lang/Float;->valueOf(F)Ljava/lang/Float;

    move-result-object v15

    const/16 v16, 0x0

    aput-object v15, v8, v16

    invoke-static {v7, v8}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v8

    invoke-virtual {v3, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const/16 v8, 0x5d

    .line 16736
    invoke-virtual {v3, v8}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    .line 16726
    .end local v14    # "container":Lcom/android/internal/os/BinderCallHeavyHitterWatcher$HeavyHitterContainer;
    add-int/lit8 v12, v12, 0x1

    move/from16 v8, v16

    goto :goto_0

    :cond_2
    move-object/from16 v13, p1

    .line 16738
    .end local v12    # "i":I
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    const-string v5, "ActivityManager"

    invoke-static {v5, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 16739
    return-void
.end method

.method private handlePendingSystemServerWtfs(Ljava/util/LinkedList;)V
    .locals 16
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/LinkedList<",
            "Landroid/util/Pair<",
            "Ljava/lang/String;",
            "Landroid/app/ApplicationErrorReport$CrashInfo;",
            ">;>;)V"
        }
    .end annotation

    .line 8120
    .local p1, "list":Ljava/util/LinkedList;, "Ljava/util/LinkedList<Landroid/util/Pair<Ljava/lang/String;Landroid/app/ApplicationErrorReport$CrashInfo;>;>;"
    move-object/from16 v15, p0

    iget-object v1, v15, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    monitor-enter v1

    .line 8121
    :try_start_0
    iget-object v0, v15, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    sget v2, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    invoke-virtual {v0, v2}, Lcom/android/server/am/ActivityManagerService$PidMap;->get(I)Lcom/android/server/am/ProcessRecord;

    move-result-object v3

    .line 8122
    .local v3, "proc":Lcom/android/server/am/ProcessRecord;
    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 8123
    invoke-virtual/range {p1 .. p1}, Ljava/util/LinkedList;->poll()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/util/Pair;

    .line 8124
    .local v0, "p":Landroid/util/Pair;, "Landroid/util/Pair<Ljava/lang/String;Landroid/app/ApplicationErrorReport$CrashInfo;>;"
    :goto_0
    if-eqz v0, :cond_0

    .line 8125
    const-string/jumbo v2, "wtf"

    const-string/jumbo v4, "system_server"

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    iget-object v1, v0, Landroid/util/Pair;->first:Ljava/lang/Object;

    move-object v8, v1

    check-cast v8, Ljava/lang/String;

    const/4 v9, 0x0

    const/4 v10, 0x0

    iget-object v1, v0, Landroid/util/Pair;->second:Ljava/lang/Object;

    move-object v11, v1

    check-cast v11, Landroid/app/ApplicationErrorReport$CrashInfo;

    const/4 v12, 0x0

    const/4 v13, 0x0

    const/4 v14, 0x0

    move-object/from16 v1, p0

    invoke-virtual/range {v1 .. v14}, Lcom/android/server/am/ActivityManagerService;->addErrorToDropBox(Ljava/lang/String;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Ljava/io/File;Landroid/app/ApplicationErrorReport$CrashInfo;Ljava/lang/Float;Landroid/os/incremental/IncrementalMetrics;Ljava/util/UUID;)V

    .line 8124
    invoke-virtual/range {p1 .. p1}, Ljava/util/LinkedList;->poll()Ljava/lang/Object;

    move-result-object v1

    move-object v0, v1

    check-cast v0, Landroid/util/Pair;

    goto :goto_0

    .line 8128
    .end local v0    # "p":Landroid/util/Pair;, "Landroid/util/Pair<Ljava/lang/String;Landroid/app/ApplicationErrorReport$CrashInfo;>;"
    :cond_0
    return-void

    .line 8122
    .end local v3    # "proc":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v0
.end method

.method private hasUsageStatsPermission(Ljava/lang/String;)Z
    .locals 8
    .param p1, "callingPackage"    # Ljava/lang/String;

    .line 2791
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/appop/AppOpsService;

    .line 2792
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    .line 2791
    const/16 v1, 0x2b

    const/4 v4, 0x0

    const/4 v5, 0x0

    const-string v6, ""

    const/4 v7, 0x0

    move-object v3, p1

    invoke-virtual/range {v0 .. v7}, Lcom/android/server/appop/AppOpsService;->noteOperation(IILjava/lang/String;Ljava/lang/String;ZLjava/lang/String;Z)Landroid/app/SyncNotedAppOp;

    move-result-object v0

    .line 2792
    invoke-virtual {v0}, Landroid/app/SyncNotedAppOp;->getOpMode()I

    move-result v0

    .line 2793
    .local v0, "mode":I
    const/4 v1, 0x1

    const/4 v2, 0x0

    const/4 v3, 0x3

    if-ne v0, v3, :cond_1

    .line 2794
    const-string v3, "android.permission.PACKAGE_USAGE_STATS"

    invoke-virtual {p0, v3}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v3

    if-nez v3, :cond_0

    goto :goto_0

    :cond_0
    move v1, v2

    :goto_0
    return v1

    .line 2797
    :cond_1
    if-nez v0, :cond_2

    goto :goto_1

    :cond_2
    move v1, v2

    :goto_1
    return v1
.end method

.method private instrumentWithoutRestart(Lcom/android/server/am/ActiveInstrumentation;Landroid/content/pm/ApplicationInfo;)V
    .locals 7
    .param p1, "activeInstr"    # Lcom/android/server/am/ActiveInstrumentation;
    .param p2, "targetInfo"    # Landroid/content/pm/ApplicationInfo;

    .line 13862
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 13863
    iget-object v0, p2, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    iget v1, p2, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->getProcessRecordLocked(Ljava/lang/String;I)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    .line 13864
    .local v0, "pr":Lcom/android/server/am/ProcessRecord;
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 13867
    :try_start_1
    invoke-virtual {v0}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v1

    iget-object v2, p1, Lcom/android/server/am/ActiveInstrumentation;->mClass:Landroid/content/ComponentName;

    iget-object v3, p1, Lcom/android/server/am/ActiveInstrumentation;->mArguments:Landroid/os/Bundle;

    iget-object v4, p1, Lcom/android/server/am/ActiveInstrumentation;->mWatcher:Landroid/app/IInstrumentationWatcher;

    iget-object v5, p1, Lcom/android/server/am/ActiveInstrumentation;->mUiAutomationConnection:Landroid/app/IUiAutomationConnection;

    move-object v6, p2

    invoke-interface/range {v1 .. v6}, Landroid/app/IApplicationThread;->instrumentWithoutRestart(Landroid/content/ComponentName;Landroid/os/Bundle;Landroid/app/IInstrumentationWatcher;Landroid/app/IUiAutomationConnection;Landroid/content/pm/ApplicationInfo;)V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0

    .line 13875
    goto :goto_0

    .line 13873
    :catch_0
    move-exception v1

    .line 13874
    .local v1, "e":Landroid/os/RemoteException;
    const-string v2, "ActivityManager"

    const-string v3, "RemoteException from instrumentWithoutRestart"

    invoke-static {v2, v3, v1}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 13876
    .end local v1    # "e":Landroid/os/RemoteException;
    :goto_0
    return-void

    .line 13864
    .end local v0    # "pr":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v0

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method private isAppBad(Ljava/lang/String;I)Z
    .locals 1
    .param p1, "processName"    # Ljava/lang/String;
    .param p2, "uid"    # I

    .line 5232
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppErrors:Lcom/android/server/am/AppErrors;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/am/AppErrors;->isBadProcess(Ljava/lang/String;I)Z

    move-result v0

    return v0
.end method

.method private isAppForeground(I)Z
    .locals 5
    .param p1, "uid"    # I

    .line 5222
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 5223
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    iget-object v1, v1, Lcom/android/server/am/ProcessList;->mActiveUids:Lcom/android/server/am/ActiveUids;

    invoke-virtual {v1, p1}, Lcom/android/server/am/ActiveUids;->get(I)Lcom/android/server/am/UidRecord;

    move-result-object v1

    .line 5224
    .local v1, "uidRec":Lcom/android/server/am/UidRecord;
    const/4 v2, 0x0

    if-eqz v1, :cond_2

    invoke-virtual {v1}, Lcom/android/server/am/UidRecord;->isIdle()Z

    move-result v3

    if-eqz v3, :cond_0

    goto :goto_0

    .line 5227
    :cond_0
    invoke-virtual {v1}, Lcom/android/server/am/UidRecord;->getCurProcState()I

    move-result v3

    const/4 v4, 0x6

    if-gt v3, v4, :cond_1

    const/4 v2, 0x1

    :cond_1
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    return v2

    .line 5225
    :cond_2
    :goto_0
    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    return v2

    .line 5228
    .end local v1    # "uidRec":Lcom/android/server/am/UidRecord;
    :catchall_0
    move-exception v1

    :try_start_2
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v1
.end method

.method private isCallerShell()Z
    .locals 2

    .line 13879
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 13880
    .local v0, "callingUid":I
    const/16 v1, 0x7d0

    if-eq v0, v1, :cond_1

    if-nez v0, :cond_0

    goto :goto_0

    :cond_0
    const/4 v1, 0x0

    goto :goto_1

    :cond_1
    :goto_0
    const/4 v1, 0x1

    :goto_1
    return v1
.end method

.method private isDeviceProvisioned(Landroid/content/Context;)Z
    .locals 3
    .param p1, "context"    # Landroid/content/Context;

    .line 7769
    invoke-virtual {p1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v0

    const-string v1, "device_provisioned"

    const/4 v2, 0x0

    invoke-static {v0, v1, v2}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v0

    if-eqz v0, :cond_0

    const/4 v2, 0x1

    :cond_0
    return v2
.end method

.method private isEphemeralLocked(I)Z
    .locals 4
    .param p1, "uid"    # I

    .line 14364
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v0}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v0

    invoke-virtual {v0, p1}, Landroid/content/pm/PackageManager;->getPackagesForUid(I)[Ljava/lang/String;

    move-result-object v0

    .line 14365
    .local v0, "packages":[Ljava/lang/String;
    const/4 v1, 0x0

    if-eqz v0, :cond_1

    array-length v2, v0

    const/4 v3, 0x1

    if-eq v2, v3, :cond_0

    goto :goto_0

    .line 14368
    :cond_0
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getPackageManagerInternal()Landroid/content/pm/PackageManagerInternal;

    move-result-object v2

    .line 14369
    invoke-static {p1}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v3

    aget-object v1, v0, v1

    .line 14368
    invoke-virtual {v2, v3, v1}, Landroid/content/pm/PackageManagerInternal;->isPackageEphemeral(ILjava/lang/String;)Z

    move-result v1

    return v1

    .line 14366
    :cond_1
    :goto_0
    return v1
.end method

.method private isInRestrictedBucket(ILjava/lang/String;J)Z
    .locals 2
    .param p1, "userId"    # I
    .param p2, "packageName"    # Ljava/lang/String;
    .param p3, "nowElapsed"    # J

    .line 5477
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    .line 5478
    invoke-virtual {v0, p2, p1, p3, p4}, Landroid/app/usage/UsageStatsManagerInternal;->getAppStandbyBucket(Ljava/lang/String;IJ)I

    move-result v0

    const/16 v1, 0x2d

    if-gt v1, v0, :cond_0

    const/4 v0, 0x1

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    .line 5477
    :goto_0
    return v0
.end method

.method private isInstantApp(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;I)Z
    .locals 4
    .param p1, "record"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "callerPackage"    # Ljava/lang/String;
    .param p3, "uid"    # I

    .line 12274
    invoke-static {p3}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v0

    const/4 v1, 0x0

    const/16 v2, 0x2710

    if-ge v0, v2, :cond_0

    .line 12275
    return v1

    .line 12278
    :cond_0
    if-eqz p1, :cond_1

    .line 12279
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    invoke-virtual {v0}, Landroid/content/pm/ApplicationInfo;->isInstantApp()Z

    move-result v0

    return v0

    .line 12282
    :cond_1
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v0

    .line 12284
    .local v0, "pm":Landroid/content/pm/IPackageManager;
    if-nez p2, :cond_3

    .line 12285
    :try_start_0
    invoke-interface {v0, p3}, Landroid/content/pm/IPackageManager;->getPackagesForUid(I)[Ljava/lang/String;

    move-result-object v2

    .line 12286
    .local v2, "packageNames":[Ljava/lang/String;
    if-eqz v2, :cond_2

    array-length v3, v2

    if-eqz v3, :cond_2

    .line 12290
    aget-object v1, v2, v1

    move-object p2, v1

    goto :goto_0

    .line 12287
    :cond_2
    new-instance v1, Ljava/lang/IllegalArgumentException;

    const-string v3, "Unable to determine caller package name"

    invoke-direct {v1, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .end local v0    # "pm":Landroid/content/pm/IPackageManager;
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "record":Lcom/android/server/am/ProcessRecord;
    .end local p2    # "callerPackage":Ljava/lang/String;
    .end local p3    # "uid":I
    throw v1

    .line 12292
    .end local v2    # "packageNames":[Ljava/lang/String;
    .restart local v0    # "pm":Landroid/content/pm/IPackageManager;
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "record":Lcom/android/server/am/ProcessRecord;
    .restart local p2    # "callerPackage":Ljava/lang/String;
    .restart local p3    # "uid":I
    :cond_3
    :goto_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/appop/AppOpsService;

    invoke-virtual {v1, p3, p2}, Lcom/android/server/appop/AppOpsService;->checkPackage(ILjava/lang/String;)I

    .line 12293
    invoke-static {p3}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v1

    invoke-interface {v0, p2, v1}, Landroid/content/pm/IPackageManager;->isInstantApp(Ljava/lang/String;I)Z

    move-result v1
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    return v1

    .line 12294
    :catch_0
    move-exception v1

    .line 12295
    .local v1, "e":Landroid/os/RemoteException;
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Error looking up if "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v3, " is an instant app."

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    const-string v3, "ActivityManager"

    invoke-static {v3, v2, v1}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 12296
    const/4 v2, 0x1

    return v2
.end method

.method private isOnOffloadQueue(I)Z
    .locals 1
    .param p1, "flags"    # I

    .line 17098
    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mEnableOffloadQueue:Z

    if-eqz v0, :cond_0

    const/high16 v0, -0x80000000

    and-int/2addr v0, p1

    if-eqz v0, :cond_0

    const/4 v0, 0x1

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    :goto_0
    return v0
.end method

.method private killProcessesBelowAdj(ILjava/lang/String;)Z
    .locals 10
    .param p1, "belowAdj"    # I
    .param p2, "reason"    # Ljava/lang/String;

    .line 7237
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    const/16 v1, 0x3e8

    if-ne v0, v1, :cond_3

    .line 7241
    const/4 v0, 0x0

    .line 7242
    .local v0, "killed":Z
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 7243
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_2

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 7244
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    monitor-enter v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 7245
    :try_start_2
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-virtual {v3}, Lcom/android/server/am/ActivityManagerService$PidMap;->size()I

    move-result v3

    .line 7246
    .local v3, "size":I
    const/4 v4, 0x0

    .local v4, "i":I
    :goto_0
    if-ge v4, v3, :cond_2

    .line 7247
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-virtual {v5, v4}, Lcom/android/server/am/ActivityManagerService$PidMap;->keyAt(I)I

    move-result v5

    .line 7248
    .local v5, "pid":I
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-virtual {v6, v4}, Lcom/android/server/am/ActivityManagerService$PidMap;->valueAt(I)Lcom/android/server/am/ProcessRecord;

    move-result-object v6

    .line 7249
    .local v6, "proc":Lcom/android/server/am/ProcessRecord;
    if-nez v6, :cond_0

    goto :goto_1

    .line 7251
    :cond_0
    iget-object v7, v6, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    invoke-virtual {v7}, Lcom/android/server/am/ProcessStateRecord;->getSetAdj()I

    move-result v7

    .line 7252
    .local v7, "adj":I
    if-le v7, p1, :cond_1

    invoke-virtual {v6}, Lcom/android/server/am/ProcessRecord;->isKilledByAm()Z

    move-result v8

    if-nez v8, :cond_1

    .line 7253
    const/16 v8, 0x8

    const/4 v9, 0x1

    invoke-virtual {v6, p2, v8, v9}, Lcom/android/server/am/ProcessRecord;->killLocked(Ljava/lang/String;IZ)V

    .line 7255
    const/4 v0, 0x1

    .line 7246
    .end local v5    # "pid":I
    .end local v6    # "proc":Lcom/android/server/am/ProcessRecord;
    .end local v7    # "adj":I
    :cond_1
    :goto_1
    add-int/lit8 v4, v4, 0x1

    goto :goto_0

    .line 7258
    .end local v3    # "size":I
    .end local v4    # "i":I
    :cond_2
    monitor-exit v2
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 7259
    :try_start_3
    monitor-exit v1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    :try_start_4
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 7260
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_2

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 7261
    return v0

    .line 7258
    :catchall_0
    move-exception v3

    :try_start_5
    monitor-exit v2
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    .end local v0    # "killed":Z
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "belowAdj":I
    .end local p2    # "reason":Ljava/lang/String;
    :try_start_6
    throw v3

    .line 7259
    .restart local v0    # "killed":Z
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "belowAdj":I
    .restart local p2    # "reason":Ljava/lang/String;
    :catchall_1
    move-exception v2

    monitor-exit v1
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    :try_start_7
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .end local v0    # "killed":Z
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "belowAdj":I
    .end local p2    # "reason":Ljava/lang/String;
    throw v2

    .line 7260
    .restart local v0    # "killed":Z
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "belowAdj":I
    .restart local p2    # "reason":Ljava/lang/String;
    :catchall_2
    move-exception v1

    monitor-exit p0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_2

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v1

    .line 7238
    .end local v0    # "killed":Z
    :cond_3
    new-instance v0, Ljava/lang/SecurityException;

    const-string/jumbo v1, "killProcessesBelowAdj() only available to system"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method static synthetic lambda$appendDropBoxProcessHeaders$11(Ljava/lang/StringBuilder;Landroid/content/pm/IPackageManager;ILjava/lang/String;)V
    .locals 3
    .param p0, "sb"    # Ljava/lang/StringBuilder;
    .param p1, "pm"    # Landroid/content/pm/IPackageManager;
    .param p2, "callingUserId"    # I
    .param p3, "pkg"    # Ljava/lang/String;

    .line 8172
    const-string v0, "Package: "

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 8174
    const/4 v0, 0x0

    :try_start_0
    invoke-interface {p1, p3, v0, p2}, Landroid/content/pm/IPackageManager;->getPackageInfo(Ljava/lang/String;II)Landroid/content/pm/PackageInfo;

    move-result-object v0

    .line 8175
    .local v0, "pi":Landroid/content/pm/PackageInfo;
    if-eqz v0, :cond_0

    .line 8176
    const-string v1, " v"

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Landroid/content/pm/PackageInfo;->getLongVersionCode()J

    move-result-wide v1

    invoke-virtual {p0, v1, v2}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 8177
    iget-object v1, v0, Landroid/content/pm/PackageInfo;->versionName:Ljava/lang/String;

    if-eqz v1, :cond_0

    .line 8178
    const-string v1, " ("

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v1, v0, Landroid/content/pm/PackageInfo;->versionName:Ljava/lang/String;

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, ")"

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 8183
    .end local v0    # "pi":Landroid/content/pm/PackageInfo;
    :cond_0
    goto :goto_0

    .line 8181
    :catch_0
    move-exception v0

    .line 8182
    .local v0, "e":Landroid/os/RemoteException;
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Error getting package info: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    const-string v2, "ActivityManager"

    invoke-static {v2, v1, v0}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 8184
    .end local v0    # "e":Landroid/os/RemoteException;
    :goto_0
    const-string v0, "\n"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 8185
    return-void
.end method

.method static synthetic lambda$checkExcessivePowerUsageLPr$24(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Lcom/android/internal/app/procstats/ProcessStats$ProcessStateHolder;)V
    .locals 8
    .param p0, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p1, "processName"    # Ljava/lang/String;
    .param p2, "holder"    # Lcom/android/internal/app/procstats/ProcessStats$ProcessStateHolder;

    .line 14349
    iget-object v0, p2, Lcom/android/internal/app/procstats/ProcessStats$ProcessStateHolder;->state:Lcom/android/internal/app/procstats/ProcessState;

    .line 14350
    .local v0, "state":Lcom/android/internal/app/procstats/ProcessState;
    iget-object v1, p0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v3, v1, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 14354
    if-eqz v0, :cond_0

    invoke-virtual {v0}, Lcom/android/internal/app/procstats/ProcessState;->getPackage()Ljava/lang/String;

    move-result-object v1

    goto :goto_0

    :cond_0
    iget-object v1, p0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v1, v1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    :goto_0
    move-object v5, v1

    iget-wide v6, p2, Lcom/android/internal/app/procstats/ProcessStats$ProcessStateHolder;->appVersion:J

    .line 14350
    const/16 v2, 0x10

    move-object v4, p1

    invoke-static/range {v2 .. v7}, Lcom/android/internal/util/FrameworkStatsLog;->write(IILjava/lang/String;Ljava/lang/String;J)V

    .line 14356
    return-void
.end method

.method static synthetic lambda$dumpApplicationMemoryUsage$14(I[Ljava/lang/String;Ljava/util/ArrayList;Lcom/android/internal/os/ProcessCpuTracker$Stats;)V
    .locals 2
    .param p0, "fFindPid"    # I
    .param p1, "innerArgs"    # [Ljava/lang/String;
    .param p2, "nativeProcs"    # Ljava/util/ArrayList;
    .param p3, "st"    # Lcom/android/internal/os/ProcessCpuTracker$Stats;

    .line 10526
    iget v0, p3, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    if-eq v0, p0, :cond_0

    iget-object v0, p3, Lcom/android/internal/os/ProcessCpuTracker$Stats;->baseName:Ljava/lang/String;

    if-eqz v0, :cond_1

    iget-object v0, p3, Lcom/android/internal/os/ProcessCpuTracker$Stats;->baseName:Ljava/lang/String;

    const/4 v1, 0x0

    aget-object v1, p1, v1

    .line 10527
    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 10528
    :cond_0
    invoke-virtual {p2, p3}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 10530
    :cond_1
    return-void
.end method

.method static synthetic lambda$dumpApplicationMemoryUsage$15(Lcom/android/server/am/ProcessRecord;JJJIJJLcom/android/internal/app/procstats/ProcessStats$ProcessStateHolder;)V
    .locals 18
    .param p0, "r"    # Lcom/android/server/am/ProcessRecord;
    .param p1, "myTotalPss"    # J
    .param p3, "myTotalUss"    # J
    .param p5, "myTotalRss"    # J
    .param p7, "reportType"    # I
    .param p8, "endTime"    # J
    .param p10, "startTime"    # J
    .param p12, "holder"    # Lcom/android/internal/app/procstats/ProcessStats$ProcessStateHolder;

    .line 10705
    move-object/from16 v0, p12

    move-object/from16 v1, p0

    iget-object v2, v1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v4, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    iget-object v2, v0, Lcom/android/internal/app/procstats/ProcessStats$ProcessStateHolder;->state:Lcom/android/internal/app/procstats/ProcessState;

    .line 10707
    invoke-virtual {v2}, Lcom/android/internal/app/procstats/ProcessState;->getName()Ljava/lang/String;

    move-result-object v5

    iget-object v2, v0, Lcom/android/internal/app/procstats/ProcessStats$ProcessStateHolder;->state:Lcom/android/internal/app/procstats/ProcessState;

    .line 10708
    invoke-virtual {v2}, Lcom/android/internal/app/procstats/ProcessState;->getPackage()Ljava/lang/String;

    move-result-object v6

    sub-long v14, p8, p10

    iget-wide v11, v0, Lcom/android/internal/app/procstats/ProcessStats$ProcessStateHolder;->appVersion:J

    .line 10705
    const/16 v3, 0x12

    move-wide/from16 v7, p1

    move-wide/from16 v9, p3

    move-wide/from16 v16, v11

    move-wide/from16 v11, p5

    move/from16 v13, p7

    invoke-static/range {v3 .. v17}, Lcom/android/internal/util/FrameworkStatsLog;->write(IILjava/lang/String;Ljava/lang/String;JJJIJJ)V

    .line 10712
    return-void
.end method

.method static synthetic lambda$dumpApplicationMemoryUsage$16(Landroid/util/SparseArray;[Landroid/os/Debug$MemoryInfo;ZLcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;[J[J[JLjava/util/ArrayList;[J[J[J[J[J[J[J[J[Ljava/util/ArrayList;[JLcom/android/internal/os/ProcessCpuTracker$Stats;)V
    .locals 34
    .param p0, "procMemsMap"    # Landroid/util/SparseArray;
    .param p1, "memInfos"    # [Landroid/os/Debug$MemoryInfo;
    .param p2, "brief"    # Z
    .param p3, "opts"    # Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;
    .param p4, "tmpLong"    # [J
    .param p5, "memtrackTmp"    # [J
    .param p6, "ss"    # [J
    .param p7, "procMems"    # Ljava/util/ArrayList;
    .param p8, "dalvikSubitemPss"    # [J
    .param p9, "dalvikSubitemSwapPss"    # [J
    .param p10, "dalvikSubitemRss"    # [J
    .param p11, "miscPss"    # [J
    .param p12, "miscSwapPss"    # [J
    .param p13, "miscRss"    # [J
    .param p14, "oomPss"    # [J
    .param p15, "oomSwapPss"    # [J
    .param p16, "oomProcs"    # [Ljava/util/ArrayList;
    .param p17, "oomRss"    # [J
    .param p18, "st"    # Lcom/android/internal/os/ProcessCpuTracker$Stats;

    .line 10784
    move-object/from16 v0, p4

    move-object/from16 v1, p5

    move-object/from16 v2, p8

    move-object/from16 v3, p18

    iget-wide v4, v3, Lcom/android/internal/os/ProcessCpuTracker$Stats;->vsize:J

    const-wide/16 v6, 0x0

    cmp-long v4, v4, v6

    if-lez v4, :cond_8

    iget v4, v3, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    move-object/from16 v5, p0

    invoke-virtual {v5, v4}, Landroid/util/SparseArray;->indexOfKey(I)I

    move-result v4

    if-gez v4, :cond_8

    .line 10785
    const-wide/16 v8, 0x0

    .line 10786
    .local v8, "memtrackGraphics":J
    const-wide/16 v10, 0x0

    .line 10787
    .local v10, "memtrackGl":J
    const/4 v4, 0x0

    aget-object v12, p1, v4

    if-nez v12, :cond_0

    .line 10788
    new-instance v12, Landroid/os/Debug$MemoryInfo;

    invoke-direct {v12}, Landroid/os/Debug$MemoryInfo;-><init>()V

    aput-object v12, p1, v4

    .line 10790
    :cond_0
    aget-object v12, p1, v4

    .line 10791
    .local v12, "info":Landroid/os/Debug$MemoryInfo;
    const/16 v13, 0xe

    if-nez p2, :cond_2

    move-object/from16 v15, p3

    iget-boolean v14, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->oomOnly:Z

    if-nez v14, :cond_3

    .line 10792
    iget v6, v3, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    invoke-static {v6, v12}, Landroid/os/Debug;->getMemoryInfo(ILandroid/os/Debug$MemoryInfo;)Z

    move-result v6

    if-nez v6, :cond_1

    .line 10793
    return-void

    .line 10795
    :cond_1
    invoke-virtual {v12, v13}, Landroid/os/Debug$MemoryInfo;->getOtherPrivate(I)I

    move-result v6

    int-to-long v6, v6

    .line 10796
    .end local v8    # "memtrackGraphics":J
    .local v6, "memtrackGraphics":J
    const/16 v8, 0xf

    invoke-virtual {v12, v8}, Landroid/os/Debug$MemoryInfo;->getOtherPrivate(I)I

    move-result v8

    int-to-long v8, v8

    move-wide v4, v8

    move-wide v8, v6

    .end local v10    # "memtrackGl":J
    .local v8, "memtrackGl":J
    goto :goto_0

    .line 10791
    .end local v6    # "memtrackGraphics":J
    .local v8, "memtrackGraphics":J
    .restart local v10    # "memtrackGl":J
    :cond_2
    move-object/from16 v15, p3

    .line 10798
    :cond_3
    iget v14, v3, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    invoke-static {v14, v0, v1}, Landroid/os/Debug;->getPss(I[J[J)J

    move-result-wide v13

    .line 10799
    .local v13, "pss":J
    cmp-long v6, v13, v6

    if-nez v6, :cond_4

    .line 10800
    return-void

    .line 10802
    :cond_4
    long-to-int v6, v13

    iput v6, v12, Landroid/os/Debug$MemoryInfo;->nativePss:I

    .line 10803
    aget-wide v6, v0, v4

    long-to-int v6, v6

    iput v6, v12, Landroid/os/Debug$MemoryInfo;->nativePrivateDirty:I

    .line 10804
    const/4 v6, 0x2

    aget-wide v4, v0, v6

    long-to-int v4, v4

    iput v4, v12, Landroid/os/Debug$MemoryInfo;->nativeRss:I

    .line 10805
    const/4 v4, 0x1

    aget-wide v8, v1, v4

    .line 10806
    aget-wide v4, v1, v6

    .line 10809
    .end local v10    # "memtrackGl":J
    .end local v13    # "pss":J
    .local v4, "memtrackGl":J
    :goto_0
    invoke-virtual {v12}, Landroid/os/Debug$MemoryInfo;->getTotalPss()I

    move-result v6

    int-to-long v10, v6

    .line 10810
    .local v10, "myTotalPss":J
    invoke-virtual {v12}, Landroid/os/Debug$MemoryInfo;->getTotalSwappedOutPss()I

    move-result v6

    int-to-long v13, v6

    .line 10811
    .local v13, "myTotalSwapPss":J
    invoke-virtual {v12}, Landroid/os/Debug$MemoryInfo;->getTotalRss()I

    move-result v6

    move-wide/from16 v30, v8

    .end local v8    # "memtrackGraphics":J
    .local v30, "memtrackGraphics":J
    int-to-long v7, v6

    .line 10812
    .local v7, "myTotalRss":J
    const/16 v6, 0x9

    aget-wide v19, p6, v6

    add-long v19, v19, v10

    aput-wide v19, p6, v6

    .line 10813
    const/16 v6, 0xa

    aget-wide v19, p6, v6

    add-long v19, v19, v13

    aput-wide v19, p6, v6

    .line 10814
    const/16 v6, 0xb

    aget-wide v19, p6, v6

    add-long v19, v19, v7

    aput-wide v19, p6, v6

    .line 10815
    const/16 v6, 0xc

    aget-wide v19, p6, v6

    add-long v19, v19, v10

    aput-wide v19, p6, v6

    .line 10816
    const/16 v6, 0xd

    aget-wide v19, p6, v6

    add-long v19, v19, v30

    aput-wide v19, p6, v6

    .line 10817
    const/16 v6, 0xe

    aget-wide v18, p6, v6

    add-long v18, v18, v4

    aput-wide v18, p6, v6

    .line 10819
    new-instance v6, Lcom/android/server/am/ActivityManagerService$MemItem;

    new-instance v9, Ljava/lang/StringBuilder;

    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V

    iget-object v0, v3, Lcom/android/internal/os/ProcessCpuTracker$Stats;->name:Ljava/lang/String;

    invoke-virtual {v9, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, " (pid "

    invoke-virtual {v9, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v0, v3, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    invoke-virtual {v9, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v0, ")"

    invoke-virtual {v9, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v20

    iget-object v0, v3, Lcom/android/internal/os/ProcessCpuTracker$Stats;->name:Ljava/lang/String;

    .line 10820
    invoke-virtual {v12}, Landroid/os/Debug$MemoryInfo;->getSummaryTotalSwapPss()I

    move-result v9

    move-wide/from16 v32, v4

    .end local v4    # "memtrackGl":J
    .local v32, "memtrackGl":J
    int-to-long v4, v9

    iget v9, v3, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    const/16 v29, 0x0

    move-object/from16 v19, v6

    move-object/from16 v21, v0

    move-wide/from16 v22, v10

    move-wide/from16 v24, v4

    move-wide/from16 v26, v7

    move/from16 v28, v9

    invoke-direct/range {v19 .. v29}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JJJIZ)V

    move-object v0, v6

    .line 10822
    .local v0, "pssItem":Lcom/android/server/am/ActivityManagerService$MemItem;
    move-object/from16 v4, p7

    invoke-virtual {v4, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 10824
    const/4 v5, 0x0

    aget-wide v18, p6, v5

    iget v6, v12, Landroid/os/Debug$MemoryInfo;->nativePss:I

    int-to-long v3, v6

    add-long v18, v18, v3

    aput-wide v18, p6, v5

    .line 10825
    const/4 v4, 0x1

    aget-wide v5, p6, v4

    iget v9, v12, Landroid/os/Debug$MemoryInfo;->nativeSwappedOutPss:I

    move-wide/from16 v18, v7

    .end local v7    # "myTotalRss":J
    .local v18, "myTotalRss":J
    int-to-long v7, v9

    add-long/2addr v5, v7

    aput-wide v5, p6, v4

    .line 10826
    const/4 v4, 0x2

    aget-wide v5, p6, v4

    iget v7, v12, Landroid/os/Debug$MemoryInfo;->nativeRss:I

    int-to-long v7, v7

    add-long/2addr v5, v7

    aput-wide v5, p6, v4

    .line 10827
    const/4 v4, 0x3

    aget-wide v5, p6, v4

    iget v7, v12, Landroid/os/Debug$MemoryInfo;->dalvikPss:I

    int-to-long v7, v7

    add-long/2addr v5, v7

    aput-wide v5, p6, v4

    .line 10828
    const/4 v4, 0x4

    aget-wide v5, p6, v4

    iget v7, v12, Landroid/os/Debug$MemoryInfo;->dalvikSwappedOutPss:I

    int-to-long v7, v7

    add-long/2addr v5, v7

    aput-wide v5, p6, v4

    .line 10829
    const/4 v4, 0x5

    aget-wide v5, p6, v4

    iget v7, v12, Landroid/os/Debug$MemoryInfo;->dalvikRss:I

    int-to-long v7, v7

    add-long/2addr v5, v7

    aput-wide v5, p6, v4

    .line 10830
    const/4 v4, 0x0

    .local v4, "j":I
    :goto_1
    array-length v5, v2

    if-ge v4, v5, :cond_5

    .line 10831
    aget-wide v5, v2, v4

    add-int/lit8 v7, v4, 0x11

    invoke-virtual {v12, v7}, Landroid/os/Debug$MemoryInfo;->getOtherPss(I)I

    move-result v7

    int-to-long v7, v7

    add-long/2addr v5, v7

    aput-wide v5, v2, v4

    .line 10833
    aget-wide v5, p9, v4

    add-int/lit8 v7, v4, 0x11

    .line 10834
    invoke-virtual {v12, v7}, Landroid/os/Debug$MemoryInfo;->getOtherSwappedOutPss(I)I

    move-result v7

    int-to-long v7, v7

    add-long/2addr v5, v7

    aput-wide v5, p9, v4

    .line 10835
    aget-wide v5, p10, v4

    add-int/lit8 v7, v4, 0x11

    invoke-virtual {v12, v7}, Landroid/os/Debug$MemoryInfo;->getOtherRss(I)I

    move-result v7

    int-to-long v7, v7

    add-long/2addr v5, v7

    aput-wide v5, p10, v4

    .line 10830
    add-int/lit8 v4, v4, 0x1

    goto :goto_1

    .line 10838
    .end local v4    # "j":I
    :cond_5
    const/4 v4, 0x6

    aget-wide v5, p6, v4

    iget v7, v12, Landroid/os/Debug$MemoryInfo;->otherPss:I

    int-to-long v7, v7

    add-long/2addr v5, v7

    aput-wide v5, p6, v4

    .line 10839
    const/4 v5, 0x7

    aget-wide v6, p6, v5

    iget v8, v12, Landroid/os/Debug$MemoryInfo;->otherSwappedOutPss:I

    int-to-long v8, v8

    add-long/2addr v6, v8

    aput-wide v6, p6, v5

    .line 10840
    const/16 v6, 0x8

    aget-wide v7, p6, v6

    iget v9, v12, Landroid/os/Debug$MemoryInfo;->otherRss:I

    int-to-long v3, v9

    add-long/2addr v7, v3

    aput-wide v7, p6, v6

    .line 10841
    const/4 v3, 0x0

    .local v3, "j":I
    :goto_2
    const/16 v4, 0x11

    if-ge v3, v4, :cond_6

    .line 10842
    invoke-virtual {v12, v3}, Landroid/os/Debug$MemoryInfo;->getOtherPss(I)I

    move-result v4

    int-to-long v7, v4

    .line 10843
    .local v7, "mem":J
    aget-wide v20, p11, v3

    add-long v20, v20, v7

    aput-wide v20, p11, v3

    .line 10844
    const/4 v4, 0x6

    aget-wide v16, p6, v4

    sub-long v16, v16, v7

    aput-wide v16, p6, v4

    .line 10845
    invoke-virtual {v12, v3}, Landroid/os/Debug$MemoryInfo;->getOtherSwappedOutPss(I)I

    move-result v9

    int-to-long v7, v9

    .line 10846
    aget-wide v16, p12, v3

    add-long v16, v16, v7

    aput-wide v16, p12, v3

    .line 10847
    aget-wide v16, p6, v5

    sub-long v16, v16, v7

    aput-wide v16, p6, v5

    .line 10848
    invoke-virtual {v12, v3}, Landroid/os/Debug$MemoryInfo;->getOtherRss(I)I

    move-result v9

    int-to-long v7, v9

    .line 10849
    aget-wide v16, p13, v3

    add-long v16, v16, v7

    aput-wide v16, p13, v3

    .line 10850
    aget-wide v16, p6, v6

    sub-long v16, v16, v7

    aput-wide v16, p6, v6

    .line 10841
    .end local v7    # "mem":J
    add-int/lit8 v3, v3, 0x1

    goto :goto_2

    .line 10852
    .end local v3    # "j":I
    :cond_6
    const/4 v3, 0x0

    aget-wide v4, p14, v3

    add-long/2addr v4, v10

    aput-wide v4, p14, v3

    .line 10853
    aget-wide v4, p15, v3

    add-long/2addr v4, v13

    aput-wide v4, p15, v3

    .line 10854
    aget-object v4, p16, v3

    if-nez v4, :cond_7

    .line 10855
    new-instance v4, Ljava/util/ArrayList;

    invoke-direct {v4}, Ljava/util/ArrayList;-><init>()V

    aput-object v4, p16, v3

    .line 10857
    :cond_7
    aget-object v4, p16, v3

    invoke-virtual {v4, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 10858
    aget-wide v4, p17, v3

    add-long v4, v4, v18

    aput-wide v4, p17, v3

    goto :goto_3

    .line 10784
    .end local v0    # "pssItem":Lcom/android/server/am/ActivityManagerService$MemItem;
    .end local v10    # "myTotalPss":J
    .end local v12    # "info":Landroid/os/Debug$MemoryInfo;
    .end local v13    # "myTotalSwapPss":J
    .end local v18    # "myTotalRss":J
    .end local v30    # "memtrackGraphics":J
    .end local v32    # "memtrackGl":J
    :cond_8
    move-object/from16 v15, p3

    .line 10860
    :goto_3
    return-void
.end method

.method static synthetic lambda$dumpApplicationMemoryUsage$17(I[Ljava/lang/String;Ljava/util/ArrayList;Lcom/android/internal/os/ProcessCpuTracker$Stats;)V
    .locals 2
    .param p0, "fFindPid"    # I
    .param p1, "innerArgs"    # [Ljava/lang/String;
    .param p2, "nativeProcs"    # Ljava/util/ArrayList;
    .param p3, "st"    # Lcom/android/internal/os/ProcessCpuTracker$Stats;

    .line 11175
    iget v0, p3, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    if-eq v0, p0, :cond_0

    iget-object v0, p3, Lcom/android/internal/os/ProcessCpuTracker$Stats;->baseName:Ljava/lang/String;

    if-eqz v0, :cond_1

    iget-object v0, p3, Lcom/android/internal/os/ProcessCpuTracker$Stats;->baseName:Ljava/lang/String;

    const/4 v1, 0x0

    aget-object v1, p1, v1

    .line 11176
    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 11177
    :cond_0
    invoke-virtual {p2, p3}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 11179
    :cond_1
    return-void
.end method

.method static synthetic lambda$dumpApplicationMemoryUsage$18(Lcom/android/server/am/ProcessRecord;JJJIJJLcom/android/internal/app/procstats/ProcessStats$ProcessStateHolder;)V
    .locals 18
    .param p0, "r"    # Lcom/android/server/am/ProcessRecord;
    .param p1, "myTotalPss"    # J
    .param p3, "myTotalUss"    # J
    .param p5, "myTotalRss"    # J
    .param p7, "reportType"    # I
    .param p8, "endTime"    # J
    .param p10, "startTime"    # J
    .param p12, "holder"    # Lcom/android/internal/app/procstats/ProcessStats$ProcessStateHolder;

    .line 11348
    move-object/from16 v0, p12

    move-object/from16 v1, p0

    iget-object v2, v1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v4, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    iget-object v2, v0, Lcom/android/internal/app/procstats/ProcessStats$ProcessStateHolder;->state:Lcom/android/internal/app/procstats/ProcessState;

    .line 11350
    invoke-virtual {v2}, Lcom/android/internal/app/procstats/ProcessState;->getName()Ljava/lang/String;

    move-result-object v5

    iget-object v2, v0, Lcom/android/internal/app/procstats/ProcessStats$ProcessStateHolder;->state:Lcom/android/internal/app/procstats/ProcessState;

    .line 11351
    invoke-virtual {v2}, Lcom/android/internal/app/procstats/ProcessState;->getPackage()Ljava/lang/String;

    move-result-object v6

    sub-long v14, p8, p10

    iget-wide v11, v0, Lcom/android/internal/app/procstats/ProcessStats$ProcessStateHolder;->appVersion:J

    .line 11348
    const/16 v3, 0x12

    move-wide/from16 v7, p1

    move-wide/from16 v9, p3

    move-wide/from16 v16, v11

    move-wide/from16 v11, p5

    move/from16 v13, p7

    invoke-static/range {v3 .. v17}, Lcom/android/internal/util/FrameworkStatsLog;->write(IILjava/lang/String;Ljava/lang/String;JJJIJJ)V

    .line 11354
    return-void
.end method

.method static synthetic lambda$dumpApplicationMemoryUsage$19(Landroid/util/SparseArray;[Landroid/os/Debug$MemoryInfo;ZLcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;[J[JLjava/util/ArrayList;[J[J[J[J[J[J[J[J[Ljava/util/ArrayList;[JLcom/android/internal/os/ProcessCpuTracker$Stats;)V
    .locals 26
    .param p0, "procMemsMap"    # Landroid/util/SparseArray;
    .param p1, "memInfos"    # [Landroid/os/Debug$MemoryInfo;
    .param p2, "brief"    # Z
    .param p3, "opts"    # Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;
    .param p4, "tmpLong"    # [J
    .param p5, "ss"    # [J
    .param p6, "procMems"    # Ljava/util/ArrayList;
    .param p7, "dalvikSubitemPss"    # [J
    .param p8, "dalvikSubitemSwapPss"    # [J
    .param p9, "dalvikSubitemRss"    # [J
    .param p10, "miscPss"    # [J
    .param p11, "miscSwapPss"    # [J
    .param p12, "miscRss"    # [J
    .param p13, "oomPss"    # [J
    .param p14, "oomSwapPss"    # [J
    .param p15, "oomProcs"    # [Ljava/util/ArrayList;
    .param p16, "oomRss"    # [J
    .param p17, "st"    # Lcom/android/internal/os/ProcessCpuTracker$Stats;

    .line 11423
    move-object/from16 v0, p4

    move-object/from16 v1, p7

    move-object/from16 v2, p17

    iget-wide v3, v2, Lcom/android/internal/os/ProcessCpuTracker$Stats;->vsize:J

    const-wide/16 v5, 0x0

    cmp-long v3, v3, v5

    if-lez v3, :cond_8

    iget v3, v2, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    move-object/from16 v4, p0

    invoke-virtual {v4, v3}, Landroid/util/SparseArray;->indexOfKey(I)I

    move-result v3

    if-gez v3, :cond_8

    .line 11424
    const/4 v3, 0x0

    aget-object v7, p1, v3

    if-nez v7, :cond_0

    .line 11425
    new-instance v7, Landroid/os/Debug$MemoryInfo;

    invoke-direct {v7}, Landroid/os/Debug$MemoryInfo;-><init>()V

    aput-object v7, p1, v3

    .line 11427
    :cond_0
    aget-object v7, p1, v3

    .line 11428
    .local v7, "info":Landroid/os/Debug$MemoryInfo;
    const/4 v8, 0x2

    if-nez p2, :cond_1

    move-object/from16 v9, p3

    iget-boolean v10, v9, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->oomOnly:Z

    if-nez v10, :cond_2

    .line 11429
    iget v5, v2, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    invoke-static {v5, v7}, Landroid/os/Debug;->getMemoryInfo(ILandroid/os/Debug$MemoryInfo;)Z

    move-result v5

    if-nez v5, :cond_4

    .line 11430
    return-void

    .line 11428
    :cond_1
    move-object/from16 v9, p3

    .line 11433
    :cond_2
    iget v10, v2, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    const/4 v11, 0x0

    invoke-static {v10, v0, v11}, Landroid/os/Debug;->getPss(I[J[J)J

    move-result-wide v10

    .line 11434
    .local v10, "pss":J
    cmp-long v5, v10, v5

    if-nez v5, :cond_3

    .line 11435
    return-void

    .line 11437
    :cond_3
    long-to-int v5, v10

    iput v5, v7, Landroid/os/Debug$MemoryInfo;->nativePss:I

    .line 11438
    aget-wide v5, v0, v3

    long-to-int v5, v5

    iput v5, v7, Landroid/os/Debug$MemoryInfo;->nativePrivateDirty:I

    .line 11439
    aget-wide v5, v0, v8

    long-to-int v5, v5

    iput v5, v7, Landroid/os/Debug$MemoryInfo;->nativeRss:I

    .line 11442
    .end local v10    # "pss":J
    :cond_4
    invoke-virtual {v7}, Landroid/os/Debug$MemoryInfo;->getTotalPss()I

    move-result v5

    int-to-long v5, v5

    .line 11443
    .local v5, "myTotalPss":J
    invoke-virtual {v7}, Landroid/os/Debug$MemoryInfo;->getTotalSwappedOutPss()I

    move-result v10

    int-to-long v13, v10

    .line 11444
    .local v13, "myTotalSwapPss":J
    invoke-virtual {v7}, Landroid/os/Debug$MemoryInfo;->getTotalRss()I

    move-result v10

    int-to-long v11, v10

    .line 11445
    .local v11, "myTotalRss":J
    const/16 v10, 0x9

    aget-wide v15, p5, v10

    add-long/2addr v15, v5

    aput-wide v15, p5, v10

    .line 11446
    const/16 v10, 0xa

    aget-wide v15, p5, v10

    add-long/2addr v15, v13

    aput-wide v15, p5, v10

    .line 11447
    const/16 v10, 0xb

    aget-wide v15, p5, v10

    add-long/2addr v15, v11

    aput-wide v15, p5, v10

    .line 11448
    const/16 v10, 0xc

    aget-wide v15, p5, v10

    add-long/2addr v15, v5

    aput-wide v15, p5, v10

    .line 11450
    new-instance v21, Lcom/android/server/am/ActivityManagerService$MemItem;

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    iget-object v15, v2, Lcom/android/internal/os/ProcessCpuTracker$Stats;->name:Ljava/lang/String;

    invoke-virtual {v10, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v15, " (pid "

    invoke-virtual {v10, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v15, v2, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    invoke-virtual {v10, v15}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v15, ")"

    invoke-virtual {v10, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v15

    iget-object v10, v2, Lcom/android/internal/os/ProcessCpuTracker$Stats;->name:Ljava/lang/String;

    .line 11451
    invoke-virtual {v7}, Landroid/os/Debug$MemoryInfo;->getSummaryTotalSwapPss()I

    move-result v8

    int-to-long v3, v8

    iget v8, v2, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    const/16 v20, 0x0

    move-object/from16 v16, v10

    move-object/from16 v10, v21

    move-wide/from16 v22, v11

    .end local v11    # "myTotalRss":J
    .local v22, "myTotalRss":J
    move-object v11, v15

    move-object/from16 v12, v16

    move-wide/from16 v24, v13

    .end local v13    # "myTotalSwapPss":J
    .local v24, "myTotalSwapPss":J
    move-wide v13, v5

    move-wide v15, v3

    move-wide/from16 v17, v22

    move/from16 v19, v8

    invoke-direct/range {v10 .. v20}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JJJIZ)V

    move-object/from16 v3, v21

    .line 11453
    .local v3, "pssItem":Lcom/android/server/am/ActivityManagerService$MemItem;
    move-object/from16 v4, p6

    invoke-virtual {v4, v3}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 11455
    const/4 v8, 0x0

    aget-wide v10, p5, v8

    iget v12, v7, Landroid/os/Debug$MemoryInfo;->nativePss:I

    int-to-long v12, v12

    add-long/2addr v10, v12

    aput-wide v10, p5, v8

    .line 11456
    const/4 v8, 0x1

    aget-wide v10, p5, v8

    iget v12, v7, Landroid/os/Debug$MemoryInfo;->nativeSwappedOutPss:I

    int-to-long v12, v12

    add-long/2addr v10, v12

    aput-wide v10, p5, v8

    .line 11457
    const/4 v8, 0x2

    aget-wide v10, p5, v8

    iget v12, v7, Landroid/os/Debug$MemoryInfo;->nativeRss:I

    int-to-long v12, v12

    add-long/2addr v10, v12

    aput-wide v10, p5, v8

    .line 11458
    const/4 v8, 0x3

    aget-wide v10, p5, v8

    iget v12, v7, Landroid/os/Debug$MemoryInfo;->dalvikPss:I

    int-to-long v12, v12

    add-long/2addr v10, v12

    aput-wide v10, p5, v8

    .line 11459
    const/4 v8, 0x4

    aget-wide v10, p5, v8

    iget v12, v7, Landroid/os/Debug$MemoryInfo;->dalvikSwappedOutPss:I

    int-to-long v12, v12

    add-long/2addr v10, v12

    aput-wide v10, p5, v8

    .line 11460
    const/4 v8, 0x5

    aget-wide v10, p5, v8

    iget v12, v7, Landroid/os/Debug$MemoryInfo;->dalvikRss:I

    int-to-long v12, v12

    add-long/2addr v10, v12

    aput-wide v10, p5, v8

    .line 11461
    const/4 v8, 0x0

    .local v8, "j":I
    :goto_0
    array-length v10, v1

    if-ge v8, v10, :cond_5

    .line 11462
    aget-wide v10, v1, v8

    add-int/lit8 v12, v8, 0x11

    invoke-virtual {v7, v12}, Landroid/os/Debug$MemoryInfo;->getOtherPss(I)I

    move-result v12

    int-to-long v12, v12

    add-long/2addr v10, v12

    aput-wide v10, v1, v8

    .line 11464
    aget-wide v10, p8, v8

    add-int/lit8 v12, v8, 0x11

    .line 11465
    invoke-virtual {v7, v12}, Landroid/os/Debug$MemoryInfo;->getOtherSwappedOutPss(I)I

    move-result v12

    int-to-long v12, v12

    add-long/2addr v10, v12

    aput-wide v10, p8, v8

    .line 11466
    aget-wide v10, p9, v8

    add-int/lit8 v12, v8, 0x11

    invoke-virtual {v7, v12}, Landroid/os/Debug$MemoryInfo;->getOtherRss(I)I

    move-result v12

    int-to-long v12, v12

    add-long/2addr v10, v12

    aput-wide v10, p9, v8

    .line 11461
    add-int/lit8 v8, v8, 0x1

    goto :goto_0

    .line 11469
    .end local v8    # "j":I
    :cond_5
    const/4 v8, 0x6

    aget-wide v10, p5, v8

    iget v12, v7, Landroid/os/Debug$MemoryInfo;->otherPss:I

    int-to-long v12, v12

    add-long/2addr v10, v12

    aput-wide v10, p5, v8

    .line 11470
    const/4 v10, 0x7

    aget-wide v11, p5, v10

    iget v13, v7, Landroid/os/Debug$MemoryInfo;->otherSwappedOutPss:I

    int-to-long v13, v13

    add-long/2addr v11, v13

    aput-wide v11, p5, v10

    .line 11471
    const/16 v11, 0x8

    aget-wide v12, p5, v11

    iget v14, v7, Landroid/os/Debug$MemoryInfo;->otherRss:I

    int-to-long v14, v14

    add-long/2addr v12, v14

    aput-wide v12, p5, v11

    .line 11472
    const/4 v12, 0x0

    .local v12, "j":I
    :goto_1
    const/16 v13, 0x11

    if-ge v12, v13, :cond_6

    .line 11473
    invoke-virtual {v7, v12}, Landroid/os/Debug$MemoryInfo;->getOtherPss(I)I

    move-result v13

    int-to-long v13, v13

    .line 11474
    .local v13, "mem":J
    aget-wide v15, p10, v12

    add-long/2addr v15, v13

    aput-wide v15, p10, v12

    .line 11475
    aget-wide v15, p5, v8

    sub-long/2addr v15, v13

    aput-wide v15, p5, v8

    .line 11476
    invoke-virtual {v7, v12}, Landroid/os/Debug$MemoryInfo;->getOtherSwappedOutPss(I)I

    move-result v15

    int-to-long v13, v15

    .line 11477
    aget-wide v15, p11, v12

    add-long/2addr v15, v13

    aput-wide v15, p11, v12

    .line 11478
    aget-wide v15, p5, v10

    sub-long/2addr v15, v13

    aput-wide v15, p5, v10

    .line 11479
    invoke-virtual {v7, v12}, Landroid/os/Debug$MemoryInfo;->getOtherRss(I)I

    move-result v15

    int-to-long v13, v15

    .line 11480
    aget-wide v15, p12, v12

    add-long/2addr v15, v13

    aput-wide v15, p12, v12

    .line 11481
    aget-wide v15, p5, v11

    sub-long/2addr v15, v13

    aput-wide v15, p5, v11

    .line 11472
    .end local v13    # "mem":J
    add-int/lit8 v12, v12, 0x1

    goto :goto_1

    .line 11483
    .end local v12    # "j":I
    :cond_6
    const/4 v8, 0x0

    aget-wide v10, p13, v8

    add-long/2addr v10, v5

    aput-wide v10, p13, v8

    .line 11484
    aget-wide v10, p14, v8

    add-long v10, v10, v24

    aput-wide v10, p14, v8

    .line 11485
    aget-object v10, p15, v8

    if-nez v10, :cond_7

    .line 11486
    new-instance v10, Ljava/util/ArrayList;

    invoke-direct {v10}, Ljava/util/ArrayList;-><init>()V

    aput-object v10, p15, v8

    .line 11488
    :cond_7
    aget-object v10, p15, v8

    invoke-virtual {v10, v3}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 11489
    aget-wide v10, p16, v8

    add-long v10, v10, v22

    aput-wide v10, p16, v8

    goto :goto_2

    .line 11423
    .end local v3    # "pssItem":Lcom/android/server/am/ActivityManagerService$MemItem;
    .end local v5    # "myTotalPss":J
    .end local v7    # "info":Landroid/os/Debug$MemoryInfo;
    .end local v22    # "myTotalRss":J
    .end local v24    # "myTotalSwapPss":J
    :cond_8
    move-object/from16 v9, p3

    move-object/from16 v4, p6

    .line 11491
    :goto_2
    return-void
.end method

.method static synthetic lambda$dumpOtherProcessesInfoLSP$13(Ljava/io/PrintWriter;JJLjava/lang/Integer;Landroid/util/Pair;)V
    .locals 4
    .param p0, "pw"    # Ljava/io/PrintWriter;
    .param p1, "currentTimeNow"    # J
    .param p3, "elapsedRealtimeNow"    # J
    .param p5, "uid"    # Ljava/lang/Integer;
    .param p6, "entry"    # Landroid/util/Pair;

    .line 9449
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "    "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p5}, Ljava/lang/Integer;->intValue()I

    move-result v1

    invoke-static {v1}, Landroid/os/UserHandle;->formatUid(I)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, ": "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p0, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 9450
    iget-object v0, p6, Landroid/util/Pair;->second:Ljava/lang/Object;

    check-cast v0, Lcom/android/server/am/ActivityManagerService$FgsTempAllowListItem;

    invoke-virtual {v0, p0}, Lcom/android/server/am/ActivityManagerService$FgsTempAllowListItem;->dump(Ljava/io/PrintWriter;)V

    .line 9451
    const-string v0, " expiration="

    invoke-virtual {p0, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 9454
    sub-long v0, p1, p3

    iget-object v2, p6, Landroid/util/Pair;->first:Ljava/lang/Object;

    check-cast v2, Ljava/lang/Long;

    .line 9455
    invoke-virtual {v2}, Ljava/lang/Long;->longValue()J

    move-result-wide v2

    add-long/2addr v0, v2

    .line 9456
    .local v0, "expirationInCurrentTime":J
    invoke-static {p0, v0, v1, p1, p2}, Landroid/util/TimeUtils;->dumpTimeWithDelta(Ljava/io/PrintWriter;JJ)V

    .line 9457
    invoke-virtual {p0}, Ljava/io/PrintWriter;->println()V

    .line 9458
    return-void
.end method

.method static synthetic lambda$getPackageProcessState$0([ILjava/lang/String;Lcom/android/server/am/ProcessRecord;)V
    .locals 3
    .param p0, "procState"    # [I
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "proc"    # Lcom/android/server/am/ProcessRecord;

    .line 2810
    const/4 v0, 0x0

    aget v1, p0, v0

    iget-object v2, p2, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    invoke-virtual {v2}, Lcom/android/server/am/ProcessStateRecord;->getSetProcState()I

    move-result v2

    if-le v1, v2, :cond_1

    .line 2811
    invoke-virtual {p2}, Lcom/android/server/am/ProcessRecord;->getPkgList()Lcom/android/server/am/PackageList;

    move-result-object v1

    invoke-virtual {v1, p1}, Lcom/android/server/am/PackageList;->containsKey(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_0

    invoke-virtual {p2}, Lcom/android/server/am/ProcessRecord;->getPkgDeps()Landroid/util/ArraySet;

    move-result-object v1

    if-eqz v1, :cond_1

    .line 2812
    invoke-virtual {p2}, Lcom/android/server/am/ProcessRecord;->getPkgDeps()Landroid/util/ArraySet;

    move-result-object v1

    invoke-virtual {v1, p1}, Landroid/util/ArraySet;->contains(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_1

    .line 2813
    :cond_0
    iget-object v1, p2, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    invoke-virtual {v1}, Lcom/android/server/am/ProcessStateRecord;->getSetProcState()I

    move-result v1

    aput v1, p0, v0

    .line 2816
    :cond_1
    return-void
.end method

.method static synthetic lambda$getProcessMemoryInfo$2(Lcom/android/server/am/ProcessRecord;Landroid/os/Debug$MemoryInfo;JLcom/android/internal/app/procstats/ProcessStats$ProcessStateHolder;)V
    .locals 19
    .param p0, "proc"    # Lcom/android/server/am/ProcessRecord;
    .param p1, "mi"    # Landroid/os/Debug$MemoryInfo;
    .param p2, "duration"    # J
    .param p4, "holder"    # Lcom/android/internal/app/procstats/ProcessStats$ProcessStateHolder;

    .line 3888
    move-object/from16 v0, p0

    move-object/from16 v1, p4

    iget-object v2, v1, Lcom/android/internal/app/procstats/ProcessStats$ProcessStateHolder;->state:Lcom/android/internal/app/procstats/ProcessState;

    .line 3889
    .local v2, "state":Lcom/android/internal/app/procstats/ProcessState;
    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v5, v3, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 3891
    if-eqz v2, :cond_0

    invoke-virtual {v2}, Lcom/android/internal/app/procstats/ProcessState;->getName()Ljava/lang/String;

    move-result-object v3

    goto :goto_0

    :cond_0
    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    :goto_0
    move-object v6, v3

    .line 3892
    if-eqz v2, :cond_1

    invoke-virtual {v2}, Lcom/android/internal/app/procstats/ProcessState;->getPackage()Ljava/lang/String;

    move-result-object v3

    goto :goto_1

    :cond_1
    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v3, v3, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    :goto_1
    move-object v7, v3

    .line 3893
    invoke-virtual/range {p1 .. p1}, Landroid/os/Debug$MemoryInfo;->getTotalPss()I

    move-result v3

    int-to-long v8, v3

    .line 3894
    invoke-virtual/range {p1 .. p1}, Landroid/os/Debug$MemoryInfo;->getTotalUss()I

    move-result v3

    int-to-long v10, v3

    .line 3895
    invoke-virtual/range {p1 .. p1}, Landroid/os/Debug$MemoryInfo;->getTotalRss()I

    move-result v3

    int-to-long v12, v3

    const/4 v14, 0x4

    iget-wide v3, v1, Lcom/android/internal/app/procstats/ProcessStats$ProcessStateHolder;->appVersion:J

    .line 3889
    const/16 v15, 0x12

    move-wide/from16 v17, v3

    move v4, v15

    move-wide/from16 v15, p2

    invoke-static/range {v4 .. v18}, Lcom/android/internal/util/FrameworkStatsLog;->write(IILjava/lang/String;Ljava/lang/String;JJJIJJ)V

    .line 3899
    return-void
.end method

.method static synthetic lambda$getProcessPss$3(Lcom/android/server/am/ProcessRecord;J[JJLcom/android/internal/app/procstats/ProcessStats$ProcessStateHolder;)V
    .locals 18
    .param p0, "proc"    # Lcom/android/server/am/ProcessRecord;
    .param p1, "pi"    # J
    .param p3, "tmpUss"    # [J
    .param p4, "duration"    # J
    .param p6, "holder"    # Lcom/android/internal/app/procstats/ProcessStats$ProcessStateHolder;

    .line 3947
    move-object/from16 v0, p6

    move-object/from16 v1, p0

    iget-object v2, v1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v4, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    iget-object v2, v0, Lcom/android/internal/app/procstats/ProcessStats$ProcessStateHolder;->state:Lcom/android/internal/app/procstats/ProcessState;

    .line 3949
    invoke-virtual {v2}, Lcom/android/internal/app/procstats/ProcessState;->getName()Ljava/lang/String;

    move-result-object v5

    iget-object v2, v0, Lcom/android/internal/app/procstats/ProcessStats$ProcessStateHolder;->state:Lcom/android/internal/app/procstats/ProcessState;

    .line 3950
    invoke-virtual {v2}, Lcom/android/internal/app/procstats/ProcessState;->getPackage()Ljava/lang/String;

    move-result-object v6

    const/4 v2, 0x0

    aget-wide v9, p3, v2

    const/4 v2, 0x2

    aget-wide v11, p3, v2

    iget-wide v14, v0, Lcom/android/internal/app/procstats/ProcessStats$ProcessStateHolder;->appVersion:J

    .line 3947
    const/16 v3, 0x12

    const/4 v13, 0x3

    move-wide/from16 v7, p1

    move-wide/from16 v16, v14

    move-wide/from16 v14, p4

    invoke-static/range {v3 .. v17}, Lcom/android/internal/util/FrameworkStatsLog;->write(IILjava/lang/String;Ljava/lang/String;JJJIJJ)V

    .line 3957
    return-void
.end method

.method static synthetic lambda$getProcessesInErrorState$12(ZI[Ljava/util/List;Lcom/android/server/am/ProcessRecord;)V
    .locals 7
    .param p0, "allUsers"    # Z
    .param p1, "userId"    # I
    .param p2, "errList"    # [Ljava/util/List;
    .param p3, "app"    # Lcom/android/server/am/ProcessRecord;

    .line 8389
    if-nez p0, :cond_0

    iget v0, p3, Lcom/android/server/am/ProcessRecord;->userId:I

    if-eq v0, p1, :cond_0

    .line 8390
    return-void

    .line 8392
    :cond_0
    iget-object v0, p3, Lcom/android/server/am/ProcessRecord;->mErrorState:Lcom/android/server/am/ProcessErrorStateRecord;

    .line 8393
    .local v0, "errState":Lcom/android/server/am/ProcessErrorStateRecord;
    invoke-virtual {v0}, Lcom/android/server/am/ProcessErrorStateRecord;->isCrashing()Z

    move-result v1

    .line 8394
    .local v1, "crashing":Z
    invoke-virtual {v0}, Lcom/android/server/am/ProcessErrorStateRecord;->isNotResponding()Z

    move-result v2

    .line 8395
    .local v2, "notResponding":Z
    invoke-virtual {p3}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v3

    if-eqz v3, :cond_6

    if-nez v1, :cond_1

    if-eqz v2, :cond_6

    .line 8398
    :cond_1
    const/4 v3, 0x0

    .line 8399
    .local v3, "report":Landroid/app/ActivityManager$ProcessErrorStateInfo;
    if-eqz v1, :cond_2

    .line 8400
    invoke-virtual {v0}, Lcom/android/server/am/ProcessErrorStateRecord;->getCrashingReport()Landroid/app/ActivityManager$ProcessErrorStateInfo;

    move-result-object v3

    goto :goto_0

    .line 8401
    :cond_2
    if-eqz v2, :cond_3

    .line 8402
    invoke-virtual {v0}, Lcom/android/server/am/ProcessErrorStateRecord;->getNotRespondingReport()Landroid/app/ActivityManager$ProcessErrorStateInfo;

    move-result-object v3

    .line 8405
    :cond_3
    :goto_0
    if-eqz v3, :cond_5

    .line 8406
    const/4 v4, 0x0

    aget-object v5, p2, v4

    if-nez v5, :cond_4

    .line 8407
    new-instance v5, Ljava/util/ArrayList;

    const/4 v6, 0x1

    invoke-direct {v5, v6}, Ljava/util/ArrayList;-><init>(I)V

    aput-object v5, p2, v4

    .line 8409
    :cond_4
    aget-object v4, p2, v4

    invoke-interface {v4, v3}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    goto :goto_1

    .line 8411
    :cond_5
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Missing app error report, app = "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v5, p3, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v5, " crashing = "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    const-string v5, " notResponding = "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    const-string v5, "ActivityManager"

    invoke-static {v5, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 8416
    .end local v3    # "report":Landroid/app/ActivityManager$ProcessErrorStateInfo;
    :cond_6
    :goto_1
    return-void
.end method

.method static synthetic lambda$logStrictModeViolationToDropBox$9(Landroid/os/DropBoxManager;Ljava/lang/String;Ljava/lang/String;)V
    .locals 0
    .param p0, "dbox"    # Landroid/os/DropBoxManager;
    .param p1, "dropboxTag"    # Ljava/lang/String;
    .param p2, "res"    # Ljava/lang/String;

    .line 8033
    invoke-virtual {p0, p1, p2}, Landroid/os/DropBoxManager;->addText(Ljava/lang/String;Ljava/lang/String;)V

    .line 8034
    return-void
.end method

.method static synthetic lambda$signalPersistentProcesses$25(ILcom/android/server/am/ProcessRecord;)V
    .locals 1
    .param p0, "sig"    # I
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;

    .line 14861
    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v0

    if-eqz v0, :cond_0

    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->isPersistent()Z

    move-result v0

    if-eqz v0, :cond_0

    .line 14862
    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->getPid()I

    move-result v0

    invoke-static {v0, p0}, Landroid/os/Process;->sendSignal(II)V

    .line 14864
    :cond_0
    return-void
.end method

.method private logStrictModeViolationToDropBox(Lcom/android/server/am/ProcessRecord;Landroid/os/StrictMode$ViolationInfo;)V
    .locals 10
    .param p1, "process"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "info"    # Landroid/os/StrictMode$ViolationInfo;

    .line 7982
    if-nez p2, :cond_0

    .line 7983
    return-void

    .line 7985
    :cond_0
    const/4 v0, 0x0

    if-eqz p1, :cond_2

    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v1, v1, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit16 v1, v1, 0x81

    if-eqz v1, :cond_1

    goto :goto_0

    :cond_1
    move v1, v0

    goto :goto_1

    :cond_2
    :goto_0
    const/4 v1, 0x1

    .line 7988
    .local v1, "isSystemApp":Z
    :goto_1
    if-nez p1, :cond_3

    const-string/jumbo v2, "unknown"

    goto :goto_2

    :cond_3
    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    .line 7989
    .local v2, "processName":Ljava/lang/String;
    :goto_2
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    const-string v4, "dropbox"

    .line 7990
    invoke-virtual {v3, v4}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/os/DropBoxManager;

    .line 7993
    .local v3, "dbox":Landroid/os/DropBoxManager;
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    invoke-static {p1}, Lcom/android/server/am/ActivityManagerService;->processClass(Lcom/android/server/am/ProcessRecord;)Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v5, "_strictmode"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    .line 7994
    .local v4, "dropboxTag":Ljava/lang/String;
    if-eqz v3, :cond_c

    invoke-virtual {v3, v4}, Landroid/os/DropBoxManager;->isTagEnabled(Ljava/lang/String;)Z

    move-result v5

    if-nez v5, :cond_4

    goto/16 :goto_4

    .line 7996
    :cond_4
    new-instance v5, Ljava/lang/StringBuilder;

    const/16 v6, 0x400

    invoke-direct {v5, v6}, Ljava/lang/StringBuilder;-><init>(I)V

    .line 7997
    .local v5, "sb":Ljava/lang/StringBuilder;
    monitor-enter v5

    .line 7998
    :try_start_0
    invoke-virtual {p0, p1, v2, v5}, Lcom/android/server/am/ActivityManagerService;->appendDropBoxProcessHeaders(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/StringBuilder;)V

    .line 7999
    const-string v6, "Build: "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object v6, Landroid/os/Build;->FINGERPRINT:Ljava/lang/String;

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v6, "\n"

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 8000
    const-string v6, "System-App: "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    const-string v6, "\n"

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 8001
    const-string v6, "Uptime-Millis: "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-wide v6, p2, Landroid/os/StrictMode$ViolationInfo;->violationUptimeMillis:J

    invoke-virtual {v5, v6, v7}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string v6, "\n"

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 8002
    iget v6, p2, Landroid/os/StrictMode$ViolationInfo;->violationNumThisLoop:I

    if-eqz v6, :cond_5

    .line 8003
    const-string v6, "Loop-Violation-Number: "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v6, p2, Landroid/os/StrictMode$ViolationInfo;->violationNumThisLoop:I

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v6, "\n"

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 8005
    :cond_5
    iget v6, p2, Landroid/os/StrictMode$ViolationInfo;->numAnimationsRunning:I

    if-eqz v6, :cond_6

    .line 8006
    const-string v6, "Animations-Running: "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v6, p2, Landroid/os/StrictMode$ViolationInfo;->numAnimationsRunning:I

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v6, "\n"

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 8008
    :cond_6
    iget-object v6, p2, Landroid/os/StrictMode$ViolationInfo;->broadcastIntentAction:Ljava/lang/String;

    if-eqz v6, :cond_7

    .line 8009
    const-string v6, "Broadcast-Intent-Action: "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v6, p2, Landroid/os/StrictMode$ViolationInfo;->broadcastIntentAction:Ljava/lang/String;

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v6, "\n"

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 8011
    :cond_7
    iget v6, p2, Landroid/os/StrictMode$ViolationInfo;->durationMillis:I

    const/4 v7, -0x1

    if-eq v6, v7, :cond_8

    .line 8012
    const-string v6, "Duration-Millis: "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v6, p2, Landroid/os/StrictMode$ViolationInfo;->durationMillis:I

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v6, "\n"

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 8014
    :cond_8
    iget-wide v6, p2, Landroid/os/StrictMode$ViolationInfo;->numInstances:J

    const-wide/16 v8, -0x1

    cmp-long v6, v6, v8

    if-eqz v6, :cond_9

    .line 8015
    const-string v6, "Instance-Count: "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-wide v6, p2, Landroid/os/StrictMode$ViolationInfo;->numInstances:J

    invoke-virtual {v5, v6, v7}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string v6, "\n"

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 8017
    :cond_9
    iget-object v6, p2, Landroid/os/StrictMode$ViolationInfo;->tags:[Ljava/lang/String;

    if-eqz v6, :cond_a

    .line 8018
    iget-object v6, p2, Landroid/os/StrictMode$ViolationInfo;->tags:[Ljava/lang/String;

    array-length v7, v6

    :goto_3
    if-ge v0, v7, :cond_a

    aget-object v8, v6, v0

    .line 8019
    .local v8, "tag":Ljava/lang/String;
    const-string v9, "Span-Tag: "

    invoke-virtual {v5, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v9, "\n"

    invoke-virtual {v5, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 8018
    nop

    .end local v8    # "tag":Ljava/lang/String;
    add-int/lit8 v0, v0, 0x1

    goto :goto_3

    .line 8022
    :cond_a
    const-string v0, "\n"

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 8023
    invoke-virtual {p2}, Landroid/os/StrictMode$ViolationInfo;->getStackTrace()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 8024
    const-string v0, "\n"

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 8025
    invoke-virtual {p2}, Landroid/os/StrictMode$ViolationInfo;->getViolationDetails()Ljava/lang/String;

    move-result-object v0

    if-eqz v0, :cond_b

    .line 8026
    invoke-virtual {p2}, Landroid/os/StrictMode$ViolationInfo;->getViolationDetails()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 8027
    const-string v0, "\n"

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 8029
    :cond_b
    monitor-exit v5
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 8031
    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 8032
    .local v0, "res":Ljava/lang/String;
    invoke-static {}, Lcom/android/server/IoThread;->getHandler()Landroid/os/Handler;

    move-result-object v6

    new-instance v7, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda5;

    invoke-direct {v7, v3, v4, v0}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda5;-><init>(Landroid/os/DropBoxManager;Ljava/lang/String;Ljava/lang/String;)V

    invoke-virtual {v6, v7}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    .line 8035
    return-void

    .line 8029
    .end local v0    # "res":Ljava/lang/String;
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit v5
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v0

    .line 7994
    .end local v5    # "sb":Ljava/lang/StringBuilder;
    :cond_c
    :goto_4
    return-void
.end method

.method private maybeLogUserspaceRebootEvent()V
    .locals 3

    .line 2031
    invoke-static {}, Lcom/android/server/UserspaceRebootLogger;->shouldLogUserspaceRebootEvent()Z

    move-result v0

    if-nez v0, :cond_0

    .line 2032
    return-void

    .line 2034
    :cond_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {v0}, Lcom/android/server/am/UserController;->getCurrentUserId()I

    move-result v0

    .line 2035
    .local v0, "userId":I
    if-eqz v0, :cond_1

    .line 2037
    return-void

    .line 2040
    :cond_1
    invoke-static {v0}, Landroid/os/storage/StorageManager;->isUserKeyUnlocked(I)Z

    move-result v1

    .line 2041
    invoke-static {}, Lcom/android/internal/os/BackgroundThread;->getExecutor()Ljava/util/concurrent/Executor;

    move-result-object v2

    .line 2040
    invoke-static {v1, v2}, Lcom/android/server/UserspaceRebootLogger;->logEventAsync(ZLjava/util/concurrent/Executor;)V

    .line 2042
    return-void
.end method

.method private static maybePruneOldTraces(Ljava/io/File;)V
    .locals 9
    .param p0, "tracesDir"    # Ljava/io/File;

    .line 3288
    invoke-virtual {p0}, Ljava/io/File;->listFiles()[Ljava/io/File;

    move-result-object v0

    .line 3289
    .local v0, "files":[Ljava/io/File;
    if-nez v0, :cond_0

    return-void

    .line 3291
    :cond_0
    const/16 v1, 0x40

    const-string/jumbo v2, "tombstoned.max_anr_count"

    invoke-static {v2, v1}, Landroid/os/SystemProperties;->getInt(Ljava/lang/String;I)I

    move-result v1

    .line 3292
    .local v1, "max":I
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v2

    .line 3293
    .local v2, "now":J
    sget-object v4, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda38;->INSTANCE:Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda38;

    invoke-static {v4}, Ljava/util/Comparator;->comparingLong(Ljava/util/function/ToLongFunction;)Ljava/util/Comparator;

    move-result-object v4

    invoke-interface {v4}, Ljava/util/Comparator;->reversed()Ljava/util/Comparator;

    move-result-object v4

    invoke-static {v0, v4}, Ljava/util/Arrays;->sort([Ljava/lang/Object;Ljava/util/Comparator;)V

    .line 3294
    const/4 v4, 0x0

    .local v4, "i":I
    :goto_0
    array-length v5, v0

    if-ge v4, v5, :cond_3

    .line 3295
    if-gt v4, v1, :cond_1

    aget-object v5, v0, v4

    invoke-virtual {v5}, Ljava/io/File;->lastModified()J

    move-result-wide v5

    sub-long v5, v2, v5

    const-wide/32 v7, 0x5265c00

    cmp-long v5, v5, v7

    if-lez v5, :cond_2

    .line 3296
    :cond_1
    aget-object v5, v0, v4

    invoke-virtual {v5}, Ljava/io/File;->delete()Z

    move-result v5

    if-nez v5, :cond_2

    .line 3297
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Unable to prune stale trace file: "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    aget-object v6, v0, v4

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    const-string v6, "ActivityManager"

    invoke-static {v6, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 3294
    :cond_2
    add-int/lit8 v4, v4, 0x1

    goto :goto_0

    .line 3301
    .end local v4    # "i":I
    :cond_3
    return-void
.end method

.method private static processClass(Lcom/android/server/am/ProcessRecord;)Ljava/lang/String;
    .locals 2
    .param p0, "process"    # Lcom/android/server/am/ProcessRecord;

    .line 8193
    if-eqz p0, :cond_2

    invoke-virtual {p0}, Lcom/android/server/am/ProcessRecord;->getPid()I

    move-result v0

    sget v1, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    if-ne v0, v1, :cond_0

    goto :goto_0

    .line 8195
    :cond_0
    iget-object v0, p0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v0, v0, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v0, v0, 0x1

    if-eqz v0, :cond_1

    .line 8196
    const-string/jumbo v0, "system_app"

    return-object v0

    .line 8198
    :cond_1
    const-string v0, "data_app"

    return-object v0

    .line 8194
    :cond_2
    :goto_0
    const-string/jumbo v0, "system_server"

    return-object v0
.end method

.method private processSanityChecksLPr(Lcom/android/server/am/ProcessRecord;Landroid/app/IApplicationThread;)Z
    .locals 2
    .param p1, "process"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "thread"    # Landroid/app/IApplicationThread;

    .line 15183
    const/4 v0, 0x0

    if-eqz p1, :cond_2

    if-nez p2, :cond_0

    goto :goto_0

    .line 15187
    :cond_0
    sget-boolean v1, Landroid/os/Build;->IS_DEBUGGABLE:Z

    if-nez v1, :cond_1

    .line 15188
    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v1, v1, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v1, v1, 0x2

    if-nez v1, :cond_1

    .line 15189
    return v0

    .line 15193
    :cond_1
    const/4 v0, 0x1

    return v0

    .line 15184
    :cond_2
    :goto_0
    return v0
.end method

.method private final processStartTimedOutLocked(Lcom/android/server/am/ProcessRecord;)V
    .locals 6
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;

    .line 4227
    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->getPid()I

    move-result v0

    .line 4228
    .local v0, "pid":I
    invoke-direct {p0, p1}, Lcom/android/server/am/ActivityManagerService;->removePidIfNoThreadLocked(Lcom/android/server/am/ProcessRecord;)Z

    move-result v1

    .line 4230
    .local v1, "gone":Z
    if-eqz v1, :cond_3

    .line 4231
    const-string v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Process "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v4, " failed to attach"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4232
    iget v2, p1, Lcom/android/server/am/ProcessRecord;->userId:I

    iget v3, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    iget-object v4, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-static {v2, v0, v3, v4}, Lcom/android/server/am/EventLogTags;->writeAmProcessStartTimeout(IIILjava/lang/String;)V

    .line 4233
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v2

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 4234
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    iget-object v4, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iget v5, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {v3, v4, v5}, Lcom/android/server/am/ProcessList;->removeProcessNameLocked(Ljava/lang/String;I)Lcom/android/server/am/ProcessRecord;

    .line 4235
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->getWindowProcessController()Lcom/android/server/wm/WindowProcessController;

    move-result-object v4

    invoke-virtual {v3, v4}, Lcom/android/server/wm/ActivityTaskManagerInternal;->clearHeavyWeightProcessIfEquals(Lcom/android/server/wm/WindowProcessController;)V

    .line 4236
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    iget-object v4, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iget-object v5, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v5, v5, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v3, v4, v5}, Lcom/android/server/am/BatteryStatsService;->noteProcessFinish(Ljava/lang/String;I)V

    .line 4238
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mCpHelper:Lcom/android/server/am/ContentProviderHelper;

    const/4 v4, 0x1

    invoke-virtual {v3, p1, v4}, Lcom/android/server/am/ContentProviderHelper;->cleanupAppInLaunchingProvidersLocked(Lcom/android/server/am/ProcessRecord;Z)Z

    .line 4240
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v3, p1}, Lcom/android/server/am/ActiveServices;->processStartTimedOutLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 4241
    const-string/jumbo v3, "start timeout"

    const/4 v5, 0x7

    invoke-virtual {p1, v3, v5, v4}, Lcom/android/server/am/ProcessRecord;->killLocked(Ljava/lang/String;IZ)V

    .line 4243
    iget-boolean v3, p1, Lcom/android/server/am/ProcessRecord;->isolated:Z

    if-eqz v3, :cond_0

    .line 4244
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    iget v4, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    iget-object v5, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v5, v5, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v3, v4, v5}, Lcom/android/server/am/BatteryStatsService;->removeIsolatedUid(II)V

    .line 4246
    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->removeLruProcessLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 4247
    monitor-exit v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 4248
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTargets:Landroid/util/SparseArray;

    iget v3, p1, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-virtual {v2, v3}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/BackupRecord;

    .line 4249
    .local v2, "backupTarget":Lcom/android/server/am/BackupRecord;
    if-eqz v2, :cond_1

    iget-object v3, v2, Lcom/android/server/am/BackupRecord;->app:Lcom/android/server/am/ProcessRecord;

    invoke-virtual {v3}, Lcom/android/server/am/ProcessRecord;->getPid()I

    move-result v3

    if-ne v3, v0, :cond_1

    .line 4250
    const-string v3, "ActivityManager"

    const-string v4, "Unattached app died before backup, skipping"

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4251
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    new-instance v4, Lcom/android/server/am/ActivityManagerService$7;

    invoke-direct {v4, p0, p1}, Lcom/android/server/am/ActivityManagerService$7;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ProcessRecord;)V

    invoke-virtual {v3, v4}, Lcom/android/server/am/ActivityManagerService$MainHandler;->post(Ljava/lang/Runnable;)Z

    .line 4264
    :cond_1
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->isPendingBroadcastProcessLocked(I)Z

    move-result v3

    if-eqz v3, :cond_2

    .line 4265
    const-string v3, "ActivityManager"

    const-string v4, "Unattached app died before broadcast acknowledged, skipping"

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4266
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->skipPendingBroadcastLocked(I)V

    .line 4268
    .end local v2    # "backupTarget":Lcom/android/server/am/BackupRecord;
    :cond_2
    goto :goto_0

    .line 4247
    :catchall_0
    move-exception v3

    :try_start_1
    monitor-exit v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v3

    .line 4269
    :cond_3
    const-string v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Spurious process start timeout - pid not known for "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4271
    :goto_0
    return-void
.end method

.method private removePidIfNoThreadLocked(Lcom/android/server/am/ProcessRecord;)Z
    .locals 4
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;

    .line 927
    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->getPid()I

    move-result v0

    .line 928
    .local v0, "pid":I
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    monitor-enter v1

    .line 929
    :try_start_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-virtual {v2, v0, p1}, Lcom/android/server/am/ActivityManagerService$PidMap;->doRemoveIfNoThreadInternal(ILcom/android/server/am/ProcessRecord;)Z

    move-result v2

    .line 930
    .local v2, "removed":Z
    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 931
    if-eqz v2, :cond_0

    .line 932
    sget-object v1, Lcom/android/server/am/ActivityManagerService;->sActiveProcessInfoSelfLocked:Landroid/util/SparseArray;

    monitor-enter v1

    .line 933
    :try_start_1
    invoke-virtual {v1, v0}, Landroid/util/SparseArray;->remove(I)V

    .line 934
    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 935
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-virtual {v1, v0}, Lcom/android/server/wm/ActivityTaskManagerInternal;->onProcessUnMapped(I)V

    goto :goto_0

    .line 934
    :catchall_0
    move-exception v3

    :try_start_2
    monitor-exit v1
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v3

    .line 937
    :cond_0
    :goto_0
    return v2

    .line 930
    .end local v2    # "removed":Z
    :catchall_1
    move-exception v2

    :try_start_3
    monitor-exit v1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    throw v2
.end method

.method private reportLmkKillAtOrBelow(Ljava/io/PrintWriter;I)Z
    .locals 3
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "oom_adj"    # I

    .line 9688
    const/4 v0, 0x0

    invoke-static {v0, p2}, Lcom/android/server/am/ProcessList;->getLmkdKillCount(II)Ljava/lang/Integer;

    move-result-object v1

    .line 9689
    .local v1, "cnt":Ljava/lang/Integer;
    if-eqz v1, :cond_0

    .line 9690
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "    kills at or below oom_adj "

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, ": "

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 9691
    const/4 v0, 0x1

    return v0

    .line 9693
    :cond_0
    return v0
.end method

.method private reportStartInstrumentationFailureLocked(Landroid/app/IInstrumentationWatcher;Landroid/content/ComponentName;Ljava/lang/String;)V
    .locals 3
    .param p1, "watcher"    # Landroid/app/IInstrumentationWatcher;
    .param p2, "cn"    # Landroid/content/ComponentName;
    .param p3, "report"    # Ljava/lang/String;

    .line 13894
    const-string v0, "ActivityManager"

    invoke-static {v0, p3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 13895
    if-eqz p1, :cond_0

    .line 13896
    new-instance v0, Landroid/os/Bundle;

    invoke-direct {v0}, Landroid/os/Bundle;-><init>()V

    .line 13897
    .local v0, "results":Landroid/os/Bundle;
    const-string v1, "id"

    const-string v2, "ActivityManagerService"

    invoke-virtual {v0, v1, v2}, Landroid/os/Bundle;->putString(Ljava/lang/String;Ljava/lang/String;)V

    .line 13898
    const-string v1, "Error"

    invoke-virtual {v0, v1, p3}, Landroid/os/Bundle;->putString(Ljava/lang/String;Ljava/lang/String;)V

    .line 13899
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mInstrumentationReporter:Lcom/android/server/am/InstrumentationReporter;

    const/4 v2, -0x1

    invoke-virtual {v1, p1, p2, v2, v0}, Lcom/android/server/am/InstrumentationReporter;->reportStatus(Landroid/app/IInstrumentationWatcher;Landroid/content/ComponentName;ILandroid/os/Bundle;)V

    .line 13901
    .end local v0    # "results":Landroid/os/Bundle;
    :cond_0
    return-void
.end method

.method static resetPriorityAfterLockedSection()V
    .locals 1

    .line 720
    sget-object v0, Lcom/android/server/am/ActivityManagerService;->sThreadPriorityBooster:Lcom/android/server/ThreadPriorityBooster;

    invoke-virtual {v0}, Lcom/android/server/ThreadPriorityBooster;->reset()V

    .line 721
    return-void
.end method

.method static resetPriorityAfterProcLockedSection()V
    .locals 1

    .line 736
    sget-object v0, Lcom/android/server/am/ActivityManagerService;->sProcThreadPriorityBooster:Lcom/android/server/ThreadPriorityBooster;

    invoke-virtual {v0}, Lcom/android/server/ThreadPriorityBooster;->reset()V

    .line 740
    return-void
.end method

.method private retrieveSettings()V
    .locals 11

    .line 7467
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v0}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v0

    .line 7468
    .local v0, "resolver":Landroid/content/ContentResolver;
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {v1, v0}, Lcom/android/server/wm/ActivityTaskManagerService;->retrieveSettings(Landroid/content/ContentResolver;)V

    .line 7470
    const-string v1, "debug_app"

    invoke-static {v0, v1}, Landroid/provider/Settings$Global;->getString(Landroid/content/ContentResolver;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    .line 7471
    .local v1, "debugApp":Ljava/lang/String;
    const-string/jumbo v2, "wait_for_debugger"

    const/4 v3, 0x0

    invoke-static {v0, v2, v3}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v2

    const/4 v4, 0x1

    if-eqz v2, :cond_0

    move v2, v4

    goto :goto_0

    :cond_0
    move v2, v3

    .line 7472
    .local v2, "waitForDebugger":Z
    :goto_0
    const-string v5, "always_finish_activities"

    .line 7473
    invoke-static {v0, v5, v3}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v5

    if-eqz v5, :cond_1

    move v5, v4

    goto :goto_1

    :cond_1
    move v5, v3

    .line 7474
    .local v5, "alwaysFinishActivities":Z
    :goto_1
    const-string/jumbo v6, "network_access_timeout_ms"

    const-wide/16 v7, 0xc8

    invoke-static {v0, v6, v7, v8}, Landroid/provider/Settings$Global;->getLong(Landroid/content/ContentResolver;Ljava/lang/String;J)J

    move-result-wide v6

    .line 7476
    .local v6, "waitForNetworkTimeoutMs":J
    iget-object v8, p0, Lcom/android/server/am/ActivityManagerService;->mHiddenApiBlacklist:Lcom/android/server/am/ActivityManagerService$HiddenApiSettings;

    invoke-virtual {v8}, Lcom/android/server/am/ActivityManagerService$HiddenApiSettings;->registerObserver()V

    .line 7477
    iget-object v8, p0, Lcom/android/server/am/ActivityManagerService;->mPlatformCompat:Lcom/android/server/compat/PlatformCompat;

    invoke-virtual {v8}, Lcom/android/server/compat/PlatformCompat;->registerContentObserver()V

    .line 7479
    iget-object v8, p0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    invoke-virtual {v8}, Lcom/android/server/am/AppProfiler;->retrieveSettings()V

    .line 7482
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 7483
    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mOrigDebugApp:Ljava/lang/String;

    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;

    .line 7484
    iput-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mOrigWaitForDebugger:Z

    iput-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mWaitForDebugger:Z

    .line 7485
    iput-boolean v5, p0, Lcom/android/server/am/ActivityManagerService;->mAlwaysFinishActivities:Z

    .line 7487
    iget-object v8, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v8}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v8

    .line 7488
    .local v8, "res":Landroid/content/res/Resources;
    const v9, 0x111009e

    invoke-virtual {v8, v9}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v9

    if-nez v9, :cond_2

    move v3, v4

    .line 7490
    .local v3, "userSwitchUiEnabled":Z
    :cond_2
    const v4, 0x10e008c

    invoke-virtual {v8, v4}, Landroid/content/res/Resources;->getInteger(I)I

    move-result v4

    .line 7492
    .local v4, "maxRunningUsers":I
    const v9, 0x1110109

    invoke-virtual {v8, v9}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v9

    .line 7494
    .local v9, "delayUserDataLocking":Z
    iget-object v10, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {v10, v3, v4, v9}, Lcom/android/server/am/UserController;->setInitialConfig(ZIZ)V

    .line 7496
    iput-wide v6, p0, Lcom/android/server/am/ActivityManagerService;->mWaitForNetworkTimeoutMs:J

    .line 7497
    .end local v3    # "userSwitchUiEnabled":Z
    .end local v4    # "maxRunningUsers":I
    .end local v9    # "delayUserDataLocking":Z
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 7498
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mAppErrors:Lcom/android/server/am/AppErrors;

    const v4, 0x10401f1

    invoke-virtual {v8, v4}, Landroid/content/res/Resources;->getString(I)Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v3, v4}, Lcom/android/server/am/AppErrors;->loadAppsNotReportingCrashesFromConfig(Ljava/lang/String;)V

    .line 7500
    return-void

    .line 7497
    .end local v8    # "res":Landroid/content/res/Resources;
    :catchall_0
    move-exception v3

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v3
.end method

.method private static scanArgs([Ljava/lang/String;Ljava/lang/String;)Z
    .locals 5
    .param p0, "args"    # [Ljava/lang/String;
    .param p1, "value"    # Ljava/lang/String;

    .line 11663
    const/4 v0, 0x0

    if-eqz p0, :cond_1

    .line 11664
    array-length v1, p0

    move v2, v0

    :goto_0
    if-ge v2, v1, :cond_1

    aget-object v3, p0, v2

    .line 11665
    .local v3, "arg":Ljava/lang/String;
    invoke-virtual {p1, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_0

    .line 11666
    const/4 v0, 0x1

    return v0

    .line 11664
    .end local v3    # "arg":Ljava/lang/String;
    :cond_0
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 11670
    :cond_1
    return v0
.end method

.method public static scheduleAsFifoPriority(IZ)Z
    .locals 4
    .param p0, "tid"    # I
    .param p1, "suppressLogs"    # Z

    .line 6842
    const-string v0, "ActivityManager"

    const v1, 0x40000001    # 2.0000002f

    const/4 v2, 0x1

    :try_start_0
    invoke-static {p0, v1, v2}, Landroid/os/Process;->setThreadScheduler(III)V
    :try_end_0
    .catch Ljava/lang/IllegalArgumentException; {:try_start_0 .. :try_end_0} :catch_1
    .catch Ljava/lang/SecurityException; {:try_start_0 .. :try_end_0} :catch_0

    .line 6843
    return v2

    .line 6848
    :catch_0
    move-exception v1

    .line 6849
    .local v1, "e":Ljava/lang/SecurityException;
    if-nez p1, :cond_1

    .line 6850
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Failed to set scheduling policy, not allowed:\n"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v0, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_0

    .line 6844
    .end local v1    # "e":Ljava/lang/SecurityException;
    :catch_1
    move-exception v1

    .line 6845
    .local v1, "e":Ljava/lang/IllegalArgumentException;
    if-nez p1, :cond_0

    .line 6846
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Failed to set scheduling policy, thread does not exist:\n"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v0, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 6852
    .end local v1    # "e":Ljava/lang/IllegalArgumentException;
    :cond_0
    nop

    .line 6853
    :cond_1
    :goto_0
    const/4 v0, 0x0

    return v0
.end method

.method public static scheduleAsRegularPriority(IZ)Z
    .locals 5
    .param p0, "tid"    # I
    .param p1, "suppressLogs"    # Z

    .line 6818
    const-string v0, "ActivityManager"

    const/4 v1, 0x0

    :try_start_0
    invoke-static {p0, v1, v1}, Landroid/os/Process;->setThreadScheduler(III)V
    :try_end_0
    .catch Ljava/lang/IllegalArgumentException; {:try_start_0 .. :try_end_0} :catch_1
    .catch Ljava/lang/SecurityException; {:try_start_0 .. :try_end_0} :catch_0

    .line 6819
    const/4 v0, 0x1

    return v0

    .line 6824
    :catch_0
    move-exception v2

    .line 6825
    .local v2, "e":Ljava/lang/SecurityException;
    if-nez p1, :cond_1

    .line 6826
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Failed to set scheduling policy, not allowed:\n"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v0, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_0

    .line 6820
    .end local v2    # "e":Ljava/lang/SecurityException;
    :catch_1
    move-exception v2

    .line 6821
    .local v2, "e":Ljava/lang/IllegalArgumentException;
    if-nez p1, :cond_0

    .line 6822
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Failed to set scheduling policy, thread does not exist:\n"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v0, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 6828
    .end local v2    # "e":Ljava/lang/IllegalArgumentException;
    :cond_0
    nop

    .line 6829
    :cond_1
    :goto_0
    return v1
.end method

.method private final sendPackageBroadcastLocked(I[Ljava/lang/String;I)V
    .locals 1
    .param p1, "cmd"    # I
    .param p2, "packages"    # [Ljava/lang/String;
    .param p3, "userId"    # I

    .line 12571
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/server/am/ProcessList;->sendPackageBroadcastLocked(I[Ljava/lang/String;I)V

    .line 12572
    return-void
.end method

.method private showConsoleNotificationIfActive()V
    .locals 7

    .line 4777
    const-string v0, "init.svc.console"

    invoke-static {v0}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    const-string/jumbo v1, "running"

    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_0

    .line 4778
    return-void

    .line 4780
    :cond_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    const v1, 0x104029d

    .line 4781
    invoke-virtual {v0, v1}, Landroid/content/Context;->getString(I)Ljava/lang/String;

    move-result-object v0

    .line 4782
    .local v0, "title":Ljava/lang/String;
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    const v2, 0x104029c

    .line 4783
    invoke-virtual {v1, v2}, Landroid/content/Context;->getString(I)Ljava/lang/String;

    move-result-object v1

    .line 4784
    .local v1, "message":Ljava/lang/String;
    new-instance v2, Landroid/app/Notification$Builder;

    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    sget-object v4, Lcom/android/internal/notification/SystemNotificationChannels;->DEVELOPER:Ljava/lang/String;

    invoke-direct {v2, v3, v4}, Landroid/app/Notification$Builder;-><init>(Landroid/content/Context;Ljava/lang/String;)V

    const v3, 0x108080e

    .line 4786
    invoke-virtual {v2, v3}, Landroid/app/Notification$Builder;->setSmallIcon(I)Landroid/app/Notification$Builder;

    move-result-object v2

    const-wide/16 v3, 0x0

    .line 4787
    invoke-virtual {v2, v3, v4}, Landroid/app/Notification$Builder;->setWhen(J)Landroid/app/Notification$Builder;

    move-result-object v2

    .line 4788
    const/4 v3, 0x1

    invoke-virtual {v2, v3}, Landroid/app/Notification$Builder;->setOngoing(Z)Landroid/app/Notification$Builder;

    move-result-object v2

    .line 4789
    invoke-virtual {v2, v0}, Landroid/app/Notification$Builder;->setTicker(Ljava/lang/CharSequence;)Landroid/app/Notification$Builder;

    move-result-object v2

    const/4 v4, 0x0

    .line 4790
    invoke-virtual {v2, v4}, Landroid/app/Notification$Builder;->setDefaults(I)Landroid/app/Notification$Builder;

    move-result-object v2

    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    const v5, 0x106001c

    .line 4791
    invoke-virtual {v4, v5}, Landroid/content/Context;->getColor(I)I

    move-result v4

    invoke-virtual {v2, v4}, Landroid/app/Notification$Builder;->setColor(I)Landroid/app/Notification$Builder;

    move-result-object v2

    .line 4794
    invoke-virtual {v2, v0}, Landroid/app/Notification$Builder;->setContentTitle(Ljava/lang/CharSequence;)Landroid/app/Notification$Builder;

    move-result-object v2

    .line 4795
    invoke-virtual {v2, v1}, Landroid/app/Notification$Builder;->setContentText(Ljava/lang/CharSequence;)Landroid/app/Notification$Builder;

    move-result-object v2

    .line 4796
    invoke-virtual {v2, v3}, Landroid/app/Notification$Builder;->setVisibility(I)Landroid/app/Notification$Builder;

    move-result-object v2

    .line 4797
    invoke-virtual {v2}, Landroid/app/Notification$Builder;->build()Landroid/app/Notification;

    move-result-object v2

    .line 4799
    .local v2, "notification":Landroid/app/Notification;
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    const-class v4, Landroid/app/NotificationManager;

    .line 4800
    invoke-virtual {v3, v4}, Landroid/content/Context;->getSystemService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/app/NotificationManager;

    .line 4801
    .local v3, "notificationManager":Landroid/app/NotificationManager;
    const/4 v4, 0x0

    const/16 v5, 0x37

    sget-object v6, Landroid/os/UserHandle;->ALL:Landroid/os/UserHandle;

    invoke-virtual {v3, v4, v5, v2, v6}, Landroid/app/NotificationManager;->notifyAsUser(Ljava/lang/String;ILandroid/app/Notification;Landroid/os/UserHandle;)V

    .line 4804
    return-void
.end method

.method private static sortMemItems(Ljava/util/List;Z)V
    .locals 1
    .param p1, "pss"    # Z
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/List<",
            "Lcom/android/server/am/ActivityManagerService$MemItem;",
            ">;Z)V"
        }
    .end annotation

    .line 10206
    .local p0, "items":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    new-instance v0, Lcom/android/server/am/ActivityManagerService$17;

    invoke-direct {v0, p1}, Lcom/android/server/am/ActivityManagerService$17;-><init>(Z)V

    invoke-static {p0, v0}, Ljava/util/Collections;->sort(Ljava/util/List;Ljava/util/Comparator;)V

    .line 10219
    return-void
.end method

.method private start()V
    .locals 2

    .line 2358
    invoke-static {}, Landroid/os/Process;->removeAllProcessGroups()V

    .line 2360
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v0}, Lcom/android/server/am/BatteryStatsService;->publish()V

    .line 2361
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/appop/AppOpsService;

    invoke-virtual {v0}, Lcom/android/server/appop/AppOpsService;->publish()V

    .line 2362
    const-string v0, "AppOps"

    const-string v1, "AppOpsService published"

    invoke-static {v0, v1}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 2363
    const-class v0, Landroid/app/ActivityManagerInternal;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mInternal:Landroid/app/ActivityManagerInternal;

    invoke-static {v0, v1}, Lcom/android/server/LocalServices;->addService(Ljava/lang/Class;Ljava/lang/Object;)V

    .line 2364
    const-class v0, Lcom/android/server/am/ActivityManagerLocal;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mInternal:Landroid/app/ActivityManagerInternal;

    check-cast v1, Lcom/android/server/am/ActivityManagerLocal;

    invoke-static {v0, v1}, Lcom/android/server/LocalManagerRegistry;->addManager(Ljava/lang/Class;Ljava/lang/Object;)V

    .line 2366
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {v0}, Lcom/android/server/wm/ActivityTaskManagerService;->onActivityManagerInternalAdded()V

    .line 2367
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPendingIntentController:Lcom/android/server/am/PendingIntentController;

    invoke-virtual {v0}, Lcom/android/server/am/PendingIntentController;->onActivityManagerInternalAdded()V

    .line 2368
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    invoke-virtual {v0}, Lcom/android/server/am/AppProfiler;->onActivityManagerInternalAdded()V

    .line 2369
    return-void
.end method

.method private startBroadcastObservers()V
    .locals 5

    .line 7774
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    array-length v1, v0

    const/4 v2, 0x0

    :goto_0
    if-ge v2, v1, :cond_0

    aget-object v3, v0, v2

    .line 7775
    .local v3, "queue":Lcom/android/server/am/BroadcastQueue;
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v4}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v4

    invoke-virtual {v3, v4}, Lcom/android/server/am/BroadcastQueue;->start(Landroid/content/ContentResolver;)V

    .line 7774
    .end local v3    # "queue":Lcom/android/server/am/BroadcastQueue;
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 7777
    :cond_0
    return-void
.end method

.method static stringifyKBSize(J)Ljava/lang/String;
    .locals 3
    .param p0, "size"    # J

    .line 10400
    const-wide/16 v0, 0x400

    mul-long/2addr v0, p0

    const/16 v2, 0x400

    invoke-static {v0, v1, v2}, Lcom/android/server/am/ActivityManagerService;->stringifySize(JI)Ljava/lang/String;

    move-result-object v0

    return-object v0
.end method

.method static stringifySize(JI)Ljava/lang/String;
    .locals 7
    .param p0, "size"    # J
    .param p2, "order"    # I

    .line 10384
    sget-object v0, Ljava/util/Locale;->US:Ljava/util/Locale;

    .line 10385
    .local v0, "locale":Ljava/util/Locale;
    const/4 v1, 0x0

    const/4 v2, 0x1

    const-wide/16 v3, 0x400

    sparse-switch p2, :sswitch_data_0

    .line 10395
    new-instance v1, Ljava/lang/IllegalArgumentException;

    const-string v2, "Invalid size order"

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 10393
    :sswitch_0
    new-array v2, v2, [Ljava/lang/Object;

    div-long v5, p0, v3

    div-long/2addr v5, v3

    div-long/2addr v5, v3

    invoke-static {v5, v6}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v3

    aput-object v3, v2, v1

    const-string v1, "%,1dG"

    invoke-static {v0, v1, v2}, Ljava/lang/String;->format(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v1

    return-object v1

    .line 10391
    :sswitch_1
    new-array v2, v2, [Ljava/lang/Object;

    div-long v5, p0, v3

    div-long/2addr v5, v3

    invoke-static {v5, v6}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v3

    aput-object v3, v2, v1

    const-string v1, "%,5dM"

    invoke-static {v0, v1, v2}, Ljava/lang/String;->format(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v1

    return-object v1

    .line 10389
    :sswitch_2
    new-array v2, v2, [Ljava/lang/Object;

    div-long v3, p0, v3

    invoke-static {v3, v4}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v3

    aput-object v3, v2, v1

    const-string v1, "%,9dK"

    invoke-static {v0, v1, v2}, Ljava/lang/String;->format(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v1

    return-object v1

    .line 10387
    :sswitch_3
    new-array v2, v2, [Ljava/lang/Object;

    invoke-static {p0, p1}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v3

    aput-object v3, v2, v1

    const-string v1, "%,13d"

    invoke-static {v0, v1, v2}, Ljava/lang/String;->format(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v1

    return-object v1

    :sswitch_data_0
    .sparse-switch
        0x1 -> :sswitch_3
        0x400 -> :sswitch_2
        0x100000 -> :sswitch_1
        0x40000000 -> :sswitch_0
    .end sparse-switch
.end method

.method static traceBegin(JLjava/lang/String;Ljava/lang/String;)V
    .locals 1
    .param p0, "traceTag"    # J
    .param p2, "methodName"    # Ljava/lang/String;
    .param p3, "subInfo"    # Ljava/lang/String;

    .line 17199
    invoke-static {p0, p1}, Landroid/os/Trace;->isTagEnabled(J)Z

    move-result v0

    if-eqz v0, :cond_0

    .line 17200
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {p0, p1, v0}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 17202
    :cond_0
    return-void
.end method

.method private trimApplications(ZLjava/lang/String;)V
    .locals 1
    .param p1, "forceFullOomAdj"    # Z
    .param p2, "oomAdjReason"    # Ljava/lang/String;

    .line 14792
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 14793
    invoke-direct {p0, p1, p2}, Lcom/android/server/am/ActivityManagerService;->trimApplicationsLocked(ZLjava/lang/String;)V

    .line 14794
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 14795
    return-void

    .line 14794
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method private trimApplicationsLocked(ZLjava/lang/String;)V
    .locals 13
    .param p1, "forceFullOomAdj"    # Z
    .param p2, "oomAdjReason"    # Ljava/lang/String;

    .line 14801
    const/4 v0, 0x0

    .line 14802
    .local v0, "didSomething":Z
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    iget-object v1, v1, Lcom/android/server/am/ProcessList;->mRemovedProcesses:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v1

    add-int/lit8 v1, v1, -0x1

    .local v1, "i":I
    :goto_0
    if-ltz v1, :cond_4

    .line 14803
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    iget-object v2, v2, Lcom/android/server/am/ProcessList;->mRemovedProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ProcessRecord;

    .line 14804
    .local v2, "app":Lcom/android/server/am/ProcessRecord;
    invoke-virtual {v2}, Lcom/android/server/am/ProcessRecord;->hasActivitiesOrRecentTasks()Z

    move-result v3

    if-nez v3, :cond_3

    iget-object v3, v2, Lcom/android/server/am/ProcessRecord;->mReceivers:Lcom/android/server/am/ProcessReceiverRecord;

    .line 14805
    invoke-virtual {v3}, Lcom/android/server/am/ProcessReceiverRecord;->numberOfCurReceivers()I

    move-result v3

    if-nez v3, :cond_3

    iget-object v3, v2, Lcom/android/server/am/ProcessRecord;->mServices:Lcom/android/server/am/ProcessServiceRecord;

    .line 14806
    invoke-virtual {v3}, Lcom/android/server/am/ProcessServiceRecord;->numberOfRunningServices()I

    move-result v3

    if-nez v3, :cond_3

    .line 14807
    invoke-virtual {v2}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v11

    .line 14808
    .local v11, "thread":Landroid/app/IApplicationThread;
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Exiting empty application process "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 14809
    invoke-virtual {v2}, Lcom/android/server/am/ProcessRecord;->toShortString()Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v4, " ("

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 14810
    if-eqz v11, :cond_0

    invoke-interface {v11}, Landroid/app/IApplicationThread;->asBinder()Landroid/os/IBinder;

    move-result-object v4

    goto :goto_1

    :cond_0
    const/4 v4, 0x0

    :goto_1
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v4, ")\n"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    .line 14808
    const-string v4, "ActivityManager"

    invoke-static {v4, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 14812
    invoke-virtual {v2}, Lcom/android/server/am/ProcessRecord;->getPid()I

    move-result v12

    .line 14813
    .local v12, "pid":I
    if-lez v12, :cond_1

    sget v3, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    if-eq v12, v3, :cond_1

    .line 14814
    const/16 v3, 0xd

    const/4 v4, 0x4

    const/4 v5, 0x0

    const-string v6, "empty"

    invoke-virtual {v2, v6, v3, v4, v5}, Lcom/android/server/am/ProcessRecord;->killLocked(Ljava/lang/String;IIZ)V

    goto :goto_2

    .line 14818
    :cond_1
    if-eqz v11, :cond_2

    .line 14820
    :try_start_0
    invoke-interface {v11}, Landroid/app/IApplicationThread;->scheduleExit()V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    .line 14823
    goto :goto_2

    .line 14821
    :catch_0
    move-exception v3

    .line 14825
    :cond_2
    :goto_2
    const/4 v0, 0x1

    .line 14826
    const/4 v6, 0x0

    const/4 v7, 0x1

    const/4 v8, -0x1

    const/4 v9, 0x0

    const/4 v10, 0x0

    move-object v3, p0

    move-object v4, v2

    move v5, v12

    invoke-virtual/range {v3 .. v10}, Lcom/android/server/am/ActivityManagerService;->cleanUpApplicationRecordLocked(Lcom/android/server/am/ProcessRecord;IZZIZZ)Z

    .line 14828
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    iget-object v3, v3, Lcom/android/server/am/ProcessList;->mRemovedProcesses:Ljava/util/ArrayList;

    invoke-virtual {v3, v1}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    .line 14830
    invoke-virtual {v2}, Lcom/android/server/am/ProcessRecord;->isPersistent()Z

    move-result v3

    if-eqz v3, :cond_3

    .line 14831
    iget-object v5, v2, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x2

    move-object v4, p0

    invoke-virtual/range {v4 .. v9}, Lcom/android/server/am/ActivityManagerService;->addAppLocked(Landroid/content/pm/ApplicationInfo;Ljava/lang/String;ZLjava/lang/String;I)Lcom/android/server/am/ProcessRecord;

    .line 14802
    .end local v2    # "app":Lcom/android/server/am/ProcessRecord;
    .end local v11    # "thread":Landroid/app/IApplicationThread;
    .end local v12    # "pid":I
    :cond_3
    add-int/lit8 v1, v1, -0x1

    goto/16 :goto_0

    .line 14839
    .end local v1    # "i":I
    :cond_4
    if-nez v0, :cond_6

    if-eqz p1, :cond_5

    goto :goto_3

    .line 14843
    :cond_5
    invoke-virtual {p0, p2}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjPendingTargetsLocked(Ljava/lang/String;)V

    goto :goto_4

    .line 14840
    :cond_6
    :goto_3
    invoke-virtual {p0, p2}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked(Ljava/lang/String;)V

    .line 14845
    :goto_4
    return-void
.end method

.method private uidOnBackgroundAllowlistLOSP(I)Z
    .locals 5
    .param p1, "uid"    # I

    .line 6134
    invoke-static {p1}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v0

    .line 6135
    .local v0, "appId":I
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mBackgroundAppIdAllowlist:[I

    .line 6136
    .local v1, "allowlist":[I
    const/4 v2, 0x0

    .local v2, "i":I
    array-length v3, v1

    .local v3, "len":I
    :goto_0
    if-ge v2, v3, :cond_1

    .line 6137
    aget v4, v1, v2

    if-ne v0, v4, :cond_0

    .line 6138
    const/4 v4, 0x1

    return v4

    .line 6136
    :cond_0
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 6141
    .end local v2    # "i":I
    .end local v3    # "len":I
    :cond_1
    const/4 v2, 0x0

    return v2
.end method

.method private updateAppProcessCpuTimeLPr(JZJILcom/android/server/am/ProcessRecord;)V
    .locals 20
    .param p1, "uptimeSince"    # J
    .param p3, "doCpuKills"    # Z
    .param p4, "checkDur"    # J
    .param p6, "cpuLimit"    # I
    .param p7, "app"    # Lcom/android/server/am/ProcessRecord;

    .line 14275
    move-object/from16 v11, p0

    move-object/from16 v12, p7

    iget-object v0, v11, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    iget-object v13, v0, Lcom/android/server/am/AppProfiler;->mProfilerLock:Ljava/lang/Object;

    monitor-enter v13

    .line 14276
    :try_start_0
    iget-object v0, v12, Lcom/android/server/am/ProcessRecord;->mProfile:Lcom/android/server/am/ProcessProfileRecord;

    .line 14277
    .local v0, "profile":Lcom/android/server/am/ProcessProfileRecord;
    iget-object v1, v0, Lcom/android/server/am/ProcessProfileRecord;->mCurCpuTime:Ljava/util/concurrent/atomic/AtomicLong;

    invoke-virtual {v1}, Ljava/util/concurrent/atomic/AtomicLong;->get()J

    move-result-wide v1

    move-wide v14, v1

    .line 14278
    .local v14, "curCpuTime":J
    iget-object v1, v0, Lcom/android/server/am/ProcessProfileRecord;->mLastCpuTime:Ljava/util/concurrent/atomic/AtomicLong;

    invoke-virtual {v1}, Ljava/util/concurrent/atomic/AtomicLong;->get()J

    move-result-wide v1

    move-wide/from16 v16, v1

    .line 14279
    .local v16, "lastCpuTime":J
    const-wide/16 v1, 0x0

    cmp-long v1, v16, v1

    if-lez v1, :cond_0

    .line 14280
    sub-long v18, v14, v16

    .line 14281
    .local v18, "cpuTimeUsed":J
    iget-object v7, v12, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    .line 14282
    invoke-virtual/range {p7 .. p7}, Lcom/android/server/am/ProcessRecord;->toShortString()Ljava/lang/String;

    move-result-object v8

    .line 14281
    move-object/from16 v1, p0

    move-wide/from16 v2, p1

    move/from16 v4, p3

    move-wide/from16 v5, v18

    move/from16 v9, p6

    move-object/from16 v10, p7

    invoke-direct/range {v1 .. v10}, Lcom/android/server/am/ActivityManagerService;->checkExcessivePowerUsageLPr(JZJLjava/lang/String;Ljava/lang/String;ILcom/android/server/am/ProcessRecord;)Z

    move-result v1

    if-eqz v1, :cond_0

    .line 14283
    iget-object v10, v11, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    new-instance v8, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda10;

    move-object v1, v8

    move-object/from16 v2, p0

    move-object/from16 v3, p7

    move-wide/from16 v4, v18

    move-wide/from16 v6, p1

    move-object v11, v8

    move-wide/from16 v8, p4

    move-object v12, v10

    move/from16 v10, p6

    invoke-direct/range {v1 .. v10}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda10;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ProcessRecord;JJJI)V

    invoke-virtual {v12, v11}, Lcom/android/server/am/ActivityManagerService$MainHandler;->post(Ljava/lang/Runnable;)Z

    .line 14292
    invoke-virtual {v0}, Lcom/android/server/am/ProcessProfileRecord;->reportExcessiveCpu()V

    .line 14296
    .end local v18    # "cpuTimeUsed":J
    :cond_0
    iget-object v1, v0, Lcom/android/server/am/ProcessProfileRecord;->mLastCpuTime:Ljava/util/concurrent/atomic/AtomicLong;

    invoke-virtual {v1, v14, v15}, Ljava/util/concurrent/atomic/AtomicLong;->set(J)V

    .line 14297
    .end local v0    # "profile":Lcom/android/server/am/ProcessProfileRecord;
    .end local v14    # "curCpuTime":J
    .end local v16    # "lastCpuTime":J
    monitor-exit v13

    .line 14298
    return-void

    .line 14297
    :catchall_0
    move-exception v0

    monitor-exit v13
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method private updateApplicationInfoLOSP(Ljava/util/List;I)V
    .locals 5
    .param p2, "userId"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/List<",
            "Ljava/lang/String;",
            ">;I)V"
        }
    .end annotation

    .line 16596
    .local p1, "packagesToUpdate":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    const-string v0, "android"

    invoke-interface {p1, v0}, Ljava/util/List;->contains(Ljava/lang/Object;)Z

    move-result v0

    .line 16597
    .local v0, "updateFrameworkRes":Z
    if-eqz v0, :cond_0

    .line 16598
    const/4 v1, 0x0

    invoke-static {v1}, Landroid/content/pm/parsing/ParsingPackageUtils;->readConfigUseRoundIcon(Landroid/content/res/Resources;)V

    .line 16600
    :cond_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v1, p1, p2, v0}, Lcom/android/server/am/ProcessList;->updateApplicationInfoLOSP(Ljava/util/List;IZ)V

    .line 16602
    if-eqz v0, :cond_2

    .line 16605
    invoke-static {}, Landroid/app/ActivityThread;->currentActivityThread()Landroid/app/ActivityThread;

    move-result-object v1

    invoke-virtual {v1}, Landroid/app/ActivityThread;->getExecutor()Ljava/util/concurrent/Executor;

    move-result-object v1

    .line 16606
    .local v1, "executor":Ljava/util/concurrent/Executor;
    const-class v2, Landroid/hardware/display/DisplayManagerInternal;

    .line 16607
    invoke-static {v2}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/hardware/display/DisplayManagerInternal;

    .line 16608
    .local v2, "display":Landroid/hardware/display/DisplayManagerInternal;
    if-eqz v2, :cond_1

    .line 16609
    invoke-static {v2}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    new-instance v3, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda4;

    invoke-direct {v3, v2}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda4;-><init>(Landroid/hardware/display/DisplayManagerInternal;)V

    invoke-interface {v1, v3}, Ljava/util/concurrent/Executor;->execute(Ljava/lang/Runnable;)V

    .line 16611
    :cond_1
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    if-eqz v3, :cond_2

    .line 16612
    invoke-static {v3}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    new-instance v4, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda17;

    invoke-direct {v4, v3}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda17;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    invoke-interface {v1, v4}, Ljava/util/concurrent/Executor;->execute(Ljava/lang/Runnable;)V

    .line 16615
    .end local v1    # "executor":Ljava/util/concurrent/Executor;
    .end local v2    # "display":Landroid/hardware/display/DisplayManagerInternal;
    :cond_2
    return-void
.end method

.method private updateAssociationForApp(Landroid/content/pm/ApplicationInfo;)V
    .locals 2
    .param p1, "appInfo"    # Landroid/content/pm/ApplicationInfo;

    .line 2455
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->ensureAllowedAssociations()V

    .line 2456
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAllowedAssociations:Landroid/util/ArrayMap;

    iget-object v1, p1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v0, v1}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/ActivityManagerService$PackageAssociationInfo;

    .line 2457
    .local v0, "pai":Lcom/android/server/am/ActivityManagerService$PackageAssociationInfo;
    if-eqz v0, :cond_1

    .line 2458
    iget v1, p1, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v1, v1, 0x2

    if-eqz v1, :cond_0

    const/4 v1, 0x1

    goto :goto_0

    :cond_0
    const/4 v1, 0x0

    :goto_0
    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService$PackageAssociationInfo;->setDebuggable(Z)V

    .line 2460
    :cond_1
    return-void
.end method

.method private updateForceBackgroundCheck(Z)V
    .locals 2
    .param p1, "enabled"    # Z

    .line 7780
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 7781
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 7782
    iget-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mForceBackgroundCheck:Z

    if-eq v1, p1, :cond_0

    .line 7783
    iput-boolean p1, p0, Lcom/android/server/am/ActivityManagerService;->mForceBackgroundCheck:Z

    .line 7789
    if-eqz p1, :cond_0

    .line 7791
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v1}, Lcom/android/server/am/ProcessList;->doStopUidForIdleUidsLocked()V

    .line 7794
    :cond_0
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 7795
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 7796
    return-void

    .line 7794
    :catchall_0
    move-exception v1

    :try_start_3
    monitor-exit v0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "enabled":Z
    throw v1

    .line 7795
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "enabled":Z
    :catchall_1
    move-exception v0

    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method private updatePhantomProcessCpuTimeLPr(JZJILcom/android/server/am/ProcessRecord;)V
    .locals 12
    .param p1, "uptimeSince"    # J
    .param p3, "doCpuKills"    # Z
    .param p4, "checkDur"    # J
    .param p6, "cpuLimit"    # I
    .param p7, "app"    # Lcom/android/server/am/ProcessRecord;

    .line 14303
    move-object v9, p0

    iget-object v10, v9, Lcom/android/server/am/ActivityManagerService;->mPhantomProcessList:Lcom/android/server/am/PhantomProcessList;

    new-instance v11, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda37;

    move-object v0, v11

    move-object v1, p0

    move-wide v2, p1

    move v4, p3

    move-object/from16 v5, p7

    move/from16 v6, p6

    move-wide/from16 v7, p4

    invoke-direct/range {v0 .. v8}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda37;-><init>(Lcom/android/server/am/ActivityManagerService;JZLcom/android/server/am/ProcessRecord;IJ)V

    move-object/from16 v0, p7

    invoke-virtual {v10, v0, v11}, Lcom/android/server/am/PhantomProcessList;->forEachPhantomProcessOfApp(Lcom/android/server/am/ProcessRecord;Ljava/util/function/Function;)V

    .line 14323
    return-void
.end method

.method private watchDeviceProvisioning(Landroid/content/Context;)V
    .locals 6
    .param p1, "context"    # Landroid/content/Context;

    .line 7750
    invoke-direct {p0, p1}, Lcom/android/server/am/ActivityManagerService;->isDeviceProvisioned(Landroid/content/Context;)Z

    move-result v0

    if-eqz v0, :cond_0

    .line 7751
    const-string/jumbo v0, "persist.sys.device_provisioned"

    const-string v1, "1"

    invoke-static {v0, v1}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V

    goto :goto_0

    .line 7754
    :cond_0
    invoke-virtual {p1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v0

    .line 7755
    const-string v1, "device_provisioned"

    invoke-static {v1}, Landroid/provider/Settings$Global;->getUriFor(Ljava/lang/String;)Landroid/net/Uri;

    move-result-object v1

    const/4 v2, 0x0

    new-instance v3, Lcom/android/server/am/ActivityManagerService$14;

    new-instance v4, Landroid/os/Handler;

    .line 7756
    invoke-static {}, Landroid/os/Looper;->getMainLooper()Landroid/os/Looper;

    move-result-object v5

    invoke-direct {v4, v5}, Landroid/os/Handler;-><init>(Landroid/os/Looper;)V

    invoke-direct {v3, p0, v4, p1}, Lcom/android/server/am/ActivityManagerService$14;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/os/Handler;Landroid/content/Context;)V

    .line 7754
    invoke-virtual {v0, v1, v2, v3}, Landroid/content/ContentResolver;->registerContentObserver(Landroid/net/Uri;ZLandroid/database/ContentObserver;)V

    .line 7766
    :goto_0
    return-void
.end method


# virtual methods
.method final addAppLocked(Landroid/content/pm/ApplicationInfo;Ljava/lang/String;ZLjava/lang/String;I)Lcom/android/server/am/ProcessRecord;
    .locals 7
    .param p1, "info"    # Landroid/content/pm/ApplicationInfo;
    .param p2, "customProcess"    # Ljava/lang/String;
    .param p3, "isolated"    # Z
    .param p4, "abiOverride"    # Ljava/lang/String;
    .param p5, "zygotePolicyFlags"    # I

    .line 6190
    const/4 v4, 0x0

    move-object v0, p0

    move-object v1, p1

    move-object v2, p2

    move v3, p3

    move-object v5, p4

    move v6, p5

    invoke-virtual/range {v0 .. v6}, Lcom/android/server/am/ActivityManagerService;->addAppLocked(Landroid/content/pm/ApplicationInfo;Ljava/lang/String;ZZLjava/lang/String;I)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    return-object v0
.end method

.method final addAppLocked(Landroid/content/pm/ApplicationInfo;Ljava/lang/String;ZZLjava/lang/String;I)Lcom/android/server/am/ProcessRecord;
    .locals 8
    .param p1, "info"    # Landroid/content/pm/ApplicationInfo;
    .param p2, "customProcess"    # Ljava/lang/String;
    .param p3, "isolated"    # Z
    .param p4, "disableHiddenApiChecks"    # Z
    .param p5, "abiOverride"    # Ljava/lang/String;
    .param p6, "zygotePolicyFlags"    # I

    .line 6197
    const/4 v5, 0x0

    move-object v0, p0

    move-object v1, p1

    move-object v2, p2

    move v3, p3

    move v4, p4

    move-object v6, p5

    move v7, p6

    invoke-virtual/range {v0 .. v7}, Lcom/android/server/am/ActivityManagerService;->addAppLocked(Landroid/content/pm/ApplicationInfo;Ljava/lang/String;ZZZLjava/lang/String;I)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    return-object v0
.end method

.method final addAppLocked(Landroid/content/pm/ApplicationInfo;Ljava/lang/String;ZZZLjava/lang/String;I)Lcom/android/server/am/ProcessRecord;
    .locals 18
    .param p1, "info"    # Landroid/content/pm/ApplicationInfo;
    .param p2, "customProcess"    # Ljava/lang/String;
    .param p3, "isolated"    # Z
    .param p4, "disableHiddenApiChecks"    # Z
    .param p5, "disableTestApiChecks"    # Z
    .param p6, "abiOverride"    # Ljava/lang/String;
    .param p7, "zygotePolicyFlags"    # I

    .line 6207
    move-object/from16 v1, p0

    move-object/from16 v8, p1

    if-nez p3, :cond_1

    .line 6208
    if-eqz p2, :cond_0

    move-object/from16 v0, p2

    goto :goto_0

    :cond_0
    iget-object v0, v8, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    :goto_0
    iget v2, v8, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v1, v0, v2}, Lcom/android/server/am/ActivityManagerService;->getProcessRecordLocked(Ljava/lang/String;I)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    .local v0, "app":Lcom/android/server/am/ProcessRecord;
    goto :goto_1

    .line 6211
    .end local v0    # "app":Lcom/android/server/am/ProcessRecord;
    :cond_1
    const/4 v0, 0x0

    .line 6214
    .restart local v0    # "app":Lcom/android/server/am/ProcessRecord;
    :goto_1
    const/4 v9, 0x0

    const-string v10, "added application"

    if-nez v0, :cond_3

    .line 6215
    iget-object v2, v1, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    const/4 v6, 0x0

    new-instance v7, Lcom/android/server/am/HostingRecord;

    .line 6217
    if-eqz p2, :cond_2

    move-object/from16 v3, p2

    goto :goto_2

    :cond_2
    iget-object v3, v8, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    :goto_2
    invoke-direct {v7, v10, v3}, Lcom/android/server/am/HostingRecord;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .line 6215
    move-object/from16 v3, p1

    move-object/from16 v4, p2

    move/from16 v5, p3

    invoke-virtual/range {v2 .. v7}, Lcom/android/server/am/ProcessList;->newProcessRecordLocked(Landroid/content/pm/ApplicationInfo;Ljava/lang/String;ZILcom/android/server/am/HostingRecord;)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    .line 6218
    const/4 v2, 0x0

    invoke-virtual {v1, v0, v9, v2}, Lcom/android/server/am/ActivityManagerService;->updateLruProcessLocked(Lcom/android/server/am/ProcessRecord;ZLcom/android/server/am/ProcessRecord;)V

    .line 6219
    const-string/jumbo v2, "updateOomAdj_processBegin"

    invoke-virtual {v1, v0, v2}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;)Z

    move-object v2, v0

    goto :goto_3

    .line 6214
    :cond_3
    move-object v2, v0

    .line 6223
    .end local v0    # "app":Lcom/android/server/am/ProcessRecord;
    .local v2, "app":Lcom/android/server/am/ProcessRecord;
    :goto_3
    iget-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    iget-object v3, v8, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget v4, v2, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-static {v4}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v4

    const/16 v5, 0x1f

    invoke-virtual {v0, v3, v4, v5}, Landroid/app/usage/UsageStatsManagerInternal;->reportEvent(Ljava/lang/String;II)V

    .line 6228
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v0

    iget-object v3, v8, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget v4, v2, Lcom/android/server/am/ProcessRecord;->uid:I

    .line 6229
    invoke-static {v4}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v4

    .line 6228
    invoke-interface {v0, v3, v9, v4}, Landroid/content/pm/IPackageManager;->setPackageStoppedState(Ljava/lang/String;ZI)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_1
    .catch Ljava/lang/IllegalArgumentException; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_4

    .line 6231
    :catch_0
    move-exception v0

    .line 6232
    .local v0, "e":Ljava/lang/IllegalArgumentException;
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Failed trying to unstop package "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v4, v8, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v4, ": "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    const-string v4, "ActivityManager"

    invoke-static {v4, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_5

    .line 6230
    .end local v0    # "e":Ljava/lang/IllegalArgumentException;
    :catch_1
    move-exception v0

    .line 6234
    :goto_4
    nop

    .line 6236
    :goto_5
    iget v0, v8, Landroid/content/pm/ApplicationInfo;->flags:I

    const/16 v3, 0x9

    and-int/2addr v0, v3

    if-ne v0, v3, :cond_4

    .line 6237
    const/4 v0, 0x1

    invoke-virtual {v2, v0}, Lcom/android/server/am/ProcessRecord;->setPersistent(Z)V

    .line 6238
    iget-object v0, v2, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    const/16 v3, -0x320

    invoke-virtual {v0, v3}, Lcom/android/server/am/ProcessStateRecord;->setMaxAdj(I)V

    .line 6240
    :cond_4
    invoke-virtual {v2}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v0

    if-nez v0, :cond_6

    iget-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mPersistentStartingProcesses:Ljava/util/ArrayList;

    invoke-virtual {v0, v2}, Ljava/util/ArrayList;->indexOf(Ljava/lang/Object;)I

    move-result v0

    if-gez v0, :cond_6

    .line 6241
    iget-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mPersistentStartingProcesses:Ljava/util/ArrayList;

    invoke-virtual {v0, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 6242
    iget-object v11, v1, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    new-instance v13, Lcom/android/server/am/HostingRecord;

    .line 6243
    if-eqz p2, :cond_5

    move-object/from16 v0, p2

    goto :goto_6

    :cond_5
    iget-object v0, v2, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    :goto_6
    invoke-direct {v13, v10, v0}, Lcom/android/server/am/HostingRecord;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .line 6242
    move-object v12, v2

    move/from16 v14, p7

    move/from16 v15, p4

    move/from16 v16, p5

    move-object/from16 v17, p6

    invoke-virtual/range {v11 .. v17}, Lcom/android/server/am/ProcessList;->startProcessLocked(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/HostingRecord;IZZLjava/lang/String;)Z

    .line 6248
    :cond_6
    return-object v2
.end method

.method final addBackgroundCheckViolationLocked(Ljava/lang/String;Ljava/lang/String;)V
    .locals 1
    .param p1, "action"    # Ljava/lang/String;
    .param p2, "targetPackage"    # Ljava/lang/String;

    .line 13512
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->rotateBroadcastStatsIfNeededLocked()V

    .line 13513
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCurBroadcastStats:Lcom/android/server/am/BroadcastStats;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/am/BroadcastStats;->addBackgroundCheckViolation(Ljava/lang/String;Ljava/lang/String;)V

    .line 13514
    return-void
.end method

.method final addBroadcastStatLocked(Ljava/lang/String;Ljava/lang/String;IIJ)V
    .locals 7
    .param p1, "action"    # Ljava/lang/String;
    .param p2, "srcPackage"    # Ljava/lang/String;
    .param p3, "receiveCount"    # I
    .param p4, "skipCount"    # I
    .param p5, "dispatchTime"    # J

    .line 13507
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->rotateBroadcastStatsIfNeededLocked()V

    .line 13508
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCurBroadcastStats:Lcom/android/server/am/BroadcastStats;

    move-object v1, p1

    move-object v2, p2

    move v3, p3

    move v4, p4

    move-wide v5, p5

    invoke-virtual/range {v0 .. v6}, Lcom/android/server/am/BroadcastStats;->addBroadcast(Ljava/lang/String;Ljava/lang/String;IIJ)V

    .line 13509
    return-void
.end method

.method public addErrorToDropBox(Ljava/lang/String;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Ljava/io/File;Landroid/app/ApplicationErrorReport$CrashInfo;Ljava/lang/Float;Landroid/os/incremental/IncrementalMetrics;Ljava/util/UUID;)V
    .locals 21
    .param p1, "eventType"    # Ljava/lang/String;
    .param p2, "process"    # Lcom/android/server/am/ProcessRecord;
    .param p3, "processName"    # Ljava/lang/String;
    .param p4, "activityShortComponentName"    # Ljava/lang/String;
    .param p5, "parentShortComponentName"    # Ljava/lang/String;
    .param p6, "parentProcess"    # Lcom/android/server/am/ProcessRecord;
    .param p7, "subject"    # Ljava/lang/String;
    .param p8, "report"    # Ljava/lang/String;
    .param p9, "dataFile"    # Ljava/io/File;
    .param p10, "crashInfo"    # Landroid/app/ApplicationErrorReport$CrashInfo;
    .param p11, "loadingProgress"    # Ljava/lang/Float;
    .param p12, "incrementalMetrics"    # Landroid/os/incremental/IncrementalMetrics;
    .param p13, "errorId"    # Ljava/util/UUID;

    .line 8230
    move-object/from16 v10, p0

    move-object/from16 v11, p1

    move-object/from16 v12, p2

    move-object/from16 v13, p4

    move-object/from16 v14, p5

    move-object/from16 v15, p6

    move-object/from16 v9, p7

    move-object/from16 v8, p10

    const-string v0, "dropbox"

    invoke-static {v0}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v0

    if-nez v0, :cond_0

    return-void

    .line 8231
    :cond_0
    iget-object v0, v10, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    const-class v1, Landroid/os/DropBoxManager;

    invoke-virtual {v0, v1}, Landroid/content/Context;->getSystemService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v0

    move-object v7, v0

    check-cast v7, Landroid/os/DropBoxManager;

    .line 8234
    .local v7, "dbox":Landroid/os/DropBoxManager;
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    invoke-static/range {p2 .. p2}, Lcom/android/server/am/ActivityManagerService;->processClass(Lcom/android/server/am/ProcessRecord;)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "_"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    .line 8235
    .local v6, "dropboxTag":Ljava/lang/String;
    if-eqz v7, :cond_11

    invoke-virtual {v7, v6}, Landroid/os/DropBoxManager;->isTagEnabled(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_1

    move-object/from16 v19, v6

    move-object/from16 v20, v7

    goto/16 :goto_5

    .line 8239
    :cond_1
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v16

    .line 8240
    .local v16, "now":J
    iget-object v1, v10, Lcom/android/server/am/ActivityManagerService;->mErrorClusterRecords:Landroid/util/ArrayMap;

    monitor-enter v1

    .line 8241
    :try_start_0
    iget-object v0, v10, Lcom/android/server/am/ActivityManagerService;->mErrorClusterRecords:Landroid/util/ArrayMap;

    invoke-virtual {v0, v11}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, [J
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_2

    .line 8242
    .local v0, "errRecord":[J
    if-nez v0, :cond_2

    .line 8243
    const/4 v2, 0x2

    :try_start_1
    new-array v2, v2, [J

    move-object v0, v2

    .line 8244
    iget-object v2, v10, Lcom/android/server/am/ActivityManagerService;->mErrorClusterRecords:Landroid/util/ArrayMap;

    invoke-virtual {v2, v11, v0}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_0

    .line 8252
    .end local v0    # "errRecord":[J
    :catchall_0
    move-exception v0

    move-object/from16 v19, v6

    move-object/from16 v20, v7

    goto/16 :goto_4

    .line 8246
    .restart local v0    # "errRecord":[J
    :cond_2
    :goto_0
    const/4 v2, 0x0

    :try_start_2
    aget-wide v3, v0, v2
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_2

    sub-long v3, v16, v3

    const-wide/16 v18, 0x2710

    cmp-long v3, v3, v18

    const-wide/16 v4, 0x1

    const/16 v18, 0x1

    if-lez v3, :cond_3

    .line 8247
    :try_start_3
    aput-wide v16, v0, v2

    .line 8248
    aput-wide v4, v0, v18
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    goto :goto_1

    .line 8250
    :cond_3
    :try_start_4
    aget-wide v2, v0, v18

    add-long/2addr v4, v2

    aput-wide v4, v0, v18
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_2

    const-wide/16 v4, 0x5

    cmp-long v2, v2, v4

    if-ltz v2, :cond_4

    :try_start_5
    monitor-exit v1
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    return-void

    .line 8252
    .end local v0    # "errRecord":[J
    :cond_4
    :goto_1
    :try_start_6
    monitor-exit v1
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_2

    .line 8254
    new-instance v0, Ljava/lang/StringBuilder;

    const/16 v1, 0x400

    invoke-direct {v0, v1}, Ljava/lang/StringBuilder;-><init>(I)V

    move-object v5, v0

    .line 8255
    .local v5, "sb":Ljava/lang/StringBuilder;
    move-object/from16 v4, p3

    invoke-virtual {v10, v12, v4, v5}, Lcom/android/server/am/ActivityManagerService;->appendDropBoxProcessHeaders(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/StringBuilder;)V

    .line 8256
    const-wide/16 v0, 0x0

    if-eqz v12, :cond_6

    .line 8257
    const-string v2, "Foreground: "

    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 8258
    invoke-virtual/range {p2 .. p2}, Lcom/android/server/am/ProcessRecord;->isInterestingToUserLocked()Z

    move-result v2

    if-eqz v2, :cond_5

    const-string v2, "Yes"

    goto :goto_2

    :cond_5
    const-string v2, "No"

    :goto_2
    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "\n"

    .line 8259
    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 8260
    invoke-virtual/range {p2 .. p2}, Lcom/android/server/am/ProcessRecord;->getStartTime()J

    move-result-wide v2

    cmp-long v2, v2, v0

    if-lez v2, :cond_6

    .line 8261
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v2

    invoke-virtual/range {p2 .. p2}, Lcom/android/server/am/ProcessRecord;->getStartTime()J

    move-result-wide v18

    sub-long v2, v2, v18

    .line 8262
    .local v2, "runtimeMillis":J
    const-string v0, "Process-Runtime: "

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v2, v3}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string v0, "\n"

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 8265
    .end local v2    # "runtimeMillis":J
    :cond_6
    if-eqz v13, :cond_7

    .line 8266
    const-string v0, "Activity: "

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "\n"

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 8268
    :cond_7
    if-eqz v14, :cond_9

    .line 8269
    if-eqz v15, :cond_8

    invoke-virtual/range {p6 .. p6}, Lcom/android/server/am/ProcessRecord;->getPid()I

    move-result v0

    invoke-virtual/range {p2 .. p2}, Lcom/android/server/am/ProcessRecord;->getPid()I

    move-result v1

    if-eq v0, v1, :cond_8

    .line 8270
    const-string v0, "Parent-Process: "

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v0, v15, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "\n"

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 8272
    :cond_8
    invoke-virtual {v14, v13}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_9

    .line 8273
    const-string v0, "Parent-Activity: "

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "\n"

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 8276
    :cond_9
    if-eqz v9, :cond_a

    .line 8277
    const-string v0, "Subject: "

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "\n"

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 8279
    :cond_a
    if-eqz p13, :cond_b

    .line 8280
    const-string v0, "ErrorId: "

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual/range {p13 .. p13}, Ljava/util/UUID;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "\n"

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 8282
    :cond_b
    const-string v0, "Build: "

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object v0, Landroid/os/Build;->FINGERPRINT:Ljava/lang/String;

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "\n"

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 8283
    invoke-static {}, Landroid/os/Debug;->isDebuggerConnected()Z

    move-result v0

    if-eqz v0, :cond_c

    .line 8284
    const-string v0, "Debugger: Connected\n"

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 8286
    :cond_c
    if-eqz v8, :cond_d

    iget-object v0, v8, Landroid/app/ApplicationErrorReport$CrashInfo;->crashTag:Ljava/lang/String;

    if-eqz v0, :cond_d

    iget-object v0, v8, Landroid/app/ApplicationErrorReport$CrashInfo;->crashTag:Ljava/lang/String;

    invoke-virtual {v0}, Ljava/lang/String;->isEmpty()Z

    move-result v0

    if-nez v0, :cond_d

    .line 8287
    const-string v0, "Crash-Tag: "

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v0, v8, Landroid/app/ApplicationErrorReport$CrashInfo;->crashTag:Ljava/lang/String;

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "\n"

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 8289
    :cond_d
    if-eqz p11, :cond_e

    .line 8290
    const-string v0, "Loading-Progress: "

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual/range {p11 .. p11}, Ljava/lang/Float;->floatValue()F

    move-result v0

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(F)Ljava/lang/StringBuilder;

    const-string v0, "\n"

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 8292
    :cond_e
    if-eqz p12, :cond_f

    .line 8293
    const-string v0, "Incremental: Yes"

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "\n"

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 8294
    nop

    .line 8295
    invoke-virtual/range {p12 .. p12}, Landroid/os/incremental/IncrementalMetrics;->getMillisSinceOldestPendingRead()J

    move-result-wide v0

    .line 8296
    .local v0, "millisSinceOldestPendingRead":J
    const-wide/16 v2, 0x0

    cmp-long v2, v0, v2

    if-lez v2, :cond_f

    .line 8297
    const-string v2, "Millis-Since-Oldest-Pending-Read: "

    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v0, v1}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string v2, "\n"

    .line 8298
    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 8301
    .end local v0    # "millisSinceOldestPendingRead":J
    :cond_f
    const-string v0, "\n"

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 8305
    new-instance v0, Lcom/android/server/am/ActivityManagerService$16;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Error dump: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    move-object v1, v0

    move-object/from16 v2, p0

    move-object/from16 v4, p8

    move-object/from16 v18, v5

    .end local v5    # "sb":Ljava/lang/StringBuilder;
    .local v18, "sb":Ljava/lang/StringBuilder;
    move-object/from16 v19, v6

    .end local v6    # "dropboxTag":Ljava/lang/String;
    .local v19, "dropboxTag":Ljava/lang/String;
    move-object/from16 v20, v7

    .end local v7    # "dbox":Landroid/os/DropBoxManager;
    .local v20, "dbox":Landroid/os/DropBoxManager;
    move-object/from16 v7, p9

    move-object/from16 v8, p10

    move-object/from16 v9, v20

    invoke-direct/range {v1 .. v9}, Lcom/android/server/am/ActivityManagerService$16;-><init>(Lcom/android/server/am/ActivityManagerService;Ljava/lang/String;Ljava/lang/String;Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/io/File;Landroid/app/ApplicationErrorReport$CrashInfo;Landroid/os/DropBoxManager;)V

    .line 8362
    .local v1, "worker":Ljava/lang/Thread;
    if-nez v12, :cond_10

    .line 8365
    invoke-static {}, Landroid/os/StrictMode;->allowThreadDiskWritesMask()I

    move-result v2

    .line 8367
    .local v2, "oldMask":I
    :try_start_7
    invoke-virtual {v1}, Ljava/lang/Thread;->run()V
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_1

    .line 8369
    invoke-static {v2}, Landroid/os/StrictMode;->setThreadPolicyMask(I)V

    .line 8370
    nop

    .line 8371
    .end local v2    # "oldMask":I
    goto :goto_3

    .line 8369
    .restart local v2    # "oldMask":I
    :catchall_1
    move-exception v0

    move-object v3, v0

    invoke-static {v2}, Landroid/os/StrictMode;->setThreadPolicyMask(I)V

    .line 8370
    throw v3

    .line 8372
    .end local v2    # "oldMask":I
    :cond_10
    invoke-virtual {v1}, Ljava/lang/Thread;->start()V

    .line 8374
    :goto_3
    return-void

    .line 8252
    .end local v1    # "worker":Ljava/lang/Thread;
    .end local v18    # "sb":Ljava/lang/StringBuilder;
    .end local v19    # "dropboxTag":Ljava/lang/String;
    .end local v20    # "dbox":Landroid/os/DropBoxManager;
    .restart local v6    # "dropboxTag":Ljava/lang/String;
    .restart local v7    # "dbox":Landroid/os/DropBoxManager;
    :catchall_2
    move-exception v0

    move-object/from16 v19, v6

    move-object/from16 v20, v7

    .end local v6    # "dropboxTag":Ljava/lang/String;
    .end local v7    # "dbox":Landroid/os/DropBoxManager;
    .restart local v19    # "dropboxTag":Ljava/lang/String;
    .restart local v20    # "dbox":Landroid/os/DropBoxManager;
    :goto_4
    :try_start_8
    monitor-exit v1
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_3

    throw v0

    :catchall_3
    move-exception v0

    goto :goto_4

    .line 8235
    .end local v16    # "now":J
    .end local v19    # "dropboxTag":Ljava/lang/String;
    .end local v20    # "dbox":Landroid/os/DropBoxManager;
    .restart local v6    # "dropboxTag":Ljava/lang/String;
    .restart local v7    # "dbox":Landroid/os/DropBoxManager;
    :cond_11
    move-object/from16 v19, v6

    move-object/from16 v20, v7

    .end local v6    # "dropboxTag":Ljava/lang/String;
    .end local v7    # "dbox":Landroid/os/DropBoxManager;
    .restart local v19    # "dropboxTag":Ljava/lang/String;
    .restart local v20    # "dbox":Landroid/os/DropBoxManager;
    :goto_5
    return-void
.end method

.method public addInstrumentationResults(Landroid/app/IApplicationThread;Landroid/os/Bundle;)V
    .locals 5
    .param p1, "target"    # Landroid/app/IApplicationThread;
    .param p2, "results"    # Landroid/os/Bundle;

    .line 13920
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v0

    .line 13922
    .local v0, "userId":I
    if-eqz p2, :cond_1

    invoke-virtual {p2}, Landroid/os/Bundle;->hasFileDescriptors()Z

    move-result v1

    if-nez v1, :cond_0

    goto :goto_0

    .line 13923
    :cond_0
    new-instance v1, Ljava/lang/IllegalArgumentException;

    const-string v2, "File descriptors passed in Intent"

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 13926
    :cond_1
    :goto_0
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 13927
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLOSP(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;

    move-result-object v1

    .line 13928
    .local v1, "app":Lcom/android/server/am/ProcessRecord;
    if-nez v1, :cond_2

    .line 13929
    const-string v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "addInstrumentationResults: no app for "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 13930
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 13932
    :cond_2
    :try_start_1
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 13934
    .local v2, "origId":J
    :try_start_2
    invoke-virtual {p0, v1, p2}, Lcom/android/server/am/ActivityManagerService;->addInstrumentationResultsLocked(Lcom/android/server/am/ProcessRecord;Landroid/os/Bundle;)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 13936
    :try_start_3
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 13937
    nop

    .line 13938
    .end local v1    # "app":Lcom/android/server/am/ProcessRecord;
    .end local v2    # "origId":J
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 13939
    return-void

    .line 13936
    .restart local v1    # "app":Lcom/android/server/am/ProcessRecord;
    .restart local v2    # "origId":J
    :catchall_0
    move-exception v4

    :try_start_4
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 13937
    nop

    .end local v0    # "userId":I
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "target":Landroid/app/IApplicationThread;
    .end local p2    # "results":Landroid/os/Bundle;
    throw v4

    .line 13938
    .end local v1    # "app":Lcom/android/server/am/ProcessRecord;
    .end local v2    # "origId":J
    .restart local v0    # "userId":I
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "target":Landroid/app/IApplicationThread;
    .restart local p2    # "results":Landroid/os/Bundle;
    :catchall_1
    move-exception v1

    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method addInstrumentationResultsLocked(Lcom/android/server/am/ProcessRecord;Landroid/os/Bundle;)V
    .locals 3
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "results"    # Landroid/os/Bundle;

    .line 13904
    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->getActiveInstrumentation()Lcom/android/server/am/ActiveInstrumentation;

    move-result-object v0

    .line 13905
    .local v0, "instr":Lcom/android/server/am/ActiveInstrumentation;
    if-nez v0, :cond_0

    .line 13906
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "finishInstrumentation called on non-instrumented: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    const-string v2, "ActivityManager"

    invoke-static {v2, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 13907
    return-void

    .line 13910
    :cond_0
    iget-boolean v1, v0, Lcom/android/server/am/ActiveInstrumentation;->mFinished:Z

    if-nez v1, :cond_2

    if-eqz p2, :cond_2

    .line 13911
    iget-object v1, v0, Lcom/android/server/am/ActiveInstrumentation;->mCurResults:Landroid/os/Bundle;

    if-nez v1, :cond_1

    .line 13912
    new-instance v1, Landroid/os/Bundle;

    invoke-direct {v1, p2}, Landroid/os/Bundle;-><init>(Landroid/os/Bundle;)V

    iput-object v1, v0, Lcom/android/server/am/ActiveInstrumentation;->mCurResults:Landroid/os/Bundle;

    goto :goto_0

    .line 13914
    :cond_1
    iget-object v1, v0, Lcom/android/server/am/ActiveInstrumentation;->mCurResults:Landroid/os/Bundle;

    invoke-virtual {v1, p2}, Landroid/os/Bundle;->putAll(Landroid/os/Bundle;)V

    .line 13917
    :cond_2
    :goto_0
    return-void
.end method

.method public addPackageDependency(Ljava/lang/String;)V
    .locals 6
    .param p1, "packageName"    # Ljava/lang/String;

    .line 3744
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v0

    .line 3745
    .local v0, "callingPid":I
    invoke-static {}, Landroid/os/Process;->myPid()I

    move-result v1

    if-ne v0, v1, :cond_0

    .line 3747
    return-void

    .line 3750
    :cond_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    monitor-enter v1

    .line 3751
    :try_start_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v3

    invoke-virtual {v2, v3}, Lcom/android/server/am/ActivityManagerService$PidMap;->get(I)Lcom/android/server/am/ProcessRecord;

    move-result-object v2

    .line 3752
    .local v2, "proc":Lcom/android/server/am/ProcessRecord;
    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_2

    .line 3753
    if-eqz v2, :cond_2

    .line 3754
    invoke-virtual {v2}, Lcom/android/server/am/ProcessRecord;->getPkgDeps()Landroid/util/ArraySet;

    move-result-object v1

    .line 3755
    .local v1, "pkgDeps":Landroid/util/ArraySet;, "Landroid/util/ArraySet<Ljava/lang/String;>;"
    monitor-enter p0

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 3756
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v3
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    :try_start_2
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 3757
    if-nez v1, :cond_1

    .line 3758
    new-instance v4, Landroid/util/ArraySet;

    const/4 v5, 0x1

    invoke-direct {v4, v5}, Landroid/util/ArraySet;-><init>(I)V

    move-object v1, v4

    invoke-virtual {v2, v4}, Lcom/android/server/am/ProcessRecord;->setPkgDeps(Landroid/util/ArraySet;)V

    .line 3760
    :cond_1
    invoke-virtual {v1, p1}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z

    .line 3761
    monitor-exit v3
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 3762
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    goto :goto_0

    .line 3761
    :catchall_0
    move-exception v4

    :try_start_4
    monitor-exit v3
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    :try_start_5
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .end local v0    # "callingPid":I
    .end local v1    # "pkgDeps":Landroid/util/ArraySet;, "Landroid/util/ArraySet<Ljava/lang/String;>;"
    .end local v2    # "proc":Lcom/android/server/am/ProcessRecord;
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "packageName":Ljava/lang/String;
    throw v4

    .line 3762
    .restart local v0    # "callingPid":I
    .restart local v1    # "pkgDeps":Landroid/util/ArraySet;, "Landroid/util/ArraySet<Ljava/lang/String;>;"
    .restart local v2    # "proc":Lcom/android/server/am/ProcessRecord;
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "packageName":Ljava/lang/String;
    :catchall_1
    move-exception v3

    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v3

    .line 3764
    .end local v1    # "pkgDeps":Landroid/util/ArraySet;, "Landroid/util/ArraySet<Ljava/lang/String;>;"
    :cond_2
    :goto_0
    return-void

    .line 3752
    .end local v2    # "proc":Lcom/android/server/am/ProcessRecord;
    :catchall_2
    move-exception v2

    :try_start_6
    monitor-exit v1
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_2

    throw v2
.end method

.method addPidLocked(Lcom/android/server/am/ProcessRecord;)V
    .locals 3
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;

    .line 886
    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->getPid()I

    move-result v0

    .line 887
    .local v0, "pid":I
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    monitor-enter v1

    .line 888
    :try_start_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-virtual {v2, v0, p1}, Lcom/android/server/am/ActivityManagerService$PidMap;->doAddInternal(ILcom/android/server/am/ProcessRecord;)V

    .line 889
    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 890
    sget-object v2, Lcom/android/server/am/ActivityManagerService;->sActiveProcessInfoSelfLocked:Landroid/util/SparseArray;

    monitor-enter v2

    .line 891
    :try_start_1
    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->processInfo:Landroid/content/pm/ProcessInfo;

    if-eqz v1, :cond_0

    .line 892
    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->processInfo:Landroid/content/pm/ProcessInfo;

    invoke-virtual {v2, v0, v1}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    goto :goto_0

    .line 894
    :cond_0
    invoke-virtual {v2, v0}, Landroid/util/SparseArray;->remove(I)V

    .line 896
    :goto_0
    monitor-exit v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 897
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->getWindowProcessController()Lcom/android/server/wm/WindowProcessController;

    move-result-object v2

    invoke-virtual {v1, v0, v2}, Lcom/android/server/wm/ActivityTaskManagerInternal;->onProcessMapped(ILcom/android/server/wm/WindowProcessController;)V

    .line 898
    return-void

    .line 896
    :catchall_0
    move-exception v1

    :try_start_2
    monitor-exit v2
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v1

    .line 889
    :catchall_1
    move-exception v2

    :try_start_3
    monitor-exit v1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    throw v2
.end method

.method final appDiedLocked(Lcom/android/server/am/ProcessRecord;ILandroid/app/IApplicationThread;ZLjava/lang/String;)V
    .locals 16
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "pid"    # I
    .param p3, "thread"    # Landroid/app/IApplicationThread;
    .param p4, "fromBinderDied"    # Z
    .param p5, "reason"    # Ljava/lang/String;

    .line 3074
    move-object/from16 v7, p0

    move-object/from16 v8, p1

    move/from16 v9, p2

    iget-object v1, v7, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    monitor-enter v1

    .line 3075
    :try_start_0
    iget-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-virtual {v0, v9}, Lcom/android/server/am/ActivityManagerService$PidMap;->get(I)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    move-object v10, v0

    .line 3076
    .local v10, "curProc":Lcom/android/server/am/ProcessRecord;
    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 3077
    if-eq v10, v8, :cond_2

    .line 3078
    if-eqz p4, :cond_0

    iget-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v0, v8, v9}, Lcom/android/server/am/ProcessList;->handleDyingAppDeathLocked(Lcom/android/server/am/ProcessRecord;I)Z

    move-result v0

    if-nez v0, :cond_1

    .line 3079
    :cond_0
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Spurious death for "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v2, ", curProc for "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, ": "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 3081
    :cond_1
    return-void

    .line 3084
    :cond_2
    iget-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    iget-object v1, v8, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v1, v1, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v0, v1, v9}, Lcom/android/server/am/BatteryStatsService;->noteProcessDied(II)V

    .line 3086
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/am/ProcessRecord;->isKilled()Z

    move-result v0

    const/4 v1, 0x0

    const/4 v2, 0x1

    if-nez v0, :cond_4

    .line 3087
    if-nez p4, :cond_3

    .line 3088
    invoke-static/range {p2 .. p2}, Landroid/os/Process;->killProcessQuiet(I)V

    .line 3089
    iget-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    const/16 v3, 0xd

    move-object/from16 v11, p5

    invoke-virtual {v0, v8, v3, v1, v11}, Lcom/android/server/am/ProcessList;->noteAppKill(Lcom/android/server/am/ProcessRecord;IILjava/lang/String;)V

    goto :goto_0

    .line 3087
    :cond_3
    move-object/from16 v11, p5

    .line 3092
    :goto_0
    iget v0, v8, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-static {v0, v9}, Lcom/android/server/am/ProcessList;->killProcessGroup(II)V

    .line 3093
    iget-object v3, v7, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v3

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 3094
    invoke-virtual {v8, v2}, Lcom/android/server/am/ProcessRecord;->setKilled(Z)V

    .line 3095
    monitor-exit v3
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    goto :goto_1

    :catchall_0
    move-exception v0

    :try_start_2
    monitor-exit v3
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v0

    .line 3086
    :cond_4
    move-object/from16 v11, p5

    .line 3100
    :goto_1
    iget-object v0, v8, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    invoke-virtual {v0}, Lcom/android/server/am/ProcessStateRecord;->getSetAdj()I

    move-result v0

    .line 3101
    .local v0, "setAdj":I
    iget-object v3, v8, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    invoke-virtual {v3}, Lcom/android/server/am/ProcessStateRecord;->getSetProcState()I

    move-result v12

    .line 3102
    .local v12, "setProcState":I
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/am/ProcessRecord;->getPid()I

    move-result v3

    if-ne v3, v9, :cond_9

    invoke-virtual/range {p1 .. p1}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v3

    move-object v13, v3

    .local v13, "appThread":Landroid/app/IApplicationThread;
    if-eqz v3, :cond_9

    .line 3103
    invoke-interface {v13}, Landroid/app/IApplicationThread;->asBinder()Landroid/os/IBinder;

    move-result-object v3

    invoke-interface/range {p3 .. p3}, Landroid/app/IApplicationThread;->asBinder()Landroid/os/IBinder;

    move-result-object v4

    if-ne v3, v4, :cond_9

    .line 3104
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/am/ProcessRecord;->getActiveInstrumentation()Lcom/android/server/am/ActiveInstrumentation;

    move-result-object v3

    if-nez v3, :cond_5

    move v3, v2

    goto :goto_2

    :cond_5
    move v3, v1

    .line 3105
    .local v3, "doLowMem":Z
    :goto_2
    move v14, v3

    .line 3106
    .local v14, "doOomAdj":Z
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/am/ProcessRecord;->isKilledByAm()Z

    move-result v4

    if-nez v4, :cond_6

    .line 3107
    const-string v1, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Process "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v5, v8, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v5, " (pid "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v5, ") has died: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3109
    invoke-static {v0, v2}, Lcom/android/server/am/ProcessList;->makeOomAdjString(IZ)Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v5, " "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3110
    invoke-static {v12}, Lcom/android/server/am/ProcessList;->makeProcStateString(I)Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    iget-object v5, v8, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v5, v5, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 3107
    invoke-virtual {v7, v1, v4, v5}, Lcom/android/server/am/ActivityManagerService;->reportUidInfoMessageLocked(Ljava/lang/String;Ljava/lang/String;I)V

    .line 3111
    iget-object v1, v7, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    invoke-virtual {v1, v2}, Lcom/android/server/am/AppProfiler;->setAllowLowerMemLevelLocked(Z)V

    move v15, v3

    goto :goto_3

    .line 3115
    :cond_6
    iget-object v2, v7, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    invoke-virtual {v2, v1}, Lcom/android/server/am/AppProfiler;->setAllowLowerMemLevelLocked(Z)V

    .line 3116
    const/4 v3, 0x0

    move v15, v3

    .line 3118
    .end local v3    # "doLowMem":Z
    .local v15, "doLowMem":Z
    :goto_3
    iget v1, v8, Lcom/android/server/am/ProcessRecord;->userId:I

    iget-object v2, v8, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-static {v1, v9, v2, v0, v12}, Lcom/android/server/am/EventLogTags;->writeAmProcDied(IILjava/lang/String;II)V

    .line 3121
    const/4 v4, 0x0

    const/4 v5, 0x1

    move-object/from16 v1, p0

    move-object/from16 v2, p1

    move/from16 v3, p2

    move/from16 v6, p4

    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/ActivityManagerService;->handleAppDiedLocked(Lcom/android/server/am/ProcessRecord;IZZZ)V

    .line 3123
    if-eqz v14, :cond_7

    .line 3124
    const-string/jumbo v1, "updateOomAdj_processEnd"

    invoke-virtual {v7, v1}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked(Ljava/lang/String;)V

    .line 3126
    :cond_7
    if-eqz v15, :cond_8

    .line 3127
    iget-object v1, v7, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    invoke-virtual {v1, v8}, Lcom/android/server/am/AppProfiler;->doLowMemReportIfNeededLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 3129
    .end local v14    # "doOomAdj":Z
    .end local v15    # "doLowMem":Z
    :cond_8
    goto :goto_4

    .end local v13    # "appThread":Landroid/app/IApplicationThread;
    :cond_9
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/am/ProcessRecord;->getPid()I

    move-result v1

    if-eq v1, v9, :cond_a

    .line 3131
    const-string v1, "ActivityManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Process "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v3, v8, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v3, " (pid "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, ") has died and restarted (pid "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3133
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/am/ProcessRecord;->getPid()I

    move-result v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, ")."

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    iget-object v3, v8, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v3, v3, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 3131
    invoke-virtual {v7, v1, v2, v3}, Lcom/android/server/am/ActivityManagerService;->reportUidInfoMessageLocked(Ljava/lang/String;Ljava/lang/String;I)V

    .line 3135
    iget v1, v8, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-virtual/range {p1 .. p1}, Lcom/android/server/am/ProcessRecord;->getPid()I

    move-result v2

    iget-object v3, v8, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-static {v1, v2, v3, v0, v12}, Lcom/android/server/am/EventLogTags;->writeAmProcDied(IILjava/lang/String;II)V

    .line 3144
    :cond_a
    :goto_4
    invoke-static {}, Lcom/android/server/am/MemoryStatUtil;->hasMemcg()Z

    move-result v1

    if-nez v1, :cond_b

    .line 3145
    const/16 v1, 0x41

    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v2

    invoke-static {v1, v2, v3}, Lcom/android/internal/util/FrameworkStatsLog;->write(IJ)V

    .line 3147
    :cond_b
    return-void

    .line 3076
    .end local v0    # "setAdj":I
    .end local v10    # "curProc":Lcom/android/server/am/ProcessRecord;
    .end local v12    # "setProcState":I
    :catchall_1
    move-exception v0

    move-object/from16 v11, p5

    :goto_5
    :try_start_3
    monitor-exit v1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_2

    throw v0

    :catchall_2
    move-exception v0

    goto :goto_5
.end method

.method final appDiedLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;)V
    .locals 6
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "reason"    # Ljava/lang/String;

    .line 3066
    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->getPid()I

    move-result v2

    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v3

    const/4 v4, 0x0

    move-object v0, p0

    move-object v1, p1

    move-object v5, p2

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->appDiedLocked(Lcom/android/server/am/ProcessRecord;ILandroid/app/IApplicationThread;ZLjava/lang/String;)V

    .line 3067
    return-void
.end method

.method public appNotResponding(Ljava/lang/String;)V
    .locals 11
    .param p1, "reason"    # Ljava/lang/String;

    .line 5956
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v0

    .line 5958
    .local v0, "callingPid":I
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    monitor-enter v1

    .line 5959
    :try_start_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-virtual {v2, v0}, Lcom/android/server/am/ActivityManagerService$PidMap;->get(I)Lcom/android/server/am/ProcessRecord;

    move-result-object v2

    .line 5960
    .local v2, "app":Lcom/android/server/am/ProcessRecord;
    if-eqz v2, :cond_0

    .line 5964
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mAnrHelper:Lcom/android/server/am/AnrHelper;

    const/4 v5, 0x0

    iget-object v6, v2, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v10, "App requested: "

    invoke-virtual {v4, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    move-object v4, v2

    invoke-virtual/range {v3 .. v10}, Lcom/android/server/am/AnrHelper;->appNotResponding(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/pm/ApplicationInfo;Ljava/lang/String;Lcom/android/server/wm/WindowProcessController;ZLjava/lang/String;)V

    .line 5966
    .end local v2    # "app":Lcom/android/server/am/ProcessRecord;
    monitor-exit v1

    .line 5967
    return-void

    .line 5961
    .restart local v2    # "app":Lcom/android/server/am/ProcessRecord;
    :cond_0
    new-instance v3, Ljava/lang/SecurityException;

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Unknown process: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-direct {v3, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .end local v0    # "callingPid":I
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "reason":Ljava/lang/String;
    throw v3

    .line 5966
    .end local v2    # "app":Lcom/android/server/am/ProcessRecord;
    .restart local v0    # "callingPid":I
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "reason":Ljava/lang/String;
    :catchall_0
    move-exception v2

    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v2
.end method

.method public appNotRespondingViaProvider(Landroid/os/IBinder;)V
    .locals 1
    .param p1, "connection"    # Landroid/os/IBinder;

    .line 6095
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCpHelper:Lcom/android/server/am/ContentProviderHelper;

    invoke-virtual {v0, p1}, Lcom/android/server/am/ContentProviderHelper;->appNotRespondingViaProvider(Landroid/os/IBinder;)V

    .line 6096
    return-void
.end method

.method appRestrictedInBackgroundLOSP(ILjava/lang/String;I)I
    .locals 9
    .param p1, "uid"    # I
    .param p2, "packageName"    # Ljava/lang/String;
    .param p3, "packageTargetSdk"    # I

    .line 5485
    const/4 v0, 0x2

    const/16 v1, 0x1a

    if-lt p3, v1, :cond_0

    .line 5489
    return v0

    .line 5492
    :cond_0
    iget-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mOnBattery:Z

    const/4 v2, 0x1

    if-eqz v1, :cond_1

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    iget-boolean v1, v1, Lcom/android/server/am/ActivityManagerConstants;->FORCE_BACKGROUND_CHECK_ON_RESTRICTED_APPS:Z

    if-eqz v1, :cond_1

    .line 5495
    invoke-static {p1}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v1

    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v3

    .line 5494
    invoke-direct {p0, v1, p2, v3, v4}, Lcom/android/server/am/ActivityManagerService;->isInRestrictedBucket(ILjava/lang/String;J)Z

    move-result v1

    if-eqz v1, :cond_1

    .line 5499
    return v2

    .line 5502
    :cond_1
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getAppOpsManager()Landroid/app/AppOpsManager;

    move-result-object v3

    const/16 v4, 0x3f

    const/4 v7, 0x0

    const-string v8, ""

    move v5, p1

    move-object v6, p2

    invoke-virtual/range {v3 .. v8}, Landroid/app/AppOpsManager;->noteOpNoThrow(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)I

    move-result v1

    .line 5507
    .local v1, "appop":I
    packed-switch v1, :pswitch_data_0

    .line 5523
    return v0

    .line 5521
    :pswitch_0
    return v2

    .line 5510
    :pswitch_1
    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mForceBackgroundCheck:Z

    if-eqz v0, :cond_2

    .line 5511
    invoke-static {p1}, Landroid/os/UserHandle;->isCore(I)Z

    move-result v0

    if-nez v0, :cond_2

    .line 5512
    invoke-virtual {p0, p1, v2}, Lcom/android/server/am/ActivityManagerService;->isOnDeviceIdleAllowlistLOSP(IZ)Z

    move-result v0

    if-nez v0, :cond_2

    .line 5517
    return v2

    .line 5519
    :cond_2
    const/4 v0, 0x0

    return v0

    nop

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_1
        :pswitch_0
    .end packed-switch
.end method

.method appServicesRestrictedInBackgroundLOSP(ILjava/lang/String;I)I
    .locals 2
    .param p1, "uid"    # I
    .param p2, "packageName"    # Ljava/lang/String;
    .param p3, "packageTargetSdk"    # I

    .line 5533
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPackageManagerInt:Landroid/content/pm/PackageManagerInternal;

    invoke-virtual {v0, p2}, Landroid/content/pm/PackageManagerInternal;->isPackagePersistent(Ljava/lang/String;)Z

    move-result v0

    const/4 v1, 0x0

    if-eqz v0, :cond_0

    .line 5538
    return v1

    .line 5542
    :cond_0
    invoke-direct {p0, p1}, Lcom/android/server/am/ActivityManagerService;->uidOnBackgroundAllowlistLOSP(I)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 5547
    return v1

    .line 5551
    :cond_1
    invoke-virtual {p0, p1, v1}, Lcom/android/server/am/ActivityManagerService;->isOnDeviceIdleAllowlistLOSP(IZ)Z

    move-result v0

    if-eqz v0, :cond_2

    .line 5556
    return v1

    .line 5560
    :cond_2
    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/am/ActivityManagerService;->appRestrictedInBackgroundLOSP(ILjava/lang/String;I)I

    move-result v0

    return v0
.end method

.method appendDropBoxProcessHeaders(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/StringBuilder;)V
    .locals 6
    .param p1, "process"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "processName"    # Ljava/lang/String;
    .param p3, "sb"    # Ljava/lang/StringBuilder;

    .line 8156
    if-nez p1, :cond_0

    .line 8157
    const-string v0, "Process: "

    invoke-virtual {p3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "\n"

    invoke-virtual {p3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 8158
    return-void

    .line 8163
    :cond_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 8164
    const-string v1, "Process: "

    invoke-virtual {p3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "\n"

    invoke-virtual {p3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 8165
    const-string v1, "PID: "

    invoke-virtual {p3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->getPid()I

    move-result v1

    invoke-virtual {p3, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, "\n"

    invoke-virtual {p3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 8166
    const-string v1, "UID: "

    invoke-virtual {p3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v1, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {p3, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, "\n"

    invoke-virtual {p3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 8167
    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v1, v1, Landroid/content/pm/ApplicationInfo;->flags:I

    .line 8168
    .local v1, "flags":I
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v2

    .line 8169
    .local v2, "pm":Landroid/content/pm/IPackageManager;
    const-string v3, "Flags: 0x"

    invoke-virtual {p3, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {v1}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {p3, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v3, "\n"

    invoke-virtual {p3, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 8170
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v3

    .line 8171
    .local v3, "callingUserId":I
    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->getPkgList()Lcom/android/server/am/PackageList;

    move-result-object v4

    new-instance v5, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda34;

    invoke-direct {v5, p3, v2, v3}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda34;-><init>(Ljava/lang/StringBuilder;Landroid/content/pm/IPackageManager;I)V

    invoke-virtual {v4, v5}, Lcom/android/server/am/PackageList;->forEachPackage(Ljava/util/function/Consumer;)V

    .line 8186
    iget-object v4, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    invoke-virtual {v4}, Landroid/content/pm/ApplicationInfo;->isInstantApp()Z

    move-result v4

    if-eqz v4, :cond_1

    .line 8187
    const-string v4, "Instant-App: true\n"

    invoke-virtual {p3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 8189
    .end local v1    # "flags":I
    .end local v2    # "pm":Landroid/content/pm/IPackageManager;
    .end local v3    # "callingUserId":I
    :cond_1
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 8190
    return-void

    .line 8189
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v1
.end method

.method public attachAgent(Ljava/lang/String;Ljava/lang/String;)V
    .locals 6
    .param p1, "process"    # Ljava/lang/String;
    .param p2, "path"    # Ljava/lang/String;

    .line 16746
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v0
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 16747
    const/4 v1, 0x0

    const-string v2, "attachAgent"

    invoke-direct {p0, p1, v1, v2}, Lcom/android/server/am/ActivityManagerService;->findProcessLOSP(Ljava/lang/String;ILjava/lang/String;)Lcom/android/server/am/ProcessRecord;

    move-result-object v1

    .line 16750
    .local v1, "proc":Lcom/android/server/am/ProcessRecord;
    if-eqz v1, :cond_2

    invoke-virtual {v1}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v2

    move-object v3, v2

    .local v3, "thread":Landroid/app/IApplicationThread;
    if-eqz v2, :cond_2

    .line 16754
    sget-boolean v2, Landroid/os/Build;->IS_DEBUGGABLE:Z

    if-nez v2, :cond_1

    .line 16755
    iget-object v2, v1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v2, v2, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v2, v2, 0x2

    if-eqz v2, :cond_0

    goto :goto_0

    .line 16756
    :cond_0
    new-instance v2, Ljava/lang/SecurityException;

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Process not debuggable: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-direct {v2, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "process":Ljava/lang/String;
    .end local p2    # "path":Ljava/lang/String;
    throw v2

    .line 16760
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "process":Ljava/lang/String;
    .restart local p2    # "path":Ljava/lang/String;
    :cond_1
    :goto_0
    invoke-interface {v3, p2}, Landroid/app/IApplicationThread;->attachAgent(Ljava/lang/String;)V

    .line 16761
    .end local v1    # "proc":Lcom/android/server/am/ProcessRecord;
    .end local v3    # "thread":Landroid/app/IApplicationThread;
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_0

    .line 16764
    nop

    .line 16765
    return-void

    .line 16751
    .restart local v1    # "proc":Lcom/android/server/am/ProcessRecord;
    :cond_2
    :try_start_3
    new-instance v2, Ljava/lang/IllegalArgumentException;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Unknown process: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v2, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "process":Ljava/lang/String;
    .end local p2    # "path":Ljava/lang/String;
    throw v2

    .line 16761
    .end local v1    # "proc":Lcom/android/server/am/ProcessRecord;
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "process":Ljava/lang/String;
    .restart local p2    # "path":Ljava/lang/String;
    :catchall_0
    move-exception v1

    monitor-exit v0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "process":Ljava/lang/String;
    .end local p2    # "path":Ljava/lang/String;
    throw v1
    :try_end_4
    .catch Landroid/os/RemoteException; {:try_start_4 .. :try_end_4} :catch_0

    .line 16762
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "process":Ljava/lang/String;
    .restart local p2    # "path":Ljava/lang/String;
    :catch_0
    move-exception v0

    .line 16763
    .local v0, "e":Landroid/os/RemoteException;
    new-instance v1, Ljava/lang/IllegalStateException;

    const-string v2, "Process disappeared"

    invoke-direct {v1, v2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v1
.end method

.method public final attachApplication(Landroid/app/IApplicationThread;J)V
    .locals 8
    .param p1, "thread"    # Landroid/app/IApplicationThread;
    .param p2, "startSeq"    # J

    .line 4638
    if-eqz p1, :cond_0

    .line 4641
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 4642
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    .line 4643
    .local v2, "callingPid":I
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v3

    .line 4644
    .local v3, "callingUid":I
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    move-wide v6, v0

    .line 4645
    .local v6, "origId":J
    move-object v0, p0

    move-object v1, p1

    move-wide v4, p2

    invoke-direct/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->attachApplicationLocked(Landroid/app/IApplicationThread;IIJ)Z

    .line 4646
    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4647
    .end local v2    # "callingPid":I
    .end local v3    # "callingUid":I
    .end local v6    # "origId":J
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 4648
    return-void

    .line 4647
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 4639
    :cond_0
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Invalid application interface"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public backgroundAllowlistUid(I)V
    .locals 5
    .param p1, "uid"    # I

    .line 6169
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    const/16 v1, 0x3e8

    if-ne v0, v1, :cond_0

    .line 6176
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 6177
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 6178
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mBackgroundAppIdAllowlist:[I

    array-length v2, v1

    .line 6179
    .local v2, "num":I
    add-int/lit8 v3, v2, 0x1

    new-array v3, v3, [I

    .line 6180
    .local v3, "newList":[I
    const/4 v4, 0x0

    invoke-static {v1, v4, v3, v4, v2}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    .line 6181
    invoke-static {p1}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v1

    aput v1, v3, v2

    .line 6182
    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mBackgroundAppIdAllowlist:[I

    .line 6183
    .end local v2    # "num":I
    .end local v3    # "newList":[I
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 6184
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 6185
    return-void

    .line 6183
    :catchall_0
    move-exception v1

    :try_start_3
    monitor-exit v0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "uid":I
    throw v1

    .line 6184
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "uid":I
    :catchall_1
    move-exception v0

    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 6170
    :cond_0
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Only the OS may call backgroundAllowlistUid()"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method backgroundServicesFinishedLocked(I)V
    .locals 4
    .param p1, "userId"    # I

    .line 13665
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    array-length v1, v0

    const/4 v2, 0x0

    :goto_0
    if-ge v2, v1, :cond_0

    aget-object v3, v0, v2

    .line 13666
    .local v3, "queue":Lcom/android/server/am/BroadcastQueue;
    invoke-virtual {v3, p1}, Lcom/android/server/am/BroadcastQueue;->backgroundServicesFinishedLocked(I)V

    .line 13665
    .end local v3    # "queue":Lcom/android/server/am/BroadcastQueue;
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 13668
    :cond_0
    return-void
.end method

.method public backupAgentCreated(Ljava/lang/String;Landroid/os/IBinder;I)V
    .locals 8
    .param p1, "agentPackageName"    # Ljava/lang/String;
    .param p2, "agent"    # Landroid/os/IBinder;
    .param p3, "userId"    # I

    .line 12177
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    const-string v6, "backupAgentCreated"

    const/4 v4, 0x0

    const/4 v5, 0x2

    const/4 v7, 0x0

    move v3, p3

    invoke-virtual/range {v0 .. v7}, Lcom/android/server/am/UserController;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p3

    .line 12185
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 12186
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTargets:Landroid/util/SparseArray;

    invoke-virtual {v0, p3}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/BackupRecord;

    .line 12187
    .local v0, "backupTarget":Lcom/android/server/am/BackupRecord;
    if-nez v0, :cond_0

    const/4 v1, 0x0

    goto :goto_0

    :cond_0
    iget-object v1, v0, Lcom/android/server/am/BackupRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v1, v1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    .line 12188
    .local v1, "backupAppName":Ljava/lang/String;
    :goto_0
    invoke-virtual {p1, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_1

    .line 12189
    const-string v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Backup agent created for "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v4, " but not requested!"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 12190
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 12192
    .end local v0    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .end local v1    # "backupAppName":Ljava/lang/String;
    :cond_1
    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 12194
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 12196
    .local v0, "oldIdent":J
    :try_start_2
    const-string v2, "backup"

    .line 12197
    invoke-static {v2}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v2

    .line 12196
    invoke-static {v2}, Landroid/app/backup/IBackupManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/app/backup/IBackupManager;

    move-result-object v2

    .line 12198
    .local v2, "bm":Landroid/app/backup/IBackupManager;
    invoke-interface {v2, p3, p1, p2}, Landroid/app/backup/IBackupManager;->agentConnectedForUser(ILjava/lang/String;Landroid/os/IBinder;)V
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_1
    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_2} :catch_0
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .end local v2    # "bm":Landroid/app/backup/IBackupManager;
    goto :goto_2

    .line 12205
    :catchall_0
    move-exception v2

    goto :goto_1

    .line 12201
    :catch_0
    move-exception v2

    .line 12202
    .local v2, "e":Ljava/lang/Exception;
    :try_start_3
    const-string v3, "ActivityManager"

    const-string v4, "Exception trying to deliver BackupAgent binding: "

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 12203
    invoke-virtual {v2}, Ljava/lang/Exception;->printStackTrace()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .end local v2    # "e":Ljava/lang/Exception;
    goto :goto_2

    .line 12205
    :goto_1
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 12206
    throw v2

    .line 12199
    :catch_1
    move-exception v2

    .line 12205
    :goto_2
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 12206
    nop

    .line 12207
    return-void

    .line 12192
    .end local v0    # "oldIdent":J
    :catchall_1
    move-exception v0

    :try_start_4
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public batteryNeedsCpuUpdate()V
    .locals 0

    .line 2523
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateCpuStatsNow()V

    .line 2524
    return-void
.end method

.method public batteryPowerChanged(Z)V
    .locals 2
    .param p1, "onBattery"    # Z

    .line 2530
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateCpuStatsNow()V

    .line 2531
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 2532
    iput-boolean p1, p0, Lcom/android/server/am/ActivityManagerService;->mOnBattery:Z

    .line 2533
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mOomAdjProfiler:Lcom/android/server/am/OomAdjProfiler;

    invoke-virtual {v1, p1}, Lcom/android/server/am/OomAdjProfiler;->batteryPowerChanged(Z)V

    .line 2534
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 2535
    return-void

    .line 2534
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v1
.end method

.method public batterySendBroadcast(Landroid/content/Intent;)V
    .locals 22
    .param p1, "intent"    # Landroid/content/Intent;

    .line 2544
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 2545
    const/4 v2, 0x0

    const/4 v3, 0x0

    const/4 v4, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    const/4 v10, 0x0

    const/4 v11, 0x0

    const/4 v12, 0x0

    const/4 v13, -0x1

    const/4 v14, 0x0

    const/4 v15, 0x0

    const/16 v16, 0x0

    const/16 v17, -0x1

    const/16 v18, 0x3e8

    .line 2546
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v19

    .line 2547
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v20

    const/16 v21, -0x1

    .line 2545
    move-object/from16 v1, p0

    move-object/from16 v5, p1

    invoke-virtual/range {v1 .. v21}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;[Ljava/lang/String;ILandroid/os/Bundle;ZZIIIII)I

    .line 2548
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 2549
    return-void

    .line 2548
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public batteryStatsReset()V
    .locals 1

    .line 2539
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mOomAdjProfiler:Lcom/android/server/am/OomAdjProfiler;

    invoke-virtual {v0}, Lcom/android/server/am/OomAdjProfiler;->reset()V

    .line 2540
    return-void
.end method

.method public bindBackupAgent(Ljava/lang/String;III)Z
    .locals 23
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "backupMode"    # I
    .param p3, "targetUserId"    # I
    .param p4, "operationType"    # I

    .line 12057
    move-object/from16 v10, p0

    move-object/from16 v11, p1

    move/from16 v12, p2

    move/from16 v13, p3

    const-string v0, "android.permission.CONFIRM_FULL_BACKUP"

    const-string v1, "bindBackupAgent"

    invoke-virtual {v10, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 12065
    const-string v0, "android"

    invoke-virtual {v0, v11}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    const/4 v14, 0x0

    if-eqz v0, :cond_0

    move v0, v14

    goto :goto_0

    :cond_0
    move v0, v13

    :goto_0
    move v15, v0

    .line 12067
    .local v15, "instantiatedUserId":I
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v9

    .line 12068
    .local v9, "pm":Landroid/content/pm/IPackageManager;
    const/4 v1, 0x0

    .line 12070
    .local v1, "app":Landroid/content/pm/ApplicationInfo;
    const/16 v0, 0x400

    :try_start_0
    invoke-interface {v9, v11, v0, v15}, Landroid/content/pm/IPackageManager;->getApplicationInfo(Ljava/lang/String;II)Landroid/content/pm/ApplicationInfo;

    move-result-object v0
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    move-object v1, v0

    .line 12073
    move-object v8, v1

    goto :goto_1

    .line 12071
    :catch_0
    move-exception v0

    move-object v8, v1

    .line 12074
    .end local v1    # "app":Landroid/content/pm/ApplicationInfo;
    .local v8, "app":Landroid/content/pm/ApplicationInfo;
    :goto_1
    if-nez v8, :cond_1

    .line 12075
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Unable to bind backup agent for "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 12076
    return v14

    .line 12082
    :cond_1
    monitor-enter p0

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 12086
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v0

    iget-object v1, v8, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget v2, v8, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 12087
    invoke-static {v2}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v2

    .line 12086
    invoke-interface {v0, v1, v14, v2}, Landroid/content/pm/IPackageManager;->setPackageStoppedState(Ljava/lang/String;ZI)V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_2
    .catch Ljava/lang/IllegalArgumentException; {:try_start_1 .. :try_end_1} :catch_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_2

    .line 12146
    :catchall_0
    move-exception v0

    move-object/from16 v22, v8

    move-object/from16 v16, v9

    goto/16 :goto_9

    .line 12089
    :catch_1
    move-exception v0

    .line 12090
    .local v0, "e":Ljava/lang/IllegalArgumentException;
    :try_start_2
    const-string v1, "ActivityManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Failed trying to unstop package "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v3, v8, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v3, ": "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    goto :goto_3

    .line 12088
    .end local v0    # "e":Ljava/lang/IllegalArgumentException;
    :catch_2
    move-exception v0

    .line 12092
    :goto_2
    nop

    .line 12094
    :goto_3
    :try_start_3
    new-instance v0, Lcom/android/server/am/BackupRecord;

    move/from16 v7, p4

    invoke-direct {v0, v8, v12, v13, v7}, Lcom/android/server/am/BackupRecord;-><init>(Landroid/content/pm/ApplicationInfo;III)V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_3

    move-object v6, v0

    .line 12096
    .local v6, "r":Lcom/android/server/am/BackupRecord;
    if-nez v12, :cond_2

    .line 12097
    :try_start_4
    new-instance v0, Landroid/content/ComponentName;

    iget-object v1, v8, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget-object v2, v8, Landroid/content/pm/ApplicationInfo;->backupAgentName:Ljava/lang/String;

    invoke-direct {v0, v1, v2}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    goto :goto_4

    .line 12098
    :cond_2
    :try_start_5
    new-instance v0, Landroid/content/ComponentName;

    const-string v1, "android"

    const-string v2, "FullBackupAgent"

    invoke-direct {v0, v1, v2}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    :goto_4
    move-object v5, v0

    .line 12101
    .local v5, "hostingName":Landroid/content/ComponentName;
    iget-object v2, v8, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    const/4 v4, 0x0

    const/4 v0, 0x0

    new-instance v3, Lcom/android/server/am/HostingRecord;

    const-string v1, "backup"

    invoke-direct {v3, v1, v5}, Lcom/android/server/am/HostingRecord;-><init>(Ljava/lang/String;Landroid/content/ComponentName;)V
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_3

    const/16 v16, 0x4

    const/16 v17, 0x0

    const/16 v18, 0x0

    move-object/from16 v1, p0

    move-object/from16 v19, v3

    move-object v3, v8

    move-object/from16 v20, v5

    .end local v5    # "hostingName":Landroid/content/ComponentName;
    .local v20, "hostingName":Landroid/content/ComponentName;
    move v5, v0

    move-object v14, v6

    .end local v6    # "r":Lcom/android/server/am/BackupRecord;
    .local v14, "r":Lcom/android/server/am/BackupRecord;
    move-object/from16 v6, v19

    move/from16 v7, v16

    move-object/from16 v22, v8

    .end local v8    # "app":Landroid/content/pm/ApplicationInfo;
    .local v22, "app":Landroid/content/pm/ApplicationInfo;
    move/from16 v8, v17

    move-object/from16 v16, v9

    .end local v9    # "pm":Landroid/content/pm/IPackageManager;
    .local v16, "pm":Landroid/content/pm/IPackageManager;
    move/from16 v9, v18

    :try_start_6
    invoke-virtual/range {v1 .. v9}, Lcom/android/server/am/ActivityManagerService;->startProcessLocked(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;ZILcom/android/server/am/HostingRecord;IZZ)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    move-object v7, v0

    .line 12105
    .local v7, "proc":Lcom/android/server/am/ProcessRecord;
    if-nez v7, :cond_3

    .line 12106
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Unable to start backup agent process "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 12107
    monitor-exit p0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_4

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    const/4 v1, 0x0

    return v1

    .line 12114
    :cond_3
    move-object/from16 v8, v22

    .end local v22    # "app":Landroid/content/pm/ApplicationInfo;
    .restart local v8    # "app":Landroid/content/pm/ApplicationInfo;
    :try_start_7
    iget v0, v8, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-static {v0}, Landroid/os/UserHandle;->isApp(I)Z

    move-result v0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_2

    const/4 v9, 0x1

    if-eqz v0, :cond_4

    if-ne v12, v9, :cond_4

    .line 12116
    :try_start_8
    invoke-virtual {v7, v9}, Lcom/android/server/am/ProcessRecord;->setInFullBackup(Z)V
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_1

    goto :goto_5

    .line 12146
    .end local v7    # "proc":Lcom/android/server/am/ProcessRecord;
    .end local v14    # "r":Lcom/android/server/am/BackupRecord;
    .end local v20    # "hostingName":Landroid/content/ComponentName;
    :catchall_1
    move-exception v0

    move-object/from16 v22, v8

    goto/16 :goto_9

    .line 12118
    .restart local v7    # "proc":Lcom/android/server/am/ProcessRecord;
    .restart local v14    # "r":Lcom/android/server/am/BackupRecord;
    .restart local v20    # "hostingName":Landroid/content/ComponentName;
    :cond_4
    :goto_5
    :try_start_9
    iput-object v7, v14, Lcom/android/server/am/BackupRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 12119
    iget-object v0, v10, Lcom/android/server/am/ActivityManagerService;->mBackupTargets:Landroid/util/SparseArray;

    invoke-virtual {v0, v13}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/BackupRecord;
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_2

    move-object v6, v0

    .line 12120
    .local v6, "backupTarget":Lcom/android/server/am/BackupRecord;
    const/4 v5, -0x1

    if-eqz v6, :cond_5

    :try_start_a
    iget-object v0, v6, Lcom/android/server/am/BackupRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    iget v0, v0, Landroid/content/pm/ApplicationInfo;->uid:I
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_1

    goto :goto_6

    :cond_5
    move v0, v5

    :goto_6
    move v4, v0

    .line 12121
    .local v4, "oldBackupUid":I
    :try_start_b
    invoke-virtual {v7}, Lcom/android/server/am/ProcessRecord;->isInFullBackup()Z

    move-result v0
    :try_end_b
    .catchall {:try_start_b .. :try_end_b} :catchall_2

    if-eqz v0, :cond_6

    :try_start_c
    iget-object v0, v14, Lcom/android/server/am/BackupRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    iget v0, v0, Landroid/content/pm/ApplicationInfo;->uid:I
    :try_end_c
    .catchall {:try_start_c .. :try_end_c} :catchall_1

    goto :goto_7

    :cond_6
    move v0, v5

    :goto_7
    move v3, v0

    .line 12122
    .local v3, "newBackupUid":I
    :try_start_d
    iget-object v0, v10, Lcom/android/server/am/ActivityManagerService;->mBackupTargets:Landroid/util/SparseArray;

    invoke-virtual {v0, v13, v14}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 12125
    const-string/jumbo v0, "updateOomAdj_meh"

    invoke-virtual {v10, v7, v0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;)Z

    .line 12129
    invoke-virtual {v7}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v0
    :try_end_d
    .catchall {:try_start_d .. :try_end_d} :catchall_2

    move-object/from16 v17, v0

    .line 12130
    .local v17, "thread":Landroid/app/IApplicationThread;
    if-eqz v17, :cond_7

    .line 12133
    nop

    .line 12134
    :try_start_e
    invoke-virtual {v10, v8}, Lcom/android/server/am/ActivityManagerService;->compatibilityInfoForPackage(Landroid/content/pm/ApplicationInfo;)Landroid/content/res/CompatibilityInfo;

    move-result-object v0
    :try_end_e
    .catch Landroid/os/RemoteException; {:try_start_e .. :try_end_e} :catch_4
    .catchall {:try_start_e .. :try_end_e} :catchall_2

    .line 12133
    move-object/from16 v1, v17

    move-object v2, v8

    move v9, v3

    .end local v3    # "newBackupUid":I
    .local v9, "newBackupUid":I
    move-object v3, v0

    move-object/from16 v19, v7

    move v7, v4

    .end local v4    # "oldBackupUid":I
    .local v7, "oldBackupUid":I
    .local v19, "proc":Lcom/android/server/am/ProcessRecord;
    move/from16 v4, p2

    move-object/from16 v22, v8

    move v8, v5

    .end local v8    # "app":Landroid/content/pm/ApplicationInfo;
    .restart local v22    # "app":Landroid/content/pm/ApplicationInfo;
    move/from16 v5, p3

    move-object/from16 v21, v6

    .end local v6    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .local v21, "backupTarget":Lcom/android/server/am/BackupRecord;
    move/from16 v6, p4

    :try_start_f
    invoke-interface/range {v1 .. v6}, Landroid/app/IApplicationThread;->scheduleCreateBackupAgent(Landroid/content/pm/ApplicationInfo;Landroid/content/res/CompatibilityInfo;III)V
    :try_end_f
    .catch Landroid/os/RemoteException; {:try_start_f .. :try_end_f} :catch_3
    .catchall {:try_start_f .. :try_end_f} :catchall_4

    .line 12138
    goto :goto_8

    .line 12136
    :catch_3
    move-exception v0

    goto :goto_8

    .end local v9    # "newBackupUid":I
    .end local v19    # "proc":Lcom/android/server/am/ProcessRecord;
    .end local v21    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .end local v22    # "app":Landroid/content/pm/ApplicationInfo;
    .restart local v3    # "newBackupUid":I
    .restart local v4    # "oldBackupUid":I
    .restart local v6    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .local v7, "proc":Lcom/android/server/am/ProcessRecord;
    .restart local v8    # "app":Landroid/content/pm/ApplicationInfo;
    :catch_4
    move-exception v0

    move v9, v3

    move-object/from16 v21, v6

    move-object/from16 v19, v7

    move-object/from16 v22, v8

    move v7, v4

    move v8, v5

    .end local v3    # "newBackupUid":I
    .end local v4    # "oldBackupUid":I
    .end local v6    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .end local v8    # "app":Landroid/content/pm/ApplicationInfo;
    .local v7, "oldBackupUid":I
    .restart local v9    # "newBackupUid":I
    .restart local v19    # "proc":Lcom/android/server/am/ProcessRecord;
    .restart local v21    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .restart local v22    # "app":Landroid/content/pm/ApplicationInfo;
    goto :goto_8

    .line 12130
    .end local v9    # "newBackupUid":I
    .end local v19    # "proc":Lcom/android/server/am/ProcessRecord;
    .end local v21    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .end local v22    # "app":Landroid/content/pm/ApplicationInfo;
    .restart local v3    # "newBackupUid":I
    .restart local v4    # "oldBackupUid":I
    .restart local v6    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .local v7, "proc":Lcom/android/server/am/ProcessRecord;
    .restart local v8    # "app":Landroid/content/pm/ApplicationInfo;
    :cond_7
    move v9, v3

    move-object/from16 v21, v6

    move-object/from16 v19, v7

    move-object/from16 v22, v8

    move v7, v4

    move v8, v5

    .line 12146
    .end local v3    # "newBackupUid":I
    .end local v4    # "oldBackupUid":I
    .end local v6    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .end local v8    # "app":Landroid/content/pm/ApplicationInfo;
    .end local v14    # "r":Lcom/android/server/am/BackupRecord;
    .end local v17    # "thread":Landroid/app/IApplicationThread;
    .end local v20    # "hostingName":Landroid/content/ComponentName;
    .local v7, "oldBackupUid":I
    .restart local v9    # "newBackupUid":I
    .restart local v22    # "app":Landroid/content/pm/ApplicationInfo;
    :goto_8
    :try_start_10
    monitor-exit p0
    :try_end_10
    .catchall {:try_start_10 .. :try_end_10} :catchall_4

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 12148
    const-class v0, Lcom/android/server/job/JobSchedulerInternal;

    invoke-static {v0}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/job/JobSchedulerInternal;

    .line 12149
    .local v0, "js":Lcom/android/server/job/JobSchedulerInternal;
    if-eq v7, v8, :cond_8

    .line 12150
    invoke-interface {v0, v7}, Lcom/android/server/job/JobSchedulerInternal;->removeBackingUpUid(I)V

    .line 12152
    :cond_8
    if-eq v9, v8, :cond_9

    .line 12153
    invoke-interface {v0, v9}, Lcom/android/server/job/JobSchedulerInternal;->addBackingUpUid(I)V

    .line 12156
    :cond_9
    const/4 v1, 0x1

    return v1

    .line 12146
    .end local v0    # "js":Lcom/android/server/job/JobSchedulerInternal;
    .end local v7    # "oldBackupUid":I
    .end local v9    # "newBackupUid":I
    .end local v22    # "app":Landroid/content/pm/ApplicationInfo;
    .restart local v8    # "app":Landroid/content/pm/ApplicationInfo;
    :catchall_2
    move-exception v0

    move-object/from16 v22, v8

    .end local v8    # "app":Landroid/content/pm/ApplicationInfo;
    .restart local v22    # "app":Landroid/content/pm/ApplicationInfo;
    goto :goto_9

    .end local v16    # "pm":Landroid/content/pm/IPackageManager;
    .end local v22    # "app":Landroid/content/pm/ApplicationInfo;
    .restart local v8    # "app":Landroid/content/pm/ApplicationInfo;
    .local v9, "pm":Landroid/content/pm/IPackageManager;
    :catchall_3
    move-exception v0

    move-object/from16 v22, v8

    move-object/from16 v16, v9

    .end local v8    # "app":Landroid/content/pm/ApplicationInfo;
    .end local v9    # "pm":Landroid/content/pm/IPackageManager;
    .restart local v16    # "pm":Landroid/content/pm/IPackageManager;
    .restart local v22    # "app":Landroid/content/pm/ApplicationInfo;
    :goto_9
    :try_start_11
    monitor-exit p0
    :try_end_11
    .catchall {:try_start_11 .. :try_end_11} :catchall_4

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    :catchall_4
    move-exception v0

    goto :goto_9
.end method

.method public bindIsolatedService(Landroid/app/IApplicationThread;Landroid/os/IBinder;Landroid/content/Intent;Ljava/lang/String;Landroid/app/IServiceConnection;ILjava/lang/String;Ljava/lang/String;I)I
    .locals 13
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .param p2, "token"    # Landroid/os/IBinder;
    .param p3, "service"    # Landroid/content/Intent;
    .param p4, "resolvedType"    # Ljava/lang/String;
    .param p5, "connection"    # Landroid/app/IServiceConnection;
    .param p6, "flags"    # I
    .param p7, "instanceName"    # Ljava/lang/String;
    .param p8, "callingPackage"    # Ljava/lang/String;
    .param p9, "userId"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/TransactionTooLargeException;
        }
    .end annotation

    .line 11967
    move-object v1, p0

    move-object/from16 v12, p7

    const-string v0, "bindService"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 11970
    if-eqz p3, :cond_1

    invoke-virtual/range {p3 .. p3}, Landroid/content/Intent;->hasFileDescriptors()Z

    move-result v0

    const/4 v2, 0x1

    if-eq v0, v2, :cond_0

    goto :goto_0

    .line 11971
    :cond_0
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v2, "File descriptors passed in Intent"

    invoke-direct {v0, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 11974
    :cond_1
    :goto_0
    if-eqz p8, :cond_8

    .line 11980
    if-eqz v12, :cond_7

    .line 11981
    const/4 v0, 0x0

    .local v0, "i":I
    :goto_1
    invoke-virtual/range {p7 .. p7}, Ljava/lang/String;->length()I

    move-result v2

    if-ge v0, v2, :cond_7

    .line 11982
    invoke-virtual {v12, v0}, Ljava/lang/String;->charAt(I)C

    move-result v2

    .line 11983
    .local v2, "c":C
    const/16 v3, 0x61

    if-lt v2, v3, :cond_2

    const/16 v3, 0x7a

    if-le v2, v3, :cond_6

    :cond_2
    const/16 v3, 0x41

    if-lt v2, v3, :cond_3

    const/16 v3, 0x5a

    if-le v2, v3, :cond_6

    :cond_3
    const/16 v3, 0x30

    if-lt v2, v3, :cond_4

    const/16 v3, 0x39

    if-le v2, v3, :cond_6

    :cond_4
    const/16 v3, 0x5f

    if-eq v2, v3, :cond_6

    const/16 v3, 0x2e

    if-ne v2, v3, :cond_5

    goto :goto_2

    .line 11985
    :cond_5
    new-instance v3, Ljava/lang/IllegalArgumentException;

    const-string v4, "Illegal instanceName"

    invoke-direct {v3, v4}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 11981
    .end local v2    # "c":C
    :cond_6
    :goto_2
    add-int/lit8 v0, v0, 0x1

    goto :goto_1

    .line 11990
    .end local v0    # "i":I
    :cond_7
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 11991
    iget-object v2, v1, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    move-object v3, p1

    move-object v4, p2

    move-object/from16 v5, p3

    move-object/from16 v6, p4

    move-object/from16 v7, p5

    move/from16 v8, p6

    move-object/from16 v9, p7

    move-object/from16 v10, p8

    move/from16 v11, p9

    invoke-virtual/range {v2 .. v11}, Lcom/android/server/am/ActiveServices;->bindServiceLocked(Landroid/app/IApplicationThread;Landroid/os/IBinder;Landroid/content/Intent;Ljava/lang/String;Landroid/app/IServiceConnection;ILjava/lang/String;Ljava/lang/String;I)I

    move-result v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v0

    .line 11993
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 11975
    :cond_8
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v2, "callingPackage cannot be null"

    invoke-direct {v0, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public bindService(Landroid/app/IApplicationThread;Landroid/os/IBinder;Landroid/content/Intent;Ljava/lang/String;Landroid/app/IServiceConnection;ILjava/lang/String;I)I
    .locals 10
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .param p2, "token"    # Landroid/os/IBinder;
    .param p3, "service"    # Landroid/content/Intent;
    .param p4, "resolvedType"    # Ljava/lang/String;
    .param p5, "connection"    # Landroid/app/IServiceConnection;
    .param p6, "flags"    # I
    .param p7, "callingPackage"    # Ljava/lang/String;
    .param p8, "userId"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/TransactionTooLargeException;
        }
    .end annotation

    .line 11960
    const/4 v7, 0x0

    move-object v0, p0

    move-object v1, p1

    move-object v2, p2

    move-object v3, p3

    move-object v4, p4

    move-object v5, p5

    move/from16 v6, p6

    move-object/from16 v8, p7

    move/from16 v9, p8

    invoke-virtual/range {v0 .. v9}, Lcom/android/server/am/ActivityManagerService;->bindIsolatedService(Landroid/app/IApplicationThread;Landroid/os/IBinder;Landroid/content/Intent;Ljava/lang/String;Landroid/app/IServiceConnection;ILjava/lang/String;Ljava/lang/String;I)I

    move-result v0

    return v0
.end method

.method public bootAnimationComplete()V
    .locals 2

    .line 4809
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 4810
    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mCallFinishBooting:Z

    .line 4811
    .local v0, "callFinishBooting":Z
    const/4 v1, 0x1

    iput-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mBootAnimationComplete:Z

    .line 4812
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 4813
    if-eqz v0, :cond_0

    .line 4814
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->finishBooting()V

    .line 4816
    :cond_0
    return-void

    .line 4812
    .end local v0    # "callFinishBooting":Z
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public final broadcastIntent(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;ILandroid/os/Bundle;ZZI)I
    .locals 16
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .param p2, "intent"    # Landroid/content/Intent;
    .param p3, "resolvedType"    # Ljava/lang/String;
    .param p4, "resultTo"    # Landroid/content/IIntentReceiver;
    .param p5, "resultCode"    # I
    .param p6, "resultData"    # Ljava/lang/String;
    .param p7, "resultExtras"    # Landroid/os/Bundle;
    .param p8, "requiredPermissions"    # [Ljava/lang/String;
    .param p9, "appOp"    # I
    .param p10, "bOptions"    # Landroid/os/Bundle;
    .param p11, "serialized"    # Z
    .param p12, "sticky"    # Z
    .param p13, "userId"    # I
    .annotation runtime Ljava/lang/Deprecated;
    .end annotation

    .line 13566
    const/4 v2, 0x0

    const/4 v10, 0x0

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move-object/from16 v3, p2

    move-object/from16 v4, p3

    move-object/from16 v5, p4

    move/from16 v6, p5

    move-object/from16 v7, p6

    move-object/from16 v8, p7

    move-object/from16 v9, p8

    move/from16 v11, p9

    move-object/from16 v12, p10

    move/from16 v13, p11

    move/from16 v14, p12

    move/from16 v15, p13

    invoke-virtual/range {v0 .. v15}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentWithFeature(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;[Ljava/lang/String;ILandroid/os/Bundle;ZZI)I

    move-result v0

    return v0
.end method

.method broadcastIntentInPackage(Ljava/lang/String;Ljava/lang/String;IIILandroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;Ljava/lang/String;Landroid/os/Bundle;ZZIZLandroid/os/IBinder;)I
    .locals 27
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "featureId"    # Ljava/lang/String;
    .param p3, "uid"    # I
    .param p4, "realCallingUid"    # I
    .param p5, "realCallingPid"    # I
    .param p6, "intent"    # Landroid/content/Intent;
    .param p7, "resolvedType"    # Ljava/lang/String;
    .param p8, "resultTo"    # Landroid/content/IIntentReceiver;
    .param p9, "resultCode"    # I
    .param p10, "resultData"    # Ljava/lang/String;
    .param p11, "resultExtras"    # Landroid/os/Bundle;
    .param p12, "requiredPermission"    # Ljava/lang/String;
    .param p13, "bOptions"    # Landroid/os/Bundle;
    .param p14, "serialized"    # Z
    .param p15, "sticky"    # Z
    .param p16, "userId"    # I
    .param p17, "allowBackgroundActivityStarts"    # Z
    .param p18, "backgroundActivityStartsToken"    # Landroid/os/IBinder;

    .line 13603
    move-object/from16 v15, p0

    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_2

    .line 13604
    move-object/from16 v1, p6

    :try_start_1
    invoke-virtual {v15, v1}, Lcom/android/server/am/ActivityManagerService;->verifyBroadcastLocked(Landroid/content/Intent;)Landroid/content/Intent;

    move-result-object v5
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 13606
    .end local p6    # "intent":Landroid/content/Intent;
    .local v5, "intent":Landroid/content/Intent;
    :try_start_2
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    move-wide/from16 v25, v0

    .line 13607
    .local v25, "origId":J
    if-nez p12, :cond_0

    const/4 v0, 0x0

    move-object v11, v0

    goto :goto_0

    .line 13608
    :cond_0
    const/4 v0, 0x1

    new-array v0, v0, [Ljava/lang/String;

    const/4 v1, 0x0

    aput-object p12, v0, v1
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_3

    move-object v11, v0

    :goto_0
    nop

    .line 13610
    .local v11, "requiredPermissions":[Ljava/lang/String;
    const/4 v2, 0x0

    const/4 v12, 0x0

    const/4 v13, -0x1

    const/16 v17, -0x1

    const/16 v24, 0x0

    move-object/from16 v1, p0

    move-object/from16 v3, p1

    move-object/from16 v4, p2

    move-object/from16 v6, p7

    move-object/from16 v7, p8

    move/from16 v8, p9

    move-object/from16 v9, p10

    move-object/from16 v10, p11

    move-object/from16 v14, p13

    move/from16 v15, p14

    move/from16 v16, p15

    move/from16 v18, p3

    move/from16 v19, p4

    move/from16 v20, p5

    move/from16 v21, p16

    move/from16 v22, p17

    move-object/from16 v23, p18

    :try_start_3
    invoke-virtual/range {v1 .. v24}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;[Ljava/lang/String;ILandroid/os/Bundle;ZZIIIIIZLandroid/os/IBinder;[I)I

    move-result v0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 13617
    :try_start_4
    invoke-static/range {v25 .. v26}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_3

    .line 13610
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v0

    .line 13617
    :catchall_0
    move-exception v0

    move-object v1, v0

    :try_start_5
    invoke-static/range {v25 .. v26}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 13618
    nop

    .end local v5    # "intent":Landroid/content/Intent;
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "packageName":Ljava/lang/String;
    .end local p2    # "featureId":Ljava/lang/String;
    .end local p3    # "uid":I
    .end local p4    # "realCallingUid":I
    .end local p5    # "realCallingPid":I
    .end local p7    # "resolvedType":Ljava/lang/String;
    .end local p8    # "resultTo":Landroid/content/IIntentReceiver;
    .end local p9    # "resultCode":I
    .end local p10    # "resultData":Ljava/lang/String;
    .end local p11    # "resultExtras":Landroid/os/Bundle;
    .end local p12    # "requiredPermission":Ljava/lang/String;
    .end local p13    # "bOptions":Landroid/os/Bundle;
    .end local p14    # "serialized":Z
    .end local p15    # "sticky":Z
    .end local p16    # "userId":I
    .end local p17    # "allowBackgroundActivityStarts":Z
    .end local p18    # "backgroundActivityStartsToken":Landroid/os/IBinder;
    throw v1

    .line 13619
    .end local v11    # "requiredPermissions":[Ljava/lang/String;
    .end local v25    # "origId":J
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "packageName":Ljava/lang/String;
    .restart local p2    # "featureId":Ljava/lang/String;
    .restart local p3    # "uid":I
    .restart local p4    # "realCallingUid":I
    .restart local p5    # "realCallingPid":I
    .restart local p6    # "intent":Landroid/content/Intent;
    .restart local p7    # "resolvedType":Ljava/lang/String;
    .restart local p8    # "resultTo":Landroid/content/IIntentReceiver;
    .restart local p9    # "resultCode":I
    .restart local p10    # "resultData":Ljava/lang/String;
    .restart local p11    # "resultExtras":Landroid/os/Bundle;
    .restart local p12    # "requiredPermission":Ljava/lang/String;
    .restart local p13    # "bOptions":Landroid/os/Bundle;
    .restart local p14    # "serialized":Z
    .restart local p15    # "sticky":Z
    .restart local p16    # "userId":I
    .restart local p17    # "allowBackgroundActivityStarts":Z
    .restart local p18    # "backgroundActivityStartsToken":Landroid/os/IBinder;
    :catchall_1
    move-exception v0

    goto :goto_1

    :catchall_2
    move-exception v0

    move-object/from16 v1, p6

    :goto_1
    move-object v5, v1

    .end local p6    # "intent":Landroid/content/Intent;
    .restart local v5    # "intent":Landroid/content/Intent;
    :goto_2
    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_3

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    :catchall_3
    move-exception v0

    goto :goto_2
.end method

.method final broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;[Ljava/lang/String;ILandroid/os/Bundle;ZZIIIII)I
    .locals 24
    .param p1, "callerApp"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "callerPackage"    # Ljava/lang/String;
    .param p3, "callerFeatureId"    # Ljava/lang/String;
    .param p4, "intent"    # Landroid/content/Intent;
    .param p5, "resolvedType"    # Ljava/lang/String;
    .param p6, "resultTo"    # Landroid/content/IIntentReceiver;
    .param p7, "resultCode"    # I
    .param p8, "resultData"    # Ljava/lang/String;
    .param p9, "resultExtras"    # Landroid/os/Bundle;
    .param p10, "requiredPermissions"    # [Ljava/lang/String;
    .param p11, "excludedPermissions"    # [Ljava/lang/String;
    .param p12, "appOp"    # I
    .param p13, "bOptions"    # Landroid/os/Bundle;
    .param p14, "ordered"    # Z
    .param p15, "sticky"    # Z
    .param p16, "callingPid"    # I
    .param p17, "callingUid"    # I
    .param p18, "realCallingUid"    # I
    .param p19, "realCallingPid"    # I
    .param p20, "userId"    # I

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move-object/from16 v2, p2

    move-object/from16 v3, p3

    move-object/from16 v4, p4

    move-object/from16 v5, p5

    move-object/from16 v6, p6

    move/from16 v7, p7

    move-object/from16 v8, p8

    move-object/from16 v9, p9

    move-object/from16 v10, p10

    move-object/from16 v11, p11

    move/from16 v12, p12

    move-object/from16 v13, p13

    move/from16 v14, p14

    move/from16 v15, p15

    move/from16 v16, p16

    move/from16 v17, p17

    move/from16 v18, p18

    move/from16 v19, p19

    move/from16 v20, p20

    .line 12751
    const/16 v21, 0x0

    const/16 v22, 0x0

    const/16 v23, 0x0

    invoke-virtual/range {v0 .. v23}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;[Ljava/lang/String;ILandroid/os/Bundle;ZZIIIIIZLandroid/os/IBinder;[I)I

    move-result v0

    return v0
.end method

.method final broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;[Ljava/lang/String;ILandroid/os/Bundle;ZZIIIIIZLandroid/os/IBinder;[I)I
    .locals 53
    .param p1, "callerApp"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "callerPackage"    # Ljava/lang/String;
    .param p3, "callerFeatureId"    # Ljava/lang/String;
    .param p4, "intent"    # Landroid/content/Intent;
    .param p5, "resolvedType"    # Ljava/lang/String;
    .param p6, "resultTo"    # Landroid/content/IIntentReceiver;
    .param p7, "resultCode"    # I
    .param p8, "resultData"    # Ljava/lang/String;
    .param p9, "resultExtras"    # Landroid/os/Bundle;
    .param p10, "requiredPermissions"    # [Ljava/lang/String;
    .param p11, "excludedPermissions"    # [Ljava/lang/String;
    .param p12, "appOp"    # I
    .param p13, "bOptions"    # Landroid/os/Bundle;
    .param p14, "ordered"    # Z
    .param p15, "sticky"    # Z
    .param p16, "callingPid"    # I
    .param p17, "callingUid"    # I
    .param p18, "realCallingUid"    # I
    .param p19, "realCallingPid"    # I
    .param p20, "userId"    # I
    .param p21, "allowBackgroundActivityStarts"    # Z
    .param p22, "backgroundActivityStartsToken"    # Landroid/os/IBinder;
    .param p23, "broadcastAllowList"    # [I

    .line 12769
    move-object/from16 v11, p0

    move-object/from16 v15, p1

    move-object/from16 v14, p2

    move-object/from16 v12, p5

    move-object/from16 v13, p10

    move-object/from16 v10, p13

    move/from16 v9, p16

    move/from16 v8, p17

    move/from16 v7, p18

    move/from16 v6, p19

    new-instance v0, Landroid/content/Intent;

    move-object/from16 v1, p4

    invoke-direct {v0, v1}, Landroid/content/Intent;-><init>(Landroid/content/Intent;)V

    move-object v5, v0

    .line 12771
    .end local p4    # "intent":Landroid/content/Intent;
    .local v5, "intent":Landroid/content/Intent;
    invoke-direct {v11, v15, v14, v8}, Lcom/android/server/am/ActivityManagerService;->isInstantApp(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;I)Z

    move-result v38

    .line 12773
    .local v38, "callerInstantApp":Z
    if-eqz v38, :cond_0

    .line 12774
    invoke-virtual {v5}, Landroid/content/Intent;->getFlags()I

    move-result v0

    const v1, -0x200001

    and-int/2addr v0, v1

    invoke-virtual {v5, v0}, Landroid/content/Intent;->setFlags(I)Landroid/content/Intent;

    .line 12777
    :cond_0
    const/4 v4, -0x1

    const/4 v3, 0x0

    move/from16 v0, p20

    if-ne v0, v4, :cond_1

    if-eqz p23, :cond_1

    .line 12778
    const-string v1, "ActivityManager"

    const-string v2, "broadcastAllowList only applies when sending to individual users. Assuming restrictive whitelist."

    invoke-static {v1, v2}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 12780
    new-array v1, v3, [I

    move-object v2, v1

    .end local p23    # "broadcastAllowList":[I
    .local v1, "broadcastAllowList":[I
    goto :goto_0

    .line 12784
    .end local v1    # "broadcastAllowList":[I
    .restart local p23    # "broadcastAllowList":[I
    :cond_1
    move-object/from16 v2, p23

    .end local p23    # "broadcastAllowList":[I
    .local v2, "broadcastAllowList":[I
    :goto_0
    const/16 v1, 0x10

    invoke-virtual {v5, v1}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 12787
    iget-boolean v1, v11, Lcom/android/server/am/ActivityManagerService;->mProcessesReady:Z

    const/high16 v16, 0x2000000

    const/high16 v6, 0x40000000    # 2.0f

    if-nez v1, :cond_2

    invoke-virtual {v5}, Landroid/content/Intent;->getFlags()I

    move-result v1

    and-int v1, v1, v16

    if-nez v1, :cond_2

    .line 12788
    invoke-virtual {v5, v6}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 12794
    :cond_2
    if-eqz p6, :cond_3

    if-nez p14, :cond_3

    .line 12795
    const-string v1, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Broadcast "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v4, " not ordered but result callback requested!"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v1, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 12798
    :cond_3
    iget-object v1, v11, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    const/16 v19, 0x1

    const/16 v20, 0x0

    const-string v21, "broadcast"

    const/16 v22, 0x10

    move-object v4, v2

    .end local v2    # "broadcastAllowList":[I
    .local v4, "broadcastAllowList":[I
    move/from16 v2, p16

    move/from16 v3, p17

    move-object/from16 p4, v4

    .end local v4    # "broadcastAllowList":[I
    .local p4, "broadcastAllowList":[I
    move/from16 v4, p20

    move-object/from16 p23, v5

    .end local v5    # "intent":Landroid/content/Intent;
    .local p23, "intent":Landroid/content/Intent;
    move/from16 v5, v19

    move/from16 v6, v20

    move-object/from16 v7, v21

    move v12, v8

    move-object/from16 v8, p2

    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/UserController;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result v8

    .line 12803
    .end local p20    # "userId":I
    .local v8, "userId":I
    const/4 v7, -0x1

    if-eq v8, v7, :cond_7

    iget-object v0, v11, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {v0, v8}, Lcom/android/server/am/UserController;->isUserOrItsParentRunning(I)Z

    move-result v0

    if-nez v0, :cond_7

    .line 12804
    const/16 v0, 0x3e8

    if-ne v12, v0, :cond_5

    .line 12805
    invoke-virtual/range {p23 .. p23}, Landroid/content/Intent;->getFlags()I

    move-result v0

    and-int v0, v0, v16

    if-nez v0, :cond_4

    goto :goto_1

    :cond_4
    move-object/from16 v6, p23

    goto :goto_2

    :cond_5
    :goto_1
    const-string v0, "android.intent.action.ACTION_SHUTDOWN"

    .line 12806
    invoke-virtual/range {p23 .. p23}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_6

    .line 12807
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Skipping broadcast of "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-object/from16 v6, p23

    .end local p23    # "intent":Landroid/content/Intent;
    .local v6, "intent":Landroid/content/Intent;
    invoke-virtual {v1, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v2, ": user "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, " and its parent (if any) are stopped"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 12809
    const/4 v0, -0x2

    return v0

    .line 12806
    .end local v6    # "intent":Landroid/content/Intent;
    .restart local p23    # "intent":Landroid/content/Intent;
    :cond_6
    move-object/from16 v6, p23

    .end local p23    # "intent":Landroid/content/Intent;
    .restart local v6    # "intent":Landroid/content/Intent;
    goto :goto_2

    .line 12803
    .end local v6    # "intent":Landroid/content/Intent;
    .restart local p23    # "intent":Landroid/content/Intent;
    :cond_7
    move-object/from16 v6, p23

    .line 12813
    .end local p23    # "intent":Landroid/content/Intent;
    .restart local v6    # "intent":Landroid/content/Intent;
    :goto_2
    invoke-virtual {v6}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v5

    .line 12814
    .local v5, "action":Ljava/lang/String;
    const/4 v0, 0x0

    .line 12815
    .local v0, "brOptions":Landroid/app/BroadcastOptions;
    const-wide/16 v1, 0x0

    const/4 v4, 0x1

    if-eqz v10, :cond_e

    .line 12816
    new-instance v3, Landroid/app/BroadcastOptions;

    invoke-direct {v3, v10}, Landroid/app/BroadcastOptions;-><init>(Landroid/os/Bundle;)V

    move-object v0, v3

    .line 12817
    invoke-virtual {v0}, Landroid/app/BroadcastOptions;->getTemporaryAppAllowlistDuration()J

    move-result-wide v16

    cmp-long v3, v16, v1

    if-lez v3, :cond_9

    .line 12821
    const-string v3, "android.permission.CHANGE_DEVICE_IDLE_TEMP_WHITELIST"

    move/from16 v13, p18

    move/from16 v10, p19

    invoke-static {v3, v10, v13, v7, v4}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I

    move-result v3

    if-eqz v3, :cond_a

    const-string v3, "android.permission.START_ACTIVITIES_FROM_BACKGROUND"

    .line 12824
    invoke-static {v3, v10, v13, v7, v4}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I

    move-result v3

    if-eqz v3, :cond_a

    const-string v3, "android.permission.START_FOREGROUND_SERVICES_FROM_BACKGROUND"

    .line 12827
    invoke-static {v3, v10, v13, v7, v4}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I

    move-result v3

    if-nez v3, :cond_8

    goto :goto_3

    .line 12830
    :cond_8
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Permission Denial: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, " broadcast from "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, " (pid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, ", uid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v12}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, ") requires "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "android.permission.CHANGE_DEVICE_IDLE_TEMP_WHITELIST"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, " or "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "android.permission.START_ACTIVITIES_FROM_BACKGROUND"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, " or "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "android.permission.START_FOREGROUND_SERVICES_FROM_BACKGROUND"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    .line 12837
    .local v1, "msg":Ljava/lang/String;
    const-string v2, "ActivityManager"

    invoke-static {v2, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 12838
    new-instance v2, Ljava/lang/SecurityException;

    invoke-direct {v2, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 12817
    .end local v1    # "msg":Ljava/lang/String;
    :cond_9
    move/from16 v13, p18

    move/from16 v10, p19

    .line 12841
    :cond_a
    :goto_3
    invoke-virtual {v0}, Landroid/app/BroadcastOptions;->isDontSendToRestrictedApps()Z

    move-result v3

    if-eqz v3, :cond_b

    .line 12842
    invoke-virtual {v11, v12}, Lcom/android/server/am/ActivityManagerService;->isUidActiveLOSP(I)Z

    move-result v3

    if-nez v3, :cond_b

    .line 12843
    invoke-virtual {v11, v12, v14}, Lcom/android/server/am/ActivityManagerService;->isBackgroundRestrictedNoCheck(ILjava/lang/String;)Z

    move-result v3

    if-eqz v3, :cond_b

    .line 12844
    const-string v1, "ActivityManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Not sending broadcast "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v3, " - app "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v3, " has background restrictions"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 12846
    const/16 v1, -0x60

    return v1

    .line 12848
    :cond_b
    invoke-virtual {v0}, Landroid/app/BroadcastOptions;->allowsBackgroundActivityStarts()Z

    move-result v3

    if-eqz v3, :cond_d

    .line 12852
    const-string v3, "android.permission.START_ACTIVITIES_FROM_BACKGROUND"

    invoke-static {v3, v10, v13, v7, v4}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I

    move-result v3

    if-nez v3, :cond_c

    .line 12864
    const/4 v3, 0x1

    .line 12866
    .end local p21    # "allowBackgroundActivityStarts":Z
    .local v3, "allowBackgroundActivityStarts":Z
    const/16 v16, 0x0

    move-object/from16 v43, v0

    move/from16 v40, v3

    move-object/from16 v42, v16

    .end local p22    # "backgroundActivityStartsToken":Landroid/os/IBinder;
    .local v16, "backgroundActivityStartsToken":Landroid/os/IBinder;
    goto :goto_4

    .line 12856
    .end local v3    # "allowBackgroundActivityStarts":Z
    .end local v16    # "backgroundActivityStartsToken":Landroid/os/IBinder;
    .restart local p21    # "allowBackgroundActivityStarts":Z
    .restart local p22    # "backgroundActivityStartsToken":Landroid/os/IBinder;
    :cond_c
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Permission Denial: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, " broadcast from "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, " (pid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, ", uid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v12}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, ") requires "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "android.permission.START_ACTIVITIES_FROM_BACKGROUND"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    .line 12861
    .restart local v1    # "msg":Ljava/lang/String;
    const-string v2, "ActivityManager"

    invoke-static {v2, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 12862
    new-instance v2, Ljava/lang/SecurityException;

    invoke-direct {v2, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 12848
    .end local v1    # "msg":Ljava/lang/String;
    :cond_d
    move/from16 v40, p21

    move-object/from16 v42, p22

    move-object/from16 v43, v0

    goto :goto_4

    .line 12815
    :cond_e
    move/from16 v13, p18

    move/from16 v10, p19

    move/from16 v40, p21

    move-object/from16 v42, p22

    move-object/from16 v43, v0

    .line 12875
    .end local v0    # "brOptions":Landroid/app/BroadcastOptions;
    .end local p21    # "allowBackgroundActivityStarts":Z
    .end local p22    # "backgroundActivityStartsToken":Landroid/os/IBinder;
    .local v40, "allowBackgroundActivityStarts":Z
    .local v42, "backgroundActivityStartsToken":Landroid/os/IBinder;
    .local v43, "brOptions":Landroid/app/BroadcastOptions;
    :goto_4
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v0

    invoke-interface {v0, v5}, Landroid/content/pm/IPackageManager;->isProtectedBroadcast(Ljava/lang/String;)Z

    move-result v0
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_3

    move/from16 v44, v0

    .line 12879
    .local v44, "isProtectedBroadcast":Z
    nop

    .line 12882
    invoke-static/range {p17 .. p17}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v0

    sparse-switch v0, :sswitch_data_0

    .line 12893
    if-eqz v15, :cond_f

    invoke-virtual/range {p1 .. p1}, Lcom/android/server/am/ProcessRecord;->isPersistent()Z

    move-result v0

    if-eqz v0, :cond_f

    move v3, v4

    goto :goto_5

    .line 12890
    :sswitch_0
    const/4 v0, 0x1

    .line 12891
    .local v0, "isCallerSystem":Z
    move/from16 v45, v0

    goto :goto_6

    .line 12893
    .end local v0    # "isCallerSystem":Z
    :cond_f
    const/4 v3, 0x0

    :goto_5
    move v0, v3

    move/from16 v45, v0

    .line 12899
    .local v45, "isCallerSystem":Z
    :goto_6
    if-nez v45, :cond_15

    .line 12900
    if-nez v44, :cond_14

    .line 12907
    const-string v0, "android.appwidget.action.APPWIDGET_CONFIGURE"

    invoke-virtual {v0, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_10

    const-string v0, "android.appwidget.action.APPWIDGET_UPDATE"

    .line 12908
    invoke-virtual {v0, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_15

    .line 12913
    :cond_10
    if-eqz v14, :cond_13

    .line 12918
    invoke-virtual {v6}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v0

    if-eqz v0, :cond_12

    .line 12921
    invoke-virtual {v6}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v0

    invoke-virtual {v0}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v0, v14}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_11

    goto/16 :goto_7

    .line 12923
    :cond_11
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Permission Denial: not allowed to send broadcast "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, " to "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 12925
    invoke-virtual {v6}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v1

    invoke-virtual {v1}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, " from "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 12927
    .local v0, "msg":Ljava/lang/String;
    const-string v1, "ActivityManager"

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 12928
    new-instance v1, Ljava/lang/SecurityException;

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 12932
    .end local v0    # "msg":Ljava/lang/String;
    :cond_12
    invoke-virtual {v6, v14}, Landroid/content/Intent;->setPackage(Ljava/lang/String;)Landroid/content/Intent;

    goto :goto_7

    .line 12914
    :cond_13
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Permission Denial: not allowed to send broadcast "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, " from unknown caller."

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 12916
    .restart local v0    # "msg":Ljava/lang/String;
    const-string v1, "ActivityManager"

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 12917
    new-instance v1, Ljava/lang/SecurityException;

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 12901
    .end local v0    # "msg":Ljava/lang/String;
    :cond_14
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Permission Denial: not allowed to send broadcast "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, " from pid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, ", uid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v12}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 12904
    .restart local v0    # "msg":Ljava/lang/String;
    const-string v1, "ActivityManager"

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 12905
    new-instance v1, Ljava/lang/SecurityException;

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 12937
    .end local v0    # "msg":Ljava/lang/String;
    :cond_15
    :goto_7
    const/16 v16, 0x0

    .line 12939
    .local v16, "timeoutExempt":Z
    if-eqz v5, :cond_33

    .line 12940
    invoke-direct/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getBackgroundLaunchBroadcasts()Landroid/util/ArraySet;

    move-result-object v0

    invoke-virtual {v0, v5}, Landroid/util/ArraySet;->contains(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_16

    .line 12944
    const/high16 v0, 0x1000000

    invoke-virtual {v6, v0}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 12947
    :cond_16
    invoke-virtual {v5}, Ljava/lang/String;->hashCode()I

    move-result v0

    const/16 v17, 0x5

    const/16 v18, 0x4

    const/16 v1, 0xd

    const/16 v21, 0x2

    const/4 v2, 0x3

    sparse-switch v0, :sswitch_data_1

    :cond_17
    goto/16 :goto_8

    :sswitch_1
    const-string v0, "android.security.action.TRUST_STORE_CHANGED"

    invoke-virtual {v5, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_17

    move/from16 v0, v22

    goto/16 :goto_9

    :sswitch_2
    const-string v0, "android.net.action.CLEAR_DNS_CACHE"

    invoke-virtual {v5, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_17

    const/16 v0, 0xc

    goto/16 :goto_9

    :sswitch_3
    const-string v0, "android.intent.action.PACKAGE_ADDED"

    invoke-virtual {v5, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_17

    const/16 v0, 0x8

    goto/16 :goto_9

    :sswitch_4
    const-string v0, "android.intent.action.PACKAGES_UNSUSPENDED"

    invoke-virtual {v5, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_17

    const/4 v0, 0x6

    goto/16 :goto_9

    :sswitch_5
    const-string v0, "android.hardware.action.NEW_PICTURE"

    invoke-virtual {v5, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_17

    const/16 v0, 0xe

    goto/16 :goto_9

    :sswitch_6
    const-string v0, "android.intent.action.PRE_BOOT_COMPLETED"

    invoke-virtual {v5, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_17

    const/16 v0, 0x12

    goto/16 :goto_9

    :sswitch_7
    const-string v0, "com.android.launcher.action.INSTALL_SHORTCUT"

    invoke-virtual {v5, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_17

    const/16 v0, 0x11

    goto/16 :goto_9

    :sswitch_8
    const-string v0, "android.intent.action.PACKAGE_REMOVED"

    invoke-virtual {v5, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_17

    move v0, v4

    goto/16 :goto_9

    :sswitch_9
    const-string v0, "android.intent.action.TIME_SET"

    invoke-virtual {v5, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_17

    const/16 v0, 0xb

    goto/16 :goto_9

    :sswitch_a
    const-string v0, "android.intent.action.TIMEZONE_CHANGED"

    invoke-virtual {v5, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_17

    const/16 v0, 0xa

    goto/16 :goto_9

    :sswitch_b
    const-string v0, "android.intent.action.PACKAGE_DATA_CLEARED"

    invoke-virtual {v5, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_17

    const/16 v0, 0x9

    goto/16 :goto_9

    :sswitch_c
    const-string v0, "android.intent.action.PROXY_CHANGE"

    invoke-virtual {v5, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_17

    move v0, v1

    goto :goto_9

    :sswitch_d
    const-string v0, "android.intent.action.PACKAGE_CHANGED"

    invoke-virtual {v5, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_17

    move/from16 v0, v21

    goto :goto_9

    :sswitch_e
    const-string v0, "android.intent.action.CLOSE_SYSTEM_DIALOGS"

    invoke-virtual {v5, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_17

    const/16 v0, 0x13

    goto :goto_9

    :sswitch_f
    const-string v0, "android.intent.action.PACKAGE_REPLACED"

    invoke-virtual {v5, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_17

    const/4 v0, 0x7

    goto :goto_9

    :sswitch_10
    const-string v0, "android.intent.action.PACKAGES_SUSPENDED"

    invoke-virtual {v5, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_17

    move/from16 v0, v17

    goto :goto_9

    :sswitch_11
    const-string v0, "android.intent.action.EXTERNAL_APPLICATIONS_AVAILABLE"

    invoke-virtual {v5, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_17

    move/from16 v0, v18

    goto :goto_9

    :sswitch_12
    const-string v0, "android.intent.action.EXTERNAL_APPLICATIONS_UNAVAILABLE"

    invoke-virtual {v5, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_17

    move v0, v2

    goto :goto_9

    :sswitch_13
    const-string v0, "android.intent.action.UID_REMOVED"

    invoke-virtual {v5, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_17

    const/4 v0, 0x0

    goto :goto_9

    :sswitch_14
    const-string v0, "android.hardware.action.NEW_VIDEO"

    invoke-virtual {v5, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_17

    const/16 v0, 0xf

    goto :goto_9

    :goto_8
    move v0, v7

    :goto_9
    const/16 v3, 0x400

    packed-switch v0, :pswitch_data_0

    move-object/from16 v47, v5

    move-object v15, v6

    move v6, v9

    const/4 v10, 0x0

    const/high16 v39, 0x40000000    # 2.0f

    move v9, v4

    .end local v5    # "action":Ljava/lang/String;
    .end local v6    # "intent":Landroid/content/Intent;
    .local v15, "intent":Landroid/content/Intent;
    .local v47, "action":Ljava/lang/String;
    goto/16 :goto_17

    .line 13182
    .end local v15    # "intent":Landroid/content/Intent;
    .end local v47    # "action":Ljava/lang/String;
    .restart local v5    # "action":Ljava/lang/String;
    .restart local v6    # "intent":Landroid/content/Intent;
    :pswitch_0
    iget-object v0, v11, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-virtual {v0, v9, v12, v14}, Lcom/android/server/wm/ActivityTaskManagerInternal;->checkCanCloseSystemDialogs(IILjava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_18

    .line 13185
    const/4 v2, 0x0

    return v2

    .line 13182
    :cond_18
    const/4 v2, 0x0

    move v10, v2

    move-object/from16 v47, v5

    move-object v15, v6

    move v6, v9

    const/high16 v39, 0x40000000    # 2.0f

    move v9, v4

    goto/16 :goto_17

    .line 13179
    :pswitch_1
    const/4 v2, 0x0

    const/4 v0, 0x1

    .line 13180
    .end local v16    # "timeoutExempt":Z
    .local v0, "timeoutExempt":Z
    move/from16 v16, v0

    move v10, v2

    move-object/from16 v47, v5

    move-object v15, v6

    move v6, v9

    const/high16 v39, 0x40000000    # 2.0f

    move v9, v4

    goto/16 :goto_17

    .line 13175
    .end local v0    # "timeoutExempt":Z
    .restart local v16    # "timeoutExempt":Z
    :pswitch_2
    const/4 v2, 0x0

    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Broadcast "

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v3, " no longer supported. It will not be delivered."

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 13177
    return v2

    .line 13170
    :pswitch_3
    const/4 v2, 0x0

    iget-object v0, v11, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v1, 0x3f

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendEmptyMessage(I)Z

    .line 13171
    move v10, v2

    move-object/from16 v47, v5

    move-object v15, v6

    move v6, v9

    const/high16 v39, 0x40000000    # 2.0f

    move v9, v4

    goto/16 :goto_17

    .line 13167
    :pswitch_4
    const/4 v2, 0x0

    const/high16 v3, 0x40000000    # 2.0f

    invoke-virtual {v6, v3}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 13168
    move v10, v2

    move/from16 v39, v3

    move-object/from16 v47, v5

    move-object v15, v6

    move v6, v9

    move v9, v4

    goto/16 :goto_17

    .line 13158
    :pswitch_5
    const/4 v2, 0x0

    const/high16 v3, 0x40000000    # 2.0f

    iget-object v0, v11, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v1, 0x1d

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v1

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 13159
    move v10, v2

    move/from16 v39, v3

    move-object/from16 v47, v5

    move-object v15, v6

    move v6, v9

    move v9, v4

    goto/16 :goto_17

    .line 13155
    :pswitch_6
    const/4 v2, 0x0

    const/high16 v3, 0x40000000    # 2.0f

    iget-object v0, v11, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v1, 0x1c

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendEmptyMessage(I)Z

    .line 13156
    move v10, v2

    move/from16 v39, v3

    move-object/from16 v47, v5

    move-object v15, v6

    move v6, v9

    move v9, v4

    goto/16 :goto_17

    .line 13141
    :pswitch_7
    const/4 v2, 0x0

    const/high16 v3, 0x40000000    # 2.0f

    const/4 v0, -0x1

    .line 13142
    .local v0, "NO_EXTRA_VALUE_FOUND":I
    const-string v1, "android.intent.extra.TIME_PREF_24_HOUR_FORMAT"

    invoke-virtual {v6, v1, v7}, Landroid/content/Intent;->getIntExtra(Ljava/lang/String;I)I

    move-result v1

    .line 13146
    .local v1, "timeFormatPreferenceMsgValue":I
    if-eq v1, v7, :cond_19

    .line 13147
    iget-object v3, v11, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v7, 0x29

    .line 13148
    invoke-virtual {v3, v7, v1, v2}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(III)Landroid/os/Message;

    move-result-object v3

    .line 13150
    .local v3, "updateTimePreferenceMsg":Landroid/os/Message;
    iget-object v7, v11, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v7, v3}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 13152
    .end local v3    # "updateTimePreferenceMsg":Landroid/os/Message;
    :cond_19
    iget-object v3, v11, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v3}, Lcom/android/server/am/BatteryStatsService;->noteCurrentTimeChanged()V

    .line 13153
    move v10, v2

    move-object/from16 v47, v5

    move-object v15, v6

    move v6, v9

    const/4 v7, -0x1

    const/high16 v39, 0x40000000    # 2.0f

    move v9, v4

    goto/16 :goto_17

    .line 13135
    .end local v0    # "NO_EXTRA_VALUE_FOUND":I
    .end local v1    # "timeFormatPreferenceMsgValue":I
    :pswitch_8
    const/4 v2, 0x0

    iget-object v0, v11, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendEmptyMessage(I)Z

    .line 13136
    move v10, v2

    move-object/from16 v47, v5

    move-object v15, v6

    move v6, v9

    const/4 v7, -0x1

    const/high16 v39, 0x40000000    # 2.0f

    move v9, v4

    goto/16 :goto_17

    .line 13124
    :pswitch_9
    const/4 v2, 0x0

    invoke-virtual {v6}, Landroid/content/Intent;->getData()Landroid/net/Uri;

    move-result-object v0

    .line 13126
    .local v0, "data":Landroid/net/Uri;
    if-eqz v0, :cond_1b

    invoke-virtual {v0}, Landroid/net/Uri;->getSchemeSpecificPart()Ljava/lang/String;

    move-result-object v1

    move-object v3, v1

    .local v3, "ssp":Ljava/lang/String;
    if-eqz v1, :cond_1a

    .line 13127
    iget-object v1, v11, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-virtual {v1, v3}, Lcom/android/server/wm/ActivityTaskManagerInternal;->onPackageDataCleared(Ljava/lang/String;)V

    move v10, v2

    move-object/from16 v47, v5

    move-object v15, v6

    move v6, v9

    const/4 v7, -0x1

    const/high16 v39, 0x40000000    # 2.0f

    move v9, v4

    goto/16 :goto_17

    .line 13126
    :cond_1a
    move v10, v2

    move-object/from16 v47, v5

    move-object v15, v6

    move v6, v9

    const/4 v7, -0x1

    const/high16 v39, 0x40000000    # 2.0f

    move v9, v4

    goto/16 :goto_17

    .end local v3    # "ssp":Ljava/lang/String;
    :cond_1b
    move v10, v2

    move-object/from16 v47, v5

    move-object v15, v6

    move v6, v9

    const/4 v7, -0x1

    const/high16 v39, 0x40000000    # 2.0f

    move v9, v4

    goto/16 :goto_17

    .line 13105
    .end local v0    # "data":Landroid/net/Uri;
    :pswitch_a
    const/4 v2, 0x0

    const/high16 v39, 0x40000000    # 2.0f

    invoke-virtual {v6}, Landroid/content/Intent;->getData()Landroid/net/Uri;

    move-result-object v1

    .line 13107
    .local v1, "data":Landroid/net/Uri;
    if-eqz v1, :cond_1e

    invoke-virtual {v1}, Landroid/net/Uri;->getSchemeSpecificPart()Ljava/lang/String;

    move-result-object v0

    move-object v7, v0

    .local v7, "ssp":Ljava/lang/String;
    if-eqz v0, :cond_1d

    .line 13108
    const-string v0, "android.intent.extra.REPLACING"

    .line 13109
    invoke-virtual {v6, v0, v2}, Landroid/content/Intent;->getBooleanExtra(Ljava/lang/String;Z)Z

    move-result v4

    .line 13110
    .local v4, "replacing":Z
    iget-object v0, v11, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-virtual {v0, v7, v4}, Lcom/android/server/wm/ActivityTaskManagerInternal;->onPackageAdded(Ljava/lang/String;Z)V

    .line 13113
    :try_start_1
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v0

    .line 13114
    invoke-interface {v0, v7, v3, v2}, Landroid/content/pm/IPackageManager;->getApplicationInfo(Ljava/lang/String;II)Landroid/content/pm/ApplicationInfo;

    move-result-object v0

    .line 13115
    .local v0, "ai":Landroid/content/pm/ApplicationInfo;
    iget-object v3, v11, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    .line 13116
    if-eqz v0, :cond_1c

    move-object/from16 v18, v3

    iget-wide v2, v0, Landroid/content/pm/ApplicationInfo;->longVersionCode:J

    goto :goto_a

    :cond_1c
    move-object/from16 v18, v3

    const-wide/16 v2, 0x0

    .line 13115
    :goto_a
    move-object/from16 p20, v0

    move-object/from16 v0, v18

    .end local v0    # "ai":Landroid/content/pm/ApplicationInfo;
    .local p20, "ai":Landroid/content/pm/ApplicationInfo;
    invoke-virtual {v0, v7, v2, v3}, Lcom/android/server/am/BatteryStatsService;->notePackageInstalled(Ljava/lang/String;J)V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0

    .line 13118
    .end local p20    # "ai":Landroid/content/pm/ApplicationInfo;
    goto :goto_b

    .line 13117
    :catch_0
    move-exception v0

    .line 13119
    .end local v4    # "replacing":Z
    :goto_b
    move-object/from16 v47, v5

    move-object v15, v6

    move v6, v9

    const/4 v7, -0x1

    const/4 v9, 0x1

    const/4 v10, 0x0

    goto/16 :goto_17

    .line 13107
    :cond_1d
    move-object/from16 v47, v5

    move-object v15, v6

    move v6, v9

    const/4 v7, -0x1

    const/4 v9, 0x1

    const/4 v10, 0x0

    goto/16 :goto_17

    .end local v7    # "ssp":Ljava/lang/String;
    :cond_1e
    move-object/from16 v47, v5

    move-object v15, v6

    move v6, v9

    const/4 v7, -0x1

    const/4 v9, 0x1

    const/4 v10, 0x0

    goto/16 :goto_17

    .line 13081
    .end local v1    # "data":Landroid/net/Uri;
    :pswitch_b
    const/4 v7, 0x0

    const/high16 v39, 0x40000000    # 2.0f

    invoke-virtual {v6}, Landroid/content/Intent;->getData()Landroid/net/Uri;

    move-result-object v1

    .line 13083
    .restart local v1    # "data":Landroid/net/Uri;
    if-eqz v1, :cond_21

    invoke-virtual {v1}, Landroid/net/Uri;->getSchemeSpecificPart()Ljava/lang/String;

    move-result-object v0

    move-object v4, v0

    .local v4, "ssp":Ljava/lang/String;
    if-eqz v0, :cond_20

    .line 13084
    const/16 v17, 0x0

    .line 13086
    .local v17, "aInfo":Landroid/content/pm/ApplicationInfo;
    :try_start_2
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v0

    .line 13087
    invoke-interface {v0, v4, v3, v8}, Landroid/content/pm/IPackageManager;->getApplicationInfo(Ljava/lang/String;II)Landroid/content/pm/ApplicationInfo;

    move-result-object v0
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_1

    move-object/from16 v17, v0

    .line 13088
    goto :goto_c

    :catch_1
    move-exception v0

    move-object/from16 v0, v17

    .line 13089
    .end local v17    # "aInfo":Landroid/content/pm/ApplicationInfo;
    .local v0, "aInfo":Landroid/content/pm/ApplicationInfo;
    :goto_c
    if-nez v0, :cond_1f

    .line 13090
    const-string v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Dropping ACTION_PACKAGE_REPLACED for non-existent pkg: ssp="

    invoke-virtual {v3, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v7, " data="

    invoke-virtual {v3, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 13092
    const/4 v3, 0x0

    return v3

    .line 13094
    :cond_1f
    move v3, v7

    invoke-direct {v11, v0}, Lcom/android/server/am/ActivityManagerService;->updateAssociationForApp(Landroid/content/pm/ApplicationInfo;)V

    .line 13095
    iget-object v7, v11, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-virtual {v7, v0}, Lcom/android/server/wm/ActivityTaskManagerInternal;->onPackageReplaced(Landroid/content/pm/ApplicationInfo;)V

    .line 13096
    iget-object v7, v11, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v7, v0}, Lcom/android/server/am/ActiveServices;->updateServiceApplicationInfoLocked(Landroid/content/pm/ApplicationInfo;)V

    .line 13097
    move-object/from16 p20, v0

    const/4 v7, 0x1

    .end local v0    # "aInfo":Landroid/content/pm/ApplicationInfo;
    .local p20, "aInfo":Landroid/content/pm/ApplicationInfo;
    new-array v0, v7, [Ljava/lang/String;

    aput-object v4, v0, v3

    invoke-direct {v11, v2, v0, v8}, Lcom/android/server/am/ActivityManagerService;->sendPackageBroadcastLocked(I[Ljava/lang/String;I)V

    .line 13099
    .end local p20    # "aInfo":Landroid/content/pm/ApplicationInfo;
    move-object/from16 v47, v5

    move-object v15, v6

    move v6, v9

    const/4 v10, 0x0

    move v9, v7

    const/4 v7, -0x1

    goto/16 :goto_17

    .line 13083
    :cond_20
    const/4 v7, 0x1

    move-object/from16 v47, v5

    move-object v15, v6

    move v6, v9

    const/4 v10, 0x0

    move v9, v7

    const/4 v7, -0x1

    goto/16 :goto_17

    .end local v4    # "ssp":Ljava/lang/String;
    :cond_21
    const/4 v7, 0x1

    move-object/from16 v47, v5

    move-object v15, v6

    move v6, v9

    const/4 v10, 0x0

    move v9, v7

    const/4 v7, -0x1

    goto/16 :goto_17

    .line 12958
    .end local v1    # "data":Landroid/net/Uri;
    :pswitch_c
    move v7, v4

    const/high16 v39, 0x40000000    # 2.0f

    const-string v0, "android.permission.BROADCAST_PACKAGE_REMOVED"

    const/4 v1, -0x1

    invoke-static {v0, v9, v12, v1, v7}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I

    move-result v0

    if-nez v0, :cond_30

    .line 12970
    invoke-virtual {v5}, Ljava/lang/String;->hashCode()I

    move-result v0

    sparse-switch v0, :sswitch_data_2

    :cond_22
    goto :goto_d

    :sswitch_15
    const-string v0, "android.intent.action.PACKAGES_UNSUSPENDED"

    invoke-virtual {v5, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_22

    const/4 v4, 0x6

    goto :goto_e

    :sswitch_16
    const-string v0, "android.intent.action.PACKAGE_REMOVED"

    invoke-virtual {v5, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_22

    move v4, v2

    goto :goto_e

    :sswitch_17
    const-string v0, "android.intent.action.PACKAGE_CHANGED"

    invoke-virtual {v5, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_22

    move/from16 v4, v18

    goto :goto_e

    :sswitch_18
    const-string v0, "android.intent.action.PACKAGES_SUSPENDED"

    invoke-virtual {v5, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_22

    move/from16 v4, v17

    goto :goto_e

    :sswitch_19
    const-string v0, "android.intent.action.EXTERNAL_APPLICATIONS_AVAILABLE"

    invoke-virtual {v5, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_22

    move/from16 v4, v21

    goto :goto_e

    :sswitch_1a
    const-string v0, "android.intent.action.EXTERNAL_APPLICATIONS_UNAVAILABLE"

    invoke-virtual {v5, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_22

    const/4 v4, 0x1

    goto :goto_e

    :sswitch_1b
    const-string v0, "android.intent.action.UID_REMOVED"

    invoke-virtual {v5, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_22

    const/4 v4, 0x0

    goto :goto_e

    :goto_d
    const/4 v4, -0x1

    :goto_e
    packed-switch v4, :pswitch_data_1

    move-object/from16 v47, v5

    move-object v15, v6

    const/4 v7, -0x1

    const/4 v9, 0x1

    const/4 v10, 0x0

    .end local v5    # "action":Ljava/lang/String;
    .end local v6    # "intent":Landroid/content/Intent;
    .restart local v15    # "intent":Landroid/content/Intent;
    .restart local v47    # "action":Ljava/lang/String;
    goto/16 :goto_16

    .line 13067
    .end local v15    # "intent":Landroid/content/Intent;
    .end local v47    # "action":Ljava/lang/String;
    .restart local v5    # "action":Ljava/lang/String;
    .restart local v6    # "intent":Landroid/content/Intent;
    :pswitch_d
    const-string v0, "android.intent.action.PACKAGES_SUSPENDED"

    .line 13068
    invoke-virtual {v6}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v1

    .line 13067
    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    .line 13069
    .local v0, "suspended":Z
    const-string v1, "android.intent.extra.changed_package_list"

    invoke-virtual {v6, v1}, Landroid/content/Intent;->getStringArrayExtra(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v1

    .line 13071
    .local v1, "packageNames":[Ljava/lang/String;
    const-string v2, "android.intent.extra.user_handle"

    const/16 v3, -0x2710

    invoke-virtual {v6, v2, v3}, Landroid/content/Intent;->getIntExtra(Ljava/lang/String;I)I

    move-result v2

    .line 13074
    .local v2, "userIdExtra":I
    iget-object v3, v11, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-virtual {v3, v1, v0, v2}, Lcom/android/server/wm/ActivityTaskManagerInternal;->onPackagesSuspendedChanged([Ljava/lang/String;ZI)V

    move-object/from16 v47, v5

    move-object v15, v6

    const/4 v7, -0x1

    const/4 v9, 0x1

    const/4 v10, 0x0

    goto/16 :goto_16

    .line 13004
    .end local v0    # "suspended":Z
    .end local v1    # "packageNames":[Ljava/lang/String;
    .end local v2    # "userIdExtra":I
    :pswitch_e
    invoke-virtual {v6}, Landroid/content/Intent;->getData()Landroid/net/Uri;

    move-result-object v17

    .line 13006
    .local v17, "data":Landroid/net/Uri;
    if-eqz v17, :cond_2b

    invoke-virtual/range {v17 .. v17}, Landroid/net/Uri;->getSchemeSpecificPart()Ljava/lang/String;

    move-result-object v0

    move-object v7, v0

    .restart local v7    # "ssp":Ljava/lang/String;
    if-eqz v0, :cond_2a

    .line 13007
    const-string v0, "android.intent.action.PACKAGE_REMOVED"

    invoke-virtual {v0, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v18

    .line 13008
    .local v18, "removed":Z
    const-string v0, "android.intent.extra.REPLACING"

    .line 13009
    const/4 v4, 0x0

    invoke-virtual {v6, v0, v4}, Landroid/content/Intent;->getBooleanExtra(Ljava/lang/String;Z)Z

    move-result v19

    .line 13010
    .local v19, "replacing":Z
    const-string v0, "android.intent.extra.DONT_KILL_APP"

    .line 13011
    invoke-virtual {v6, v0, v4}, Landroid/content/Intent;->getBooleanExtra(Ljava/lang/String;Z)Z

    move-result v0

    const/16 v20, 0x1

    xor-int/lit8 v0, v0, 0x1

    move/from16 v31, v0

    .line 13012
    .local v31, "killProcess":Z
    if-eqz v18, :cond_23

    if-nez v19, :cond_23

    move/from16 v3, v20

    goto :goto_f

    :cond_23
    move v3, v4

    :goto_f
    move/from16 v32, v3

    .line 13013
    .local v32, "fullUninstall":Z
    if-eqz v18, :cond_28

    .line 13014
    if-eqz v31, :cond_25

    .line 13015
    const-string v0, "android.intent.extra.UID"

    .line 13016
    const/4 v3, -0x1

    invoke-virtual {v6, v0, v3}, Landroid/content/Intent;->getIntExtra(Ljava/lang/String;I)I

    move-result v0

    .line 13015
    invoke-static {v0}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v0

    const/16 v22, 0x0

    const/16 v23, 0x1

    const/16 v24, 0x1

    const/16 v25, 0x0

    .line 13018
    if-eqz v18, :cond_24

    const-string/jumbo v1, "pkg removed"

    goto :goto_10

    :cond_24
    const-string/jumbo v1, "pkg changed"

    :goto_10
    move-object/from16 v26, v1

    .line 13015
    move-object/from16 v1, p0

    move-object v2, v7

    move/from16 v27, v3

    move v3, v0

    move/from16 v20, v4

    move/from16 v4, v22

    move-object/from16 v47, v5

    .end local v5    # "action":Ljava/lang/String;
    .restart local v47    # "action":Ljava/lang/String;
    move/from16 v5, v23

    move-object/from16 v48, v6

    .end local v6    # "intent":Landroid/content/Intent;
    .local v48, "intent":Landroid/content/Intent;
    move/from16 v6, v24

    move-object/from16 v49, v7

    .end local v7    # "ssp":Ljava/lang/String;
    .local v49, "ssp":Ljava/lang/String;
    move/from16 v7, v25

    move/from16 p20, v8

    .end local v8    # "userId":I
    .local p20, "userId":I
    move/from16 v8, v32

    move/from16 v9, p20

    move-object/from16 v10, v26

    invoke-virtual/range {v1 .. v10}, Lcom/android/server/am/ActivityManagerService;->forceStopPackageLocked(Ljava/lang/String;IZZZZZILjava/lang/String;)Z

    move/from16 v8, p20

    move-object/from16 v10, v48

    move-object/from16 v1, v49

    const/4 v9, -0x1

    goto :goto_11

    .line 13022
    .end local v47    # "action":Ljava/lang/String;
    .end local v48    # "intent":Landroid/content/Intent;
    .end local v49    # "ssp":Ljava/lang/String;
    .end local p20    # "userId":I
    .restart local v5    # "action":Ljava/lang/String;
    .restart local v6    # "intent":Landroid/content/Intent;
    .restart local v7    # "ssp":Ljava/lang/String;
    .restart local v8    # "userId":I
    :cond_25
    move-object/from16 v47, v5

    move-object/from16 v48, v6

    move-object/from16 v49, v7

    move/from16 p20, v8

    .end local v5    # "action":Ljava/lang/String;
    .end local v6    # "intent":Landroid/content/Intent;
    .end local v7    # "ssp":Ljava/lang/String;
    .end local v8    # "userId":I
    .restart local v47    # "action":Ljava/lang/String;
    .restart local v48    # "intent":Landroid/content/Intent;
    .restart local v49    # "ssp":Ljava/lang/String;
    .restart local p20    # "userId":I
    const-string v0, "android.intent.extra.UID"

    .line 13023
    move-object/from16 v10, v48

    const/4 v9, -0x1

    .end local v48    # "intent":Landroid/content/Intent;
    .local v10, "intent":Landroid/content/Intent;
    invoke-virtual {v10, v0, v9}, Landroid/content/Intent;->getIntExtra(Ljava/lang/String;I)I

    move-result v0

    .line 13022
    invoke-static {v0}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v0

    move-object/from16 v1, v49

    .end local v49    # "ssp":Ljava/lang/String;
    .end local p20    # "userId":I
    .local v1, "ssp":Ljava/lang/String;
    .restart local v8    # "userId":I
    invoke-virtual {v11, v1, v0, v8}, Lcom/android/server/am/ActivityManagerService;->forceStopAppZygoteLocked(Ljava/lang/String;II)V

    .line 13026
    :goto_11
    if-eqz v31, :cond_26

    .line 13027
    const/4 v3, 0x0

    goto :goto_12

    .line 13028
    :cond_26
    move/from16 v3, v21

    :goto_12
    move v0, v3

    .line 13029
    .local v0, "cmd":I
    const/4 v7, 0x1

    new-array v2, v7, [Ljava/lang/String;

    const/4 v6, 0x0

    aput-object v1, v2, v6

    invoke-direct {v11, v0, v2, v8}, Lcom/android/server/am/ActivityManagerService;->sendPackageBroadcastLocked(I[Ljava/lang/String;I)V

    .line 13031
    if-eqz v32, :cond_27

    .line 13032
    iget-object v2, v11, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/appop/AppOpsService;

    const-string v3, "android.intent.extra.UID"

    .line 13033
    invoke-virtual {v10, v3, v9}, Landroid/content/Intent;->getIntExtra(Ljava/lang/String;I)I

    move-result v3

    .line 13032
    invoke-virtual {v2, v3, v1}, Lcom/android/server/appop/AppOpsService;->packageRemoved(ILjava/lang/String;)V

    .line 13036
    iget-object v2, v11, Lcom/android/server/am/ActivityManagerService;->mUgmInternal:Lcom/android/server/uri/UriGrantsManagerInternal;

    invoke-interface {v2, v1, v8, v7, v6}, Lcom/android/server/uri/UriGrantsManagerInternal;->removeUriPermissionsForPackage(Ljava/lang/String;IZZ)V

    .line 13039
    iget-object v2, v11, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-virtual {v2, v1, v8}, Lcom/android/server/wm/ActivityTaskManagerInternal;->removeRecentTasksByPackageName(Ljava/lang/String;I)V

    .line 13041
    iget-object v2, v11, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v2, v1, v8}, Lcom/android/server/am/ActiveServices;->forceStopPackageLocked(Ljava/lang/String;I)V

    .line 13042
    iget-object v2, v11, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-virtual {v2, v1}, Lcom/android/server/wm/ActivityTaskManagerInternal;->onPackageUninstalled(Ljava/lang/String;)V

    .line 13043
    iget-object v2, v11, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v2, v1}, Lcom/android/server/am/BatteryStatsService;->notePackageUninstalled(Ljava/lang/String;)V

    .line 13045
    .end local v0    # "cmd":I
    :cond_27
    goto :goto_14

    .line 13046
    .end local v1    # "ssp":Ljava/lang/String;
    .end local v10    # "intent":Landroid/content/Intent;
    .end local v47    # "action":Ljava/lang/String;
    .restart local v5    # "action":Ljava/lang/String;
    .restart local v6    # "intent":Landroid/content/Intent;
    .restart local v7    # "ssp":Ljava/lang/String;
    :cond_28
    move-object/from16 v47, v5

    move-object v10, v6

    move-object v1, v7

    move/from16 v7, v20

    const/4 v9, -0x1

    move v6, v4

    .end local v5    # "action":Ljava/lang/String;
    .end local v6    # "intent":Landroid/content/Intent;
    .end local v7    # "ssp":Ljava/lang/String;
    .restart local v1    # "ssp":Ljava/lang/String;
    .restart local v10    # "intent":Landroid/content/Intent;
    .restart local v47    # "action":Ljava/lang/String;
    if-eqz v31, :cond_29

    .line 13047
    const-string v0, "android.intent.extra.UID"

    invoke-virtual {v10, v0, v9}, Landroid/content/Intent;->getIntExtra(Ljava/lang/String;I)I

    move-result v2

    .line 13049
    .local v2, "extraUid":I
    iget-object v3, v11, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v3

    :try_start_3
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 13050
    iget-object v0, v11, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    .line 13051
    invoke-static {v2}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v25

    const/16 v27, -0x2710

    const/16 v28, 0xa

    const/16 v29, 0x0

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "change "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v30

    .line 13050
    move-object/from16 v23, v0

    move-object/from16 v24, v1

    move/from16 v26, v8

    invoke-virtual/range {v23 .. v30}, Lcom/android/server/am/ProcessList;->killPackageProcessesLSP(Ljava/lang/String;IIIIILjava/lang/String;)Z

    .line 13056
    monitor-exit v3
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    goto :goto_13

    :catchall_0
    move-exception v0

    :try_start_4
    monitor-exit v3
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v0

    .line 13058
    .end local v2    # "extraUid":I
    :cond_29
    :goto_13
    const-string v0, "android.intent.extra.changed_component_name_list"

    .line 13059
    invoke-virtual {v10, v0}, Landroid/content/Intent;->getStringArrayExtra(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v0

    .line 13058
    invoke-direct {v11, v1, v8, v0}, Lcom/android/server/am/ActivityManagerService;->cleanupDisabledPackageComponentsLocked(Ljava/lang/String;I[Ljava/lang/String;)V

    .line 13061
    iget-object v0, v11, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v0, v1, v8}, Lcom/android/server/am/ActiveServices;->schedulePendingServiceStartLocked(Ljava/lang/String;I)V

    .line 13063
    .end local v18    # "removed":Z
    .end local v19    # "replacing":Z
    .end local v31    # "killProcess":Z
    .end local v32    # "fullUninstall":Z
    :goto_14
    move-object v15, v10

    move v10, v6

    move/from16 v52, v9

    move v9, v7

    move/from16 v7, v52

    goto/16 :goto_16

    .line 13006
    .end local v1    # "ssp":Ljava/lang/String;
    .end local v10    # "intent":Landroid/content/Intent;
    .end local v47    # "action":Ljava/lang/String;
    .restart local v5    # "action":Ljava/lang/String;
    .restart local v6    # "intent":Landroid/content/Intent;
    .restart local v7    # "ssp":Ljava/lang/String;
    :cond_2a
    move-object/from16 v47, v5

    move-object v10, v6

    move-object v1, v7

    const/4 v6, 0x0

    const/4 v7, 0x1

    const/4 v9, -0x1

    .end local v5    # "action":Ljava/lang/String;
    .end local v6    # "intent":Landroid/content/Intent;
    .end local v7    # "ssp":Ljava/lang/String;
    .restart local v1    # "ssp":Ljava/lang/String;
    .restart local v10    # "intent":Landroid/content/Intent;
    .restart local v47    # "action":Ljava/lang/String;
    move-object v15, v10

    move v10, v6

    move/from16 v52, v9

    move v9, v7

    move/from16 v7, v52

    goto/16 :goto_16

    .end local v1    # "ssp":Ljava/lang/String;
    .end local v10    # "intent":Landroid/content/Intent;
    .end local v47    # "action":Ljava/lang/String;
    .restart local v5    # "action":Ljava/lang/String;
    .restart local v6    # "intent":Landroid/content/Intent;
    :cond_2b
    move-object/from16 v47, v5

    move-object v10, v6

    const/4 v6, 0x0

    const/4 v7, 0x1

    const/4 v9, -0x1

    .end local v5    # "action":Ljava/lang/String;
    .end local v6    # "intent":Landroid/content/Intent;
    .restart local v10    # "intent":Landroid/content/Intent;
    .restart local v47    # "action":Ljava/lang/String;
    move-object v15, v10

    move v10, v6

    move/from16 v52, v9

    move v9, v7

    move/from16 v7, v52

    goto/16 :goto_16

    .line 13000
    .end local v10    # "intent":Landroid/content/Intent;
    .end local v17    # "data":Landroid/net/Uri;
    .end local v47    # "action":Ljava/lang/String;
    .restart local v5    # "action":Ljava/lang/String;
    .restart local v6    # "intent":Landroid/content/Intent;
    :pswitch_f
    move-object/from16 v47, v5

    move-object v10, v6

    const/4 v6, 0x0

    const/4 v7, 0x1

    const/4 v9, -0x1

    .end local v5    # "action":Ljava/lang/String;
    .end local v6    # "intent":Landroid/content/Intent;
    .restart local v10    # "intent":Landroid/content/Intent;
    .restart local v47    # "action":Ljava/lang/String;
    iget-object v0, v11, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-virtual {v0, v9}, Lcom/android/server/wm/ActivityTaskManagerInternal;->cleanupRecentTasksForUser(I)V

    .line 13001
    move-object v15, v10

    move v10, v6

    move/from16 v52, v9

    move v9, v7

    move/from16 v7, v52

    goto/16 :goto_16

    .line 12986
    .end local v10    # "intent":Landroid/content/Intent;
    .end local v47    # "action":Ljava/lang/String;
    .restart local v5    # "action":Ljava/lang/String;
    .restart local v6    # "intent":Landroid/content/Intent;
    :pswitch_10
    move-object/from16 v47, v5

    move-object v10, v6

    const/4 v6, 0x0

    const/4 v7, 0x1

    const/4 v9, -0x1

    .end local v5    # "action":Ljava/lang/String;
    .end local v6    # "intent":Landroid/content/Intent;
    .restart local v10    # "intent":Landroid/content/Intent;
    .restart local v47    # "action":Ljava/lang/String;
    const-string v0, "android.intent.extra.changed_package_list"

    .line 12987
    invoke-virtual {v10, v0}, Landroid/content/Intent;->getStringArrayExtra(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v0

    .line 12988
    .local v0, "list":[Ljava/lang/String;
    if-eqz v0, :cond_2d

    array-length v1, v0

    if-lez v1, :cond_2d

    .line 12989
    const/4 v1, 0x0

    move v5, v1

    .local v5, "i":I
    :goto_15
    array-length v1, v0

    if-ge v5, v1, :cond_2c

    .line 12990
    aget-object v2, v0, v5

    const/4 v3, -0x1

    const/4 v4, 0x0

    const/16 v17, 0x1

    const/16 v18, 0x1

    const/16 v19, 0x0

    const/16 v20, 0x0

    const-string/jumbo v21, "storage unmount"

    move-object/from16 v1, p0

    move/from16 v22, v5

    .end local v5    # "i":I
    .local v22, "i":I
    move/from16 v5, v17

    move/from16 v6, v18

    move/from16 v7, v19

    move/from16 p20, v8

    .end local v8    # "userId":I
    .restart local p20    # "userId":I
    move/from16 v8, v20

    move/from16 v9, p20

    move-object v15, v10

    .end local v10    # "intent":Landroid/content/Intent;
    .restart local v15    # "intent":Landroid/content/Intent;
    move-object/from16 v10, v21

    invoke-virtual/range {v1 .. v10}, Lcom/android/server/am/ActivityManagerService;->forceStopPackageLocked(Ljava/lang/String;IZZZZZILjava/lang/String;)Z

    .line 12989
    add-int/lit8 v5, v22, 0x1

    move/from16 v8, p20

    move-object v10, v15

    const/4 v6, 0x0

    const/4 v7, 0x1

    const/4 v9, -0x1

    move-object/from16 v15, p1

    .end local v22    # "i":I
    .restart local v5    # "i":I
    goto :goto_15

    .end local v15    # "intent":Landroid/content/Intent;
    .end local p20    # "userId":I
    .restart local v8    # "userId":I
    .restart local v10    # "intent":Landroid/content/Intent;
    :cond_2c
    move/from16 v22, v5

    move/from16 p20, v8

    move-object v15, v10

    .line 12993
    .end local v5    # "i":I
    .end local v8    # "userId":I
    .end local v10    # "intent":Landroid/content/Intent;
    .restart local v15    # "intent":Landroid/content/Intent;
    .restart local p20    # "userId":I
    iget-object v1, v11, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    const/4 v7, -0x1

    invoke-virtual {v1, v7}, Lcom/android/server/wm/ActivityTaskManagerInternal;->cleanupRecentTasksForUser(I)V

    .line 12994
    const/4 v9, 0x1

    .end local p20    # "userId":I
    .restart local v8    # "userId":I
    invoke-direct {v11, v9, v0, v8}, Lcom/android/server/am/ActivityManagerService;->sendPackageBroadcastLocked(I[Ljava/lang/String;I)V

    const/4 v10, 0x0

    goto :goto_16

    .line 12988
    .end local v15    # "intent":Landroid/content/Intent;
    .restart local v10    # "intent":Landroid/content/Intent;
    :cond_2d
    move-object v15, v10

    move/from16 v52, v9

    move v9, v7

    move/from16 v7, v52

    .end local v10    # "intent":Landroid/content/Intent;
    .restart local v15    # "intent":Landroid/content/Intent;
    const/4 v10, 0x0

    goto :goto_16

    .line 12972
    .end local v0    # "list":[Ljava/lang/String;
    .end local v15    # "intent":Landroid/content/Intent;
    .end local v47    # "action":Ljava/lang/String;
    .local v5, "action":Ljava/lang/String;
    .restart local v6    # "intent":Landroid/content/Intent;
    :pswitch_11
    move-object/from16 v47, v5

    move-object v15, v6

    const/4 v7, -0x1

    const/4 v9, 0x1

    .end local v5    # "action":Ljava/lang/String;
    .end local v6    # "intent":Landroid/content/Intent;
    .restart local v15    # "intent":Landroid/content/Intent;
    .restart local v47    # "action":Ljava/lang/String;
    invoke-direct {v11, v15}, Lcom/android/server/am/ActivityManagerService;->getUidFromIntent(Landroid/content/Intent;)I

    move-result v0

    .line 12973
    .local v0, "uid":I
    if-ltz v0, :cond_2f

    .line 12974
    iget-object v1, v11, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v1, v0}, Lcom/android/server/am/BatteryStatsService;->removeUid(I)V

    .line 12975
    const-string v1, "android.intent.extra.REPLACING"

    const/4 v10, 0x0

    invoke-virtual {v15, v1, v10}, Landroid/content/Intent;->getBooleanExtra(Ljava/lang/String;Z)Z

    move-result v1

    if-eqz v1, :cond_2e

    .line 12976
    iget-object v1, v11, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/appop/AppOpsService;

    invoke-static {v0}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v2

    const-string v3, "android.intent.extra.PACKAGE_NAME"

    .line 12977
    invoke-virtual {v15, v3}, Landroid/content/Intent;->getStringExtra(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v3

    .line 12976
    invoke-virtual {v1, v2, v3}, Lcom/android/server/appop/AppOpsService;->resetAllModes(ILjava/lang/String;)V

    goto :goto_16

    .line 12979
    :cond_2e
    iget-object v1, v11, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/appop/AppOpsService;

    invoke-virtual {v1, v0}, Lcom/android/server/appop/AppOpsService;->uidRemoved(I)V

    goto :goto_16

    .line 12973
    :cond_2f
    const/4 v10, 0x0

    .line 13078
    .end local v0    # "uid":I
    :goto_16
    move/from16 v6, p16

    goto :goto_17

    .line 12962
    .end local v15    # "intent":Landroid/content/Intent;
    .end local v47    # "action":Ljava/lang/String;
    .restart local v5    # "action":Ljava/lang/String;
    .restart local v6    # "intent":Landroid/content/Intent;
    :cond_30
    move-object v15, v6

    .end local v6    # "intent":Landroid/content/Intent;
    .restart local v15    # "intent":Landroid/content/Intent;
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Permission Denial: "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v15}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, " broadcast from "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, " (pid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move/from16 v6, p16

    invoke-virtual {v0, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, ", uid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v12}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, ") requires "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "android.permission.BROADCAST_PACKAGE_REMOVED"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 12967
    .local v0, "msg":Ljava/lang/String;
    const-string v1, "ActivityManager"

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 12968
    new-instance v1, Ljava/lang/SecurityException;

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 13190
    .end local v0    # "msg":Ljava/lang/String;
    .end local v5    # "action":Ljava/lang/String;
    .restart local v47    # "action":Ljava/lang/String;
    :goto_17
    const-string v0, "android.intent.action.PACKAGE_ADDED"

    move-object/from16 v5, v47

    .end local v47    # "action":Ljava/lang/String;
    .restart local v5    # "action":Ljava/lang/String;
    invoke-virtual {v0, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_31

    const-string v0, "android.intent.action.PACKAGE_REMOVED"

    .line 13191
    invoke-virtual {v0, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_31

    const-string v0, "android.intent.action.PACKAGE_REPLACED"

    .line 13192
    invoke-virtual {v0, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_32

    .line 13193
    :cond_31
    invoke-direct {v11, v15}, Lcom/android/server/am/ActivityManagerService;->getUidFromIntent(Landroid/content/Intent;)I

    move-result v0

    .line 13194
    .local v0, "uid":I
    if-eq v0, v7, :cond_32

    .line 13195
    iget-object v1, v11, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v1, v0}, Lcom/android/server/am/ProcessList;->getUidRecordLOSP(I)Lcom/android/server/am/UidRecord;

    move-result-object v1

    .line 13196
    .local v1, "uidRec":Lcom/android/server/am/UidRecord;
    if-eqz v1, :cond_32

    .line 13197
    invoke-virtual {v1}, Lcom/android/server/am/UidRecord;->updateHasInternetPermission()V

    .line 13204
    .end local v0    # "uid":I
    .end local v1    # "uidRec":Lcom/android/server/am/UidRecord;
    :cond_32
    move/from16 v41, v16

    goto :goto_18

    .line 12939
    .end local v15    # "intent":Landroid/content/Intent;
    .restart local v6    # "intent":Landroid/content/Intent;
    :cond_33
    move-object v15, v6

    move v6, v9

    const/4 v10, 0x0

    const/high16 v39, 0x40000000    # 2.0f

    move v9, v4

    .end local v6    # "intent":Landroid/content/Intent;
    .restart local v15    # "intent":Landroid/content/Intent;
    move/from16 v41, v16

    .line 13204
    .end local v16    # "timeoutExempt":Z
    .local v41, "timeoutExempt":Z
    :goto_18
    if-eqz p15, :cond_3d

    .line 13205
    const-string v0, "android.permission.BROADCAST_STICKY"

    invoke-virtual {v11, v0, v6, v12}, Lcom/android/server/am/ActivityManagerService;->checkPermission(Ljava/lang/String;II)I

    move-result v0

    if-nez v0, :cond_3c

    .line 13214
    move-object/from16 v13, p10

    if-eqz v13, :cond_34

    array-length v0, v13

    if-lez v0, :cond_34

    .line 13215
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Can\'t broadcast sticky intent "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v2, " and enforce permissions "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 13216
    invoke-static/range {p10 .. p10}, Ljava/util/Arrays;->toString([Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    .line 13215
    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 13217
    return v7

    .line 13219
    :cond_34
    invoke-virtual {v15}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v0

    if-nez v0, :cond_3b

    .line 13225
    if-eq v8, v7, :cond_36

    .line 13229
    iget-object v0, v11, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    invoke-virtual {v0, v7}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/util/ArrayMap;

    .line 13231
    .local v0, "stickies":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Ljava/util/ArrayList<Landroid/content/Intent;>;>;"
    if-eqz v0, :cond_36

    .line 13232
    invoke-virtual {v15}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Ljava/util/ArrayList;

    .line 13233
    .local v1, "list":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    if-eqz v1, :cond_36

    .line 13234
    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v2

    .line 13236
    .local v2, "N":I
    const/4 v3, 0x0

    .local v3, "i":I
    :goto_19
    if-ge v3, v2, :cond_36

    .line 13237
    invoke-virtual {v1, v3}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Landroid/content/Intent;

    invoke-virtual {v15, v4}, Landroid/content/Intent;->filterEquals(Landroid/content/Intent;)Z

    move-result v4

    if-nez v4, :cond_35

    .line 13236
    add-int/lit8 v3, v3, 0x1

    goto :goto_19

    .line 13238
    :cond_35
    new-instance v4, Ljava/lang/IllegalArgumentException;

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "Sticky broadcast "

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v9, " for user "

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v9, " conflicts with existing global broadcast"

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-direct {v4, v7}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 13246
    .end local v0    # "stickies":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Ljava/util/ArrayList<Landroid/content/Intent;>;>;"
    .end local v1    # "list":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .end local v2    # "N":I
    .end local v3    # "i":I
    :cond_36
    iget-object v0, v11, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    invoke-virtual {v0, v8}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/util/ArrayMap;

    .line 13247
    .restart local v0    # "stickies":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Ljava/util/ArrayList<Landroid/content/Intent;>;>;"
    if-nez v0, :cond_37

    .line 13248
    new-instance v1, Landroid/util/ArrayMap;

    invoke-direct {v1}, Landroid/util/ArrayMap;-><init>()V

    move-object v0, v1

    .line 13249
    iget-object v1, v11, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    invoke-virtual {v1, v8, v0}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 13251
    :cond_37
    invoke-virtual {v15}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Ljava/util/ArrayList;

    .line 13252
    .restart local v1    # "list":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    if-nez v1, :cond_38

    .line 13253
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    move-object v1, v2

    .line 13254
    invoke-virtual {v15}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v2, v1}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 13256
    :cond_38
    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v2

    .line 13258
    .local v2, "stickiesCount":I
    const/4 v3, 0x0

    .restart local v3    # "i":I
    :goto_1a
    if-ge v3, v2, :cond_3a

    .line 13259
    invoke-virtual {v1, v3}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Landroid/content/Intent;

    invoke-virtual {v15, v4}, Landroid/content/Intent;->filterEquals(Landroid/content/Intent;)Z

    move-result v4

    if-eqz v4, :cond_39

    .line 13261
    new-instance v4, Landroid/content/Intent;

    invoke-direct {v4, v15}, Landroid/content/Intent;-><init>(Landroid/content/Intent;)V

    invoke-virtual {v1, v3, v4}, Ljava/util/ArrayList;->set(ILjava/lang/Object;)Ljava/lang/Object;

    .line 13262
    goto :goto_1b

    .line 13258
    :cond_39
    add-int/lit8 v3, v3, 0x1

    goto :goto_1a

    .line 13265
    :cond_3a
    :goto_1b
    if-lt v3, v2, :cond_3e

    .line 13266
    new-instance v4, Landroid/content/Intent;

    invoke-direct {v4, v15}, Landroid/content/Intent;-><init>(Landroid/content/Intent;)V

    invoke-virtual {v1, v4}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_1c

    .line 13220
    .end local v0    # "stickies":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Ljava/util/ArrayList<Landroid/content/Intent;>;>;"
    .end local v1    # "list":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .end local v2    # "stickiesCount":I
    .end local v3    # "i":I
    :cond_3b
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Sticky broadcasts can\'t target a specific component"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 13208
    :cond_3c
    move-object/from16 v13, p10

    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Permission Denial: broadcastIntent() requesting a sticky broadcast from pid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, ", uid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v12}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, " requires "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "android.permission.BROADCAST_STICKY"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 13211
    .local v0, "msg":Ljava/lang/String;
    const-string v1, "ActivityManager"

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 13212
    new-instance v1, Ljava/lang/SecurityException;

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 13204
    .end local v0    # "msg":Ljava/lang/String;
    :cond_3d
    move-object/from16 v13, p10

    .line 13271
    :cond_3e
    :goto_1c
    if-ne v8, v7, :cond_3f

    .line 13273
    iget-object v0, v11, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {v0}, Lcom/android/server/am/UserController;->getStartedUserArray()[I

    move-result-object v0

    move-object v4, v0

    .local v0, "users":[I
    goto :goto_1d

    .line 13276
    .end local v0    # "users":[I
    :cond_3f
    new-array v0, v9, [I

    aput v8, v0, v10

    move-object v4, v0

    .line 13280
    .local v4, "users":[I
    :goto_1d
    const/4 v0, 0x0

    .line 13281
    .local v0, "receivers":Ljava/util/List;
    const/16 v16, 0x0

    .line 13283
    .local v16, "registeredReceivers":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/am/BroadcastFilter;>;"
    invoke-virtual {v15}, Landroid/content/Intent;->getFlags()I

    move-result v1

    and-int v1, v1, v39

    if-nez v1, :cond_40

    .line 13285
    move-object/from16 v1, p0

    move-object v2, v15

    move-object/from16 v3, p5

    move-object/from16 p20, v4

    .end local v4    # "users":[I
    .local p20, "users":[I
    move/from16 v4, p17

    move-object/from16 v46, v5

    .end local v5    # "action":Ljava/lang/String;
    .local v46, "action":Ljava/lang/String;
    move-object/from16 v5, p20

    move-object/from16 v6, p4

    invoke-direct/range {v1 .. v6}, Lcom/android/server/am/ActivityManagerService;->collectReceiverComponents(Landroid/content/Intent;Ljava/lang/String;I[I[I)Ljava/util/List;

    move-result-object v0

    goto :goto_1e

    .line 13283
    .end local v46    # "action":Ljava/lang/String;
    .end local p20    # "users":[I
    .restart local v4    # "users":[I
    .restart local v5    # "action":Ljava/lang/String;
    :cond_40
    move-object/from16 p20, v4

    move-object/from16 v46, v5

    .line 13288
    .end local v4    # "users":[I
    .end local v5    # "action":Ljava/lang/String;
    .restart local v46    # "action":Ljava/lang/String;
    .restart local p20    # "users":[I
    :goto_1e
    invoke-virtual {v15}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v1

    if-nez v1, :cond_46

    .line 13289
    if-ne v8, v7, :cond_45

    const/16 v1, 0x7d0

    if-ne v12, v1, :cond_45

    .line 13291
    const/4 v1, 0x0

    move-object/from16 v2, v16

    .end local v16    # "registeredReceivers":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/am/BroadcastFilter;>;"
    .local v1, "i":I
    .local v2, "registeredReceivers":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/am/BroadcastFilter;>;"
    :goto_1f
    move-object/from16 v7, p20

    .end local p20    # "users":[I
    .local v7, "users":[I
    array-length v3, v7

    if-ge v1, v3, :cond_44

    .line 13292
    iget-object v3, v11, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    const-string/jumbo v4, "no_debugging_features"

    aget v5, v7, v1

    invoke-virtual {v3, v4, v5}, Lcom/android/server/am/UserController;->hasUserRestriction(Ljava/lang/String;I)Z

    move-result v3

    if-eqz v3, :cond_41

    .line 13294
    move-object/from16 v12, p5

    goto :goto_20

    .line 13296
    :cond_41
    iget-object v3, v11, Lcom/android/server/am/ActivityManagerService;->mReceiverResolver:Lcom/android/server/IntentResolver;

    aget v4, v7, v1

    .line 13297
    move-object/from16 v12, p5

    invoke-virtual {v3, v15, v12, v10, v4}, Lcom/android/server/IntentResolver;->queryIntent(Landroid/content/Intent;Ljava/lang/String;ZI)Ljava/util/List;

    move-result-object v3

    .line 13299
    .local v3, "registeredReceiversForUser":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/am/BroadcastFilter;>;"
    if-nez v2, :cond_42

    .line 13300
    move-object v2, v3

    goto :goto_20

    .line 13301
    :cond_42
    if-eqz v3, :cond_43

    .line 13302
    invoke-interface {v2, v3}, Ljava/util/List;->addAll(Ljava/util/Collection;)Z

    .line 13291
    .end local v3    # "registeredReceiversForUser":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/am/BroadcastFilter;>;"
    :cond_43
    :goto_20
    add-int/lit8 v1, v1, 0x1

    move/from16 v12, p17

    move-object/from16 p20, v7

    goto :goto_1f

    :cond_44
    move-object/from16 v12, p5

    move-object v6, v2

    .end local v1    # "i":I
    goto :goto_21

    .line 13289
    .end local v2    # "registeredReceivers":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/am/BroadcastFilter;>;"
    .end local v7    # "users":[I
    .restart local v16    # "registeredReceivers":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/am/BroadcastFilter;>;"
    .restart local p20    # "users":[I
    :cond_45
    move-object/from16 v12, p5

    move-object/from16 v7, p20

    .line 13306
    .end local p20    # "users":[I
    .restart local v7    # "users":[I
    iget-object v1, v11, Lcom/android/server/am/ActivityManagerService;->mReceiverResolver:Lcom/android/server/IntentResolver;

    invoke-virtual {v1, v15, v12, v10, v8}, Lcom/android/server/IntentResolver;->queryIntent(Landroid/content/Intent;Ljava/lang/String;ZI)Ljava/util/List;

    move-result-object v16

    move-object/from16 v6, v16

    goto :goto_21

    .line 13288
    .end local v7    # "users":[I
    .restart local p20    # "users":[I
    :cond_46
    move-object/from16 v12, p5

    move-object/from16 v7, p20

    .end local p20    # "users":[I
    .restart local v7    # "users":[I
    move-object/from16 v6, v16

    .line 13311
    .end local v16    # "registeredReceivers":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/am/BroadcastFilter;>;"
    .local v6, "registeredReceivers":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/am/BroadcastFilter;>;"
    :goto_21
    nop

    .line 13312
    invoke-virtual {v15}, Landroid/content/Intent;->getFlags()I

    move-result v1

    const/high16 v2, 0x20000000

    and-int/2addr v1, v2

    if-eqz v1, :cond_47

    move v3, v9

    goto :goto_22

    :cond_47
    move v3, v10

    :goto_22
    move/from16 v47, v3

    .line 13316
    .local v47, "replacePending":Z
    if-eqz v6, :cond_49

    move-object/from16 v5, p4

    .end local p4    # "broadcastAllowList":[I
    .local v5, "broadcastAllowList":[I
    if-eqz v5, :cond_4a

    .line 13319
    invoke-interface {v6}, Ljava/util/List;->size()I

    move-result v1

    sub-int/2addr v1, v9

    .restart local v1    # "i":I
    :goto_23
    if-ltz v1, :cond_4a

    .line 13320
    invoke-interface {v6, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/BroadcastFilter;

    iget v2, v2, Lcom/android/server/am/BroadcastFilter;->owningUid:I

    invoke-static {v2}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v2

    .line 13321
    .local v2, "owningAppId":I
    const/16 v3, 0x2710

    if-lt v2, v3, :cond_48

    .line 13322
    invoke-static {v5, v2}, Ljava/util/Arrays;->binarySearch([II)I

    move-result v3

    if-gez v3, :cond_48

    .line 13323
    invoke-interface {v6, v1}, Ljava/util/List;->remove(I)Ljava/lang/Object;

    .line 13319
    .end local v2    # "owningAppId":I
    :cond_48
    add-int/lit8 v1, v1, -0x1

    goto :goto_23

    .line 13316
    .end local v1    # "i":I
    .end local v5    # "broadcastAllowList":[I
    .restart local p4    # "broadcastAllowList":[I
    :cond_49
    move-object/from16 v5, p4

    .line 13328
    .end local p4    # "broadcastAllowList":[I
    .restart local v5    # "broadcastAllowList":[I
    :cond_4a
    if-eqz v6, :cond_4b

    invoke-interface {v6}, Ljava/util/List;->size()I

    move-result v3

    goto :goto_24

    :cond_4b
    move v3, v10

    :goto_24
    move/from16 v48, v3

    .line 13329
    .local v48, "NR":I
    if-nez p14, :cond_4f

    if-lez v48, :cond_4f

    .line 13333
    if-eqz v45, :cond_4c

    .line 13334
    move-object/from16 v1, p0

    move-object v2, v15

    move-object/from16 v3, p1

    move-object/from16 v4, p2

    move-object/from16 v49, v5

    .end local v5    # "broadcastAllowList":[I
    .local v49, "broadcastAllowList":[I
    move/from16 v5, p17

    move-object/from16 v50, v6

    .end local v6    # "registeredReceivers":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/am/BroadcastFilter;>;"
    .local v50, "registeredReceivers":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/am/BroadcastFilter;>;"
    move/from16 v6, v44

    move-object/from16 v51, v7

    .end local v7    # "users":[I
    .local v51, "users":[I
    move-object/from16 v7, v50

    invoke-direct/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->checkBroadcastFromSystem(Landroid/content/Intent;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;IZLjava/util/List;)V

    goto :goto_25

    .line 13333
    .end local v49    # "broadcastAllowList":[I
    .end local v50    # "registeredReceivers":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/am/BroadcastFilter;>;"
    .end local v51    # "users":[I
    .restart local v5    # "broadcastAllowList":[I
    .restart local v6    # "registeredReceivers":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/am/BroadcastFilter;>;"
    .restart local v7    # "users":[I
    :cond_4c
    move-object/from16 v49, v5

    move-object/from16 v50, v6

    move-object/from16 v51, v7

    .line 13337
    .end local v5    # "broadcastAllowList":[I
    .end local v6    # "registeredReceivers":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/am/BroadcastFilter;>;"
    .end local v7    # "users":[I
    .restart local v49    # "broadcastAllowList":[I
    .restart local v50    # "registeredReceivers":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/am/BroadcastFilter;>;"
    .restart local v51    # "users":[I
    :goto_25
    invoke-virtual {v11, v15}, Lcom/android/server/am/ActivityManagerService;->broadcastQueueForIntent(Landroid/content/Intent;)Lcom/android/server/am/BroadcastQueue;

    move-result-object v1

    .local v1, "queue":Lcom/android/server/am/BroadcastQueue;
    move-object v13, v1

    .line 13338
    new-instance v2, Lcom/android/server/am/BroadcastRecord;

    move-object v12, v2

    const/16 v33, 0x0

    move-object v14, v15

    move-object v7, v15

    .end local v15    # "intent":Landroid/content/Intent;
    .local v7, "intent":Landroid/content/Intent;
    move-object/from16 v15, p1

    move-object/from16 v16, p2

    move-object/from16 v17, p3

    move/from16 v18, p16

    move/from16 v19, p17

    move/from16 v20, v38

    move-object/from16 v21, p5

    move-object/from16 v22, p10

    move-object/from16 v23, p11

    move/from16 v24, p12

    move-object/from16 v25, v43

    move-object/from16 v26, v50

    move-object/from16 v27, p6

    move/from16 v28, p7

    move-object/from16 v29, p8

    move-object/from16 v30, p9

    move/from16 v31, p14

    move/from16 v32, p15

    move/from16 v34, v8

    move/from16 v35, v40

    move-object/from16 v36, v42

    move/from16 v37, v41

    invoke-direct/range {v12 .. v37}, Lcom/android/server/am/BroadcastRecord;-><init>(Lcom/android/server/am/BroadcastQueue;Landroid/content/Intent;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;IIZLjava/lang/String;[Ljava/lang/String;[Ljava/lang/String;ILandroid/app/BroadcastOptions;Ljava/util/List;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;ZZZIZLandroid/os/IBinder;Z)V

    .line 13345
    .local v2, "r":Lcom/android/server/am/BroadcastRecord;
    if-eqz v47, :cond_4d

    .line 13346
    invoke-virtual {v1, v2}, Lcom/android/server/am/BroadcastQueue;->replaceParallelBroadcastLocked(Lcom/android/server/am/BroadcastRecord;)Lcom/android/server/am/BroadcastRecord;

    move-result-object v3

    if-eqz v3, :cond_4d

    move v3, v9

    goto :goto_26

    :cond_4d
    move v3, v10

    .line 13348
    .local v3, "replaced":Z
    :goto_26
    if-nez v3, :cond_4e

    .line 13349
    invoke-virtual {v1, v2}, Lcom/android/server/am/BroadcastQueue;->enqueueParallelBroadcastLocked(Lcom/android/server/am/BroadcastRecord;)V

    .line 13350
    invoke-virtual {v1}, Lcom/android/server/am/BroadcastQueue;->scheduleBroadcastsLocked()V

    .line 13352
    :cond_4e
    const/4 v6, 0x0

    .line 13353
    .end local v50    # "registeredReceivers":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/am/BroadcastFilter;>;"
    .restart local v6    # "registeredReceivers":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/am/BroadcastFilter;>;"
    const/16 v48, 0x0

    move-object v15, v6

    move/from16 v14, v48

    goto :goto_27

    .line 13329
    .end local v1    # "queue":Lcom/android/server/am/BroadcastQueue;
    .end local v2    # "r":Lcom/android/server/am/BroadcastRecord;
    .end local v3    # "replaced":Z
    .end local v49    # "broadcastAllowList":[I
    .end local v51    # "users":[I
    .restart local v5    # "broadcastAllowList":[I
    .local v7, "users":[I
    .restart local v15    # "intent":Landroid/content/Intent;
    :cond_4f
    move-object/from16 v49, v5

    move-object/from16 v50, v6

    move-object/from16 v51, v7

    move-object v7, v15

    .line 13357
    .end local v5    # "broadcastAllowList":[I
    .end local v6    # "registeredReceivers":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/am/BroadcastFilter;>;"
    .end local v15    # "intent":Landroid/content/Intent;
    .local v7, "intent":Landroid/content/Intent;
    .restart local v49    # "broadcastAllowList":[I
    .restart local v50    # "registeredReceivers":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/am/BroadcastFilter;>;"
    .restart local v51    # "users":[I
    move/from16 v14, v48

    move-object/from16 v15, v50

    .end local v48    # "NR":I
    .end local v50    # "registeredReceivers":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/am/BroadcastFilter;>;"
    .local v14, "NR":I
    .local v15, "registeredReceivers":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/am/BroadcastFilter;>;"
    :goto_27
    const/4 v1, 0x0

    .line 13358
    .local v1, "ir":I
    if-eqz v0, :cond_5b

    .line 13365
    const/4 v2, 0x0

    .line 13366
    .local v2, "skipPackages":[Ljava/lang/String;
    const-string v3, "android.intent.action.PACKAGE_ADDED"

    invoke-virtual {v7}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v3, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_51

    const-string v3, "android.intent.action.PACKAGE_RESTARTED"

    .line 13367
    invoke-virtual {v7}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v3, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_51

    const-string v3, "android.intent.action.PACKAGE_DATA_CLEARED"

    .line 13368
    invoke-virtual {v7}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v3, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_50

    goto :goto_28

    .line 13376
    :cond_50
    const-string v3, "android.intent.action.EXTERNAL_APPLICATIONS_AVAILABLE"

    invoke-virtual {v7}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v3, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_52

    .line 13377
    const-string v3, "android.intent.extra.changed_package_list"

    invoke-virtual {v7, v3}, Landroid/content/Intent;->getStringArrayExtra(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v2

    goto :goto_29

    .line 13369
    :cond_51
    :goto_28
    invoke-virtual {v7}, Landroid/content/Intent;->getData()Landroid/net/Uri;

    move-result-object v3

    .line 13370
    .local v3, "data":Landroid/net/Uri;
    if-eqz v3, :cond_52

    .line 13371
    invoke-virtual {v3}, Landroid/net/Uri;->getSchemeSpecificPart()Ljava/lang/String;

    move-result-object v4

    .line 13372
    .local v4, "pkgName":Ljava/lang/String;
    if-eqz v4, :cond_52

    .line 13373
    new-array v5, v9, [Ljava/lang/String;

    aput-object v4, v5, v10

    move-object v2, v5

    .line 13376
    .end local v3    # "data":Landroid/net/Uri;
    .end local v4    # "pkgName":Ljava/lang/String;
    :cond_52
    nop

    .line 13379
    :goto_29
    if-eqz v2, :cond_55

    array-length v3, v2

    if-lez v3, :cond_55

    .line 13380
    array-length v3, v2

    move v4, v10

    :goto_2a
    if-ge v4, v3, :cond_55

    aget-object v5, v2, v4

    .line 13381
    .local v5, "skipPackage":Ljava/lang/String;
    if-eqz v5, :cond_54

    .line 13382
    invoke-interface {v0}, Ljava/util/List;->size()I

    move-result v6

    .line 13383
    .local v6, "NT":I
    const/4 v12, 0x0

    .local v12, "it":I
    :goto_2b
    if-ge v12, v6, :cond_54

    .line 13384
    invoke-interface {v0, v12}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v13

    check-cast v13, Landroid/content/pm/ResolveInfo;

    .line 13385
    .local v13, "curt":Landroid/content/pm/ResolveInfo;
    iget-object v10, v13, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-object v10, v10, Landroid/content/pm/ActivityInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v10, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v10

    if-eqz v10, :cond_53

    .line 13386
    invoke-interface {v0, v12}, Ljava/util/List;->remove(I)Ljava/lang/Object;

    .line 13387
    add-int/lit8 v12, v12, -0x1

    .line 13388
    add-int/lit8 v6, v6, -0x1

    .line 13383
    .end local v13    # "curt":Landroid/content/pm/ResolveInfo;
    :cond_53
    add-int/2addr v12, v9

    const/4 v10, 0x0

    goto :goto_2b

    .line 13380
    .end local v5    # "skipPackage":Ljava/lang/String;
    .end local v6    # "NT":I
    .end local v12    # "it":I
    :cond_54
    add-int/lit8 v4, v4, 0x1

    const/4 v10, 0x0

    goto :goto_2a

    .line 13395
    :cond_55
    if-eqz v0, :cond_56

    invoke-interface {v0}, Ljava/util/List;->size()I

    move-result v3

    goto :goto_2c

    :cond_56
    const/4 v3, 0x0

    .line 13396
    .local v3, "NT":I
    :goto_2c
    const/4 v4, 0x0

    .line 13397
    .local v4, "it":I
    const/4 v5, 0x0

    .line 13398
    .local v5, "curt":Landroid/content/pm/ResolveInfo;
    const/4 v6, 0x0

    .line 13399
    .local v6, "curr":Lcom/android/server/am/BroadcastFilter;
    :goto_2d
    if-ge v4, v3, :cond_5a

    if-ge v1, v14, :cond_5a

    .line 13400
    if-nez v5, :cond_57

    .line 13401
    invoke-interface {v0, v4}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v9

    move-object v5, v9

    check-cast v5, Landroid/content/pm/ResolveInfo;

    .line 13403
    :cond_57
    if-nez v6, :cond_58

    .line 13404
    invoke-interface {v15, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v9

    move-object v6, v9

    check-cast v6, Lcom/android/server/am/BroadcastFilter;

    .line 13406
    :cond_58
    invoke-virtual {v6}, Lcom/android/server/am/BroadcastFilter;->getPriority()I

    move-result v9

    iget v10, v5, Landroid/content/pm/ResolveInfo;->priority:I

    if-lt v9, v10, :cond_59

    .line 13408
    invoke-interface {v0, v4, v6}, Ljava/util/List;->add(ILjava/lang/Object;)V

    .line 13409
    add-int/lit8 v1, v1, 0x1

    .line 13410
    const/4 v6, 0x0

    .line 13411
    add-int/lit8 v4, v4, 0x1

    .line 13412
    add-int/lit8 v3, v3, 0x1

    goto :goto_2d

    .line 13415
    :cond_59
    add-int/lit8 v4, v4, 0x1

    .line 13416
    const/4 v5, 0x0

    goto :goto_2d

    .line 13420
    .end local v2    # "skipPackages":[Ljava/lang/String;
    .end local v3    # "NT":I
    .end local v4    # "it":I
    .end local v5    # "curt":Landroid/content/pm/ResolveInfo;
    .end local v6    # "curr":Lcom/android/server/am/BroadcastFilter;
    :cond_5a
    move-object v9, v0

    move v10, v1

    goto :goto_2e

    .line 13358
    :cond_5b
    move-object v9, v0

    move v10, v1

    .line 13420
    .end local v0    # "receivers":Ljava/util/List;
    .end local v1    # "ir":I
    .local v9, "receivers":Ljava/util/List;
    .local v10, "ir":I
    :goto_2e
    if-ge v10, v14, :cond_5d

    .line 13421
    if-nez v9, :cond_5c

    .line 13422
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    move-object v9, v0

    .line 13424
    :cond_5c
    invoke-interface {v15, v10}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v0

    invoke-interface {v9, v0}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    .line 13425
    add-int/lit8 v10, v10, 0x1

    goto :goto_2e

    .line 13428
    :cond_5d
    if-eqz v45, :cond_5e

    .line 13429
    move-object/from16 v1, p0

    move-object v2, v7

    move-object/from16 v3, p1

    move-object/from16 v4, p2

    move/from16 v5, p17

    move/from16 v6, v44

    move-object v12, v7

    .end local v7    # "intent":Landroid/content/Intent;
    .local v12, "intent":Landroid/content/Intent;
    move-object v7, v9

    invoke-direct/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->checkBroadcastFromSystem(Landroid/content/Intent;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;IZLjava/util/List;)V

    goto :goto_2f

    .line 13428
    .end local v12    # "intent":Landroid/content/Intent;
    .restart local v7    # "intent":Landroid/content/Intent;
    :cond_5e
    move-object v12, v7

    .line 13433
    .end local v7    # "intent":Landroid/content/Intent;
    .restart local v12    # "intent":Landroid/content/Intent;
    :goto_2f
    if-eqz v9, :cond_5f

    invoke-interface {v9}, Ljava/util/List;->size()I

    move-result v0

    if-gtz v0, :cond_60

    :cond_5f
    if-eqz p6, :cond_64

    .line 13435
    :cond_60
    invoke-virtual {v11, v12}, Lcom/android/server/am/ActivityManagerService;->broadcastQueueForIntent(Landroid/content/Intent;)Lcom/android/server/am/BroadcastQueue;

    move-result-object v1

    .local v1, "queue":Lcom/android/server/am/BroadcastQueue;
    move-object v13, v1

    .line 13436
    new-instance v0, Lcom/android/server/am/BroadcastRecord;

    move-object v6, v12

    .end local v12    # "intent":Landroid/content/Intent;
    .local v6, "intent":Landroid/content/Intent;
    move-object v12, v0

    const/16 v33, 0x0

    move/from16 v48, v14

    .end local v14    # "NR":I
    .restart local v48    # "NR":I
    move-object v14, v6

    move-object/from16 v50, v15

    .end local v15    # "registeredReceivers":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/am/BroadcastFilter;>;"
    .restart local v50    # "registeredReceivers":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/am/BroadcastFilter;>;"
    move-object/from16 v15, p1

    move-object/from16 v16, p2

    move-object/from16 v17, p3

    move/from16 v18, p16

    move/from16 v19, p17

    move/from16 v20, v38

    move-object/from16 v21, p5

    move-object/from16 v22, p10

    move-object/from16 v23, p11

    move/from16 v24, p12

    move-object/from16 v25, v43

    move-object/from16 v26, v9

    move-object/from16 v27, p6

    move/from16 v28, p7

    move-object/from16 v29, p8

    move-object/from16 v30, p9

    move/from16 v31, p14

    move/from16 v32, p15

    move/from16 v34, v8

    move/from16 v35, v40

    move-object/from16 v36, v42

    move/from16 v37, v41

    invoke-direct/range {v12 .. v37}, Lcom/android/server/am/BroadcastRecord;-><init>(Lcom/android/server/am/BroadcastQueue;Landroid/content/Intent;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;IIZLjava/lang/String;[Ljava/lang/String;[Ljava/lang/String;ILandroid/app/BroadcastOptions;Ljava/util/List;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;ZZZIZLandroid/os/IBinder;Z)V

    move-object v2, v0

    .line 13446
    .local v2, "r":Lcom/android/server/am/BroadcastRecord;
    if-eqz v47, :cond_61

    invoke-virtual {v1, v2}, Lcom/android/server/am/BroadcastQueue;->replaceOrderedBroadcastLocked(Lcom/android/server/am/BroadcastRecord;)Lcom/android/server/am/BroadcastRecord;

    move-result-object v0

    goto :goto_30

    :cond_61
    const/4 v0, 0x0

    :goto_30
    move-object v3, v0

    .line 13447
    .local v3, "oldRecord":Lcom/android/server/am/BroadcastRecord;
    if-eqz v3, :cond_62

    .line 13449
    iget-object v0, v3, Lcom/android/server/am/BroadcastRecord;->resultTo:Landroid/content/IIntentReceiver;

    if-eqz v0, :cond_63

    .line 13450
    iget-object v0, v3, Lcom/android/server/am/BroadcastRecord;->intent:Landroid/content/Intent;

    invoke-virtual {v11, v0}, Lcom/android/server/am/ActivityManagerService;->broadcastQueueForIntent(Landroid/content/Intent;)Lcom/android/server/am/BroadcastQueue;

    move-result-object v4

    .line 13452
    .local v4, "oldQueue":Lcom/android/server/am/BroadcastQueue;
    :try_start_5
    iget-object v13, v3, Lcom/android/server/am/BroadcastRecord;->callerApp:Lcom/android/server/am/ProcessRecord;

    iget-object v14, v3, Lcom/android/server/am/BroadcastRecord;->resultTo:Landroid/content/IIntentReceiver;

    iget-object v15, v3, Lcom/android/server/am/BroadcastRecord;->intent:Landroid/content/Intent;

    const/16 v16, 0x0

    const/16 v17, 0x0

    const/16 v18, 0x0

    const/16 v19, 0x0

    const/16 v20, 0x0

    iget v0, v3, Lcom/android/server/am/BroadcastRecord;->userId:I

    move-object v12, v4

    move/from16 v21, v0

    invoke-virtual/range {v12 .. v21}, Lcom/android/server/am/BroadcastQueue;->performReceiveLocked(Lcom/android/server/am/ProcessRecord;Landroid/content/IIntentReceiver;Landroid/content/Intent;ILjava/lang/String;Landroid/os/Bundle;ZZI)V
    :try_end_5
    .catch Landroid/os/RemoteException; {:try_start_5 .. :try_end_5} :catch_2

    .line 13461
    goto :goto_31

    .line 13456
    :catch_2
    move-exception v0

    .line 13457
    .local v0, "e":Landroid/os/RemoteException;
    const-string v5, "ActivityManager"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v12, "Failure ["

    invoke-virtual {v7, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v12, v1, Lcom/android/server/am/BroadcastQueue;->mQueueName:Ljava/lang/String;

    invoke-virtual {v7, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v12, "] sending broadcast result of "

    invoke-virtual {v7, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v5, v7, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 13462
    .end local v0    # "e":Landroid/os/RemoteException;
    .end local v4    # "oldQueue":Lcom/android/server/am/BroadcastQueue;
    :goto_31
    goto :goto_32

    .line 13464
    :cond_62
    invoke-virtual {v1, v2}, Lcom/android/server/am/BroadcastQueue;->enqueueOrderedBroadcastLocked(Lcom/android/server/am/BroadcastRecord;)V

    .line 13465
    invoke-virtual {v1}, Lcom/android/server/am/BroadcastQueue;->scheduleBroadcastsLocked()V

    .line 13467
    .end local v1    # "queue":Lcom/android/server/am/BroadcastQueue;
    .end local v2    # "r":Lcom/android/server/am/BroadcastRecord;
    .end local v3    # "oldRecord":Lcom/android/server/am/BroadcastRecord;
    :cond_63
    :goto_32
    move-object v14, v6

    goto :goto_33

    .line 13470
    .end local v6    # "intent":Landroid/content/Intent;
    .end local v48    # "NR":I
    .end local v50    # "registeredReceivers":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/am/BroadcastFilter;>;"
    .restart local v12    # "intent":Landroid/content/Intent;
    .restart local v14    # "NR":I
    .restart local v15    # "registeredReceivers":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/am/BroadcastFilter;>;"
    :cond_64
    move-object v6, v12

    move/from16 v48, v14

    move-object/from16 v50, v15

    .end local v12    # "intent":Landroid/content/Intent;
    .end local v14    # "NR":I
    .end local v15    # "registeredReceivers":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/am/BroadcastFilter;>;"
    .restart local v6    # "intent":Landroid/content/Intent;
    .restart local v48    # "NR":I
    .restart local v50    # "registeredReceivers":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/am/BroadcastFilter;>;"
    invoke-virtual {v6}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v0

    if-nez v0, :cond_66

    invoke-virtual {v6}, Landroid/content/Intent;->getPackage()Ljava/lang/String;

    move-result-object v0

    if-nez v0, :cond_66

    .line 13471
    invoke-virtual {v6}, Landroid/content/Intent;->getFlags()I

    move-result v0

    and-int v0, v0, v39

    if-nez v0, :cond_65

    .line 13473
    invoke-virtual {v6}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v2

    const/4 v4, 0x0

    const/4 v5, 0x0

    const-wide/16 v12, 0x0

    move-object/from16 v1, p0

    move-object/from16 v3, p2

    move-object v14, v6

    .end local v6    # "intent":Landroid/content/Intent;
    .local v14, "intent":Landroid/content/Intent;
    move-wide v6, v12

    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->addBroadcastStatLocked(Ljava/lang/String;Ljava/lang/String;IIJ)V

    goto :goto_33

    .line 13471
    .end local v14    # "intent":Landroid/content/Intent;
    .restart local v6    # "intent":Landroid/content/Intent;
    :cond_65
    move-object v14, v6

    .end local v6    # "intent":Landroid/content/Intent;
    .restart local v14    # "intent":Landroid/content/Intent;
    goto :goto_33

    .line 13470
    .end local v14    # "intent":Landroid/content/Intent;
    .restart local v6    # "intent":Landroid/content/Intent;
    :cond_66
    move-object v14, v6

    .line 13477
    .end local v6    # "intent":Landroid/content/Intent;
    .restart local v14    # "intent":Landroid/content/Intent;
    :goto_33
    const/4 v1, 0x0

    return v1

    .line 12876
    .end local v9    # "receivers":Ljava/util/List;
    .end local v10    # "ir":I
    .end local v14    # "intent":Landroid/content/Intent;
    .end local v41    # "timeoutExempt":Z
    .end local v44    # "isProtectedBroadcast":Z
    .end local v45    # "isCallerSystem":Z
    .end local v46    # "action":Ljava/lang/String;
    .end local v47    # "replacePending":Z
    .end local v48    # "NR":I
    .end local v49    # "broadcastAllowList":[I
    .end local v50    # "registeredReceivers":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/am/BroadcastFilter;>;"
    .end local v51    # "users":[I
    .local v5, "action":Ljava/lang/String;
    .restart local v6    # "intent":Landroid/content/Intent;
    .restart local p4    # "broadcastAllowList":[I
    :catch_3
    move-exception v0

    move-object/from16 v49, p4

    move-object/from16 v46, v5

    move-object v14, v6

    .line 12877
    .end local v5    # "action":Ljava/lang/String;
    .end local v6    # "intent":Landroid/content/Intent;
    .end local p4    # "broadcastAllowList":[I
    .restart local v0    # "e":Landroid/os/RemoteException;
    .restart local v14    # "intent":Landroid/content/Intent;
    .restart local v46    # "action":Ljava/lang/String;
    .restart local v49    # "broadcastAllowList":[I
    const-string v1, "ActivityManager"

    const-string v2, "Remote exception"

    invoke-static {v1, v2, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 12878
    const/4 v1, 0x0

    return v1

    :sswitch_data_0
    .sparse-switch
        0x0 -> :sswitch_0
        0x3e8 -> :sswitch_0
        0x3e9 -> :sswitch_0
        0x3ea -> :sswitch_0
        0x403 -> :sswitch_0
        0x42c -> :sswitch_0
        0x431 -> :sswitch_0
    .end sparse-switch

    :sswitch_data_1
    .sparse-switch
        -0x7d14f855 -> :sswitch_14
        -0x6849e2b4 -> :sswitch_13
        -0x53ae571d -> :sswitch_12
        -0x4fc097e4 -> :sswitch_11
        -0x3bb3e592 -> :sswitch_10
        -0x304ed112 -> :sswitch_f
        -0x1808c879 -> :sswitch_e
        0xa480416 -> :sswitch_d
        0xaf62806 -> :sswitch_c
        0xff13fb5 -> :sswitch_b
        0x1df32313 -> :sswitch_a
        0x1e1f7f95 -> :sswitch_9
        0x1f50b9c2 -> :sswitch_8
        0x2114f460 -> :sswitch_7
        0x2f126fdf -> :sswitch_6
        0x36db402e -> :sswitch_5
        0x4cef8b35 -> :sswitch_4
        0x5c1076e2 -> :sswitch_3
        0x6331ebb2 -> :sswitch_2
        0x6f08f706 -> :sswitch_1
    .end sparse-switch

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_c
        :pswitch_c
        :pswitch_c
        :pswitch_c
        :pswitch_c
        :pswitch_c
        :pswitch_c
        :pswitch_b
        :pswitch_a
        :pswitch_9
        :pswitch_8
        :pswitch_7
        :pswitch_6
        :pswitch_5
        :pswitch_4
        :pswitch_4
        :pswitch_3
        :pswitch_2
        :pswitch_1
        :pswitch_0
    .end packed-switch

    :sswitch_data_2
    .sparse-switch
        -0x6849e2b4 -> :sswitch_1b
        -0x53ae571d -> :sswitch_1a
        -0x4fc097e4 -> :sswitch_19
        -0x3bb3e592 -> :sswitch_18
        0xa480416 -> :sswitch_17
        0x1f50b9c2 -> :sswitch_16
        0x4cef8b35 -> :sswitch_15
    .end sparse-switch

    :pswitch_data_1
    .packed-switch 0x0
        :pswitch_11
        :pswitch_10
        :pswitch_f
        :pswitch_e
        :pswitch_e
        :pswitch_d
        :pswitch_d
    .end packed-switch
.end method

.method public final broadcastIntentWithFeature(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;[Ljava/lang/String;ILandroid/os/Bundle;ZZI)I
    .locals 25
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .param p2, "callingFeatureId"    # Ljava/lang/String;
    .param p3, "intent"    # Landroid/content/Intent;
    .param p4, "resolvedType"    # Ljava/lang/String;
    .param p5, "resultTo"    # Landroid/content/IIntentReceiver;
    .param p6, "resultCode"    # I
    .param p7, "resultData"    # Ljava/lang/String;
    .param p8, "resultExtras"    # Landroid/os/Bundle;
    .param p9, "requiredPermissions"    # [Ljava/lang/String;
    .param p10, "excludedPermissions"    # [Ljava/lang/String;
    .param p11, "appOp"    # I
    .param p12, "bOptions"    # Landroid/os/Bundle;
    .param p13, "serialized"    # Z
    .param p14, "sticky"    # Z
    .param p15, "userId"    # I

    .line 13576
    move-object/from16 v15, p0

    const-string v0, "broadcastIntent"

    invoke-virtual {v15, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 13577
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_3

    .line 13578
    move-object/from16 v1, p3

    :try_start_1
    invoke-virtual {v15, v1}, Lcom/android/server/am/ActivityManagerService;->verifyBroadcastLocked(Landroid/content/Intent;)Landroid/content/Intent;

    move-result-object v5
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_2

    .line 13580
    .end local p3    # "intent":Landroid/content/Intent;
    .local v5, "intent":Landroid/content/Intent;
    :try_start_2
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLOSP(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    move-object v14, v0

    .line 13581
    .local v14, "callerApp":Lcom/android/server/am/ProcessRecord;
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v17

    .line 13582
    .local v17, "callingPid":I
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v18

    .line 13584
    .local v18, "callingUid":I
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_4

    move-wide/from16 v22, v0

    .line 13586
    .local v22, "origId":J
    nop

    .line 13587
    if-eqz v14, :cond_0

    :try_start_3
    iget-object v0, v14, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v0, v0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    goto :goto_0

    .line 13592
    :catchall_0
    move-exception v0

    move-object/from16 v24, v14

    goto :goto_1

    .line 13587
    :cond_0
    const/4 v0, 0x0

    :goto_0
    move-object v3, v0

    .line 13586
    move-object/from16 v1, p0

    move-object v2, v14

    move-object/from16 v4, p2

    move-object/from16 v6, p4

    move-object/from16 v7, p5

    move/from16 v8, p6

    move-object/from16 v9, p7

    move-object/from16 v10, p8

    move-object/from16 v11, p9

    move-object/from16 v12, p10

    move/from16 v13, p11

    move-object/from16 v24, v14

    .end local v14    # "callerApp":Lcom/android/server/am/ProcessRecord;
    .local v24, "callerApp":Lcom/android/server/am/ProcessRecord;
    move-object/from16 v14, p12

    move/from16 v15, p13

    move/from16 v16, p14

    move/from16 v19, v18

    move/from16 v20, v17

    move/from16 v21, p15

    :try_start_4
    invoke-virtual/range {v1 .. v21}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;[Ljava/lang/String;ILandroid/os/Bundle;ZZIIIII)I

    move-result v0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 13592
    :try_start_5
    invoke-static/range {v22 .. v23}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_4

    .line 13586
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v0

    .line 13592
    :catchall_1
    move-exception v0

    :goto_1
    :try_start_6
    invoke-static/range {v22 .. v23}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 13593
    nop

    .end local v5    # "intent":Landroid/content/Intent;
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "caller":Landroid/app/IApplicationThread;
    .end local p2    # "callingFeatureId":Ljava/lang/String;
    .end local p4    # "resolvedType":Ljava/lang/String;
    .end local p5    # "resultTo":Landroid/content/IIntentReceiver;
    .end local p6    # "resultCode":I
    .end local p7    # "resultData":Ljava/lang/String;
    .end local p8    # "resultExtras":Landroid/os/Bundle;
    .end local p9    # "requiredPermissions":[Ljava/lang/String;
    .end local p10    # "excludedPermissions":[Ljava/lang/String;
    .end local p11    # "appOp":I
    .end local p12    # "bOptions":Landroid/os/Bundle;
    .end local p13    # "serialized":Z
    .end local p14    # "sticky":Z
    .end local p15    # "userId":I
    throw v0

    .line 13594
    .end local v17    # "callingPid":I
    .end local v18    # "callingUid":I
    .end local v22    # "origId":J
    .end local v24    # "callerApp":Lcom/android/server/am/ProcessRecord;
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "caller":Landroid/app/IApplicationThread;
    .restart local p2    # "callingFeatureId":Ljava/lang/String;
    .restart local p3    # "intent":Landroid/content/Intent;
    .restart local p4    # "resolvedType":Ljava/lang/String;
    .restart local p5    # "resultTo":Landroid/content/IIntentReceiver;
    .restart local p6    # "resultCode":I
    .restart local p7    # "resultData":Ljava/lang/String;
    .restart local p8    # "resultExtras":Landroid/os/Bundle;
    .restart local p9    # "requiredPermissions":[Ljava/lang/String;
    .restart local p10    # "excludedPermissions":[Ljava/lang/String;
    .restart local p11    # "appOp":I
    .restart local p12    # "bOptions":Landroid/os/Bundle;
    .restart local p13    # "serialized":Z
    .restart local p14    # "sticky":Z
    .restart local p15    # "userId":I
    :catchall_2
    move-exception v0

    goto :goto_2

    :catchall_3
    move-exception v0

    move-object/from16 v1, p3

    :goto_2
    move-object v5, v1

    .end local p3    # "intent":Landroid/content/Intent;
    .restart local v5    # "intent":Landroid/content/Intent;
    :goto_3
    monitor-exit p0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_4

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    :catchall_4
    move-exception v0

    goto :goto_3
.end method

.method broadcastQueueForIntent(Landroid/content/Intent;)Lcom/android/server/am/BroadcastQueue;
    .locals 2
    .param p1, "intent"    # Landroid/content/Intent;

    .line 631
    invoke-virtual {p1}, Landroid/content/Intent;->getFlags()I

    move-result v0

    invoke-direct {p0, v0}, Lcom/android/server/am/ActivityManagerService;->isOnOffloadQueue(I)Z

    move-result v0

    if-eqz v0, :cond_0

    .line 636
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mOffloadBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

    return-object v0

    .line 639
    :cond_0
    invoke-virtual {p1}, Landroid/content/Intent;->getFlags()I

    move-result v0

    const/high16 v1, 0x10000000

    and-int/2addr v0, v1

    if-eqz v0, :cond_1

    const/4 v0, 0x1

    goto :goto_0

    :cond_1
    const/4 v0, 0x0

    .line 643
    .local v0, "isFg":Z
    :goto_0
    if-eqz v0, :cond_2

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mFgBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

    goto :goto_1

    :cond_2
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mBgBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

    :goto_1
    return-object v1
.end method

.method final cameraActiveChanged(IZ)V
    .locals 3
    .param p1, "uid"    # I
    .param p2, "active"    # Z

    .line 14651
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mActiveCameraUids:Landroid/util/IntArray;

    monitor-enter v0

    .line 14652
    :try_start_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mActiveCameraUids:Landroid/util/IntArray;

    invoke-virtual {v1, p1}, Landroid/util/IntArray;->indexOf(I)I

    move-result v1

    .line 14653
    .local v1, "curIndex":I
    if-eqz p2, :cond_0

    .line 14654
    if-gez v1, :cond_1

    .line 14655
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mActiveCameraUids:Landroid/util/IntArray;

    invoke-virtual {v2, p1}, Landroid/util/IntArray;->add(I)V

    goto :goto_0

    .line 14658
    :cond_0
    if-ltz v1, :cond_1

    .line 14659
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mActiveCameraUids:Landroid/util/IntArray;

    invoke-virtual {v2, v1}, Landroid/util/IntArray;->remove(I)V

    .line 14662
    .end local v1    # "curIndex":I
    :cond_1
    :goto_0
    monitor-exit v0

    .line 14663
    return-void

    .line 14662
    :catchall_0
    move-exception v1

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method final canGcNowLocked()Z
    .locals 6

    .line 14228
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    array-length v1, v0

    const/4 v2, 0x0

    move v3, v2

    :goto_0
    if-ge v3, v1, :cond_2

    aget-object v4, v0, v3

    .line 14229
    .local v4, "q":Lcom/android/server/am/BroadcastQueue;
    iget-object v5, v4, Lcom/android/server/am/BroadcastQueue;->mParallelBroadcasts:Ljava/util/ArrayList;

    invoke-virtual {v5}, Ljava/util/ArrayList;->isEmpty()Z

    move-result v5

    if-eqz v5, :cond_1

    iget-object v5, v4, Lcom/android/server/am/BroadcastQueue;->mDispatcher:Lcom/android/server/am/BroadcastDispatcher;

    invoke-virtual {v5}, Lcom/android/server/am/BroadcastDispatcher;->isEmpty()Z

    move-result v5

    if-nez v5, :cond_0

    goto :goto_1

    .line 14228
    .end local v4    # "q":Lcom/android/server/am/BroadcastQueue;
    :cond_0
    add-int/lit8 v3, v3, 0x1

    goto :goto_0

    .line 14230
    .restart local v4    # "q":Lcom/android/server/am/BroadcastQueue;
    :cond_1
    :goto_1
    return v2

    .line 14233
    .end local v4    # "q":Lcom/android/server/am/BroadcastQueue;
    :cond_2
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-virtual {v0}, Lcom/android/server/wm/ActivityTaskManagerInternal;->canGcNow()Z

    move-result v0

    return v0
.end method

.method public cancelIntentSender(Landroid/content/IIntentSender;)V
    .locals 1
    .param p1, "sender"    # Landroid/content/IIntentSender;

    .line 4982
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPendingIntentController:Lcom/android/server/am/PendingIntentController;

    invoke-virtual {v0, p1}, Lcom/android/server/am/PendingIntentController;->cancelIntentSender(Landroid/content/IIntentSender;)V

    .line 4983
    return-void
.end method

.method public cancelTaskWindowTransition(I)V
    .locals 1
    .param p1, "taskId"    # I

    .line 5811
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {v0, p1}, Lcom/android/server/wm/ActivityTaskManagerService;->cancelTaskWindowTransition(I)V

    .line 5812
    return-void
.end method

.method checkCallingPermission(Ljava/lang/String;)I
    .locals 2
    .param p1, "permission"    # Ljava/lang/String;

    .line 5433
    nop

    .line 5434
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v0

    .line 5435
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    .line 5433
    invoke-virtual {p0, p1, v0, v1}, Lcom/android/server/am/ActivityManagerService;->checkPermission(Ljava/lang/String;II)I

    move-result v0

    return v0
.end method

.method public checkPermission(Ljava/lang/String;II)I
    .locals 2
    .param p1, "permission"    # Ljava/lang/String;
    .param p2, "pid"    # I
    .param p3, "uid"    # I

    .line 5422
    const/4 v0, -0x1

    if-nez p1, :cond_0

    .line 5423
    return v0

    .line 5425
    :cond_0
    const/4 v1, 0x1

    invoke-static {p1, p2, p3, v0, v1}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I

    move-result v0

    return v0
.end method

.method checkTime(JLjava/lang/String;)V
    .locals 6
    .param p1, "startTime"    # J
    .param p3, "where"    # Ljava/lang/String;

    .line 4651
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v0

    .line 4652
    .local v0, "now":J
    sub-long v2, v0, p1

    const-wide/16 v4, 0x32

    cmp-long v2, v2, v4

    if-lez v2, :cond_0

    .line 4654
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Slow operation: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sub-long v3, v0, p1

    invoke-virtual {v2, v3, v4}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string/jumbo v3, "ms so far, now at "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    const-string v3, "ActivityManager"

    invoke-static {v3, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4656
    :cond_0
    return-void
.end method

.method public checkUriPermission(Landroid/net/Uri;IIIILandroid/os/IBinder;)I
    .locals 3
    .param p1, "uri"    # Landroid/net/Uri;
    .param p2, "pid"    # I
    .param p3, "uid"    # I
    .param p4, "modeFlags"    # I
    .param p5, "userId"    # I
    .param p6, "callerToken"    # Landroid/os/IBinder;

    .line 5681
    const-string v0, "checkUriPermission"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 5684
    sget v0, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    const/4 v1, 0x0

    if-ne p2, v0, :cond_0

    .line 5685
    return v1

    .line 5687
    :cond_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUgmInternal:Lcom/android/server/uri/UriGrantsManagerInternal;

    new-instance v2, Lcom/android/server/uri/GrantUri;

    invoke-direct {v2, p5, p1, p4}, Lcom/android/server/uri/GrantUri;-><init>(ILandroid/net/Uri;I)V

    invoke-interface {v0, v2, p3, p4}, Lcom/android/server/uri/UriGrantsManagerInternal;->checkUriPermission(Lcom/android/server/uri/GrantUri;II)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 5688
    goto :goto_0

    :cond_1
    const/4 v1, -0x1

    .line 5687
    :goto_0
    return v1
.end method

.method public checkUriPermissions(Ljava/util/List;IIILandroid/os/IBinder;)[I
    .locals 14
    .param p2, "pid"    # I
    .param p3, "uid"    # I
    .param p4, "modeFlags"    # I
    .param p5, "callerToken"    # Landroid/os/IBinder;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/List<",
            "Landroid/net/Uri;",
            ">;III",
            "Landroid/os/IBinder;",
            ")[I"
        }
    .end annotation

    .line 5694
    .local p1, "uris":Ljava/util/List;, "Ljava/util/List<Landroid/net/Uri;>;"
    invoke-interface {p1}, Ljava/util/List;->size()I

    move-result v0

    .line 5695
    .local v0, "size":I
    new-array v1, v0, [I

    .line 5697
    .local v1, "res":[I
    const/4 v2, -0x1

    invoke-static {v1, v2}, Ljava/util/Arrays;->fill([II)V

    .line 5699
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_0
    if-ge v2, v0, :cond_0

    .line 5700
    move-object v3, p1

    invoke-interface {p1, v2}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Landroid/net/Uri;

    .line 5701
    .local v4, "uri":Landroid/net/Uri;
    move-object v12, p0

    iget-object v5, v12, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v5}, Landroid/content/Context;->getUserId()I

    move-result v5

    invoke-static {v4, v5}, Landroid/content/ContentProvider;->getUserIdFromUri(Landroid/net/Uri;I)I

    move-result v13

    .line 5702
    .local v13, "userId":I
    invoke-static {v4}, Landroid/content/ContentProvider;->getUriWithoutUserId(Landroid/net/Uri;)Landroid/net/Uri;

    move-result-object v6

    move-object v5, p0

    move/from16 v7, p2

    move/from16 v8, p3

    move/from16 v9, p4

    move v10, v13

    move-object/from16 v11, p5

    invoke-virtual/range {v5 .. v11}, Lcom/android/server/am/ActivityManagerService;->checkUriPermission(Landroid/net/Uri;IIIILandroid/os/IBinder;)I

    move-result v5

    aput v5, v1, v2

    .line 5699
    .end local v4    # "uri":Landroid/net/Uri;
    .end local v13    # "userId":I
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    :cond_0
    move-object v12, p0

    move-object v3, p1

    .line 5705
    .end local v2    # "i":I
    return-object v1
.end method

.method final cleanUpApplicationRecordLocked(Lcom/android/server/am/ProcessRecord;IZZIZZ)Z
    .locals 8
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "pid"    # I
    .param p3, "restarting"    # Z
    .param p4, "allowRestart"    # Z
    .param p5, "index"    # I
    .param p6, "replacingPid"    # Z
    .param p7, "fromBinderDied"    # Z

    .line 11686
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 11687
    if-ltz p5, :cond_0

    .line 11688
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->removeLruProcessLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 11689
    invoke-static {p2}, Lcom/android/server/am/ProcessList;->remove(I)V

    .line 11694
    :cond_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    const/4 v2, 0x1

    const/4 v3, 0x0

    if-nez p7, :cond_2

    iget-boolean v4, p1, Lcom/android/server/am/ProcessRecord;->isolated:Z

    if-eqz v4, :cond_1

    goto :goto_0

    :cond_1
    move v4, v3

    goto :goto_1

    :cond_2
    :goto_0
    move v4, v2

    :goto_1
    invoke-virtual {p1, v1, p4, v4}, Lcom/android/server/am/ProcessRecord;->onCleanupApplicationRecordLSP(Lcom/android/server/am/ProcessStatsService;ZZ)Z

    move-result v1

    .line 11698
    .local v1, "restart":Z
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mOomAdjuster:Lcom/android/server/am/OomAdjuster;

    iget-object v4, v4, Lcom/android/server/am/OomAdjuster;->mCachedAppOptimizer:Lcom/android/server/am/CachedAppOptimizer;

    invoke-virtual {v4, p1}, Lcom/android/server/am/CachedAppOptimizer;->unscheduleFreezeAppLSP(Lcom/android/server/am/ProcessRecord;)V

    .line 11699
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 11700
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    invoke-virtual {v0, p1}, Lcom/android/server/am/AppProfiler;->onCleanupApplicationRecordLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 11701
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->skipCurrentReceiverLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 11702
    invoke-virtual {p0, p1, v3, v3, v3}, Lcom/android/server/am/ActivityManagerService;->updateProcessForegroundLocked(Lcom/android/server/am/ProcessRecord;ZIZ)V

    .line 11703
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v0, p1, p4}, Lcom/android/server/am/ActiveServices;->killServicesLocked(Lcom/android/server/am/ProcessRecord;Z)V

    .line 11704
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPhantomProcessList:Lcom/android/server/am/PhantomProcessList;

    invoke-virtual {v0, p2}, Lcom/android/server/am/PhantomProcessList;->onAppDied(I)V

    .line 11707
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTargets:Landroid/util/SparseArray;

    iget v4, p1, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-virtual {v0, v4}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/BackupRecord;

    .line 11708
    .local v0, "backupTarget":Lcom/android/server/am/BackupRecord;
    if-eqz v0, :cond_3

    iget-object v4, v0, Lcom/android/server/am/BackupRecord;->app:Lcom/android/server/am/ProcessRecord;

    invoke-virtual {v4}, Lcom/android/server/am/ProcessRecord;->getPid()I

    move-result v4

    if-ne p2, v4, :cond_3

    .line 11711
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    new-instance v5, Lcom/android/server/am/ActivityManagerService$18;

    invoke-direct {v5, p0, p1}, Lcom/android/server/am/ActivityManagerService$18;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ProcessRecord;)V

    invoke-virtual {v4, v5}, Lcom/android/server/am/ActivityManagerService$MainHandler;->post(Ljava/lang/Runnable;)Z

    .line 11725
    :cond_3
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    iget-object v5, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v5, v5, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v4, p2, v5}, Lcom/android/server/am/ProcessList;->scheduleDispatchProcessDiedLocked(II)V

    .line 11728
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v4, p1}, Lcom/android/server/am/ProcessList;->handlePrecedingAppDiedLocked(Lcom/android/server/am/ProcessRecord;)Z

    move-result p4

    .line 11732
    if-eqz p3, :cond_4

    .line 11733
    return v3

    .line 11736
    :cond_4
    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->isPersistent()Z

    move-result v4

    if-eqz v4, :cond_6

    iget-boolean v4, p1, Lcom/android/server/am/ProcessRecord;->isolated:Z

    if-eqz v4, :cond_5

    goto :goto_2

    .line 11743
    :cond_5
    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->isRemoved()Z

    move-result v4

    if-nez v4, :cond_8

    .line 11747
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mPersistentStartingProcesses:Ljava/util/ArrayList;

    invoke-virtual {v4, p1}, Ljava/util/ArrayList;->indexOf(Ljava/lang/Object;)I

    move-result v4

    if-gez v4, :cond_8

    .line 11748
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mPersistentStartingProcesses:Ljava/util/ArrayList;

    invoke-virtual {v4, p1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 11749
    const/4 v1, 0x1

    goto :goto_3

    .line 11739
    :cond_6
    :goto_2
    if-nez p6, :cond_7

    .line 11740
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    iget-object v5, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iget v6, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {v4, v5, v6, p1}, Lcom/android/server/am/ProcessList;->removeProcessNameLocked(Ljava/lang/String;ILcom/android/server/am/ProcessRecord;)Lcom/android/server/am/ProcessRecord;

    .line 11742
    :cond_7
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->getWindowProcessController()Lcom/android/server/wm/WindowProcessController;

    move-result-object v5

    invoke-virtual {v4, v5}, Lcom/android/server/wm/ActivityTaskManagerInternal;->clearHeavyWeightProcessIfEquals(Lcom/android/server/wm/WindowProcessController;)V

    .line 11754
    :cond_8
    :goto_3
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;

    invoke-virtual {v4, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 11756
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->getWindowProcessController()Lcom/android/server/wm/WindowProcessController;

    move-result-object v5

    invoke-virtual {v4, v5}, Lcom/android/server/wm/ActivityTaskManagerInternal;->onCleanUpApplicationRecord(Lcom/android/server/wm/WindowProcessController;)V

    .line 11757
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v4, p1}, Lcom/android/server/am/ProcessList;->noteProcessDiedLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 11759
    if-eqz v1, :cond_a

    if-eqz p4, :cond_a

    iget-boolean v4, p1, Lcom/android/server/am/ProcessRecord;->isolated:Z

    if-nez v4, :cond_a

    .line 11762
    if-gez p5, :cond_9

    .line 11763
    invoke-static {p2}, Lcom/android/server/am/ProcessList;->remove(I)V

    .line 11768
    :cond_9
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v5, 0x39

    invoke-virtual {v4, v5, p1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->removeMessages(ILjava/lang/Object;)V

    .line 11770
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v4, p1}, Lcom/android/server/am/ProcessList;->addProcessNameLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 11771
    invoke-virtual {p1, v3}, Lcom/android/server/am/ProcessRecord;->setPendingStart(Z)V

    .line 11772
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    new-instance v5, Lcom/android/server/am/HostingRecord;

    const-string/jumbo v6, "restart"

    iget-object v7, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-direct {v5, v6, v7}, Lcom/android/server/am/HostingRecord;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    invoke-virtual {v4, p1, v5, v3}, Lcom/android/server/am/ProcessList;->startProcessLocked(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/HostingRecord;I)V

    .line 11774
    return v2

    .line 11775
    :cond_a
    if-lez p2, :cond_c

    sget v2, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    if-eq p2, v2, :cond_c

    .line 11777
    invoke-virtual {p0, p2, p1}, Lcom/android/server/am/ActivityManagerService;->removePidLocked(ILcom/android/server/am/ProcessRecord;)V

    .line 11778
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v4, 0x14

    invoke-virtual {v2, v4, p1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->removeMessages(ILjava/lang/Object;)V

    .line 11779
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    iget-object v4, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iget-object v5, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v5, v5, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v2, v4, v5}, Lcom/android/server/am/BatteryStatsService;->noteProcessFinish(Ljava/lang/String;I)V

    .line 11780
    iget-boolean v2, p1, Lcom/android/server/am/ProcessRecord;->isolated:Z

    if-eqz v2, :cond_b

    .line 11781
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    iget v4, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    iget-object v5, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v5, v5, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v2, v4, v5}, Lcom/android/server/am/BatteryStatsService;->removeIsolatedUid(II)V

    .line 11783
    :cond_b
    invoke-virtual {p1, v3}, Lcom/android/server/am/ProcessRecord;->setPid(I)V

    .line 11785
    :cond_c
    return v3

    .line 11699
    .end local v0    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .end local v1    # "restart":Z
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v1
.end method

.method public clearApplicationUserData(Ljava/lang/String;ZLandroid/content/pm/IPackageDataObserver;I)Z
    .locals 24
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "keepState"    # Z
    .param p3, "observer"    # Landroid/content/pm/IPackageDataObserver;
    .param p4, "userId"    # I

    .line 3443
    move-object/from16 v9, p0

    move-object/from16 v10, p1

    move-object/from16 v11, p3

    const-string v0, "clearApplicationUserData"

    invoke-virtual {v9, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 3444
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v12

    .line 3445
    .local v12, "uid":I
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v13

    .line 3446
    .local v13, "pid":I
    iget-object v1, v9, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    const-string v7, "clearApplicationUserData"

    const/4 v5, 0x0

    const/4 v6, 0x2

    const/4 v8, 0x0

    move v2, v13

    move v3, v12

    move/from16 v4, p4

    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/UserController;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result v14

    .line 3452
    .local v14, "resolvedUserId":I
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v15

    .line 3454
    .local v15, "callingId":J
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v0

    move-object v8, v0

    .line 3456
    .local v8, "pm":Landroid/content/pm/IPackageManager;
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getPackageManagerInternal()Landroid/content/pm/PackageManagerInternal;

    move-result-object v0

    invoke-virtual {v0, v14, v10}, Landroid/content/pm/PackageManagerInternal;->isPackageDataProtected(ILjava/lang/String;)Z

    move-result v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_7

    if-nez v0, :cond_f

    .line 3462
    const/4 v1, 0x0

    .line 3464
    .local v1, "applicationInfo":Landroid/content/pm/ApplicationInfo;
    const/16 v0, 0x2000

    :try_start_1
    invoke-interface {v8, v10, v0, v14}, Landroid/content/pm/IPackageManager;->getApplicationInfo(Ljava/lang/String;II)Landroid/content/pm/ApplicationInfo;

    move-result-object v0
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    move-object v1, v0

    .line 3468
    move-object/from16 v17, v1

    goto :goto_0

    .line 3572
    .end local v1    # "applicationInfo":Landroid/content/pm/ApplicationInfo;
    .end local v8    # "pm":Landroid/content/pm/IPackageManager;
    :catchall_0
    move-exception v0

    move-object v1, v11

    move/from16 v23, v13

    goto/16 :goto_c

    .line 3466
    .restart local v1    # "applicationInfo":Landroid/content/pm/ApplicationInfo;
    .restart local v8    # "pm":Landroid/content/pm/IPackageManager;
    :catch_0
    move-exception v0

    move-object/from16 v17, v1

    .line 3469
    .end local v1    # "applicationInfo":Landroid/content/pm/ApplicationInfo;
    .local v17, "applicationInfo":Landroid/content/pm/ApplicationInfo;
    :goto_0
    move-object/from16 v7, v17

    .line 3471
    .local v7, "appInfo":Landroid/content/pm/ApplicationInfo;
    const/4 v6, 0x0

    const/4 v5, 0x1

    if-eqz v7, :cond_0

    :try_start_2
    iget v0, v7, Landroid/content/pm/ApplicationInfo;->uid:I

    if-ne v0, v12, :cond_0

    move v0, v5

    goto :goto_1

    :cond_0
    move v0, v6

    :goto_1
    move/from16 v18, v0

    .line 3473
    .local v18, "clearingOwnUidData":Z
    const/4 v0, -0x1

    if-nez v18, :cond_2

    const-string v1, "android.permission.CLEAR_APP_USER_DATA"

    invoke-static {v1, v13, v12, v0, v5}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I

    move-result v1

    if-nez v1, :cond_1

    goto :goto_2

    .line 3475
    :cond_1
    new-instance v0, Ljava/lang/SecurityException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "PID "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v13}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, " does not have permission "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "android.permission.CLEAR_APP_USER_DATA"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, " to clear data of package "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .end local v12    # "uid":I
    .end local v13    # "pid":I
    .end local v14    # "resolvedUserId":I
    .end local v15    # "callingId":J
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "packageName":Ljava/lang/String;
    .end local p2    # "keepState":Z
    .end local p3    # "observer":Landroid/content/pm/IPackageDataObserver;
    .end local p4    # "userId":I
    throw v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 3480
    .restart local v12    # "uid":I
    .restart local v13    # "pid":I
    .restart local v14    # "resolvedUserId":I
    .restart local v15    # "callingId":J
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "packageName":Ljava/lang/String;
    .restart local p2    # "keepState":Z
    .restart local p3    # "observer":Landroid/content/pm/IPackageDataObserver;
    .restart local p4    # "userId":I
    :cond_2
    :goto_2
    :try_start_3
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getPackageManagerInternal()Landroid/content/pm/PackageManagerInternal;

    move-result-object v1

    .line 3481
    invoke-virtual {v1, v10, v14}, Landroid/content/pm/PackageManagerInternal;->hasInstantApplicationMetadata(Ljava/lang/String;I)Z

    move-result v1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_7

    move/from16 v19, v1

    .line 3482
    .local v19, "hasInstantMetadata":Z
    if-nez v7, :cond_3

    if-nez v19, :cond_3

    move v1, v5

    goto :goto_3

    :cond_3
    move v1, v6

    :goto_3
    move/from16 v20, v1

    .line 3484
    .local v20, "isUninstalledAppWithoutInstantMetadata":Z
    if-eqz v7, :cond_4

    :try_start_4
    invoke-virtual {v7}, Landroid/content/pm/ApplicationInfo;->isInstantApp()Z

    move-result v1
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    if-nez v1, :cond_5

    :cond_4
    if-eqz v19, :cond_6

    :cond_5
    move v1, v5

    goto :goto_4

    :cond_6
    move v1, v6

    :goto_4
    move/from16 v21, v1

    .line 3486
    .local v21, "isInstantApp":Z
    :try_start_5
    const-string v1, "android.permission.ACCESS_INSTANT_APPS"

    invoke-static {v1, v13, v12, v0, v5}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I

    move-result v0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_7

    if-nez v0, :cond_7

    move v0, v5

    goto :goto_5

    :cond_7
    move v0, v6

    :goto_5
    move/from16 v22, v0

    .line 3490
    .local v22, "canAccessInstantApps":Z
    if-nez v20, :cond_d

    if-eqz v21, :cond_8

    if-nez v22, :cond_8

    move-object v11, v7

    move/from16 v23, v13

    move-object v13, v8

    goto/16 :goto_a

    .line 3503
    :cond_8
    :try_start_6
    monitor-enter p0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_4

    :try_start_7
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_2

    .line 3504
    if-eqz v7, :cond_9

    .line 3505
    :try_start_8
    iget v0, v7, Landroid/content/pm/ApplicationInfo;->uid:I

    const-string v1, "clear data"

    invoke-direct {v9, v10, v0, v1}, Lcom/android/server/am/ActivityManagerService;->forceStopPackageLocked(Ljava/lang/String;ILjava/lang/String;)V

    .line 3506
    iget-object v0, v9, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-virtual {v0, v10, v14}, Lcom/android/server/wm/ActivityTaskManagerInternal;->removeRecentTasksByPackageName(Ljava/lang/String;I)V
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_1

    goto :goto_6

    .line 3508
    :catchall_1
    move-exception v0

    move-object v11, v7

    move/from16 v23, v13

    move-object v13, v8

    goto/16 :goto_9

    :cond_9
    :goto_6
    :try_start_9
    monitor-exit p0
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_2

    :try_start_a
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 3510
    new-instance v0, Lcom/android/server/am/ActivityManagerService$6;
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_4

    move-object v1, v0

    move-object/from16 v2, p0

    move-object v3, v7

    move v4, v14

    move v11, v5

    move/from16 v5, v21

    move v11, v6

    move v6, v12

    move-object v11, v7

    .end local v7    # "appInfo":Landroid/content/pm/ApplicationInfo;
    .local v11, "appInfo":Landroid/content/pm/ApplicationInfo;
    move v7, v13

    move/from16 v23, v13

    move-object v13, v8

    .end local v8    # "pm":Landroid/content/pm/IPackageManager;
    .local v13, "pm":Landroid/content/pm/IPackageManager;
    .local v23, "pid":I
    move-object/from16 v8, p3

    :try_start_b
    invoke-direct/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService$6;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/content/pm/ApplicationInfo;IZIILandroid/content/pm/IPackageDataObserver;)V
    :try_end_b
    .catchall {:try_start_b .. :try_end_b} :catchall_5

    move-object v1, v0

    .line 3543
    .local v1, "localObserver":Landroid/content/pm/IPackageDataObserver;
    :try_start_c
    invoke-interface {v13, v10, v1, v14}, Landroid/content/pm/IPackageManager;->clearApplicationUserData(Ljava/lang/String;Landroid/content/pm/IPackageDataObserver;I)V

    .line 3545
    if-eqz v11, :cond_c

    .line 3549
    if-nez p2, :cond_b

    .line 3551
    iget-object v0, v9, Lcom/android/server/am/ActivityManagerService;->mUgmInternal:Lcom/android/server/uri/UriGrantsManagerInternal;

    const/4 v2, 0x0

    const/4 v3, 0x1

    invoke-interface {v0, v10, v14, v3, v2}, Lcom/android/server/uri/UriGrantsManagerInternal;->removeUriPermissionsForPackage(Ljava/lang/String;IZZ)V

    .line 3555
    invoke-static {}, Landroid/app/NotificationManager;->getService()Landroid/app/INotificationManager;

    move-result-object v0

    .line 3556
    .local v0, "inm":Landroid/app/INotificationManager;
    iget v2, v11, Landroid/content/pm/ApplicationInfo;->uid:I

    iget v3, v11, Landroid/content/pm/ApplicationInfo;->uid:I

    if-ne v12, v3, :cond_a

    const/4 v6, 0x1

    goto :goto_7

    :cond_a
    const/4 v6, 0x0

    :goto_7
    invoke-interface {v0, v10, v2, v6}, Landroid/app/INotificationManager;->clearData(Ljava/lang/String;IZ)V

    .line 3560
    .end local v0    # "inm":Landroid/app/INotificationManager;
    :cond_b
    const-class v0, Lcom/android/server/job/JobSchedulerInternal;

    invoke-static {v0}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/job/JobSchedulerInternal;

    .line 3562
    .local v0, "js":Lcom/android/server/job/JobSchedulerInternal;
    iget v2, v11, Landroid/content/pm/ApplicationInfo;->uid:I

    const/16 v3, 0xd

    const/16 v4, 0x8

    const-string v5, "clear data"

    invoke-interface {v0, v2, v3, v4, v5}, Lcom/android/server/job/JobSchedulerInternal;->cancelJobsForUid(IIILjava/lang/String;)V

    .line 3566
    const-class v2, Lcom/android/server/AlarmManagerInternal;

    invoke-static {v2}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/AlarmManagerInternal;

    .line 3567
    .local v2, "ami":Lcom/android/server/AlarmManagerInternal;
    iget v3, v11, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-interface {v2, v3}, Lcom/android/server/AlarmManagerInternal;->removeAlarmsForUid(I)V
    :try_end_c
    .catch Landroid/os/RemoteException; {:try_start_c .. :try_end_c} :catch_1
    .catchall {:try_start_c .. :try_end_c} :catchall_5

    .line 3570
    .end local v0    # "js":Lcom/android/server/job/JobSchedulerInternal;
    .end local v2    # "ami":Lcom/android/server/AlarmManagerInternal;
    :cond_c
    goto :goto_8

    .line 3569
    :catch_1
    move-exception v0

    .line 3572
    .end local v1    # "localObserver":Landroid/content/pm/IPackageDataObserver;
    .end local v13    # "pm":Landroid/content/pm/IPackageManager;
    .end local v17    # "applicationInfo":Landroid/content/pm/ApplicationInfo;
    .end local v18    # "clearingOwnUidData":Z
    .end local v19    # "hasInstantMetadata":Z
    .end local v20    # "isUninstalledAppWithoutInstantMetadata":Z
    .end local v22    # "canAccessInstantApps":Z
    :goto_8
    invoke-static/range {v15 .. v16}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3573
    nop

    .line 3574
    const/4 v1, 0x1

    return v1

    .line 3508
    .end local v11    # "appInfo":Landroid/content/pm/ApplicationInfo;
    .end local v23    # "pid":I
    .restart local v7    # "appInfo":Landroid/content/pm/ApplicationInfo;
    .restart local v8    # "pm":Landroid/content/pm/IPackageManager;
    .local v13, "pid":I
    .restart local v17    # "applicationInfo":Landroid/content/pm/ApplicationInfo;
    .restart local v18    # "clearingOwnUidData":Z
    .restart local v19    # "hasInstantMetadata":Z
    .restart local v20    # "isUninstalledAppWithoutInstantMetadata":Z
    .restart local v22    # "canAccessInstantApps":Z
    :catchall_2
    move-exception v0

    move-object v11, v7

    move/from16 v23, v13

    move-object v13, v8

    .end local v7    # "appInfo":Landroid/content/pm/ApplicationInfo;
    .end local v8    # "pm":Landroid/content/pm/IPackageManager;
    .restart local v11    # "appInfo":Landroid/content/pm/ApplicationInfo;
    .local v13, "pm":Landroid/content/pm/IPackageManager;
    .restart local v23    # "pid":I
    :goto_9
    :try_start_d
    monitor-exit p0
    :try_end_d
    .catchall {:try_start_d .. :try_end_d} :catchall_3

    :try_start_e
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .end local v12    # "uid":I
    .end local v14    # "resolvedUserId":I
    .end local v15    # "callingId":J
    .end local v23    # "pid":I
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "packageName":Ljava/lang/String;
    .end local p2    # "keepState":Z
    .end local p3    # "observer":Landroid/content/pm/IPackageDataObserver;
    .end local p4    # "userId":I
    throw v0

    .restart local v12    # "uid":I
    .restart local v14    # "resolvedUserId":I
    .restart local v15    # "callingId":J
    .restart local v23    # "pid":I
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "packageName":Ljava/lang/String;
    .restart local p2    # "keepState":Z
    .restart local p3    # "observer":Landroid/content/pm/IPackageDataObserver;
    .restart local p4    # "userId":I
    :catchall_3
    move-exception v0

    goto :goto_9

    .line 3572
    .end local v11    # "appInfo":Landroid/content/pm/ApplicationInfo;
    .end local v17    # "applicationInfo":Landroid/content/pm/ApplicationInfo;
    .end local v18    # "clearingOwnUidData":Z
    .end local v19    # "hasInstantMetadata":Z
    .end local v20    # "isUninstalledAppWithoutInstantMetadata":Z
    .end local v21    # "isInstantApp":Z
    .end local v22    # "canAccessInstantApps":Z
    .end local v23    # "pid":I
    .local v13, "pid":I
    :catchall_4
    move-exception v0

    move/from16 v23, v13

    move-object/from16 v1, p3

    goto :goto_c

    .line 3490
    .restart local v7    # "appInfo":Landroid/content/pm/ApplicationInfo;
    .restart local v8    # "pm":Landroid/content/pm/IPackageManager;
    .restart local v17    # "applicationInfo":Landroid/content/pm/ApplicationInfo;
    .restart local v18    # "clearingOwnUidData":Z
    .restart local v19    # "hasInstantMetadata":Z
    .restart local v20    # "isUninstalledAppWithoutInstantMetadata":Z
    .restart local v21    # "isInstantApp":Z
    .restart local v22    # "canAccessInstantApps":Z
    :cond_d
    move-object v11, v7

    move/from16 v23, v13

    move-object v13, v8

    .line 3492
    .end local v7    # "appInfo":Landroid/content/pm/ApplicationInfo;
    .end local v8    # "pm":Landroid/content/pm/IPackageManager;
    .restart local v11    # "appInfo":Landroid/content/pm/ApplicationInfo;
    .local v13, "pm":Landroid/content/pm/IPackageManager;
    .restart local v23    # "pid":I
    :goto_a
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Invalid packageName: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_e
    .catchall {:try_start_e .. :try_end_e} :catchall_5

    .line 3493
    move-object/from16 v1, p3

    if-eqz v1, :cond_e

    .line 3495
    const/4 v2, 0x0

    :try_start_f
    invoke-interface {v1, v10, v2}, Landroid/content/pm/IPackageDataObserver;->onRemoveCompleted(Ljava/lang/String;Z)V
    :try_end_f
    .catch Landroid/os/RemoteException; {:try_start_f .. :try_end_f} :catch_2
    .catchall {:try_start_f .. :try_end_f} :catchall_6

    .line 3498
    goto :goto_b

    .line 3496
    :catch_2
    move-exception v0

    move-object v2, v0

    move-object v0, v2

    .line 3497
    .local v0, "e":Landroid/os/RemoteException;
    :try_start_10
    const-string v2, "ActivityManager"

    const-string v3, "Observer no longer exists."

    invoke-static {v2, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_10
    .catchall {:try_start_10 .. :try_end_10} :catchall_6

    .line 3500
    .end local v0    # "e":Landroid/os/RemoteException;
    :cond_e
    :goto_b
    nop

    .line 3572
    invoke-static/range {v15 .. v16}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3500
    const/4 v2, 0x0

    return v2

    .line 3572
    .end local v11    # "appInfo":Landroid/content/pm/ApplicationInfo;
    .end local v13    # "pm":Landroid/content/pm/IPackageManager;
    .end local v17    # "applicationInfo":Landroid/content/pm/ApplicationInfo;
    .end local v18    # "clearingOwnUidData":Z
    .end local v19    # "hasInstantMetadata":Z
    .end local v20    # "isUninstalledAppWithoutInstantMetadata":Z
    .end local v21    # "isInstantApp":Z
    .end local v22    # "canAccessInstantApps":Z
    :catchall_5
    move-exception v0

    move-object/from16 v1, p3

    goto :goto_c

    .line 3458
    .end local v23    # "pid":I
    .restart local v8    # "pm":Landroid/content/pm/IPackageManager;
    .local v13, "pid":I
    :cond_f
    move-object v1, v11

    move/from16 v23, v13

    move-object v13, v8

    .end local v8    # "pm":Landroid/content/pm/IPackageManager;
    .local v13, "pm":Landroid/content/pm/IPackageManager;
    .restart local v23    # "pid":I
    :try_start_11
    new-instance v0, Ljava/lang/SecurityException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Cannot clear data for a protected package: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v0, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .end local v12    # "uid":I
    .end local v14    # "resolvedUserId":I
    .end local v15    # "callingId":J
    .end local v23    # "pid":I
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "packageName":Ljava/lang/String;
    .end local p2    # "keepState":Z
    .end local p3    # "observer":Landroid/content/pm/IPackageDataObserver;
    .end local p4    # "userId":I
    throw v0
    :try_end_11
    .catchall {:try_start_11 .. :try_end_11} :catchall_6

    .line 3572
    .end local v13    # "pm":Landroid/content/pm/IPackageManager;
    .restart local v12    # "uid":I
    .restart local v14    # "resolvedUserId":I
    .restart local v15    # "callingId":J
    .restart local v23    # "pid":I
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "packageName":Ljava/lang/String;
    .restart local p2    # "keepState":Z
    .restart local p3    # "observer":Landroid/content/pm/IPackageDataObserver;
    .restart local p4    # "userId":I
    :catchall_6
    move-exception v0

    goto :goto_c

    .end local v23    # "pid":I
    .local v13, "pid":I
    :catchall_7
    move-exception v0

    move-object v1, v11

    move/from16 v23, v13

    .end local v13    # "pid":I
    .restart local v23    # "pid":I
    :goto_c
    invoke-static/range {v15 .. v16}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3573
    throw v0
.end method

.method final clearBroadcastQueueForUserLocked(I)Z
    .locals 5
    .param p1, "userId"    # I

    .line 4099
    const/4 v0, 0x0

    .line 4100
    .local v0, "didSomething":Z
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    array-length v1, v1

    const/4 v2, 0x1

    sub-int/2addr v1, v2

    .local v1, "i":I
    :goto_0
    if-ltz v1, :cond_0

    .line 4101
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    aget-object v3, v3, v1

    const/4 v4, 0x0

    invoke-virtual {v3, v4, v4, p1, v2}, Lcom/android/server/am/BroadcastQueue;->cleanupDisabledPackageReceiversLocked(Ljava/lang/String;Ljava/util/Set;IZ)Z

    move-result v3

    or-int/2addr v0, v3

    .line 4100
    add-int/lit8 v1, v1, -0x1

    goto :goto_0

    .line 4104
    .end local v1    # "i":I
    :cond_0
    return v0
.end method

.method clearOomAdjObserver()V
    .locals 2

    .line 2872
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mOomAdjObserverLock:Ljava/lang/Object;

    monitor-enter v0

    .line 2873
    const/4 v1, -0x1

    :try_start_0
    iput v1, p0, Lcom/android/server/am/ActivityManagerService;->mCurOomAdjUid:I

    .line 2874
    const/4 v1, 0x0

    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mCurOomAdjObserver:Lcom/android/server/am/ActivityManagerService$OomAdjObserver;

    .line 2875
    monitor-exit v0

    .line 2876
    return-void

    .line 2875
    :catchall_0
    move-exception v1

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method public closeSystemDialogs(Ljava/lang/String;)V
    .locals 1
    .param p1, "reason"    # Ljava/lang/String;

    .line 3799
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-virtual {v0, p1}, Lcom/android/server/wm/ActivityTaskManagerInternal;->closeSystemDialogs(Ljava/lang/String;)V

    .line 3800
    return-void
.end method

.method collectProcesses(Ljava/io/PrintWriter;IZ[Ljava/lang/String;)Ljava/util/ArrayList;
    .locals 2
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "start"    # I
    .param p3, "allPkgs"    # Z
    .param p4, "args"    # [Ljava/lang/String;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/io/PrintWriter;",
            "IZ[",
            "Ljava/lang/String;",
            ")",
            "Ljava/util/ArrayList<",
            "Lcom/android/server/am/ProcessRecord;",
            ">;"
        }
    .end annotation

    .line 10052
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 10053
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v1, p2, p3, p4}, Lcom/android/server/am/ProcessList;->collectProcessesLOSP(IZ[Ljava/lang/String;)Ljava/util/ArrayList;

    move-result-object v1

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    return-object v1

    .line 10054
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v1
.end method

.method compatibilityInfoForPackage(Landroid/content/pm/ApplicationInfo;)Landroid/content/res/CompatibilityInfo;
    .locals 1
    .param p1, "ai"    # Landroid/content/pm/ApplicationInfo;

    .line 2776
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-virtual {v0, p1}, Lcom/android/server/wm/ActivityTaskManagerInternal;->compatibilityInfoForPackage(Landroid/content/pm/ApplicationInfo;)Landroid/content/res/CompatibilityInfo;

    move-result-object v0

    return-object v0
.end method

.method public crashApplication(IILjava/lang/String;ILjava/lang/String;Z)V
    .locals 8
    .param p1, "uid"    # I
    .param p2, "initialPid"    # I
    .param p3, "packageName"    # Ljava/lang/String;
    .param p4, "userId"    # I
    .param p5, "message"    # Ljava/lang/String;
    .param p6, "force"    # Z

    .line 2983
    const/4 v7, 0x0

    move-object v0, p0

    move v1, p1

    move v2, p2

    move-object v3, p3

    move v4, p4

    move-object v5, p5

    move v6, p6

    invoke-virtual/range {v0 .. v7}, Lcom/android/server/am/ActivityManagerService;->crashApplicationWithType(IILjava/lang/String;ILjava/lang/String;ZI)V

    .line 2985
    return-void
.end method

.method public crashApplicationWithType(IILjava/lang/String;ILjava/lang/String;ZI)V
    .locals 10
    .param p1, "uid"    # I
    .param p2, "initialPid"    # I
    .param p3, "packageName"    # Ljava/lang/String;
    .param p4, "userId"    # I
    .param p5, "message"    # Ljava/lang/String;
    .param p6, "force"    # Z
    .param p7, "exceptionTypeId"    # I

    .line 2990
    move-object v1, p0

    const-string v0, "android.permission.FORCE_STOP_PACKAGES"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_0

    .line 3000
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 3001
    iget-object v2, v1, Lcom/android/server/am/ActivityManagerService;->mAppErrors:Lcom/android/server/am/AppErrors;

    move v3, p1

    move v4, p2

    move-object v5, p3

    move v6, p4

    move-object v7, p5

    move/from16 v8, p6

    move/from16 v9, p7

    invoke-virtual/range {v2 .. v9}, Lcom/android/server/am/AppErrors;->scheduleAppCrashLocked(IILjava/lang/String;ILjava/lang/String;ZI)V

    .line 3003
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 3004
    return-void

    .line 3003
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 2992
    :cond_0
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Permission Denial: crashApplication() from pid="

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2993
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, ", uid="

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2994
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, " requires "

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "android.permission.FORCE_STOP_PACKAGES"

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 2996
    .local v0, "msg":Ljava/lang/String;
    const-string v2, "ActivityManager"

    invoke-static {v2, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 2997
    new-instance v2, Ljava/lang/SecurityException;

    invoke-direct {v2, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2
.end method

.method dispatchOomAdjObserver(Ljava/lang/String;)V
    .locals 2
    .param p1, "msg"    # Ljava/lang/String;

    .line 2855
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mOomAdjObserverLock:Ljava/lang/Object;

    monitor-enter v0

    .line 2856
    :try_start_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mCurOomAdjObserver:Lcom/android/server/am/ActivityManagerService$OomAdjObserver;

    .line 2857
    .local v1, "observer":Lcom/android/server/am/ActivityManagerService$OomAdjObserver;
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 2859
    if-eqz v1, :cond_0

    .line 2860
    invoke-interface {v1, p1}, Lcom/android/server/am/ActivityManagerService$OomAdjObserver;->onOomAdjMessage(Ljava/lang/String;)V

    .line 2862
    :cond_0
    return-void

    .line 2857
    .end local v1    # "observer":Lcom/android/server/am/ActivityManagerService$OomAdjObserver;
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v1
.end method

.method final doStopUidLocked(ILcom/android/server/am/UidRecord;)V
    .locals 1
    .param p1, "uid"    # I
    .param p2, "uidRec"    # Lcom/android/server/am/UidRecord;

    .line 14673
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v0, p1}, Lcom/android/server/am/ActiveServices;->stopInBackgroundLocked(I)V

    .line 14674
    const/4 v0, 0x2

    invoke-virtual {p0, p2, p1, v0}, Lcom/android/server/am/ActivityManagerService;->enqueueUidChangeLocked(Lcom/android/server/am/UidRecord;II)V

    .line 14675
    return-void
.end method

.method protected dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
    .locals 1
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "args"    # [Ljava/lang/String;

    .line 8614
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPriorityDumper:Lcom/android/server/utils/PriorityDump$PriorityDumper;

    invoke-static {v0, p1, p2, p3}, Lcom/android/server/utils/PriorityDump;->dump(Lcom/android/server/utils/PriorityDump$PriorityDumper;Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V

    .line 8615
    return-void
.end method

.method dumpActiveInstruments(Ljava/io/PrintWriter;Ljava/lang/String;Z)Z
    .locals 5
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "dumpPackage"    # Ljava/lang/String;
    .param p3, "needSep"    # Z

    .line 9280
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mActiveInstrumentation:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    .line 9281
    .local v0, "size":I
    if-lez v0, :cond_3

    .line 9282
    const/4 v1, 0x0

    .line 9283
    .local v1, "printed":Z
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_0
    if-ge v2, v0, :cond_3

    .line 9284
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mActiveInstrumentation:Ljava/util/ArrayList;

    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/ActiveInstrumentation;

    .line 9285
    .local v3, "ai":Lcom/android/server/am/ActiveInstrumentation;
    if-eqz p2, :cond_0

    iget-object v4, v3, Lcom/android/server/am/ActiveInstrumentation;->mClass:Landroid/content/ComponentName;

    invoke-virtual {v4}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v4, p2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_0

    iget-object v4, v3, Lcom/android/server/am/ActiveInstrumentation;->mTargetInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v4, v4, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    .line 9286
    invoke-virtual {v4, p2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_0

    .line 9287
    goto :goto_1

    .line 9289
    :cond_0
    if-nez v1, :cond_2

    .line 9290
    if-eqz p3, :cond_1

    .line 9291
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 9293
    :cond_1
    const-string v4, "  Active instrumentation:"

    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 9294
    const/4 v1, 0x1

    .line 9295
    const/4 p3, 0x1

    .line 9297
    :cond_2
    const-string v4, "    Instrumentation #"

    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(I)V

    const-string v4, ": "

    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 9298
    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 9299
    const-string v4, "      "

    invoke-virtual {v3, p1, v4}, Lcom/android/server/am/ActiveInstrumentation;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 9283
    .end local v3    # "ai":Lcom/android/server/am/ActiveInstrumentation;
    :goto_1
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 9302
    .end local v1    # "printed":Z
    .end local v2    # "i":I
    :cond_3
    return p3
.end method

.method dumpAllowedAssociationsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V
    .locals 6
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "args"    # [Ljava/lang/String;
    .param p4, "opti"    # I
    .param p5, "dumpAll"    # Z
    .param p6, "dumpPackage"    # Ljava/lang/String;

    .line 9836
    const-string v0, "ACTIVITY MANAGER ALLOWED ASSOCIATION STATE (dumpsys activity allowed-associations)"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 9837
    const/4 v0, 0x0

    .line 9838
    .local v0, "printed":Z
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mAllowedAssociations:Landroid/util/ArrayMap;

    if-eqz v1, :cond_5

    .line 9839
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mAllowedAssociations:Landroid/util/ArrayMap;

    invoke-virtual {v2}, Landroid/util/ArrayMap;->size()I

    move-result v2

    if-ge v1, v2, :cond_5

    .line 9840
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mAllowedAssociations:Landroid/util/ArrayMap;

    invoke-virtual {v2, v1}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/lang/String;

    .line 9841
    .local v2, "pkg":Ljava/lang/String;
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mAllowedAssociations:Landroid/util/ArrayMap;

    .line 9842
    invoke-virtual {v3, v1}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/ActivityManagerService$PackageAssociationInfo;

    invoke-virtual {v3}, Lcom/android/server/am/ActivityManagerService$PackageAssociationInfo;->getAllowedPackageAssociations()Landroid/util/ArraySet;

    move-result-object v3

    .line 9843
    .local v3, "asc":Landroid/util/ArraySet;, "Landroid/util/ArraySet<Ljava/lang/String;>;"
    if-nez v0, :cond_0

    .line 9844
    const-string v4, "  Allowed associations (by restricted package):"

    invoke-virtual {p2, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 9845
    const/4 v0, 0x1

    .line 9847
    :cond_0
    const-string v4, "  * "

    invoke-virtual {p2, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 9848
    invoke-virtual {p2, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 9849
    const-string v4, ":"

    invoke-virtual {p2, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 9850
    const/4 v4, 0x0

    .local v4, "j":I
    :goto_1
    invoke-virtual {v3}, Landroid/util/ArraySet;->size()I

    move-result v5

    if-ge v4, v5, :cond_3

    .line 9851
    if-eqz p6, :cond_1

    invoke-virtual {v2, p6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-nez v5, :cond_1

    .line 9852
    invoke-virtual {v3, v4}, Landroid/util/ArraySet;->valueAt(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Ljava/lang/String;

    invoke-virtual {v5, p6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-eqz v5, :cond_2

    .line 9853
    :cond_1
    const-string v5, "      Allow: "

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 9854
    invoke-virtual {v3, v4}, Landroid/util/ArraySet;->valueAt(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Ljava/lang/String;

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 9850
    :cond_2
    add-int/lit8 v4, v4, 0x1

    goto :goto_1

    .line 9857
    .end local v4    # "j":I
    :cond_3
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mAllowedAssociations:Landroid/util/ArrayMap;

    invoke-virtual {v4, v1}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/ActivityManagerService$PackageAssociationInfo;

    invoke-virtual {v4}, Lcom/android/server/am/ActivityManagerService$PackageAssociationInfo;->isDebuggable()Z

    move-result v4

    if-eqz v4, :cond_4

    .line 9858
    const-string v4, "      (debuggable)"

    invoke-virtual {p2, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 9839
    .end local v2    # "pkg":Ljava/lang/String;
    .end local v3    # "asc":Landroid/util/ArraySet;, "Landroid/util/ArraySet<Ljava/lang/String;>;"
    :cond_4
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 9862
    .end local v1    # "i":I
    :cond_5
    if-nez v0, :cond_6

    .line 9863
    const-string v1, "  (No association restrictions)"

    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 9865
    :cond_6
    return-void
.end method

.method final dumpApplicationMemoryUsage(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Ljava/lang/String;[Ljava/lang/String;ZLjava/io/PrintWriter;Z)V
    .locals 17
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "prefix"    # Ljava/lang/String;
    .param p4, "args"    # [Ljava/lang/String;
    .param p5, "brief"    # Z
    .param p6, "categoryPw"    # Ljava/io/PrintWriter;
    .param p7, "asProto"    # Z

    .line 10423
    move-object/from16 v9, p2

    move-object/from16 v10, p4

    new-instance v0, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;

    const/4 v1, 0x0

    invoke-direct {v0, v1}, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;-><init>(Lcom/android/server/am/ActivityManagerService$1;)V

    move-object v11, v0

    .line 10424
    .local v11, "opts":Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;
    const/4 v0, 0x0

    iput-boolean v0, v11, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDetails:Z

    .line 10425
    iput-boolean v0, v11, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpFullDetails:Z

    .line 10426
    iput-boolean v0, v11, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDalvik:Z

    .line 10427
    iput-boolean v0, v11, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpSummaryOnly:Z

    .line 10428
    iput-boolean v0, v11, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpUnreachable:Z

    .line 10429
    iput-boolean v0, v11, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->oomOnly:Z

    .line 10430
    iput-boolean v0, v11, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCompact:Z

    .line 10431
    iput-boolean v0, v11, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->localOnly:Z

    .line 10432
    iput-boolean v0, v11, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->packages:Z

    .line 10433
    iput-boolean v0, v11, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCheckinRequest:Z

    .line 10434
    iput-boolean v0, v11, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpSwapPss:Z

    .line 10435
    move/from16 v12, p7

    iput-boolean v12, v11, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpProto:Z

    .line 10437
    const/4 v1, 0x0

    move v13, v1

    .line 10438
    .local v13, "opti":I
    :goto_0
    array-length v1, v10

    if-ge v13, v1, :cond_d

    .line 10439
    aget-object v1, v10, v13

    .line 10440
    .local v1, "opt":Ljava/lang/String;
    if-eqz v1, :cond_d

    invoke-virtual {v1}, Ljava/lang/String;->length()I

    move-result v2

    if-lez v2, :cond_d

    invoke-virtual {v1, v0}, Ljava/lang/String;->charAt(I)C

    move-result v2

    const/16 v3, 0x2d

    if-eq v2, v3, :cond_0

    .line 10441
    goto/16 :goto_2

    .line 10443
    :cond_0
    add-int/lit8 v13, v13, 0x1

    .line 10444
    const-string v2, "-a"

    invoke-virtual {v2, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    const/4 v3, 0x1

    if-eqz v2, :cond_1

    .line 10445
    iput-boolean v3, v11, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDetails:Z

    .line 10446
    iput-boolean v3, v11, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpFullDetails:Z

    .line 10447
    iput-boolean v3, v11, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDalvik:Z

    .line 10448
    iput-boolean v3, v11, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpSwapPss:Z

    goto/16 :goto_1

    .line 10449
    :cond_1
    const-string v2, "-d"

    invoke-virtual {v2, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_2

    .line 10450
    iput-boolean v3, v11, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDalvik:Z

    goto/16 :goto_1

    .line 10451
    :cond_2
    const-string v2, "-c"

    invoke-virtual {v2, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_3

    .line 10452
    iput-boolean v3, v11, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCompact:Z

    goto/16 :goto_1

    .line 10453
    :cond_3
    const-string v2, "-s"

    invoke-virtual {v2, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_4

    .line 10454
    iput-boolean v3, v11, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDetails:Z

    .line 10455
    iput-boolean v3, v11, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpSummaryOnly:Z

    goto/16 :goto_1

    .line 10456
    :cond_4
    const-string v2, "-S"

    invoke-virtual {v2, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_5

    .line 10457
    iput-boolean v3, v11, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpSwapPss:Z

    goto/16 :goto_1

    .line 10458
    :cond_5
    const-string v2, "--unreachable"

    invoke-virtual {v2, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_6

    .line 10459
    iput-boolean v3, v11, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpUnreachable:Z

    goto/16 :goto_1

    .line 10460
    :cond_6
    const-string v2, "--oom"

    invoke-virtual {v2, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_7

    .line 10461
    iput-boolean v3, v11, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->oomOnly:Z

    goto/16 :goto_1

    .line 10462
    :cond_7
    const-string v2, "--local"

    invoke-virtual {v2, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_8

    .line 10463
    iput-boolean v3, v11, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->localOnly:Z

    goto/16 :goto_1

    .line 10464
    :cond_8
    const-string v2, "--package"

    invoke-virtual {v2, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_9

    .line 10465
    iput-boolean v3, v11, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->packages:Z

    goto/16 :goto_1

    .line 10466
    :cond_9
    const-string v2, "--checkin"

    invoke-virtual {v2, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_a

    .line 10467
    iput-boolean v3, v11, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCheckinRequest:Z

    goto :goto_1

    .line 10468
    :cond_a
    const-string v2, "--proto"

    invoke-virtual {v2, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_b

    .line 10469
    iput-boolean v3, v11, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpProto:Z

    goto :goto_1

    .line 10471
    :cond_b
    const-string v2, "-h"

    invoke-virtual {v2, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_c

    .line 10472
    const-string/jumbo v0, "meminfo dump options: [-a] [-d] [-c] [-s] [--oom] [process]"

    invoke-virtual {v9, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10473
    const-string v0, "  -a: include all available information for each process."

    invoke-virtual {v9, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10474
    const-string v0, "  -d: include dalvik details."

    invoke-virtual {v9, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10475
    const-string v0, "  -c: dump in a compact machine-parseable representation."

    invoke-virtual {v9, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10476
    const-string v0, "  -s: dump only summary of application memory usage."

    invoke-virtual {v9, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10477
    const-string v0, "  -S: dump also SwapPss."

    invoke-virtual {v9, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10478
    const-string v0, "  --oom: only show processes organized by oom adj."

    invoke-virtual {v9, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10479
    const-string v0, "  --local: only collect details locally, don\'t call process."

    invoke-virtual {v9, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10480
    const-string v0, "  --package: interpret process arg as package, dumping all"

    invoke-virtual {v9, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10481
    const-string v0, "             processes that have loaded that package."

    invoke-virtual {v9, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10482
    const-string v0, "  --checkin: dump data for a checkin"

    invoke-virtual {v9, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10483
    const-string v0, "  --proto: dump data to proto"

    invoke-virtual {v9, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10484
    const-string v0, "If [process] is specified it can be the name or "

    invoke-virtual {v9, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10485
    const-string/jumbo v0, "pid of a specific process to dump."

    invoke-virtual {v9, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10486
    return-void

    .line 10488
    :cond_c
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Unknown argument: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v3, "; use -h for help"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v9, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10490
    .end local v1    # "opt":Ljava/lang/String;
    :goto_1
    goto/16 :goto_0

    .line 10492
    :cond_d
    :goto_2
    array-length v1, v10

    sub-int/2addr v1, v13

    new-array v14, v1, [Ljava/lang/String;

    .line 10493
    .local v14, "innerArgs":[Ljava/lang/String;
    array-length v1, v10

    sub-int/2addr v1, v13

    invoke-static {v10, v13, v14, v0, v1}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    .line 10495
    iget-boolean v0, v11, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->packages:Z

    move-object/from16 v15, p0

    invoke-virtual {v15, v9, v13, v0, v10}, Lcom/android/server/am/ActivityManagerService;->collectProcesses(Ljava/io/PrintWriter;IZ[Ljava/lang/String;)Ljava/util/ArrayList;

    move-result-object v16

    .line 10496
    .local v16, "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    iget-boolean v0, v11, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpProto:Z

    if-eqz v0, :cond_e

    .line 10497
    move-object/from16 v2, p0

    move-object/from16 v3, p1

    move-object v4, v11

    move-object v5, v14

    move/from16 v6, p5

    move-object/from16 v7, v16

    invoke-direct/range {v2 .. v7}, Lcom/android/server/am/ActivityManagerService;->dumpApplicationMemoryUsage(Ljava/io/FileDescriptor;Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;[Ljava/lang/String;ZLjava/util/ArrayList;)V

    goto :goto_3

    .line 10499
    :cond_e
    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move-object/from16 v2, p2

    move-object/from16 v3, p3

    move-object v4, v11

    move-object v5, v14

    move/from16 v6, p5

    move-object/from16 v7, v16

    move-object/from16 v8, p6

    invoke-direct/range {v0 .. v8}, Lcom/android/server/am/ActivityManagerService;->dumpApplicationMemoryUsage(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;[Ljava/lang/String;ZLjava/util/ArrayList;Ljava/io/PrintWriter;)V

    .line 10501
    :goto_3
    return-void
.end method

.method dumpAssociationsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;)V
    .locals 24
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "args"    # [Ljava/lang/String;
    .param p4, "opti"    # I
    .param p5, "dumpAll"    # Z
    .param p6, "dumpClient"    # Z
    .param p7, "dumpPackage"    # Ljava/lang/String;

    .line 9126
    move-object/from16 v1, p0

    move-object/from16 v2, p2

    move-object/from16 v3, p7

    const-string v0, "ACTIVITY MANAGER ASSOCIATIONS (dumpsys activity associations)"

    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 9128
    const/4 v4, 0x0

    .line 9129
    .local v4, "dumpUid":I
    const/4 v5, 0x0

    if-eqz v3, :cond_0

    .line 9130
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v6

    .line 9132
    .local v6, "pm":Landroid/content/pm/IPackageManager;
    const/high16 v0, 0x400000

    :try_start_0
    invoke-interface {v6, v3, v0, v5}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;II)I

    move-result v0
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    move v4, v0

    .line 9134
    goto :goto_0

    .line 9133
    :catch_0
    move-exception v0

    .line 9137
    .end local v6    # "pm":Landroid/content/pm/IPackageManager;
    :cond_0
    :goto_0
    const/4 v0, 0x0

    .line 9139
    .local v0, "printedAnything":Z
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v6

    .line 9141
    .local v6, "now":J
    const/4 v8, 0x0

    .local v8, "i1":I
    iget-object v9, v1, Lcom/android/server/am/ActivityManagerService;->mAssociations:Landroid/util/SparseArray;

    invoke-virtual {v9}, Landroid/util/SparseArray;->size()I

    move-result v9

    .local v9, "N1":I
    :goto_1
    if-ge v8, v9, :cond_c

    .line 9142
    iget-object v10, v1, Lcom/android/server/am/ActivityManagerService;->mAssociations:Landroid/util/SparseArray;

    .line 9143
    invoke-virtual {v10, v8}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v10

    check-cast v10, Landroid/util/ArrayMap;

    .line 9144
    .local v10, "targetComponents":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Landroid/content/ComponentName;Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;>;"
    const/4 v11, 0x0

    .local v11, "i2":I
    invoke-virtual {v10}, Landroid/util/ArrayMap;->size()I

    move-result v12

    .local v12, "N2":I
    :goto_2
    if-ge v11, v12, :cond_b

    .line 9145
    nop

    .line 9146
    invoke-virtual {v10, v11}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v13

    check-cast v13, Landroid/util/SparseArray;

    .line 9147
    .local v13, "sourceUids":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;"
    const/4 v14, 0x0

    .local v14, "i3":I
    invoke-virtual {v13}, Landroid/util/SparseArray;->size()I

    move-result v15

    .local v15, "N3":I
    :goto_3
    if-ge v14, v15, :cond_a

    .line 9148
    invoke-virtual {v13, v14}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v16

    move-object/from16 v5, v16

    check-cast v5, Landroid/util/ArrayMap;

    .line 9149
    .local v5, "sourceProcesses":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;"
    const/16 v16, 0x0

    move/from16 v17, v0

    .end local v0    # "printedAnything":Z
    .local v16, "i4":I
    .local v17, "printedAnything":Z
    invoke-virtual {v5}, Landroid/util/ArrayMap;->size()I

    move-result v0

    move/from16 v1, v16

    .end local v16    # "i4":I
    .local v0, "N4":I
    .local v1, "i4":I
    :goto_4
    if-ge v1, v0, :cond_9

    .line 9150
    invoke-virtual {v5, v1}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v16

    move/from16 v18, v0

    .end local v0    # "N4":I
    .local v18, "N4":I
    move-object/from16 v0, v16

    check-cast v0, Lcom/android/server/am/ActivityManagerService$Association;

    .line 9151
    .local v0, "ass":Lcom/android/server/am/ActivityManagerService$Association;
    if-eqz v3, :cond_1

    .line 9152
    move-object/from16 v16, v5

    .end local v5    # "sourceProcesses":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;"
    .local v16, "sourceProcesses":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;"
    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService$Association;->mTargetComponent:Landroid/content/ComponentName;

    invoke-virtual {v5}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v5, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-nez v5, :cond_2

    iget v5, v0, Lcom/android/server/am/ActivityManagerService$Association;->mSourceUid:I

    .line 9153
    invoke-static {v5}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v5

    if-eq v5, v4, :cond_2

    .line 9154
    move/from16 v19, v4

    move/from16 v20, v9

    move-object/from16 v21, v10

    const/4 v4, 0x0

    goto/16 :goto_8

    .line 9151
    .end local v16    # "sourceProcesses":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;"
    .restart local v5    # "sourceProcesses":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;"
    :cond_1
    move-object/from16 v16, v5

    .line 9157
    .end local v5    # "sourceProcesses":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;"
    .restart local v16    # "sourceProcesses":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;"
    :cond_2
    const/16 v17, 0x1

    .line 9158
    const-string v5, "  "

    invoke-virtual {v2, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 9159
    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService$Association;->mTargetProcess:Ljava/lang/String;

    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 9160
    const-string v3, "/"

    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 9161
    move/from16 v19, v4

    .end local v4    # "dumpUid":I
    .local v19, "dumpUid":I
    iget v4, v0, Lcom/android/server/am/ActivityManagerService$Association;->mTargetUid:I

    invoke-static {v2, v4}, Landroid/os/UserHandle;->formatUid(Ljava/io/PrintWriter;I)V

    .line 9162
    const-string v4, " <- "

    invoke-virtual {v2, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 9163
    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService$Association;->mSourceProcess:Ljava/lang/String;

    invoke-virtual {v2, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 9164
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 9165
    iget v3, v0, Lcom/android/server/am/ActivityManagerService$Association;->mSourceUid:I

    invoke-static {v2, v3}, Landroid/os/UserHandle;->formatUid(Ljava/io/PrintWriter;I)V

    .line 9166
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 9167
    const-string v3, "    via "

    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 9168
    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService$Association;->mTargetComponent:Landroid/content/ComponentName;

    invoke-virtual {v3}, Landroid/content/ComponentName;->flattenToShortString()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 9169
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 9170
    const-string v3, "    "

    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 9171
    iget-wide v3, v0, Lcom/android/server/am/ActivityManagerService$Association;->mTime:J

    .line 9172
    .local v3, "dur":J
    move/from16 v20, v9

    .end local v9    # "N1":I
    .local v20, "N1":I
    iget v9, v0, Lcom/android/server/am/ActivityManagerService$Association;->mNesting:I

    if-lez v9, :cond_3

    .line 9173
    move-object/from16 v21, v10

    .end local v10    # "targetComponents":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Landroid/content/ComponentName;Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;>;"
    .local v21, "targetComponents":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Landroid/content/ComponentName;Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;>;"
    iget-wide v9, v0, Lcom/android/server/am/ActivityManagerService$Association;->mStartTime:J

    sub-long v9, v6, v9

    add-long/2addr v3, v9

    goto :goto_5

    .line 9172
    .end local v21    # "targetComponents":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Landroid/content/ComponentName;Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;>;"
    .restart local v10    # "targetComponents":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Landroid/content/ComponentName;Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;>;"
    :cond_3
    move-object/from16 v21, v10

    .line 9175
    .end local v10    # "targetComponents":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Landroid/content/ComponentName;Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;>;"
    .restart local v21    # "targetComponents":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Landroid/content/ComponentName;Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;>;"
    :goto_5
    invoke-static {v3, v4, v2}, Landroid/util/TimeUtils;->formatDuration(JLjava/io/PrintWriter;)V

    .line 9176
    const-string v9, " ("

    invoke-virtual {v2, v9}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 9177
    iget v9, v0, Lcom/android/server/am/ActivityManagerService$Association;->mCount:I

    invoke-virtual {v2, v9}, Ljava/io/PrintWriter;->print(I)V

    .line 9178
    const-string v9, " times)"

    invoke-virtual {v2, v9}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 9179
    invoke-virtual {v2, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 9180
    const/4 v5, 0x0

    .local v5, "i":I
    :goto_6
    iget-object v9, v0, Lcom/android/server/am/ActivityManagerService$Association;->mStateTimes:[J

    array-length v9, v9

    if-ge v5, v9, :cond_7

    .line 9181
    iget-object v9, v0, Lcom/android/server/am/ActivityManagerService$Association;->mStateTimes:[J

    aget-wide v9, v9, v5

    .line 9182
    .local v9, "amt":J
    move-wide/from16 v22, v3

    .end local v3    # "dur":J
    .local v22, "dur":J
    iget v3, v0, Lcom/android/server/am/ActivityManagerService$Association;->mLastState:I

    const/4 v4, 0x0

    sub-int/2addr v3, v4

    if-ne v3, v5, :cond_4

    .line 9183
    iget-wide v3, v0, Lcom/android/server/am/ActivityManagerService$Association;->mLastStateUptime:J

    sub-long v3, v6, v3

    add-long/2addr v9, v3

    .line 9185
    :cond_4
    const-wide/16 v3, 0x0

    cmp-long v3, v9, v3

    if-eqz v3, :cond_5

    .line 9186
    const-string v3, " "

    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 9187
    add-int/lit8 v3, v5, 0x0

    invoke-static {v3}, Lcom/android/server/am/ProcessList;->makeProcStateString(I)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 9189
    const-string v3, "="

    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 9190
    invoke-static {v9, v10, v2}, Landroid/util/TimeUtils;->formatDuration(JLjava/io/PrintWriter;)V

    .line 9191
    iget v3, v0, Lcom/android/server/am/ActivityManagerService$Association;->mLastState:I

    const/4 v4, 0x0

    sub-int/2addr v3, v4

    if-ne v3, v5, :cond_6

    .line 9192
    const-string v3, "*"

    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    goto :goto_7

    .line 9185
    :cond_5
    const/4 v4, 0x0

    .line 9180
    .end local v9    # "amt":J
    :cond_6
    :goto_7
    add-int/lit8 v5, v5, 0x1

    move-wide/from16 v3, v22

    goto :goto_6

    .end local v22    # "dur":J
    .restart local v3    # "dur":J
    :cond_7
    move-wide/from16 v22, v3

    const/4 v4, 0x0

    .line 9196
    .end local v3    # "dur":J
    .end local v5    # "i":I
    .restart local v22    # "dur":J
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 9197
    iget v3, v0, Lcom/android/server/am/ActivityManagerService$Association;->mNesting:I

    if-lez v3, :cond_8

    .line 9198
    const-string v3, "    Currently active: "

    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 9199
    iget-wide v9, v0, Lcom/android/server/am/ActivityManagerService$Association;->mStartTime:J

    sub-long v9, v6, v9

    invoke-static {v9, v10, v2}, Landroid/util/TimeUtils;->formatDuration(JLjava/io/PrintWriter;)V

    .line 9200
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 9149
    .end local v0    # "ass":Lcom/android/server/am/ActivityManagerService$Association;
    .end local v22    # "dur":J
    :cond_8
    :goto_8
    add-int/lit8 v1, v1, 0x1

    move-object/from16 v3, p7

    move-object/from16 v5, v16

    move/from16 v0, v18

    move/from16 v4, v19

    move/from16 v9, v20

    move-object/from16 v10, v21

    goto/16 :goto_4

    .end local v16    # "sourceProcesses":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;"
    .end local v18    # "N4":I
    .end local v19    # "dumpUid":I
    .end local v20    # "N1":I
    .end local v21    # "targetComponents":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Landroid/content/ComponentName;Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;>;"
    .local v0, "N4":I
    .restart local v4    # "dumpUid":I
    .local v5, "sourceProcesses":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;"
    .local v9, "N1":I
    .restart local v10    # "targetComponents":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Landroid/content/ComponentName;Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;>;"
    :cond_9
    move/from16 v18, v0

    move/from16 v19, v4

    move-object/from16 v16, v5

    move/from16 v20, v9

    move-object/from16 v21, v10

    const/4 v4, 0x0

    .line 9147
    .end local v0    # "N4":I
    .end local v1    # "i4":I
    .end local v4    # "dumpUid":I
    .end local v5    # "sourceProcesses":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;"
    .end local v9    # "N1":I
    .end local v10    # "targetComponents":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Landroid/content/ComponentName;Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;>;"
    .restart local v19    # "dumpUid":I
    .restart local v20    # "N1":I
    .restart local v21    # "targetComponents":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Landroid/content/ComponentName;Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;>;"
    add-int/lit8 v14, v14, 0x1

    move-object/from16 v1, p0

    move-object/from16 v3, p7

    move v5, v4

    move/from16 v0, v17

    move/from16 v4, v19

    goto/16 :goto_3

    .end local v17    # "printedAnything":Z
    .end local v19    # "dumpUid":I
    .end local v20    # "N1":I
    .end local v21    # "targetComponents":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Landroid/content/ComponentName;Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;>;"
    .local v0, "printedAnything":Z
    .restart local v4    # "dumpUid":I
    .restart local v9    # "N1":I
    .restart local v10    # "targetComponents":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Landroid/content/ComponentName;Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;>;"
    :cond_a
    move/from16 v17, v0

    move/from16 v19, v4

    move v4, v5

    move/from16 v20, v9

    move-object/from16 v21, v10

    .line 9144
    .end local v0    # "printedAnything":Z
    .end local v4    # "dumpUid":I
    .end local v9    # "N1":I
    .end local v10    # "targetComponents":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Landroid/content/ComponentName;Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;>;"
    .end local v13    # "sourceUids":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;"
    .end local v14    # "i3":I
    .end local v15    # "N3":I
    .restart local v17    # "printedAnything":Z
    .restart local v19    # "dumpUid":I
    .restart local v20    # "N1":I
    .restart local v21    # "targetComponents":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Landroid/content/ComponentName;Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;>;"
    add-int/lit8 v11, v11, 0x1

    move-object/from16 v1, p0

    move-object/from16 v3, p7

    move/from16 v4, v19

    goto/16 :goto_2

    .end local v17    # "printedAnything":Z
    .end local v19    # "dumpUid":I
    .end local v20    # "N1":I
    .end local v21    # "targetComponents":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Landroid/content/ComponentName;Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;>;"
    .restart local v0    # "printedAnything":Z
    .restart local v4    # "dumpUid":I
    .restart local v9    # "N1":I
    .restart local v10    # "targetComponents":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Landroid/content/ComponentName;Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;>;"
    :cond_b
    move/from16 v19, v4

    move v4, v5

    move/from16 v20, v9

    move-object/from16 v21, v10

    .line 9141
    .end local v4    # "dumpUid":I
    .end local v9    # "N1":I
    .end local v10    # "targetComponents":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Landroid/content/ComponentName;Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;>;"
    .end local v11    # "i2":I
    .end local v12    # "N2":I
    .restart local v19    # "dumpUid":I
    .restart local v20    # "N1":I
    add-int/lit8 v8, v8, 0x1

    move-object/from16 v1, p0

    move-object/from16 v3, p7

    move/from16 v4, v19

    goto/16 :goto_1

    .end local v19    # "dumpUid":I
    .end local v20    # "N1":I
    .restart local v4    # "dumpUid":I
    .restart local v9    # "N1":I
    :cond_c
    move/from16 v19, v4

    move/from16 v20, v9

    .line 9208
    .end local v4    # "dumpUid":I
    .end local v8    # "i1":I
    .end local v9    # "N1":I
    .restart local v19    # "dumpUid":I
    if-nez v0, :cond_d

    .line 9209
    const-string v1, "  (nothing)"

    invoke-virtual {v2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 9211
    :cond_d
    return-void
.end method

.method final dumpBinderCacheContents(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
    .locals 8
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "args"    # [Ljava/lang/String;

    .line 10097
    const/4 v0, 0x0

    invoke-virtual {p0, p2, v0, v0, p3}, Lcom/android/server/am/ActivityManagerService;->collectProcesses(Ljava/io/PrintWriter;IZ[Ljava/lang/String;)Ljava/util/ArrayList;

    move-result-object v1

    .line 10098
    .local v1, "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    if-nez v1, :cond_0

    .line 10099
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "No process found for: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    aget-object v0, p3, v0

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10100
    return-void

    .line 10103
    :cond_0
    const-string v0, "Per-process Binder Cache Contents"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10105
    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v0

    add-int/lit8 v0, v0, -0x1

    .local v0, "i":I
    :goto_0
    if-ltz v0, :cond_3

    .line 10106
    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ProcessRecord;

    .line 10107
    .local v2, "r":Lcom/android/server/am/ProcessRecord;
    invoke-virtual {v2}, Lcom/android/server/am/ProcessRecord;->getPid()I

    move-result v3

    .line 10108
    .local v3, "pid":I
    invoke-virtual {v2}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v4

    .line 10109
    .local v4, "thread":Landroid/app/IApplicationThread;
    if-eqz v4, :cond_2

    .line 10110
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "\n\n** Cache info for pid "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v6, " ["

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v6, v2, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v6, "] **"

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10111
    invoke-virtual {p2}, Ljava/io/PrintWriter;->flush()V

    .line 10112
    sget v5, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    if-ne v3, v5, :cond_1

    .line 10113
    invoke-static {p1, p3}, Landroid/app/PropertyInvalidatedCache;->dumpCacheInfo(Ljava/io/FileDescriptor;[Ljava/lang/String;)V

    .line 10114
    goto :goto_1

    .line 10117
    :cond_1
    :try_start_0
    new-instance v5, Lcom/android/internal/os/TransferPipe;

    invoke-direct {v5}, Lcom/android/internal/os/TransferPipe;-><init>()V
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_1
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 10119
    .local v5, "tp":Lcom/android/internal/os/TransferPipe;
    :try_start_1
    invoke-virtual {v5}, Lcom/android/internal/os/TransferPipe;->getWriteFd()Landroid/os/ParcelFileDescriptor;

    move-result-object v6

    invoke-interface {v4, v6, p3}, Landroid/app/IApplicationThread;->dumpCacheInfo(Landroid/os/ParcelFileDescriptor;[Ljava/lang/String;)V

    .line 10120
    invoke-virtual {v5, p1}, Lcom/android/internal/os/TransferPipe;->go(Ljava/io/FileDescriptor;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 10122
    :try_start_2
    invoke-virtual {v5}, Lcom/android/internal/os/TransferPipe;->kill()V

    .line 10123
    goto :goto_1

    .line 10122
    :catchall_0
    move-exception v6

    invoke-virtual {v5}, Lcom/android/internal/os/TransferPipe;->kill()V

    .line 10123
    nop

    .end local v0    # "i":I
    .end local v1    # "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    .end local v2    # "r":Lcom/android/server/am/ProcessRecord;
    .end local v3    # "pid":I
    .end local v4    # "thread":Landroid/app/IApplicationThread;
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "fd":Ljava/io/FileDescriptor;
    .end local p2    # "pw":Ljava/io/PrintWriter;
    .end local p3    # "args":[Ljava/lang/String;
    throw v6
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_1
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_0

    .line 10127
    .end local v5    # "tp":Lcom/android/internal/os/TransferPipe;
    .restart local v0    # "i":I
    .restart local v1    # "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    .restart local v2    # "r":Lcom/android/server/am/ProcessRecord;
    .restart local v3    # "pid":I
    .restart local v4    # "thread":Landroid/app/IApplicationThread;
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "fd":Ljava/io/FileDescriptor;
    .restart local p2    # "pw":Ljava/io/PrintWriter;
    .restart local p3    # "args":[Ljava/lang/String;
    :catch_0
    move-exception v5

    .line 10128
    .local v5, "e":Landroid/os/RemoteException;
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Got a RemoteException while dumping the app "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {p2, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10129
    invoke-virtual {p2}, Ljava/io/PrintWriter;->flush()V

    goto :goto_1

    .line 10124
    .end local v5    # "e":Landroid/os/RemoteException;
    :catch_1
    move-exception v5

    .line 10125
    .local v5, "e":Ljava/io/IOException;
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Failure while dumping the app "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {p2, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10126
    invoke-virtual {p2}, Ljava/io/PrintWriter;->flush()V

    .line 10105
    .end local v2    # "r":Lcom/android/server/am/ProcessRecord;
    .end local v3    # "pid":I
    .end local v4    # "thread":Landroid/app/IApplicationThread;
    .end local v5    # "e":Ljava/io/IOException;
    :cond_2
    :goto_1
    add-int/lit8 v0, v0, -0x1

    goto/16 :goto_0

    .line 10133
    .end local v0    # "i":I
    :cond_3
    return-void
.end method

.method dumpBinderProxies(Ljava/io/PrintWriter;I)V
    .locals 3
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "minCountToDumpInterfaces"    # I

    .line 9264
    const-string v0, "ACTIVITY MANAGER BINDER PROXY STATE (dumpsys activity binder-proxies)"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 9265
    invoke-static {}, Landroid/os/BinderProxy;->getProxyCount()I

    move-result v0

    .line 9266
    .local v0, "proxyCount":I
    if-lt v0, p2, :cond_0

    .line 9267
    const-string v1, "Top proxy interface names held by SYSTEM"

    invoke-virtual {p0, p1, v1}, Lcom/android/server/am/ActivityManagerService;->dumpBinderProxyInterfaceCounts(Ljava/io/PrintWriter;Ljava/lang/String;)V

    goto :goto_0

    .line 9270
    :cond_0
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Not dumping proxy interface counts because size ("

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 9271
    invoke-static {v0}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, ") looks reasonable"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    .line 9270
    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 9272
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 9274
    :goto_0
    const-string v1, "  Counts of Binder Proxies held by SYSTEM"

    invoke-virtual {p0, p1, v1}, Lcom/android/server/am/ActivityManagerService;->dumpBinderProxiesCounts(Ljava/io/PrintWriter;Ljava/lang/String;)Z

    .line 9276
    return-void
.end method

.method dumpBinderProxiesCounts(Ljava/io/PrintWriter;Ljava/lang/String;)Z
    .locals 7
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "header"    # Ljava/lang/String;

    .line 9236
    invoke-static {}, Lcom/android/internal/os/BinderInternal;->nGetBinderProxyPerUidCounts()Landroid/util/SparseIntArray;

    move-result-object v0

    .line 9237
    .local v0, "counts":Landroid/util/SparseIntArray;
    if-eqz v0, :cond_3

    .line 9238
    invoke-virtual {p1, p2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 9239
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_0
    invoke-virtual {v0}, Landroid/util/SparseIntArray;->size()I

    move-result v2

    if-ge v1, v2, :cond_2

    .line 9240
    invoke-virtual {v0, v1}, Landroid/util/SparseIntArray;->keyAt(I)I

    move-result v2

    .line 9241
    .local v2, "uid":I
    invoke-virtual {v0, v1}, Landroid/util/SparseIntArray;->valueAt(I)I

    move-result v3

    .line 9242
    .local v3, "binderCount":I
    const-string v4, "    UID "

    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 9243
    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(I)V

    .line 9244
    const-string v4, ", binder count = "

    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 9245
    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->print(I)V

    .line 9246
    const-string v4, ", package(s)= "

    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 9247
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v4}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v4

    invoke-virtual {v4, v2}, Landroid/content/pm/PackageManager;->getPackagesForUid(I)[Ljava/lang/String;

    move-result-object v4

    .line 9248
    .local v4, "pkgNames":[Ljava/lang/String;
    if-eqz v4, :cond_1

    .line 9249
    const/4 v5, 0x0

    .local v5, "j":I
    :goto_1
    array-length v6, v4

    if-ge v5, v6, :cond_0

    .line 9250
    aget-object v6, v4, v5

    invoke-virtual {p1, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 9251
    const-string v6, "; "

    invoke-virtual {p1, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 9249
    add-int/lit8 v5, v5, 0x1

    goto :goto_1

    .end local v5    # "j":I
    :cond_0
    goto :goto_2

    .line 9254
    :cond_1
    const-string v5, "NO PACKAGE NAME FOUND"

    invoke-virtual {p1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 9256
    :goto_2
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 9239
    .end local v2    # "uid":I
    .end local v3    # "binderCount":I
    .end local v4    # "pkgNames":[Ljava/lang/String;
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 9258
    .end local v1    # "i":I
    :cond_2
    const/4 v1, 0x1

    return v1

    .line 9260
    :cond_3
    const/4 v1, 0x0

    return v1
.end method

.method dumpBinderProxyInterfaceCounts(Ljava/io/PrintWriter;Ljava/lang/String;)V
    .locals 4
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "header"    # Ljava/lang/String;

    .line 9227
    const/16 v0, 0x32

    invoke-static {v0}, Landroid/os/BinderProxy;->getSortedInterfaceCounts(I)[Landroid/os/BinderProxy$InterfaceCount;

    move-result-object v0

    .line 9229
    .local v0, "proxyCounts":[Landroid/os/BinderProxy$InterfaceCount;
    invoke-virtual {p1, p2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 9230
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_0
    array-length v2, v0

    if-ge v1, v2, :cond_0

    .line 9231
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "    #"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    add-int/lit8 v3, v1, 0x1

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, ": "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    aget-object v3, v0, v1

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 9230
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 9233
    .end local v1    # "i":I
    :cond_0
    return-void
.end method

.method dumpBroadcastStatsCheckinLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V
    .locals 2
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "args"    # [Ljava/lang/String;
    .param p4, "opti"    # I
    .param p5, "fullCheckin"    # Z
    .param p6, "dumpPackage"    # Ljava/lang/String;

    .line 10005
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCurBroadcastStats:Lcom/android/server/am/BroadcastStats;

    if-nez v0, :cond_0

    .line 10006
    return-void

    .line 10009
    :cond_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mLastBroadcastStats:Lcom/android/server/am/BroadcastStats;

    const/4 v1, 0x0

    if-eqz v0, :cond_1

    .line 10010
    invoke-virtual {v0, p2, p6}, Lcom/android/server/am/BroadcastStats;->dumpCheckinStats(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 10011
    if-eqz p5, :cond_1

    .line 10012
    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mLastBroadcastStats:Lcom/android/server/am/BroadcastStats;

    .line 10013
    return-void

    .line 10016
    :cond_1
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCurBroadcastStats:Lcom/android/server/am/BroadcastStats;

    invoke-virtual {v0, p2, p6}, Lcom/android/server/am/BroadcastStats;->dumpCheckinStats(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 10017
    if-eqz p5, :cond_2

    .line 10018
    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mCurBroadcastStats:Lcom/android/server/am/BroadcastStats;

    .line 10020
    :cond_2
    return-void
.end method

.method dumpBroadcastStatsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V
    .locals 13
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "args"    # [Ljava/lang/String;
    .param p4, "opti"    # I
    .param p5, "dumpAll"    # Z
    .param p6, "dumpPackage"    # Ljava/lang/String;

    .line 9972
    move-object v0, p0

    move-object v1, p2

    move-object/from16 v2, p6

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mCurBroadcastStats:Lcom/android/server/am/BroadcastStats;

    if-nez v3, :cond_0

    .line 9973
    return-void

    .line 9976
    :cond_0
    const-string v3, "ACTIVITY MANAGER BROADCAST STATS STATE (dumpsys activity broadcast-stats)"

    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 9977
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v3

    .line 9978
    .local v3, "now":J
    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mLastBroadcastStats:Lcom/android/server/am/BroadcastStats;

    const-string v6, "    (nothing)"

    const-string v7, "    "

    const-string v8, " uptime):"

    if-eqz v5, :cond_2

    .line 9979
    const-string v5, "  Last stats (from "

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 9980
    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mLastBroadcastStats:Lcom/android/server/am/BroadcastStats;

    iget-wide v9, v5, Lcom/android/server/am/BroadcastStats;->mStartRealtime:J

    invoke-static {v9, v10, v3, v4, p2}, Landroid/util/TimeUtils;->formatDuration(JJLjava/io/PrintWriter;)V

    .line 9981
    const-string v5, " to "

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 9982
    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mLastBroadcastStats:Lcom/android/server/am/BroadcastStats;

    iget-wide v9, v5, Lcom/android/server/am/BroadcastStats;->mEndRealtime:J

    invoke-static {v9, v10, v3, v4, p2}, Landroid/util/TimeUtils;->formatDuration(JJLjava/io/PrintWriter;)V

    .line 9983
    const-string v5, ", "

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 9984
    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mLastBroadcastStats:Lcom/android/server/am/BroadcastStats;

    iget-wide v9, v5, Lcom/android/server/am/BroadcastStats;->mEndUptime:J

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mLastBroadcastStats:Lcom/android/server/am/BroadcastStats;

    iget-wide v11, v5, Lcom/android/server/am/BroadcastStats;->mStartUptime:J

    sub-long/2addr v9, v11

    invoke-static {v9, v10, p2}, Landroid/util/TimeUtils;->formatDuration(JLjava/io/PrintWriter;)V

    .line 9986
    invoke-virtual {p2, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 9987
    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mLastBroadcastStats:Lcom/android/server/am/BroadcastStats;

    invoke-virtual {v5, p2, v7, v2}, Lcom/android/server/am/BroadcastStats;->dumpStats(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v5

    if-nez v5, :cond_1

    .line 9988
    invoke-virtual {p2, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 9990
    :cond_1
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    .line 9992
    :cond_2
    const-string v5, "  Current stats (from "

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 9993
    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mCurBroadcastStats:Lcom/android/server/am/BroadcastStats;

    iget-wide v9, v5, Lcom/android/server/am/BroadcastStats;->mStartRealtime:J

    invoke-static {v9, v10, v3, v4, p2}, Landroid/util/TimeUtils;->formatDuration(JJLjava/io/PrintWriter;)V

    .line 9994
    const-string v5, " to now, "

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 9995
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v9

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mCurBroadcastStats:Lcom/android/server/am/BroadcastStats;

    iget-wide v11, v5, Lcom/android/server/am/BroadcastStats;->mStartUptime:J

    sub-long/2addr v9, v11

    invoke-static {v9, v10, p2}, Landroid/util/TimeUtils;->formatDuration(JLjava/io/PrintWriter;)V

    .line 9997
    invoke-virtual {p2, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 9998
    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mCurBroadcastStats:Lcom/android/server/am/BroadcastStats;

    invoke-virtual {v5, p2, v7, v2}, Lcom/android/server/am/BroadcastStats;->dumpStats(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v5

    if-nez v5, :cond_3

    .line 9999
    invoke-virtual {p2, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10001
    :cond_3
    return-void
.end method

.method dumpBroadcastsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V
    .locals 24
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "args"    # [Ljava/lang/String;
    .param p4, "opti"    # I
    .param p5, "dumpAll"    # Z
    .param p6, "dumpPackage"    # Ljava/lang/String;

    .line 9869
    move-object/from16 v0, p0

    move-object/from16 v9, p2

    move-object/from16 v10, p3

    move/from16 v11, p4

    const/4 v1, 0x0

    .line 9870
    .local v1, "needSep":Z
    const/4 v2, 0x0

    .line 9871
    .local v2, "onlyHistory":Z
    const/4 v3, 0x0

    .line 9873
    .local v3, "printedAnything":Z
    const-string v4, "history"

    move-object/from16 v5, p6

    invoke-virtual {v4, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_1

    .line 9874
    array-length v4, v10

    if-ge v11, v4, :cond_0

    aget-object v4, v10, v11

    const-string v6, "-s"

    invoke-virtual {v6, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_0

    .line 9875
    const/4 v4, 0x0

    .end local p5    # "dumpAll":Z
    .local v4, "dumpAll":Z
    goto :goto_0

    .line 9877
    .end local v4    # "dumpAll":Z
    .restart local p5    # "dumpAll":Z
    :cond_0
    move/from16 v4, p5

    .end local p5    # "dumpAll":Z
    .restart local v4    # "dumpAll":Z
    :goto_0
    const/4 v2, 0x1

    .line 9878
    const/4 v5, 0x0

    move v14, v2

    move v12, v4

    move-object v13, v5

    .end local p6    # "dumpPackage":Ljava/lang/String;
    .local v5, "dumpPackage":Ljava/lang/String;
    goto :goto_1

    .line 9873
    .end local v4    # "dumpAll":Z
    .end local v5    # "dumpPackage":Ljava/lang/String;
    .restart local p5    # "dumpAll":Z
    .restart local p6    # "dumpPackage":Ljava/lang/String;
    :cond_1
    move/from16 v12, p5

    move v14, v2

    move-object v13, v5

    .line 9881
    .end local v2    # "onlyHistory":Z
    .end local p5    # "dumpAll":Z
    .end local p6    # "dumpPackage":Ljava/lang/String;
    .local v12, "dumpAll":Z
    .local v13, "dumpPackage":Ljava/lang/String;
    .local v14, "onlyHistory":Z
    :goto_1
    const-string v2, "ACTIVITY MANAGER BROADCAST STATE (dumpsys activity broadcasts)"

    invoke-virtual {v9, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 9882
    const-string v15, "    "

    if-nez v14, :cond_9

    if-eqz v12, :cond_9

    .line 9883
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mRegisteredReceivers:Ljava/util/HashMap;

    invoke-virtual {v2}, Ljava/util/HashMap;->size()I

    move-result v2

    if-lez v2, :cond_6

    .line 9884
    const/4 v2, 0x0

    .line 9885
    .local v2, "printed":Z
    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mRegisteredReceivers:Ljava/util/HashMap;

    invoke-virtual {v4}, Ljava/util/HashMap;->values()Ljava/util/Collection;

    move-result-object v4

    invoke-interface {v4}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v4

    .line 9886
    .local v4, "it":Ljava/util/Iterator;
    :cond_2
    :goto_2
    invoke-interface {v4}, Ljava/util/Iterator;->hasNext()Z

    move-result v5

    if-eqz v5, :cond_5

    .line 9887
    invoke-interface {v4}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/am/ReceiverList;

    .line 9888
    .local v5, "r":Lcom/android/server/am/ReceiverList;
    if-eqz v13, :cond_3

    iget-object v6, v5, Lcom/android/server/am/ReceiverList;->app:Lcom/android/server/am/ProcessRecord;

    if-eqz v6, :cond_2

    iget-object v6, v5, Lcom/android/server/am/ReceiverList;->app:Lcom/android/server/am/ProcessRecord;

    iget-object v6, v6, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v6, v6, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    .line 9889
    invoke-virtual {v13, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-nez v6, :cond_3

    .line 9890
    goto :goto_2

    .line 9892
    :cond_3
    if-nez v2, :cond_4

    .line 9893
    const-string v6, "  Registered Receivers:"

    invoke-virtual {v9, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 9894
    const/4 v1, 0x1

    .line 9895
    const/4 v2, 0x1

    .line 9896
    const/4 v3, 0x1

    .line 9898
    :cond_4
    const-string v6, "  * "

    invoke-virtual {v9, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {v9, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 9899
    invoke-virtual {v5, v9, v15}, Lcom/android/server/am/ReceiverList;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 9900
    .end local v5    # "r":Lcom/android/server/am/ReceiverList;
    goto :goto_2

    .line 9886
    :cond_5
    move v8, v1

    move/from16 v16, v3

    goto :goto_3

    .line 9883
    .end local v2    # "printed":Z
    .end local v4    # "it":Ljava/util/Iterator;
    :cond_6
    move v8, v1

    move/from16 v16, v3

    .line 9903
    .end local v1    # "needSep":Z
    .end local v3    # "printedAnything":Z
    .local v8, "needSep":Z
    .local v16, "printedAnything":Z
    :goto_3
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mReceiverResolver:Lcom/android/server/IntentResolver;

    if-eqz v8, :cond_7

    .line 9904
    const-string v2, "\n  Receiver Resolver Table:"

    goto :goto_4

    :cond_7
    const-string v2, "  Receiver Resolver Table:"

    :goto_4
    move-object v3, v2

    const/4 v6, 0x0

    const/4 v7, 0x0

    .line 9903
    const-string v4, "    "

    move-object/from16 v2, p2

    move-object v5, v13

    invoke-virtual/range {v1 .. v7}, Lcom/android/server/IntentResolver;->dump(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZ)Z

    move-result v1

    if-eqz v1, :cond_8

    .line 9906
    const/4 v1, 0x1

    .line 9907
    .end local v8    # "needSep":Z
    .restart local v1    # "needSep":Z
    const/4 v3, 0x1

    .end local v16    # "printedAnything":Z
    .restart local v3    # "printedAnything":Z
    goto :goto_5

    .line 9903
    .end local v1    # "needSep":Z
    .end local v3    # "printedAnything":Z
    .restart local v8    # "needSep":Z
    .restart local v16    # "printedAnything":Z
    :cond_8
    move v1, v8

    move/from16 v3, v16

    .line 9911
    .end local v8    # "needSep":Z
    .end local v16    # "printedAnything":Z
    .restart local v1    # "needSep":Z
    .restart local v3    # "printedAnything":Z
    :cond_9
    :goto_5
    iget-object v8, v0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    array-length v7, v8

    const/4 v6, 0x0

    move/from16 v16, v1

    move/from16 v17, v3

    move v5, v6

    .end local v1    # "needSep":Z
    .end local v3    # "printedAnything":Z
    .local v16, "needSep":Z
    .local v17, "printedAnything":Z
    :goto_6
    if-ge v5, v7, :cond_a

    aget-object v18, v8, v5

    .line 9912
    .local v18, "q":Lcom/android/server/am/BroadcastQueue;
    move-object/from16 v1, v18

    move-object/from16 v2, p1

    move-object/from16 v3, p2

    move-object/from16 v4, p3

    move/from16 v19, v5

    move/from16 v5, p4

    move v10, v6

    move v6, v12

    move/from16 v20, v7

    move-object v7, v13

    move-object/from16 v21, v8

    move/from16 v8, v16

    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/BroadcastQueue;->dumpLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;Z)Z

    move-result v16

    .line 9913
    or-int v17, v17, v16

    .line 9911
    .end local v18    # "q":Lcom/android/server/am/BroadcastQueue;
    add-int/lit8 v5, v19, 0x1

    move v6, v10

    move/from16 v7, v20

    move-object/from16 v8, v21

    move-object/from16 v10, p3

    goto :goto_6

    .line 9916
    :cond_a
    move v10, v6

    const/4 v1, 0x1

    .line 9918
    .end local v16    # "needSep":Z
    .restart local v1    # "needSep":Z
    if-nez v14, :cond_10

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    if-eqz v2, :cond_10

    if-nez v13, :cond_10

    .line 9919
    const/4 v2, 0x0

    .local v2, "user":I
    :goto_7
    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    invoke-virtual {v3}, Landroid/util/SparseArray;->size()I

    move-result v3

    if-ge v2, v3, :cond_10

    .line 9920
    if-eqz v1, :cond_b

    .line 9921
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 9923
    :cond_b
    const/4 v1, 0x1

    .line 9924
    const/16 v17, 0x1

    .line 9925
    const-string v3, "  Sticky broadcasts for user "

    invoke-virtual {v9, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 9926
    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    invoke-virtual {v3, v2}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v3

    invoke-virtual {v9, v3}, Ljava/io/PrintWriter;->print(I)V

    const-string v3, ":"

    invoke-virtual {v9, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 9927
    new-instance v4, Ljava/lang/StringBuilder;

    const/16 v5, 0x80

    invoke-direct {v4, v5}, Ljava/lang/StringBuilder;-><init>(I)V

    .line 9929
    .local v4, "sb":Ljava/lang/StringBuilder;
    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    invoke-virtual {v5, v2}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Landroid/util/ArrayMap;

    invoke-virtual {v5}, Landroid/util/ArrayMap;->entrySet()Ljava/util/Set;

    move-result-object v5

    invoke-interface {v5}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v5

    :goto_8
    invoke-interface {v5}, Ljava/util/Iterator;->hasNext()Z

    move-result v6

    if-eqz v6, :cond_f

    invoke-interface {v5}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Ljava/util/Map$Entry;

    .line 9930
    .local v6, "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Ljava/util/ArrayList<Landroid/content/Intent;>;>;"
    const-string v7, "  * Sticky action "

    invoke-virtual {v9, v7}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-interface {v6}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Ljava/lang/String;

    invoke-virtual {v9, v7}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 9931
    if-eqz v12, :cond_e

    .line 9932
    invoke-virtual {v9, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 9933
    invoke-interface {v6}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Ljava/util/ArrayList;

    .line 9934
    .local v7, "intents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    invoke-virtual {v7}, Ljava/util/ArrayList;->size()I

    move-result v8

    .line 9935
    .local v8, "N":I
    const/16 v16, 0x0

    move/from16 v10, v16

    .local v10, "i":I
    :goto_9
    if-ge v10, v8, :cond_d

    .line 9936
    move/from16 p6, v1

    const/4 v1, 0x0

    .end local v1    # "needSep":Z
    .local p6, "needSep":Z
    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->setLength(I)V

    .line 9937
    const-string v1, "    Intent: "

    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 9938
    invoke-virtual {v7, v10}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    move-object/from16 v18, v1

    check-cast v18, Landroid/content/Intent;

    const/16 v20, 0x0

    const/16 v21, 0x1

    const/16 v22, 0x0

    const/16 v23, 0x0

    move-object/from16 v19, v4

    invoke-virtual/range {v18 .. v23}, Landroid/content/Intent;->toShortString(Ljava/lang/StringBuilder;ZZZZ)V

    .line 9939
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v9, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 9940
    invoke-virtual {v7, v10}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/content/Intent;

    invoke-virtual {v1}, Landroid/content/Intent;->getExtras()Landroid/os/Bundle;

    move-result-object v1

    .line 9941
    .local v1, "bundle":Landroid/os/Bundle;
    if-eqz v1, :cond_c

    .line 9942
    move-object/from16 v16, v3

    const-string v3, "      "

    invoke-virtual {v9, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 9943
    invoke-virtual {v1}, Landroid/os/Bundle;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v9, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto :goto_a

    .line 9941
    :cond_c
    move-object/from16 v16, v3

    .line 9935
    .end local v1    # "bundle":Landroid/os/Bundle;
    :goto_a
    add-int/lit8 v10, v10, 0x1

    move/from16 v1, p6

    move-object/from16 v3, v16

    goto :goto_9

    .end local p6    # "needSep":Z
    .local v1, "needSep":Z
    :cond_d
    move/from16 p6, v1

    move-object/from16 v16, v3

    .line 9946
    .end local v1    # "needSep":Z
    .end local v7    # "intents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .end local v8    # "N":I
    .end local v10    # "i":I
    .restart local p6    # "needSep":Z
    goto :goto_b

    .line 9947
    .end local p6    # "needSep":Z
    .restart local v1    # "needSep":Z
    :cond_e
    move/from16 p6, v1

    move-object/from16 v16, v3

    .end local v1    # "needSep":Z
    .restart local p6    # "needSep":Z
    const-string v1, ""

    invoke-virtual {v9, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 9949
    .end local v6    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Ljava/util/ArrayList<Landroid/content/Intent;>;>;"
    :goto_b
    move/from16 v1, p6

    move-object/from16 v3, v16

    const/4 v10, 0x0

    goto/16 :goto_8

    .line 9929
    .end local p6    # "needSep":Z
    .restart local v1    # "needSep":Z
    :cond_f
    move/from16 p6, v1

    .line 9919
    .end local v1    # "needSep":Z
    .end local v4    # "sb":Ljava/lang/StringBuilder;
    .restart local p6    # "needSep":Z
    add-int/lit8 v2, v2, 0x1

    const/4 v10, 0x0

    goto/16 :goto_7

    .line 9953
    .end local v2    # "user":I
    .end local p6    # "needSep":Z
    .restart local v1    # "needSep":Z
    :cond_10
    if-nez v14, :cond_12

    if-eqz v12, :cond_12

    .line 9954
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 9955
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    array-length v3, v2

    const/4 v6, 0x0

    :goto_c
    if-ge v6, v3, :cond_11

    aget-object v4, v2, v6

    .line 9956
    .local v4, "queue":Lcom/android/server/am/BroadcastQueue;
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "  mBroadcastsScheduled ["

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v7, v4, Lcom/android/server/am/BroadcastQueue;->mQueueName:Ljava/lang/String;

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v7, "]="

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-boolean v7, v4, Lcom/android/server/am/BroadcastQueue;->mBroadcastsScheduled:Z

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v9, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 9955
    .end local v4    # "queue":Lcom/android/server/am/BroadcastQueue;
    add-int/lit8 v6, v6, 0x1

    goto :goto_c

    .line 9959
    :cond_11
    const-string v2, "  mHandler:"

    invoke-virtual {v9, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 9960
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    new-instance v3, Landroid/util/PrintWriterPrinter;

    invoke-direct {v3, v9}, Landroid/util/PrintWriterPrinter;-><init>(Ljava/io/PrintWriter;)V

    invoke-virtual {v2, v3, v15}, Lcom/android/server/am/ActivityManagerService$MainHandler;->dump(Landroid/util/Printer;Ljava/lang/String;)V

    .line 9961
    const/4 v1, 0x1

    .line 9962
    const/16 v17, 0x1

    .line 9965
    :cond_12
    if-nez v17, :cond_13

    .line 9966
    const-string v2, "  (nothing)"

    invoke-virtual {v9, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 9968
    :cond_13
    return-void
.end method

.method final dumpDbInfo(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
    .locals 8
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "args"    # [Ljava/lang/String;

    .line 10136
    const/4 v0, 0x0

    invoke-virtual {p0, p2, v0, v0, p3}, Lcom/android/server/am/ActivityManagerService;->collectProcesses(Ljava/io/PrintWriter;IZ[Ljava/lang/String;)Ljava/util/ArrayList;

    move-result-object v1

    .line 10137
    .local v1, "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    if-nez v1, :cond_0

    .line 10138
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "No process found for: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    aget-object v0, p3, v0

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10139
    return-void

    .line 10142
    :cond_0
    const-string v0, "Applications Database Info:"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10144
    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v0

    add-int/lit8 v0, v0, -0x1

    .local v0, "i":I
    :goto_0
    if-ltz v0, :cond_2

    .line 10145
    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ProcessRecord;

    .line 10146
    .local v2, "r":Lcom/android/server/am/ProcessRecord;
    invoke-virtual {v2}, Lcom/android/server/am/ProcessRecord;->getPid()I

    move-result v3

    .line 10147
    .local v3, "pid":I
    invoke-virtual {v2}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v4

    .line 10148
    .local v4, "thread":Landroid/app/IApplicationThread;
    if-eqz v4, :cond_1

    .line 10149
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "\n** Database info for pid "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v6, " ["

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v6, v2, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v6, "] **"

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10150
    invoke-virtual {p2}, Ljava/io/PrintWriter;->flush()V

    .line 10152
    :try_start_0
    new-instance v5, Lcom/android/internal/os/TransferPipe;

    invoke-direct {v5}, Lcom/android/internal/os/TransferPipe;-><init>()V
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_1
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 10154
    .local v5, "tp":Lcom/android/internal/os/TransferPipe;
    :try_start_1
    invoke-virtual {v5}, Lcom/android/internal/os/TransferPipe;->getWriteFd()Landroid/os/ParcelFileDescriptor;

    move-result-object v6

    invoke-interface {v4, v6, p3}, Landroid/app/IApplicationThread;->dumpDbInfo(Landroid/os/ParcelFileDescriptor;[Ljava/lang/String;)V

    .line 10155
    invoke-virtual {v5, p1}, Lcom/android/internal/os/TransferPipe;->go(Ljava/io/FileDescriptor;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 10157
    :try_start_2
    invoke-virtual {v5}, Lcom/android/internal/os/TransferPipe;->kill()V

    .line 10158
    goto :goto_1

    .line 10157
    :catchall_0
    move-exception v6

    invoke-virtual {v5}, Lcom/android/internal/os/TransferPipe;->kill()V

    .line 10158
    nop

    .end local v0    # "i":I
    .end local v1    # "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    .end local v2    # "r":Lcom/android/server/am/ProcessRecord;
    .end local v3    # "pid":I
    .end local v4    # "thread":Landroid/app/IApplicationThread;
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "fd":Ljava/io/FileDescriptor;
    .end local p2    # "pw":Ljava/io/PrintWriter;
    .end local p3    # "args":[Ljava/lang/String;
    throw v6
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_1
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_0

    .line 10162
    .end local v5    # "tp":Lcom/android/internal/os/TransferPipe;
    .restart local v0    # "i":I
    .restart local v1    # "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    .restart local v2    # "r":Lcom/android/server/am/ProcessRecord;
    .restart local v3    # "pid":I
    .restart local v4    # "thread":Landroid/app/IApplicationThread;
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "fd":Ljava/io/FileDescriptor;
    .restart local p2    # "pw":Ljava/io/PrintWriter;
    .restart local p3    # "args":[Ljava/lang/String;
    :catch_0
    move-exception v5

    .line 10163
    .local v5, "e":Landroid/os/RemoteException;
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Got a RemoteException while dumping the app "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {p2, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10164
    invoke-virtual {p2}, Ljava/io/PrintWriter;->flush()V

    goto :goto_1

    .line 10159
    .end local v5    # "e":Landroid/os/RemoteException;
    :catch_1
    move-exception v5

    .line 10160
    .local v5, "e":Ljava/io/IOException;
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Failure while dumping the app: "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {p2, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10161
    invoke-virtual {p2}, Ljava/io/PrintWriter;->flush()V

    .line 10144
    .end local v2    # "r":Lcom/android/server/am/ProcessRecord;
    .end local v3    # "pid":I
    .end local v4    # "thread":Landroid/app/IApplicationThread;
    .end local v5    # "e":Ljava/io/IOException;
    :cond_1
    :goto_1
    add-int/lit8 v0, v0, -0x1

    goto/16 :goto_0

    .line 10168
    .end local v0    # "i":I
    :cond_2
    return-void
.end method

.method final dumpGraphicsHardwareUsage(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
    .locals 12
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "args"    # [Ljava/lang/String;

    .line 10059
    const/4 v0, 0x0

    invoke-virtual {p0, p2, v0, v0, p3}, Lcom/android/server/am/ActivityManagerService;->collectProcesses(Ljava/io/PrintWriter;IZ[Ljava/lang/String;)Ljava/util/ArrayList;

    move-result-object v1

    .line 10060
    .local v1, "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    if-nez v1, :cond_0

    .line 10061
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "No process found for: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    aget-object v0, p3, v0

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10062
    return-void

    .line 10065
    :cond_0
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v2

    .line 10066
    .local v2, "uptime":J
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v4

    .line 10067
    .local v4, "realtime":J
    const-string v0, "Applications Graphics Acceleration Info:"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10068
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Uptime: "

    invoke-virtual {v0, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v2, v3}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string v6, " Realtime: "

    invoke-virtual {v0, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v4, v5}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10070
    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v0

    add-int/lit8 v0, v0, -0x1

    .local v0, "i":I
    :goto_0
    if-ltz v0, :cond_2

    .line 10071
    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/am/ProcessRecord;

    .line 10072
    .local v6, "r":Lcom/android/server/am/ProcessRecord;
    invoke-virtual {v6}, Lcom/android/server/am/ProcessRecord;->getPid()I

    move-result v7

    .line 10073
    .local v7, "pid":I
    invoke-virtual {v6}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v8

    .line 10074
    .local v8, "thread":Landroid/app/IApplicationThread;
    if-eqz v8, :cond_1

    .line 10075
    new-instance v9, Ljava/lang/StringBuilder;

    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V

    const-string v10, "\n** Graphics info for pid "

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v9, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v10, " ["

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v10, v6, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v10, "] **"

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v9

    invoke-virtual {p2, v9}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10076
    invoke-virtual {p2}, Ljava/io/PrintWriter;->flush()V

    .line 10078
    :try_start_0
    new-instance v9, Lcom/android/internal/os/TransferPipe;

    invoke-direct {v9}, Lcom/android/internal/os/TransferPipe;-><init>()V
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_1
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 10080
    .local v9, "tp":Lcom/android/internal/os/TransferPipe;
    :try_start_1
    invoke-virtual {v9}, Lcom/android/internal/os/TransferPipe;->getWriteFd()Landroid/os/ParcelFileDescriptor;

    move-result-object v10

    invoke-interface {v8, v10, p3}, Landroid/app/IApplicationThread;->dumpGfxInfo(Landroid/os/ParcelFileDescriptor;[Ljava/lang/String;)V

    .line 10081
    invoke-virtual {v9, p1}, Lcom/android/internal/os/TransferPipe;->go(Ljava/io/FileDescriptor;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 10083
    :try_start_2
    invoke-virtual {v9}, Lcom/android/internal/os/TransferPipe;->kill()V

    .line 10084
    goto :goto_1

    .line 10083
    :catchall_0
    move-exception v10

    invoke-virtual {v9}, Lcom/android/internal/os/TransferPipe;->kill()V

    .line 10084
    nop

    .end local v0    # "i":I
    .end local v1    # "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    .end local v2    # "uptime":J
    .end local v4    # "realtime":J
    .end local v6    # "r":Lcom/android/server/am/ProcessRecord;
    .end local v7    # "pid":I
    .end local v8    # "thread":Landroid/app/IApplicationThread;
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "fd":Ljava/io/FileDescriptor;
    .end local p2    # "pw":Ljava/io/PrintWriter;
    .end local p3    # "args":[Ljava/lang/String;
    throw v10
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_1
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_0

    .line 10088
    .end local v9    # "tp":Lcom/android/internal/os/TransferPipe;
    .restart local v0    # "i":I
    .restart local v1    # "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    .restart local v2    # "uptime":J
    .restart local v4    # "realtime":J
    .restart local v6    # "r":Lcom/android/server/am/ProcessRecord;
    .restart local v7    # "pid":I
    .restart local v8    # "thread":Landroid/app/IApplicationThread;
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "fd":Ljava/io/FileDescriptor;
    .restart local p2    # "pw":Ljava/io/PrintWriter;
    .restart local p3    # "args":[Ljava/lang/String;
    :catch_0
    move-exception v9

    .line 10089
    .local v9, "e":Landroid/os/RemoteException;
    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string v11, "Got a RemoteException while dumping the app "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v10, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-virtual {p2, v10}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10090
    invoke-virtual {p2}, Ljava/io/PrintWriter;->flush()V

    goto :goto_1

    .line 10085
    .end local v9    # "e":Landroid/os/RemoteException;
    :catch_1
    move-exception v9

    .line 10086
    .local v9, "e":Ljava/io/IOException;
    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string v11, "Failure while dumping the app: "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v10, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-virtual {p2, v10}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10087
    invoke-virtual {p2}, Ljava/io/PrintWriter;->flush()V

    .line 10070
    .end local v6    # "r":Lcom/android/server/am/ProcessRecord;
    .end local v7    # "pid":I
    .end local v8    # "thread":Landroid/app/IApplicationThread;
    .end local v9    # "e":Ljava/io/IOException;
    :cond_1
    :goto_1
    add-int/lit8 v0, v0, -0x1

    goto/16 :goto_0

    .line 10094
    .end local v0    # "i":I
    :cond_2
    return-void
.end method

.method public dumpHeap(Ljava/lang/String;IZZZLjava/lang/String;Landroid/os/ParcelFileDescriptor;Landroid/os/RemoteCallback;)Z
    .locals 14
    .param p1, "process"    # Ljava/lang/String;
    .param p2, "userId"    # I
    .param p3, "managed"    # Z
    .param p4, "mallocInfo"    # Z
    .param p5, "runGc"    # Z
    .param p6, "path"    # Ljava/lang/String;
    .param p7, "fd"    # Landroid/os/ParcelFileDescriptor;
    .param p8, "finishCallback"    # Landroid/os/RemoteCallback;

    move-object v1, p0

    move-object v2, p1

    .line 14938
    :try_start_0
    const-string v0, "android.permission.SET_ACTIVITY_WATCHER"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_6

    .line 14944
    if-eqz p7, :cond_5

    .line 14948
    monitor-enter p0
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_3
    .catchall {:try_start_0 .. :try_end_0} :catchall_6

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 14949
    const-string v0, "dumpHeap"
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_3

    move/from16 v10, p2

    :try_start_2
    invoke-direct {p0, p1, v10, v0}, Lcom/android/server/am/ActivityManagerService;->findProcessLOSP(Ljava/lang/String;ILjava/lang/String;)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    move-object v11, v0

    .line 14951
    .local v11, "proc":Lcom/android/server/am/ProcessRecord;
    if-eqz v11, :cond_4

    invoke-virtual {v11}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v0

    move-object v3, v0

    .local v3, "thread":Landroid/app/IApplicationThread;
    if-eqz v0, :cond_3

    .line 14955
    sget-boolean v0, Landroid/os/Build;->IS_DEBUGGABLE:Z
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_2

    move v12, v0

    .line 14956
    .local v12, "isDebuggable":Z
    if-nez v12, :cond_1

    .line 14957
    :try_start_3
    iget-object v0, v11, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v0, v0, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v0, v0, 0x2

    if-eqz v0, :cond_0

    goto :goto_0

    .line 14958
    :cond_0
    new-instance v0, Ljava/lang/SecurityException;

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Process not debuggable: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-direct {v0, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "process":Ljava/lang/String;
    .end local p2    # "userId":I
    .end local p3    # "managed":Z
    .end local p4    # "mallocInfo":Z
    .end local p5    # "runGc":Z
    .end local p6    # "path":Ljava/lang/String;
    .end local p7    # "fd":Landroid/os/ParcelFileDescriptor;
    .end local p8    # "finishCallback":Landroid/os/RemoteCallback;
    throw v0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 14976
    .end local v3    # "thread":Landroid/app/IApplicationThread;
    .end local v11    # "proc":Lcom/android/server/am/ProcessRecord;
    .end local v12    # "isDebuggable":Z
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "process":Ljava/lang/String;
    .restart local p2    # "userId":I
    .restart local p3    # "managed":Z
    .restart local p4    # "mallocInfo":Z
    .restart local p5    # "runGc":Z
    .restart local p6    # "path":Ljava/lang/String;
    .restart local p7    # "fd":Landroid/os/ParcelFileDescriptor;
    .restart local p8    # "finishCallback":Landroid/os/RemoteCallback;
    :catchall_0
    move-exception v0

    move-object/from16 v4, p7

    move-object/from16 v13, p8

    goto :goto_5

    .line 14962
    .restart local v3    # "thread":Landroid/app/IApplicationThread;
    .restart local v11    # "proc":Lcom/android/server/am/ProcessRecord;
    .restart local v12    # "isDebuggable":Z
    :cond_1
    :goto_0
    :try_start_4
    iget-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mOomAdjuster:Lcom/android/server/am/OomAdjuster;

    iget-object v0, v0, Lcom/android/server/am/OomAdjuster;->mCachedAppOptimizer:Lcom/android/server/am/CachedAppOptimizer;

    const/4 v4, 0x0

    invoke-virtual {v0, v4}, Lcom/android/server/am/CachedAppOptimizer;->enableFreezer(Z)Z

    .line 14964
    new-instance v9, Landroid/os/RemoteCallback;

    new-instance v0, Lcom/android/server/am/ActivityManagerService$19;
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_2

    move-object/from16 v13, p8

    :try_start_5
    invoke-direct {v0, p0, v13}, Lcom/android/server/am/ActivityManagerService$19;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/os/RemoteCallback;)V

    const/4 v4, 0x0

    invoke-direct {v9, v0, v4}, Landroid/os/RemoteCallback;-><init>(Landroid/os/RemoteCallback$OnResultListener;Landroid/os/Handler;)V

    .line 14973
    .local v9, "intermediateCallback":Landroid/os/RemoteCallback;
    move/from16 v4, p3

    move/from16 v5, p4

    move/from16 v6, p5

    move-object/from16 v7, p6

    move-object/from16 v8, p7

    invoke-interface/range {v3 .. v9}, Landroid/app/IApplicationThread;->dumpHeap(ZZZLjava/lang/String;Landroid/os/ParcelFileDescriptor;Landroid/os/RemoteCallback;)V
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    .line 14974
    const/4 v4, 0x0

    .line 14975
    .end local p7    # "fd":Landroid/os/ParcelFileDescriptor;
    .local v4, "fd":Landroid/os/ParcelFileDescriptor;
    const/4 v5, 0x1

    :try_start_6
    monitor-exit p0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_4

    .line 14980
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    if-eqz v4, :cond_2

    .line 14982
    :try_start_7
    invoke-virtual {v4}, Landroid/os/ParcelFileDescriptor;->close()V
    :try_end_7
    .catch Ljava/io/IOException; {:try_start_7 .. :try_end_7} :catch_0

    .line 14984
    goto :goto_1

    .line 14983
    :catch_0
    move-exception v0

    .line 14975
    :cond_2
    :goto_1
    return v5

    .line 14951
    .end local v4    # "fd":Landroid/os/ParcelFileDescriptor;
    .end local v9    # "intermediateCallback":Landroid/os/RemoteCallback;
    .end local v12    # "isDebuggable":Z
    .restart local p7    # "fd":Landroid/os/ParcelFileDescriptor;
    :cond_3
    move-object/from16 v13, p8

    goto :goto_2

    .end local v3    # "thread":Landroid/app/IApplicationThread;
    :cond_4
    move-object/from16 v13, p8

    .line 14952
    :goto_2
    :try_start_8
    new-instance v0, Ljava/lang/IllegalArgumentException;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Unknown process: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v0, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "process":Ljava/lang/String;
    .end local p2    # "userId":I
    .end local p3    # "managed":Z
    .end local p4    # "mallocInfo":Z
    .end local p5    # "runGc":Z
    .end local p6    # "path":Ljava/lang/String;
    .end local p7    # "fd":Landroid/os/ParcelFileDescriptor;
    .end local p8    # "finishCallback":Landroid/os/RemoteCallback;
    throw v0
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_1

    .line 14976
    .end local v11    # "proc":Lcom/android/server/am/ProcessRecord;
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "process":Ljava/lang/String;
    .restart local p2    # "userId":I
    .restart local p3    # "managed":Z
    .restart local p4    # "mallocInfo":Z
    .restart local p5    # "runGc":Z
    .restart local p6    # "path":Ljava/lang/String;
    .restart local p7    # "fd":Landroid/os/ParcelFileDescriptor;
    .restart local p8    # "finishCallback":Landroid/os/RemoteCallback;
    :catchall_1
    move-exception v0

    goto :goto_4

    :catchall_2
    move-exception v0

    goto :goto_3

    :catchall_3
    move-exception v0

    move/from16 v10, p2

    :goto_3
    move-object/from16 v13, p8

    :goto_4
    move-object/from16 v4, p7

    .end local p7    # "fd":Landroid/os/ParcelFileDescriptor;
    .restart local v4    # "fd":Landroid/os/ParcelFileDescriptor;
    :goto_5
    :try_start_9
    monitor-exit p0
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_4

    :try_start_a
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .end local v4    # "fd":Landroid/os/ParcelFileDescriptor;
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "process":Ljava/lang/String;
    .end local p2    # "userId":I
    .end local p3    # "managed":Z
    .end local p4    # "mallocInfo":Z
    .end local p5    # "runGc":Z
    .end local p6    # "path":Ljava/lang/String;
    .end local p8    # "finishCallback":Landroid/os/RemoteCallback;
    throw v0
    :try_end_a
    .catch Landroid/os/RemoteException; {:try_start_a .. :try_end_a} :catch_1
    .catchall {:try_start_a .. :try_end_a} :catchall_7

    .line 14977
    .restart local v4    # "fd":Landroid/os/ParcelFileDescriptor;
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "process":Ljava/lang/String;
    .restart local p2    # "userId":I
    .restart local p3    # "managed":Z
    .restart local p4    # "mallocInfo":Z
    .restart local p5    # "runGc":Z
    .restart local p6    # "path":Ljava/lang/String;
    .restart local p8    # "finishCallback":Landroid/os/RemoteCallback;
    :catch_1
    move-exception v0

    goto :goto_7

    .line 14976
    :catchall_4
    move-exception v0

    goto :goto_5

    .line 14945
    .end local v4    # "fd":Landroid/os/ParcelFileDescriptor;
    .restart local p7    # "fd":Landroid/os/ParcelFileDescriptor;
    :cond_5
    move/from16 v10, p2

    move-object/from16 v13, p8

    :try_start_b
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v3, "null fd"

    invoke-direct {v0, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "process":Ljava/lang/String;
    .end local p2    # "userId":I
    .end local p3    # "managed":Z
    .end local p4    # "mallocInfo":Z
    .end local p5    # "runGc":Z
    .end local p6    # "path":Ljava/lang/String;
    .end local p7    # "fd":Landroid/os/ParcelFileDescriptor;
    .end local p8    # "finishCallback":Landroid/os/RemoteCallback;
    throw v0

    .line 14940
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "process":Ljava/lang/String;
    .restart local p2    # "userId":I
    .restart local p3    # "managed":Z
    .restart local p4    # "mallocInfo":Z
    .restart local p5    # "runGc":Z
    .restart local p6    # "path":Ljava/lang/String;
    .restart local p7    # "fd":Landroid/os/ParcelFileDescriptor;
    .restart local p8    # "finishCallback":Landroid/os/RemoteCallback;
    :cond_6
    move/from16 v10, p2

    move-object/from16 v13, p8

    new-instance v0, Ljava/lang/SecurityException;

    const-string v3, "Requires permission android.permission.SET_ACTIVITY_WATCHER"

    invoke-direct {v0, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "process":Ljava/lang/String;
    .end local p2    # "userId":I
    .end local p3    # "managed":Z
    .end local p4    # "mallocInfo":Z
    .end local p5    # "runGc":Z
    .end local p6    # "path":Ljava/lang/String;
    .end local p7    # "fd":Landroid/os/ParcelFileDescriptor;
    .end local p8    # "finishCallback":Landroid/os/RemoteCallback;
    throw v0
    :try_end_b
    .catch Landroid/os/RemoteException; {:try_start_b .. :try_end_b} :catch_2
    .catchall {:try_start_b .. :try_end_b} :catchall_5

    .line 14980
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "process":Ljava/lang/String;
    .restart local p2    # "userId":I
    .restart local p3    # "managed":Z
    .restart local p4    # "mallocInfo":Z
    .restart local p5    # "runGc":Z
    .restart local p6    # "path":Ljava/lang/String;
    .restart local p7    # "fd":Landroid/os/ParcelFileDescriptor;
    .restart local p8    # "finishCallback":Landroid/os/RemoteCallback;
    :catchall_5
    move-exception v0

    move-object/from16 v4, p7

    move-object v3, v0

    goto :goto_8

    .line 14977
    :catch_2
    move-exception v0

    goto :goto_6

    .line 14980
    :catchall_6
    move-exception v0

    move/from16 v10, p2

    move-object/from16 v13, p8

    move-object/from16 v4, p7

    move-object v3, v0

    goto :goto_8

    .line 14977
    :catch_3
    move-exception v0

    move/from16 v10, p2

    move-object/from16 v13, p8

    :goto_6
    move-object/from16 v4, p7

    .line 14978
    .end local p7    # "fd":Landroid/os/ParcelFileDescriptor;
    .local v0, "e":Landroid/os/RemoteException;
    .restart local v4    # "fd":Landroid/os/ParcelFileDescriptor;
    :goto_7
    :try_start_c
    new-instance v3, Ljava/lang/IllegalStateException;

    const-string v5, "Process disappeared"

    invoke-direct {v3, v5}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    .end local v4    # "fd":Landroid/os/ParcelFileDescriptor;
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "process":Ljava/lang/String;
    .end local p2    # "userId":I
    .end local p3    # "managed":Z
    .end local p4    # "mallocInfo":Z
    .end local p5    # "runGc":Z
    .end local p6    # "path":Ljava/lang/String;
    .end local p8    # "finishCallback":Landroid/os/RemoteCallback;
    throw v3
    :try_end_c
    .catchall {:try_start_c .. :try_end_c} :catchall_7

    .line 14980
    .end local v0    # "e":Landroid/os/RemoteException;
    .restart local v4    # "fd":Landroid/os/ParcelFileDescriptor;
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "process":Ljava/lang/String;
    .restart local p2    # "userId":I
    .restart local p3    # "managed":Z
    .restart local p4    # "mallocInfo":Z
    .restart local p5    # "runGc":Z
    .restart local p6    # "path":Ljava/lang/String;
    .restart local p8    # "finishCallback":Landroid/os/RemoteCallback;
    :catchall_7
    move-exception v0

    move-object v3, v0

    :goto_8
    if-eqz v4, :cond_7

    .line 14982
    :try_start_d
    invoke-virtual {v4}, Landroid/os/ParcelFileDescriptor;->close()V
    :try_end_d
    .catch Ljava/io/IOException; {:try_start_d .. :try_end_d} :catch_4

    .line 14984
    goto :goto_9

    .line 14983
    :catch_4
    move-exception v0

    .line 14986
    :cond_7
    :goto_9
    throw v3
.end method

.method public dumpHeapFinished(Ljava/lang/String;)V
    .locals 2
    .param p1, "path"    # Ljava/lang/String;

    .line 15019
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    invoke-virtual {v0, p1, v1}, Lcom/android/server/am/AppProfiler;->dumpHeapFinished(Ljava/lang/String;I)V

    .line 15020
    return-void
.end method

.method dumpLmkLocked(Ljava/io/PrintWriter;)Z
    .locals 4
    .param p1, "pw"    # Ljava/io/PrintWriter;

    .line 9697
    const-string v0, "ACTIVITY MANAGER LMK KILLS (dumpsys activity lmk)"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 9698
    const/16 v0, 0x3e9

    invoke-static {v0, v0}, Lcom/android/server/am/ProcessList;->getLmkdKillCount(II)Ljava/lang/Integer;

    move-result-object v0

    .line 9700
    .local v0, "cnt":Ljava/lang/Integer;
    const/4 v1, 0x0

    if-nez v0, :cond_0

    .line 9701
    return v1

    .line 9703
    :cond_0
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "  Total number of kills: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 9705
    const/16 v2, 0x3e7

    invoke-direct {p0, p1, v2}, Lcom/android/server/am/ActivityManagerService;->reportLmkKillAtOrBelow(Ljava/io/PrintWriter;I)Z

    move-result v2

    if-eqz v2, :cond_1

    const/16 v2, 0x384

    .line 9706
    invoke-direct {p0, p1, v2}, Lcom/android/server/am/ActivityManagerService;->reportLmkKillAtOrBelow(Ljava/io/PrintWriter;I)Z

    move-result v2

    if-eqz v2, :cond_1

    const/16 v2, 0x320

    .line 9707
    invoke-direct {p0, p1, v2}, Lcom/android/server/am/ActivityManagerService;->reportLmkKillAtOrBelow(Ljava/io/PrintWriter;I)Z

    move-result v2

    if-eqz v2, :cond_1

    const/16 v2, 0x2bc

    .line 9708
    invoke-direct {p0, p1, v2}, Lcom/android/server/am/ActivityManagerService;->reportLmkKillAtOrBelow(Ljava/io/PrintWriter;I)Z

    move-result v2

    if-eqz v2, :cond_1

    const/16 v2, 0x258

    .line 9709
    invoke-direct {p0, p1, v2}, Lcom/android/server/am/ActivityManagerService;->reportLmkKillAtOrBelow(Ljava/io/PrintWriter;I)Z

    move-result v2

    if-eqz v2, :cond_1

    const/16 v2, 0x1f4

    .line 9710
    invoke-direct {p0, p1, v2}, Lcom/android/server/am/ActivityManagerService;->reportLmkKillAtOrBelow(Ljava/io/PrintWriter;I)Z

    move-result v2

    if-eqz v2, :cond_1

    const/16 v2, 0x190

    .line 9711
    invoke-direct {p0, p1, v2}, Lcom/android/server/am/ActivityManagerService;->reportLmkKillAtOrBelow(Ljava/io/PrintWriter;I)Z

    move-result v2

    if-eqz v2, :cond_1

    const/16 v2, 0x12c

    .line 9712
    invoke-direct {p0, p1, v2}, Lcom/android/server/am/ActivityManagerService;->reportLmkKillAtOrBelow(Ljava/io/PrintWriter;I)Z

    move-result v2

    if-eqz v2, :cond_1

    const/16 v2, 0xfa

    .line 9713
    invoke-direct {p0, p1, v2}, Lcom/android/server/am/ActivityManagerService;->reportLmkKillAtOrBelow(Ljava/io/PrintWriter;I)Z

    move-result v2

    if-eqz v2, :cond_1

    const/16 v2, 0xc8

    .line 9714
    invoke-direct {p0, p1, v2}, Lcom/android/server/am/ActivityManagerService;->reportLmkKillAtOrBelow(Ljava/io/PrintWriter;I)Z

    move-result v2

    if-eqz v2, :cond_1

    const/16 v2, 0x64

    .line 9715
    invoke-direct {p0, p1, v2}, Lcom/android/server/am/ActivityManagerService;->reportLmkKillAtOrBelow(Ljava/io/PrintWriter;I)Z

    move-result v2

    if-eqz v2, :cond_1

    .line 9716
    invoke-direct {p0, p1, v1}, Lcom/android/server/am/ActivityManagerService;->reportLmkKillAtOrBelow(Ljava/io/PrintWriter;I)Z

    move-result v2

    if-eqz v2, :cond_1

    const/4 v1, 0x1

    goto :goto_0

    :cond_1
    nop

    .line 9705
    :goto_0
    return v1
.end method

.method dumpOtherProcessesInfoLSP(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;ZLjava/lang/String;IIZ)V
    .locals 18
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "dumpAll"    # Z
    .param p4, "dumpPackage"    # Ljava/lang/String;
    .param p5, "dumpAppId"    # I
    .param p6, "numPers"    # I
    .param p7, "needSep"    # Z

    .line 9308
    move-object/from16 v8, p0

    move-object/from16 v15, p2

    move-object/from16 v14, p4

    if-nez p3, :cond_1

    if-eqz v14, :cond_0

    goto :goto_0

    :cond_0
    move/from16 v3, p7

    goto/16 :goto_6

    .line 9309
    :cond_1
    :goto_0
    new-instance v0, Landroid/util/SparseArray;

    invoke-direct {v0}, Landroid/util/SparseArray;-><init>()V

    move-object v1, v0

    .line 9310
    .local v1, "pidToProcess":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    iget-object v2, v8, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    monitor-enter v2

    .line 9311
    const/4 v0, 0x0

    .line 9312
    .local v0, "printed":Z
    const/4 v3, 0x0

    .local v3, "i":I
    :try_start_0
    iget-object v4, v8, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-virtual {v4}, Lcom/android/server/am/ActivityManagerService$PidMap;->size()I

    move-result v4
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_6

    move v5, v3

    move/from16 v3, p7

    .end local p7    # "needSep":Z
    .local v3, "needSep":Z
    .local v4, "size":I
    .local v5, "i":I
    :goto_1
    if-ge v5, v4, :cond_5

    .line 9313
    :try_start_1
    iget-object v6, v8, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-virtual {v6, v5}, Lcom/android/server/am/ActivityManagerService$PidMap;->valueAt(I)Lcom/android/server/am/ProcessRecord;

    move-result-object v6

    .line 9314
    .local v6, "r":Lcom/android/server/am/ProcessRecord;
    invoke-virtual {v6}, Lcom/android/server/am/ProcessRecord;->getPid()I

    move-result v7

    invoke-virtual {v1, v7, v6}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 9315
    if-eqz v14, :cond_2

    invoke-virtual {v6}, Lcom/android/server/am/ProcessRecord;->getPkgList()Lcom/android/server/am/PackageList;

    move-result-object v7

    invoke-virtual {v7, v14}, Lcom/android/server/am/PackageList;->containsKey(Ljava/lang/Object;)Z

    move-result v7

    if-nez v7, :cond_2

    .line 9316
    goto :goto_2

    .line 9318
    :cond_2
    if-nez v0, :cond_4

    .line 9319
    if-eqz v3, :cond_3

    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 9320
    :cond_3
    const/4 v3, 0x1

    .line 9321
    const-string v7, "  PID mappings:"

    invoke-virtual {v15, v7}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 9322
    const/4 v0, 0x1

    .line 9324
    :cond_4
    const-string v7, "    PID #"

    invoke-virtual {v15, v7}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v7, v8, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-virtual {v7, v5}, Lcom/android/server/am/ActivityManagerService$PidMap;->keyAt(I)I

    move-result v7

    invoke-virtual {v15, v7}, Ljava/io/PrintWriter;->print(I)V

    .line 9325
    const-string v7, ": "

    invoke-virtual {v15, v7}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v7, v8, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-virtual {v7, v5}, Lcom/android/server/am/ActivityManagerService$PidMap;->valueAt(I)Lcom/android/server/am/ProcessRecord;

    move-result-object v7

    invoke-virtual {v15, v7}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 9312
    .end local v6    # "r":Lcom/android/server/am/ProcessRecord;
    :goto_2
    add-int/lit8 v5, v5, 0x1

    goto :goto_1

    .line 9327
    .end local v0    # "printed":Z
    .end local v4    # "size":I
    .end local v5    # "i":I
    :cond_5
    monitor-exit v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_5

    .line 9329
    sget-object v4, Lcom/android/server/am/ActivityManagerService;->sActiveProcessInfoSelfLocked:Landroid/util/SparseArray;

    monitor-enter v4

    .line 9330
    const/4 v0, 0x0

    .line 9331
    .restart local v0    # "printed":Z
    const/4 v2, 0x0

    .local v2, "i":I
    :try_start_2
    invoke-virtual {v4}, Landroid/util/SparseArray;->size()I

    move-result v5

    .local v5, "size":I
    :goto_3
    if-ge v2, v5, :cond_a

    .line 9332
    sget-object v6, Lcom/android/server/am/ActivityManagerService;->sActiveProcessInfoSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v6, v2}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Landroid/content/pm/ProcessInfo;

    .line 9333
    .local v7, "info":Landroid/content/pm/ProcessInfo;
    invoke-virtual {v6, v2}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v9

    invoke-virtual {v1, v9}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/android/server/am/ProcessRecord;

    .line 9334
    .local v9, "r":Lcom/android/server/am/ProcessRecord;
    if-eqz v9, :cond_6

    if-eqz v14, :cond_6

    .line 9335
    invoke-virtual {v9}, Lcom/android/server/am/ProcessRecord;->getPkgList()Lcom/android/server/am/PackageList;

    move-result-object v10

    invoke-virtual {v10, v14}, Lcom/android/server/am/PackageList;->containsKey(Ljava/lang/Object;)Z

    move-result v10

    if-nez v10, :cond_6

    .line 9336
    goto :goto_5

    .line 9338
    :cond_6
    if-nez v0, :cond_8

    .line 9339
    if-eqz v3, :cond_7

    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 9340
    :cond_7
    const/4 v3, 0x1

    .line 9341
    const-string v10, "  Active process infos:"

    invoke-virtual {v15, v10}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 9342
    const/4 v0, 0x1

    .line 9344
    :cond_8
    const-string v10, "    Pinfo PID #"

    invoke-virtual {v15, v10}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {v6, v2}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v6

    invoke-virtual {v15, v6}, Ljava/io/PrintWriter;->print(I)V

    .line 9345
    const-string v6, ":"

    invoke-virtual {v15, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 9346
    const-string v6, "      name="

    invoke-virtual {v15, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v6, v7, Landroid/content/pm/ProcessInfo;->name:Ljava/lang/String;

    invoke-virtual {v15, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 9347
    iget-object v6, v7, Landroid/content/pm/ProcessInfo;->deniedPermissions:Landroid/util/ArraySet;

    if-eqz v6, :cond_9

    .line 9348
    const/4 v6, 0x0

    .local v6, "j":I
    :goto_4
    iget-object v10, v7, Landroid/content/pm/ProcessInfo;->deniedPermissions:Landroid/util/ArraySet;

    invoke-virtual {v10}, Landroid/util/ArraySet;->size()I

    move-result v10

    if-ge v6, v10, :cond_9

    .line 9349
    const-string v10, "      deny: "

    invoke-virtual {v15, v10}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 9350
    iget-object v10, v7, Landroid/content/pm/ProcessInfo;->deniedPermissions:Landroid/util/ArraySet;

    invoke-virtual {v10, v2}, Landroid/util/ArraySet;->valueAt(I)Ljava/lang/Object;

    move-result-object v10

    check-cast v10, Ljava/lang/String;

    invoke-virtual {v15, v10}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 9348
    add-int/lit8 v6, v6, 0x1

    goto :goto_4

    .line 9331
    .end local v6    # "j":I
    .end local v7    # "info":Landroid/content/pm/ProcessInfo;
    .end local v9    # "r":Lcom/android/server/am/ProcessRecord;
    :cond_9
    :goto_5
    add-int/lit8 v2, v2, 0x1

    goto :goto_3

    .line 9354
    .end local v0    # "printed":Z
    .end local v2    # "i":I
    .end local v5    # "size":I
    :cond_a
    monitor-exit v4
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_3

    .line 9357
    .end local v1    # "pidToProcess":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    :goto_6
    if-eqz p3, :cond_b

    .line 9358
    iget-object v0, v8, Lcom/android/server/am/ActivityManagerService;->mPhantomProcessList:Lcom/android/server/am/PhantomProcessList;

    const-string v1, "  "

    invoke-virtual {v0, v15, v1}, Lcom/android/server/am/PhantomProcessList;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 9361
    :cond_b
    iget-object v0, v8, Lcom/android/server/am/ActivityManagerService;->mImportantProcesses:Landroid/util/SparseArray;

    invoke-virtual {v0}, Landroid/util/SparseArray;->size()I

    move-result v0

    if-lez v0, :cond_11

    .line 9362
    iget-object v1, v8, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    monitor-enter v1

    .line 9363
    const/4 v0, 0x0

    .line 9364
    .restart local v0    # "printed":Z
    const/4 v2, 0x0

    .restart local v2    # "i":I
    :try_start_3
    iget-object v4, v8, Lcom/android/server/am/ActivityManagerService;->mImportantProcesses:Landroid/util/SparseArray;

    invoke-virtual {v4}, Landroid/util/SparseArray;->size()I

    move-result v4

    .restart local v4    # "size":I
    :goto_7
    if-ge v2, v4, :cond_10

    .line 9365
    iget-object v5, v8, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    iget-object v6, v8, Lcom/android/server/am/ActivityManagerService;->mImportantProcesses:Landroid/util/SparseArray;

    invoke-virtual {v6, v2}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/am/ActivityManagerService$ImportanceToken;

    iget v6, v6, Lcom/android/server/am/ActivityManagerService$ImportanceToken;->pid:I

    invoke-virtual {v5, v6}, Lcom/android/server/am/ActivityManagerService$PidMap;->get(I)Lcom/android/server/am/ProcessRecord;

    move-result-object v5

    .line 9366
    .local v5, "r":Lcom/android/server/am/ProcessRecord;
    if-eqz v14, :cond_c

    if-eqz v5, :cond_f

    .line 9367
    invoke-virtual {v5}, Lcom/android/server/am/ProcessRecord;->getPkgList()Lcom/android/server/am/PackageList;

    move-result-object v6

    invoke-virtual {v6, v14}, Lcom/android/server/am/PackageList;->containsKey(Ljava/lang/Object;)Z

    move-result v6

    if-nez v6, :cond_c

    .line 9368
    goto :goto_8

    .line 9370
    :cond_c
    if-nez v0, :cond_e

    .line 9371
    if-eqz v3, :cond_d

    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 9372
    :cond_d
    const/4 v3, 0x1

    .line 9373
    const-string v6, "  Foreground Processes:"

    invoke-virtual {v15, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 9374
    const/4 v0, 0x1

    .line 9376
    :cond_e
    const-string v6, "    PID #"

    invoke-virtual {v15, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v6, v8, Lcom/android/server/am/ActivityManagerService;->mImportantProcesses:Landroid/util/SparseArray;

    invoke-virtual {v6, v2}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v6

    invoke-virtual {v15, v6}, Ljava/io/PrintWriter;->print(I)V

    .line 9377
    const-string v6, ": "

    invoke-virtual {v15, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v6, v8, Lcom/android/server/am/ActivityManagerService;->mImportantProcesses:Landroid/util/SparseArray;

    invoke-virtual {v6, v2}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v6

    invoke-virtual {v15, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 9364
    .end local v5    # "r":Lcom/android/server/am/ProcessRecord;
    :cond_f
    :goto_8
    add-int/lit8 v2, v2, 0x1

    goto :goto_7

    .line 9379
    .end local v0    # "printed":Z
    .end local v2    # "i":I
    .end local v4    # "size":I
    :cond_10
    monitor-exit v1

    goto :goto_9

    :catchall_0
    move-exception v0

    monitor-exit v1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    throw v0

    .line 9382
    :cond_11
    :goto_9
    iget-object v0, v8, Lcom/android/server/am/ActivityManagerService;->mPersistentStartingProcesses:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    if-lez v0, :cond_13

    .line 9383
    if-eqz v3, :cond_12

    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 9384
    :cond_12
    const/4 v0, 0x1

    .line 9385
    .end local v3    # "needSep":Z
    .local v0, "needSep":Z
    const-string v1, "  Persisent processes that are starting:"

    invoke-virtual {v15, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 9386
    iget-object v3, v8, Lcom/android/server/am/ActivityManagerService;->mPersistentStartingProcesses:Ljava/util/ArrayList;

    const-string v4, "    "

    const-string v5, "Starting Norm"

    const-string v6, "Restarting PERS"

    move-object/from16 v1, p2

    move-object/from16 v2, p0

    move-object/from16 v7, p4

    invoke-static/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->dumpProcessList(Ljava/io/PrintWriter;Lcom/android/server/am/ActivityManagerService;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I

    move v3, v0

    .line 9390
    .end local v0    # "needSep":Z
    .restart local v3    # "needSep":Z
    :cond_13
    iget-object v0, v8, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    iget-object v0, v0, Lcom/android/server/am/ProcessList;->mRemovedProcesses:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    if-lez v0, :cond_15

    .line 9391
    if-eqz v3, :cond_14

    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 9392
    :cond_14
    const/4 v0, 0x1

    .line 9393
    .end local v3    # "needSep":Z
    .restart local v0    # "needSep":Z
    const-string v1, "  Processes that are being removed:"

    invoke-virtual {v15, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 9394
    iget-object v1, v8, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    iget-object v3, v1, Lcom/android/server/am/ProcessList;->mRemovedProcesses:Ljava/util/ArrayList;

    const-string v4, "    "

    const-string v5, "Removed Norm"

    const-string v6, "Removed PERS"

    move-object/from16 v1, p2

    move-object/from16 v2, p0

    move-object/from16 v7, p4

    invoke-static/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->dumpProcessList(Ljava/io/PrintWriter;Lcom/android/server/am/ActivityManagerService;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I

    move v3, v0

    .line 9398
    .end local v0    # "needSep":Z
    .restart local v3    # "needSep":Z
    :cond_15
    iget-object v0, v8, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    if-lez v0, :cond_17

    .line 9399
    if-eqz v3, :cond_16

    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 9400
    :cond_16
    const/4 v0, 0x1

    .line 9401
    .end local v3    # "needSep":Z
    .restart local v0    # "needSep":Z
    const-string v1, "  Processes that are on old until the system is ready:"

    invoke-virtual {v15, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 9402
    iget-object v3, v8, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;

    const-string v4, "    "

    const-string v5, "OnHold Norm"

    const-string v6, "OnHold PERS"

    move-object/from16 v1, p2

    move-object/from16 v2, p0

    move-object/from16 v7, p4

    invoke-static/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->dumpProcessList(Ljava/io/PrintWriter;Lcom/android/server/am/ActivityManagerService;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I

    move v3, v0

    .line 9406
    .end local v0    # "needSep":Z
    .restart local v3    # "needSep":Z
    :cond_17
    iget-object v0, v8, Lcom/android/server/am/ActivityManagerService;->mAppErrors:Lcom/android/server/am/AppErrors;

    move-object/from16 v7, p1

    invoke-virtual {v0, v7, v15, v3, v14}, Lcom/android/server/am/AppErrors;->dumpLPr(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;ZLjava/lang/String;)Z

    move-result v0

    .line 9408
    .end local v3    # "needSep":Z
    .restart local v0    # "needSep":Z
    iget-object v9, v8, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    iget-object v1, v8, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    .line 9409
    invoke-virtual {v1}, Lcom/android/server/am/AppProfiler;->getTestPssMode()Z

    move-result v16

    iget-object v1, v8, Lcom/android/server/am/ActivityManagerService;->mWakefulness:Ljava/util/concurrent/atomic/AtomicInteger;

    invoke-virtual {v1}, Ljava/util/concurrent/atomic/AtomicInteger;->get()I

    move-result v17

    .line 9408
    move-object/from16 v10, p1

    move-object/from16 v11, p2

    move/from16 v12, p3

    move-object/from16 v13, p4

    move-object v5, v14

    move/from16 v14, p5

    move-object v6, v15

    move v15, v0

    invoke-virtual/range {v9 .. v17}, Lcom/android/server/wm/ActivityTaskManagerInternal;->dumpForProcesses(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;ZLjava/lang/String;IZZI)Z

    move-result v0

    .line 9411
    if-eqz p3, :cond_19

    iget-object v1, v8, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    iget-object v1, v1, Lcom/android/server/am/ProcessList;->mPendingStarts:Landroid/util/LongSparseArray;

    invoke-virtual {v1}, Landroid/util/LongSparseArray;->size()I

    move-result v1

    if-lez v1, :cond_19

    .line 9412
    if-eqz v0, :cond_18

    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 9413
    :cond_18
    const/4 v0, 0x1

    .line 9414
    const-string v1, "  mPendingStarts: "

    invoke-virtual {v6, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 9415
    const/4 v1, 0x0

    .local v1, "i":I
    iget-object v2, v8, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    iget-object v2, v2, Lcom/android/server/am/ProcessList;->mPendingStarts:Landroid/util/LongSparseArray;

    invoke-virtual {v2}, Landroid/util/LongSparseArray;->size()I

    move-result v2

    .local v2, "len":I
    :goto_a
    if-ge v1, v2, :cond_19

    .line 9416
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "    "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v4, v8, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    iget-object v4, v4, Lcom/android/server/am/ProcessList;->mPendingStarts:Landroid/util/LongSparseArray;

    invoke-virtual {v4, v1}, Landroid/util/LongSparseArray;->keyAt(I)J

    move-result-wide v9

    invoke-virtual {v3, v9, v10}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string v4, ": "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v4, v8, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    iget-object v4, v4, Lcom/android/server/am/ProcessList;->mPendingStarts:Landroid/util/LongSparseArray;

    .line 9417
    invoke-virtual {v4, v1}, Landroid/util/LongSparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v4

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    .line 9416
    invoke-virtual {v6, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 9415
    add-int/lit8 v1, v1, 0x1

    goto :goto_a

    .line 9420
    .end local v1    # "i":I
    .end local v2    # "len":I
    :cond_19
    if-eqz p3, :cond_1b

    .line 9421
    iget-object v1, v8, Lcom/android/server/am/ActivityManagerService;->mUidObserverController:Lcom/android/server/am/UidObserverController;

    invoke-virtual {v1, v6, v5}, Lcom/android/server/am/UidObserverController;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 9423
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "  mDeviceIdleAllowlist="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, v8, Lcom/android/server/am/ActivityManagerService;->mDeviceIdleAllowlist:[I

    invoke-static {v2}, Ljava/util/Arrays;->toString([I)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v6, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 9424
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "  mDeviceIdleExceptIdleAllowlist="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, v8, Lcom/android/server/am/ActivityManagerService;->mDeviceIdleExceptIdleAllowlist:[I

    .line 9425
    invoke-static {v2}, Ljava/util/Arrays;->toString([I)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    .line 9424
    invoke-virtual {v6, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 9426
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "  mDeviceIdleTempAllowlist="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, v8, Lcom/android/server/am/ActivityManagerService;->mDeviceIdleTempAllowlist:[I

    invoke-static {v2}, Ljava/util/Arrays;->toString([I)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v6, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 9427
    iget-object v1, v8, Lcom/android/server/am/ActivityManagerService;->mPendingTempAllowlist:Lcom/android/server/am/PendingTempAllowlists;

    invoke-virtual {v1}, Lcom/android/server/am/PendingTempAllowlists;->size()I

    move-result v1

    if-lez v1, :cond_1a

    .line 9428
    const-string v1, "  mPendingTempAllowlist:"

    invoke-virtual {v6, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 9429
    const/4 v1, 0x0

    .restart local v1    # "i":I
    iget-object v2, v8, Lcom/android/server/am/ActivityManagerService;->mPendingTempAllowlist:Lcom/android/server/am/PendingTempAllowlists;

    invoke-virtual {v2}, Lcom/android/server/am/PendingTempAllowlists;->size()I

    move-result v2

    .local v2, "size":I
    :goto_b
    if-ge v1, v2, :cond_1a

    .line 9430
    iget-object v3, v8, Lcom/android/server/am/ActivityManagerService;->mPendingTempAllowlist:Lcom/android/server/am/PendingTempAllowlists;

    invoke-virtual {v3, v1}, Lcom/android/server/am/PendingTempAllowlists;->valueAt(I)Lcom/android/server/am/ActivityManagerService$PendingTempAllowlist;

    move-result-object v3

    .line 9431
    .local v3, "ptw":Lcom/android/server/am/ActivityManagerService$PendingTempAllowlist;
    const-string v4, "    "

    invoke-virtual {v6, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 9432
    iget v4, v3, Lcom/android/server/am/ActivityManagerService$PendingTempAllowlist;->targetUid:I

    invoke-static {v6, v4}, Landroid/os/UserHandle;->formatUid(Ljava/io/PrintWriter;I)V

    .line 9433
    const-string v4, ": "

    invoke-virtual {v6, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 9434
    iget-wide v9, v3, Lcom/android/server/am/ActivityManagerService$PendingTempAllowlist;->duration:J

    invoke-static {v9, v10, v6}, Landroid/util/TimeUtils;->formatDuration(JLjava/io/PrintWriter;)V

    .line 9435
    const-string v4, " "

    invoke-virtual {v6, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 9436
    iget-object v4, v3, Lcom/android/server/am/ActivityManagerService$PendingTempAllowlist;->tag:Ljava/lang/String;

    invoke-virtual {v6, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 9437
    const-string v4, " "

    invoke-virtual {v6, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 9438
    iget v4, v3, Lcom/android/server/am/ActivityManagerService$PendingTempAllowlist;->type:I

    invoke-virtual {v6, v4}, Ljava/io/PrintWriter;->print(I)V

    .line 9439
    const-string v4, " "

    invoke-virtual {v6, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 9440
    iget v4, v3, Lcom/android/server/am/ActivityManagerService$PendingTempAllowlist;->reasonCode:I

    invoke-virtual {v6, v4}, Ljava/io/PrintWriter;->print(I)V

    .line 9441
    const-string v4, " "

    invoke-virtual {v6, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 9442
    iget v4, v3, Lcom/android/server/am/ActivityManagerService$PendingTempAllowlist;->callingUid:I

    invoke-virtual {v6, v4}, Ljava/io/PrintWriter;->print(I)V

    .line 9429
    .end local v3    # "ptw":Lcom/android/server/am/ActivityManagerService$PendingTempAllowlist;
    add-int/lit8 v1, v1, 0x1

    goto :goto_b

    .line 9445
    .end local v1    # "i":I
    .end local v2    # "size":I
    :cond_1a
    const-string v1, "  mFgsStartTempAllowList:"

    invoke-virtual {v6, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 9446
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v9

    .line 9447
    .local v9, "currentTimeNow":J
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v11

    .line 9448
    .local v11, "elapsedRealtimeNow":J
    iget-object v13, v8, Lcom/android/server/am/ActivityManagerService;->mFgsStartTempAllowList:Lcom/android/server/am/FgsTempAllowList;

    new-instance v14, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda18;

    move-object v1, v14

    move-object/from16 v2, p2

    move-wide v3, v9

    move-object v7, v5

    move-object v15, v6

    move-wide v5, v11

    invoke-direct/range {v1 .. v6}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda18;-><init>(Ljava/io/PrintWriter;JJ)V

    invoke-virtual {v13, v14}, Lcom/android/server/am/FgsTempAllowList;->forEach(Ljava/util/function/BiConsumer;)V

    goto :goto_c

    .line 9420
    .end local v9    # "currentTimeNow":J
    .end local v11    # "elapsedRealtimeNow":J
    :cond_1b
    move-object v7, v5

    move-object v15, v6

    .line 9460
    :goto_c
    iget-object v1, v8, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;

    if-nez v1, :cond_1c

    iget-object v2, v8, Lcom/android/server/am/ActivityManagerService;->mOrigDebugApp:Ljava/lang/String;

    if-nez v2, :cond_1c

    iget-boolean v2, v8, Lcom/android/server/am/ActivityManagerService;->mDebugTransient:Z

    if-nez v2, :cond_1c

    iget-boolean v2, v8, Lcom/android/server/am/ActivityManagerService;->mOrigWaitForDebugger:Z

    if-eqz v2, :cond_1d

    .line 9462
    :cond_1c
    if-eqz v7, :cond_1e

    invoke-virtual {v7, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_1e

    iget-object v1, v8, Lcom/android/server/am/ActivityManagerService;->mOrigDebugApp:Ljava/lang/String;

    .line 9463
    invoke-virtual {v7, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_1d

    goto :goto_d

    .line 9473
    :cond_1d
    move v1, v0

    goto :goto_e

    .line 9464
    :cond_1e
    :goto_d
    if-eqz v0, :cond_1f

    .line 9465
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 9466
    const/4 v0, 0x0

    .line 9468
    :cond_1f
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "  mDebugApp="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, v8, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "/orig="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, v8, Lcom/android/server/am/ActivityManagerService;->mOrigDebugApp:Ljava/lang/String;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, " mDebugTransient="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-boolean v2, v8, Lcom/android/server/am/ActivityManagerService;->mDebugTransient:Z

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    const-string v2, " mOrigWaitForDebugger="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-boolean v2, v8, Lcom/android/server/am/ActivityManagerService;->mOrigWaitForDebugger:Z

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v15, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    move v1, v0

    .line 9473
    .end local v0    # "needSep":Z
    .local v1, "needSep":Z
    :goto_e
    iget-object v0, v8, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    iget-object v2, v0, Lcom/android/server/am/AppProfiler;->mProfilerLock:Ljava/lang/Object;

    monitor-enter v2

    .line 9474
    :try_start_4
    iget-object v0, v8, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    invoke-virtual {v0, v15, v1}, Lcom/android/server/am/AppProfiler;->dumpMemWatchProcessesLPf(Ljava/io/PrintWriter;Z)Z

    move-result v0

    move v1, v0

    .line 9475
    monitor-exit v2
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 9476
    iget-object v0, v8, Lcom/android/server/am/ActivityManagerService;->mTrackAllocationApp:Ljava/lang/String;

    if-eqz v0, :cond_22

    .line 9477
    if-eqz v7, :cond_20

    invoke-virtual {v7, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_22

    .line 9478
    :cond_20
    if-eqz v1, :cond_21

    .line 9479
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 9480
    const/4 v0, 0x0

    move v1, v0

    .line 9482
    :cond_21
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "  mTrackAllocationApp="

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, v8, Lcom/android/server/am/ActivityManagerService;->mTrackAllocationApp:Ljava/lang/String;

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v15, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 9485
    :cond_22
    iget-object v0, v8, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    invoke-virtual {v0, v15, v7, v1}, Lcom/android/server/am/AppProfiler;->dumpProfileDataLocked(Ljava/io/PrintWriter;Ljava/lang/String;Z)Z

    move-result v0

    .line 9486
    .end local v1    # "needSep":Z
    .restart local v0    # "needSep":Z
    iget-object v1, v8, Lcom/android/server/am/ActivityManagerService;->mNativeDebuggingApp:Ljava/lang/String;

    if-eqz v1, :cond_25

    .line 9487
    if-eqz v7, :cond_23

    invoke-virtual {v7, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_25

    .line 9488
    :cond_23
    if-eqz v0, :cond_24

    .line 9489
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 9490
    const/4 v0, 0x0

    .line 9492
    :cond_24
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "  mNativeDebuggingApp="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, v8, Lcom/android/server/am/ActivityManagerService;->mNativeDebuggingApp:Ljava/lang/String;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v15, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 9495
    :cond_25
    if-nez v7, :cond_28

    .line 9496
    iget-boolean v1, v8, Lcom/android/server/am/ActivityManagerService;->mAlwaysFinishActivities:Z

    if-eqz v1, :cond_26

    .line 9497
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "  mAlwaysFinishActivities="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-boolean v2, v8, Lcom/android/server/am/ActivityManagerService;->mAlwaysFinishActivities:Z

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v15, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 9499
    :cond_26
    if-eqz p3, :cond_27

    .line 9500
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "  Total persistent processes: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move/from16 v5, p6

    invoke-virtual {v1, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v15, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 9501
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "  mProcessesReady="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-boolean v2, v8, Lcom/android/server/am/ActivityManagerService;->mProcessesReady:Z

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    const-string v2, " mSystemReady="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-boolean v2, v8, Lcom/android/server/am/ActivityManagerService;->mSystemReady:Z

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    const-string v2, " mBooted="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-boolean v2, v8, Lcom/android/server/am/ActivityManagerService;->mBooted:Z

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    const-string v2, " mFactoryTest="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v2, v8, Lcom/android/server/am/ActivityManagerService;->mFactoryTest:I

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v15, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 9505
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "  mBooting="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-boolean v2, v8, Lcom/android/server/am/ActivityManagerService;->mBooting:Z

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    const-string v2, " mCallFinishBooting="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-boolean v2, v8, Lcom/android/server/am/ActivityManagerService;->mCallFinishBooting:Z

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    const-string v2, " mBootAnimationComplete="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-boolean v2, v8, Lcom/android/server/am/ActivityManagerService;->mBootAnimationComplete:Z

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v15, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 9508
    const-string v1, "  mLastPowerCheckUptime="

    invoke-virtual {v15, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 9509
    iget-wide v1, v8, Lcom/android/server/am/ActivityManagerService;->mLastPowerCheckUptime:J

    invoke-static {v1, v2, v15}, Landroid/util/TimeUtils;->formatDuration(JLjava/io/PrintWriter;)V

    .line 9510
    const-string v1, ""

    invoke-virtual {v15, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 9511
    iget-object v1, v8, Lcom/android/server/am/ActivityManagerService;->mOomAdjuster:Lcom/android/server/am/OomAdjuster;

    invoke-virtual {v1, v15}, Lcom/android/server/am/OomAdjuster;->dumpSequenceNumbersLocked(Ljava/io/PrintWriter;)V

    .line 9512
    iget-object v1, v8, Lcom/android/server/am/ActivityManagerService;->mOomAdjuster:Lcom/android/server/am/OomAdjuster;

    invoke-virtual {v1, v15}, Lcom/android/server/am/OomAdjuster;->dumpProcCountsLocked(Ljava/io/PrintWriter;)V

    .line 9513
    iget-object v1, v8, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    invoke-virtual {v1, v15}, Lcom/android/server/am/AppProfiler;->dumpMemoryLevelsLocked(Ljava/io/PrintWriter;)V

    .line 9514
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v1

    .line 9515
    .local v1, "now":J
    const-string v3, "  mLastIdleTime="

    invoke-virtual {v15, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 9516
    iget-wide v3, v8, Lcom/android/server/am/ActivityManagerService;->mLastIdleTime:J

    invoke-static {v1, v2, v3, v4, v15}, Landroid/util/TimeUtils;->formatDuration(JJLjava/io/PrintWriter;)V

    .line 9517
    const-string v3, " mLowRamSinceLastIdle="

    invoke-virtual {v15, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 9518
    iget-object v3, v8, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    .line 9519
    invoke-virtual {v3, v1, v2}, Lcom/android/server/am/AppProfiler;->getLowRamTimeSinceIdleLPr(J)J

    move-result-wide v3

    .line 9518
    invoke-static {v3, v4, v15}, Landroid/util/TimeUtils;->formatDuration(JLjava/io/PrintWriter;)V

    .line 9520
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 9522
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 9523
    const-string v3, "  ServiceManager statistics:"

    invoke-virtual {v15, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 9524
    sget-object v3, Landroid/os/ServiceManager;->sStatLogger:Lcom/android/internal/util/StatLogger;

    const-string v4, "    "

    invoke-virtual {v3, v15, v4}, Lcom/android/internal/util/StatLogger;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 9525
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    goto :goto_f

    .line 9499
    .end local v1    # "now":J
    :cond_27
    move/from16 v5, p6

    goto :goto_f

    .line 9495
    :cond_28
    move/from16 v5, p6

    .line 9528
    :goto_f
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "  mForceBackgroundCheck="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-boolean v2, v8, Lcom/android/server/am/ActivityManagerService;->mForceBackgroundCheck:Z

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v15, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 9529
    return-void

    .line 9475
    .end local v0    # "needSep":Z
    .local v1, "needSep":Z
    :catchall_1
    move-exception v0

    move/from16 v5, p6

    :goto_10
    :try_start_5
    monitor-exit v2
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_2

    throw v0

    :catchall_2
    move-exception v0

    goto :goto_10

    .line 9354
    .local v1, "pidToProcess":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    .local v3, "needSep":Z
    :catchall_3
    move-exception v0

    move/from16 v5, p6

    move-object v7, v14

    :goto_11
    :try_start_6
    monitor-exit v4
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_4

    throw v0

    :catchall_4
    move-exception v0

    goto :goto_11

    .line 9327
    :catchall_5
    move-exception v0

    move/from16 v5, p6

    move-object v7, v14

    goto :goto_12

    .end local v3    # "needSep":Z
    .restart local p7    # "needSep":Z
    :catchall_6
    move-exception v0

    move/from16 v5, p6

    move-object v7, v14

    move/from16 v3, p7

    .end local p7    # "needSep":Z
    .restart local v3    # "needSep":Z
    :goto_12
    :try_start_7
    monitor-exit v2
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_7

    throw v0

    :catchall_7
    move-exception v0

    goto :goto_12
.end method

.method dumpPermissions(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V
    .locals 1
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "args"    # [Ljava/lang/String;
    .param p4, "opti"    # I
    .param p5, "dumpAll"    # Z
    .param p6, "dumpPackage"    # Ljava/lang/String;

    .line 10025
    const-string v0, "ACTIVITY MANAGER URI PERMISSIONS (dumpsys activity permissions)"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10027
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUgmInternal:Lcom/android/server/uri/UriGrantsManagerInternal;

    invoke-interface {v0, p2, p5, p6}, Lcom/android/server/uri/UriGrantsManagerInternal;->dump(Ljava/io/PrintWriter;ZLjava/lang/String;)V

    .line 10028
    return-void
.end method

.method public enableAppFreezer(Z)Z
    .locals 4
    .param p1, "enable"    # Z

    .line 17160
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 17163
    .local v0, "callerUid":I
    const/16 v1, 0x3e8

    if-eq v0, v1, :cond_1

    sget-boolean v1, Landroid/os/Build;->IS_DEBUGGABLE:Z

    if-eqz v1, :cond_0

    goto :goto_0

    .line 17166
    :cond_0
    new-instance v1, Ljava/lang/SecurityException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Caller uid "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, " cannot set freezer state "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 17164
    :cond_1
    :goto_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mOomAdjuster:Lcom/android/server/am/OomAdjuster;

    iget-object v1, v1, Lcom/android/server/am/OomAdjuster;->mCachedAppOptimizer:Lcom/android/server/am/CachedAppOptimizer;

    invoke-virtual {v1, p1}, Lcom/android/server/am/CachedAppOptimizer;->enableFreezer(Z)Z

    move-result v1

    return v1
.end method

.method public enableFgsNotificationRateLimit(Z)Z
    .locals 2
    .param p1, "enable"    # Z

    .line 17176
    const-string v0, "android.permission.WRITE_DEVICE_CONFIG"

    const-string v1, "enableFgsNotificationRateLimit"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 17178
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 17179
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v0, p1}, Lcom/android/server/am/ActiveServices;->enableFgsNotificationRateLimitLocked(Z)Z

    move-result v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v0

    .line 17180
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V
    .locals 2
    .param p1, "permission"    # Ljava/lang/String;
    .param p2, "func"    # Ljava/lang/String;

    .line 5442
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_0

    .line 5444
    return-void

    .line 5447
    :cond_0
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Permission Denial: "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, " from pid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 5448
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, ", uid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 5449
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, " requires "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 5451
    .local v0, "msg":Ljava/lang/String;
    const-string v1, "ActivityManager"

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 5452
    new-instance v1, Ljava/lang/SecurityException;

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1
.end method

.method enforceDumpPermissionForPackage(Ljava/lang/String;IILjava/lang/String;)I
    .locals 5
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "userId"    # I
    .param p3, "callingUid"    # I
    .param p4, "function"    # Ljava/lang/String;

    .line 8526
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 8527
    .local v0, "identity":J
    const/4 v2, -0x1

    .line 8529
    .local v2, "uid":I
    :try_start_0
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mPackageManagerInt:Landroid/content/pm/PackageManagerInternal;

    const/high16 v4, 0xc0000

    invoke-virtual {v3, p1, v4, p2}, Landroid/content/pm/PackageManagerInternal;->getPackageUid(Ljava/lang/String;II)I

    move-result v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move v2, v3

    .line 8532
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8533
    nop

    .line 8535
    invoke-static {v2}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v3

    invoke-static {p3}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v4

    if-eq v3, v4, :cond_0

    .line 8538
    const-string v3, "android.permission.DUMP"

    invoke-virtual {p0, v3, p4}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 8540
    :cond_0
    return v2

    .line 8532
    :catchall_0
    move-exception v3

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8533
    throw v3
.end method

.method enforceNotIsolatedCaller(Ljava/lang/String;)V
    .locals 3
    .param p1, "caller"    # Ljava/lang/String;

    .line 2780
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    invoke-static {v0}, Landroid/os/UserHandle;->isIsolated(I)Z

    move-result v0

    if-nez v0, :cond_0

    .line 2783
    return-void

    .line 2781
    :cond_0
    new-instance v0, Ljava/lang/SecurityException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Isolated process not allowed to call "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method enforcePermission(Ljava/lang/String;IILjava/lang/String;)V
    .locals 2
    .param p1, "permission"    # Ljava/lang/String;
    .param p2, "pid"    # I
    .param p3, "uid"    # I
    .param p4, "func"    # Ljava/lang/String;

    .line 5459
    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/am/ActivityManagerService;->checkPermission(Ljava/lang/String;II)I

    move-result v0

    if-nez v0, :cond_0

    .line 5460
    return-void

    .line 5463
    :cond_0
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Permission Denial: "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, " from pid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, ", uid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, " requires "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 5465
    .local v0, "msg":Ljava/lang/String;
    const-string v1, "ActivityManager"

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 5466
    new-instance v1, Ljava/lang/SecurityException;

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1
.end method

.method enqueueOomAdjTargetLocked(Lcom/android/server/am/ProcessRecord;)V
    .locals 1
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;

    .line 14513
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mOomAdjuster:Lcom/android/server/am/OomAdjuster;

    invoke-virtual {v0, p1}, Lcom/android/server/am/OomAdjuster;->enqueueOomAdjTargetLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 14514
    return-void
.end method

.method enqueueUidChangeLocked(Lcom/android/server/am/UidRecord;II)V
    .locals 10
    .param p1, "uidRec"    # Lcom/android/server/am/UidRecord;
    .param p2, "uid"    # I
    .param p3, "change"    # I

    .line 14374
    if-eqz p1, :cond_0

    invoke-virtual {p1}, Lcom/android/server/am/UidRecord;->getUid()I

    move-result v0

    goto :goto_0

    :cond_0
    move v0, p2

    :goto_0
    move p2, v0

    .line 14375
    if-ltz p2, :cond_c

    .line 14379
    if-eqz p1, :cond_1

    .line 14380
    invoke-virtual {p1}, Lcom/android/server/am/UidRecord;->getSetProcState()I

    move-result v0

    goto :goto_1

    :cond_1
    const/16 v0, 0x14

    .line 14381
    .local v0, "procState":I
    :goto_1
    if-eqz p1, :cond_2

    iget-wide v1, p1, Lcom/android/server/am/UidRecord;->curProcStateSeq:J

    goto :goto_2

    :cond_2
    const-wide/16 v1, 0x0

    :goto_2
    move-wide v6, v1

    .line 14382
    .local v6, "procStateSeq":J
    if-eqz p1, :cond_3

    invoke-virtual {p1}, Lcom/android/server/am/UidRecord;->getSetCapability()I

    move-result v1

    goto :goto_3

    :cond_3
    const/4 v1, 0x0

    :goto_3
    move v8, v1

    .line 14383
    .local v8, "capability":I
    if-eqz p1, :cond_4

    invoke-virtual {p1}, Lcom/android/server/am/UidRecord;->isEphemeral()Z

    move-result v1

    goto :goto_4

    :cond_4
    invoke-direct {p0, p2}, Lcom/android/server/am/ActivityManagerService;->isEphemeralLocked(I)Z

    move-result v1

    :goto_4
    move v9, v1

    .line 14385
    .local v9, "ephemeral":Z
    if-eqz p1, :cond_5

    invoke-virtual {p1}, Lcom/android/server/am/UidRecord;->isIdle()Z

    move-result v1

    if-nez v1, :cond_5

    and-int/lit8 v1, p3, 0x1

    if-eqz v1, :cond_5

    .line 14388
    or-int/lit8 p3, p3, 0x2

    .line 14390
    :cond_5
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mUidObserverController:Lcom/android/server/am/UidObserverController;

    .line 14391
    if-nez p1, :cond_6

    const/4 v2, 0x0

    goto :goto_5

    :cond_6
    iget-object v2, p1, Lcom/android/server/am/UidRecord;->pendingChange:Lcom/android/server/am/UidObserverController$ChangeRecord;

    .line 14390
    :goto_5
    move v3, p2

    move v4, p3

    move v5, v0

    invoke-virtual/range {v1 .. v9}, Lcom/android/server/am/UidObserverController;->enqueueUidChange(Lcom/android/server/am/UidObserverController$ChangeRecord;IIIJIZ)I

    move-result v1

    .line 14393
    .local v1, "enqueuedChange":I
    if-eqz p1, :cond_7

    .line 14394
    invoke-virtual {p1, v1}, Lcom/android/server/am/UidRecord;->setLastReportedChange(I)V

    .line 14395
    invoke-virtual {p1, v1}, Lcom/android/server/am/UidRecord;->updateLastDispatchedProcStateSeq(I)V

    .line 14400
    :cond_7
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mLocalPowerManager:Landroid/os/PowerManagerInternal;

    if-eqz v2, :cond_b

    .line 14403
    and-int/lit8 v3, v1, 0x4

    if-eqz v3, :cond_8

    .line 14404
    invoke-virtual {v2, p2}, Landroid/os/PowerManagerInternal;->uidActive(I)V

    .line 14406
    :cond_8
    and-int/lit8 v2, v1, 0x2

    if-eqz v2, :cond_9

    .line 14407
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mLocalPowerManager:Landroid/os/PowerManagerInternal;

    invoke-virtual {v2, p2}, Landroid/os/PowerManagerInternal;->uidIdle(I)V

    .line 14409
    :cond_9
    and-int/lit8 v2, v1, 0x1

    if-eqz v2, :cond_a

    .line 14410
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mLocalPowerManager:Landroid/os/PowerManagerInternal;

    invoke-virtual {v2, p2}, Landroid/os/PowerManagerInternal;->uidGone(I)V

    goto :goto_6

    .line 14412
    :cond_a
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mLocalPowerManager:Landroid/os/PowerManagerInternal;

    invoke-virtual {v2, p2, v0}, Landroid/os/PowerManagerInternal;->updateUidProcState(II)V

    .line 14415
    :cond_b
    :goto_6
    return-void

    .line 14376
    .end local v0    # "procState":I
    .end local v1    # "enqueuedChange":I
    .end local v6    # "procStateSeq":J
    .end local v8    # "capability":I
    .end local v9    # "ephemeral":Z
    :cond_c
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "No UidRecord or uid"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method final ensureBootCompleted()V
    .locals 4

    .line 4821
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 4822
    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mBooting:Z

    .line 4823
    .local v0, "booting":Z
    const/4 v1, 0x0

    iput-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mBooting:Z

    .line 4824
    iget-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mBooted:Z

    const/4 v3, 0x1

    if-nez v2, :cond_0

    move v1, v3

    .line 4825
    .local v1, "enableScreen":Z
    :cond_0
    iput-boolean v3, p0, Lcom/android/server/am/ActivityManagerService;->mBooted:Z

    .line 4826
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 4828
    if-eqz v0, :cond_1

    .line 4829
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->finishBooting()V

    .line 4832
    :cond_1
    if-eqz v1, :cond_2

    .line 4833
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    iget-boolean v3, p0, Lcom/android/server/am/ActivityManagerService;->mBooted:Z

    invoke-virtual {v2, v3}, Lcom/android/server/wm/ActivityTaskManagerInternal;->enableScreenAfterBoot(Z)V

    .line 4835
    :cond_2
    return-void

    .line 4826
    .end local v0    # "booting":Z
    .end local v1    # "enableScreen":Z
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public final enterSafeMode()V
    .locals 1

    .line 6966
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 6969
    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mSystemReady:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-nez v0, :cond_0

    .line 6971
    :try_start_1
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v0

    invoke-interface {v0}, Landroid/content/pm/IPackageManager;->enterSafeMode()V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 6973
    goto :goto_0

    .line 6972
    :catch_0
    move-exception v0

    .line 6976
    :cond_0
    :goto_0
    const/4 v0, 0x1

    :try_start_2
    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mSafeMode:Z

    .line 6977
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 6978
    return-void

    .line 6977
    :catchall_0
    move-exception v0

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public final finishActivity(Landroid/os/IBinder;ILandroid/content/Intent;I)Z
    .locals 1
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "resultCode"    # I
    .param p3, "resultData"    # Landroid/content/Intent;
    .param p4, "finishTask"    # I

    .line 2957
    invoke-static {}, Landroid/app/ActivityClient;->getInstance()Landroid/app/ActivityClient;

    move-result-object v0

    invoke-virtual {v0, p1, p2, p3, p4}, Landroid/app/ActivityClient;->finishActivity(Landroid/os/IBinder;ILandroid/content/Intent;I)Z

    move-result v0

    return v0
.end method

.method final finishBooting()V
    .locals 11

    .line 4667
    new-instance v0, Lcom/android/server/utils/TimingsTraceAndSlog;

    const-string v1, "ActivityManagerTiming"

    const-wide/16 v2, 0x40

    invoke-direct {v0, v1, v2, v3}, Lcom/android/server/utils/TimingsTraceAndSlog;-><init>(Ljava/lang/String;J)V

    .line 4669
    .local v0, "t":Lcom/android/server/utils/TimingsTraceAndSlog;
    const-string v1, "FinishBooting"

    invoke-virtual {v0, v1}, Lcom/android/server/utils/TimingsTraceAndSlog;->traceBegin(Ljava/lang/String;)V

    .line 4671
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 4672
    iget-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mBootAnimationComplete:Z

    const/4 v2, 0x1

    if-nez v1, :cond_0

    .line 4673
    iput-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mCallFinishBooting:Z

    .line 4674
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 4676
    :cond_0
    const/4 v1, 0x0

    :try_start_1
    iput-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mCallFinishBooting:Z

    .line 4677
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 4680
    sget-object v3, Landroid/os/Process;->ZYGOTE_PROCESS:Landroid/os/ZygoteProcess;

    invoke-virtual {v3}, Landroid/os/ZygoteProcess;->bootCompleted()V

    .line 4681
    invoke-static {}, Ldalvik/system/VMRuntime;->bootCompleted()V

    .line 4683
    new-instance v3, Landroid/content/IntentFilter;

    invoke-direct {v3}, Landroid/content/IntentFilter;-><init>()V

    .line 4684
    .local v3, "pkgFilter":Landroid/content/IntentFilter;
    const-string v4, "android.intent.action.QUERY_PACKAGE_RESTART"

    invoke-virtual {v3, v4}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 4685
    const-string/jumbo v4, "package"

    invoke-virtual {v3, v4}, Landroid/content/IntentFilter;->addDataScheme(Ljava/lang/String;)V

    .line 4686
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    new-instance v5, Lcom/android/server/am/ActivityManagerService$8;

    invoke-direct {v5, p0}, Lcom/android/server/am/ActivityManagerService$8;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    invoke-virtual {v4, v5, v3}, Landroid/content/Context;->registerReceiver(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)Landroid/content/Intent;

    .line 4708
    :try_start_2
    const-string v4, "ActivityManager"

    const-string v5, "About to commit checkpoint"

    invoke-static {v4, v5}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 4709
    invoke-static {}, Lcom/android/internal/content/PackageHelper;->getStorageManager()Landroid/os/storage/IStorageManager;

    move-result-object v4

    .line 4710
    .local v4, "storageManager":Landroid/os/storage/IStorageManager;
    invoke-interface {v4}, Landroid/os/storage/IStorageManager;->commitChanges()V
    :try_end_2
    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_2} :catch_0

    .line 4715
    .end local v4    # "storageManager":Landroid/os/storage/IStorageManager;
    goto :goto_0

    .line 4711
    :catch_0
    move-exception v4

    .line 4712
    .local v4, "e":Ljava/lang/Exception;
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mInjector:Lcom/android/server/am/ActivityManagerService$Injector;

    .line 4713
    invoke-virtual {v5}, Lcom/android/server/am/ActivityManagerService$Injector;->getContext()Landroid/content/Context;

    move-result-object v5

    const-string/jumbo v6, "power"

    invoke-virtual {v5, v6}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Landroid/os/PowerManager;

    .line 4714
    .local v5, "pm":Landroid/os/PowerManager;
    const-string v6, "Checkpoint commit failed"

    invoke-virtual {v5, v6}, Landroid/os/PowerManager;->reboot(Ljava/lang/String;)V

    .line 4718
    .end local v4    # "e":Ljava/lang/Exception;
    .end local v5    # "pm":Landroid/os/PowerManager;
    :goto_0
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mSystemServiceManager:Lcom/android/server/SystemServiceManager;

    const/16 v5, 0x3e8

    invoke-virtual {v4, v0, v5}, Lcom/android/server/SystemServiceManager;->startBootPhase(Lcom/android/server/utils/TimingsTraceAndSlog;I)V

    .line 4720
    monitor-enter p0

    :try_start_3
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 4723
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v4

    .line 4724
    .local v4, "NP":I
    if-lez v4, :cond_1

    .line 4725
    new-instance v5, Ljava/util/ArrayList;

    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;

    invoke-direct {v5, v6}, Ljava/util/ArrayList;-><init>(Ljava/util/Collection;)V

    .line 4726
    .local v5, "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    const/4 v6, 0x0

    .local v6, "ip":I
    :goto_1
    if-ge v6, v4, :cond_1

    .line 4730
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v5, v6}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/android/server/am/ProcessRecord;

    new-instance v9, Lcom/android/server/am/HostingRecord;

    const-string/jumbo v10, "on-hold"

    invoke-direct {v9, v10}, Lcom/android/server/am/HostingRecord;-><init>(Ljava/lang/String;)V

    const/4 v10, 0x2

    invoke-virtual {v7, v8, v9, v10}, Lcom/android/server/am/ProcessList;->startProcessLocked(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/HostingRecord;I)V

    .line 4726
    add-int/lit8 v6, v6, 0x1

    goto :goto_1

    .line 4735
    .end local v5    # "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    .end local v6    # "ip":I
    :cond_1
    iget v5, p0, Lcom/android/server/am/ActivityManagerService;->mFactoryTest:I

    if-ne v5, v2, :cond_2

    .line 4736
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 4739
    :cond_2
    :try_start_4
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v5, 0x1b

    invoke-virtual {v2, v5}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v2

    .line 4740
    .local v2, "nmsg":Landroid/os/Message;
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    iget-wide v6, v6, Lcom/android/server/am/ActivityManagerConstants;->POWER_CHECK_INTERVAL:J

    invoke-virtual {v5, v2, v6, v7}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessageDelayed(Landroid/os/Message;J)Z

    .line 4744
    invoke-static {}, Landroid/sysprop/InitProperties;->userspace_reboot_in_progress()Ljava/util/Optional;

    move-result-object v5

    invoke-static {v1}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v1

    invoke-virtual {v5, v1}, Ljava/util/Optional;->orElse(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Ljava/lang/Boolean;

    invoke-virtual {v1}, Ljava/lang/Boolean;->booleanValue()Z

    move-result v1

    if-eqz v1, :cond_3

    .line 4745
    invoke-static {}, Lcom/android/server/UserspaceRebootLogger;->noteUserspaceRebootSuccess()V

    .line 4748
    :cond_3
    const-string/jumbo v1, "sys.boot_completed"

    const-string v5, "1"

    invoke-static {v1, v5}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V

    .line 4751
    const-string/jumbo v1, "trigger_restart_min_framework"

    invoke-static {}, Landroid/sysprop/VoldProperties;->decrypt()Ljava/util/Optional;

    move-result-object v5

    const-string v6, ""

    invoke-virtual {v5, v6}, Ljava/util/Optional;->orElse(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v5

    invoke-virtual {v1, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_4

    const-string v1, ""

    .line 4752
    invoke-static {}, Landroid/sysprop/VoldProperties;->encrypt_progress()Ljava/util/Optional;

    move-result-object v5

    const-string v6, ""

    invoke-virtual {v5, v6}, Ljava/util/Optional;->orElse(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v5

    invoke-virtual {v1, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_5

    .line 4753
    :cond_4
    const-string v1, "dev.bootcomplete"

    const-string v5, "1"

    invoke-static {v1, v5}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V

    .line 4755
    :cond_5
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    new-instance v5, Lcom/android/server/am/ActivityManagerService$9;

    invoke-direct {v5, p0}, Lcom/android/server/am/ActivityManagerService$9;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    invoke-virtual {v1, v5}, Lcom/android/server/am/UserController;->sendBootCompleted(Landroid/content/IIntentReceiver;)V

    .line 4767
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->maybeLogUserspaceRebootEvent()V

    .line 4768
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {v1}, Lcom/android/server/am/UserController;->scheduleStartProfiles()V

    .line 4769
    .end local v2    # "nmsg":Landroid/os/Message;
    .end local v4    # "NP":I
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 4771
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->showConsoleNotificationIfActive()V

    .line 4773
    invoke-virtual {v0}, Lcom/android/server/utils/TimingsTraceAndSlog;->traceEnd()V

    .line 4774
    return-void

    .line 4769
    :catchall_0
    move-exception v1

    :try_start_5
    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v1

    .line 4677
    .end local v3    # "pkgFilter":Landroid/content/IntentFilter;
    :catchall_1
    move-exception v1

    :try_start_6
    monitor-exit p0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public final finishHeavyWeightApp()V
    .locals 3

    .line 2968
    const-string v0, "android.permission.FORCE_STOP_PACKAGES"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v1

    if-nez v1, :cond_0

    .line 2977
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-virtual {v0}, Lcom/android/server/wm/ActivityTaskManagerInternal;->finishHeavyWeightApp()V

    .line 2978
    return-void

    .line 2970
    :cond_0
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Permission Denial: finishHeavyWeightApp() from pid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2971
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, ", uid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2972
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, " requires "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 2974
    .local v0, "msg":Ljava/lang/String;
    const-string v1, "ActivityManager"

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 2975
    new-instance v1, Ljava/lang/SecurityException;

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1
.end method

.method public finishInstrumentation(Landroid/app/IApplicationThread;ILandroid/os/Bundle;)V
    .locals 5
    .param p1, "target"    # Landroid/app/IApplicationThread;
    .param p2, "resultCode"    # I
    .param p3, "results"    # Landroid/os/Bundle;

    .line 13990
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v0

    .line 13992
    .local v0, "userId":I
    if-eqz p3, :cond_1

    invoke-virtual {p3}, Landroid/os/Bundle;->hasFileDescriptors()Z

    move-result v1

    if-nez v1, :cond_0

    goto :goto_0

    .line 13993
    :cond_0
    new-instance v1, Ljava/lang/IllegalArgumentException;

    const-string v2, "File descriptors passed in Intent"

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 13996
    :cond_1
    :goto_0
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 13997
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLOSP(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;

    move-result-object v1

    .line 13998
    .local v1, "app":Lcom/android/server/am/ProcessRecord;
    if-nez v1, :cond_2

    .line 13999
    const-string v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "finishInstrumentation: no app for "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 14000
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 14002
    :cond_2
    :try_start_1
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 14003
    .local v2, "origId":J
    invoke-virtual {p0, v1, p2, p3}, Lcom/android/server/am/ActivityManagerService;->finishInstrumentationLocked(Lcom/android/server/am/ProcessRecord;ILandroid/os/Bundle;)V

    .line 14004
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 14005
    .end local v1    # "app":Lcom/android/server/am/ProcessRecord;
    .end local v2    # "origId":J
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 14006
    return-void

    .line 14005
    :catchall_0
    move-exception v1

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method finishInstrumentationLocked(Lcom/android/server/am/ProcessRecord;ILandroid/os/Bundle;)V
    .locals 12
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "resultCode"    # I
    .param p3, "results"    # Landroid/os/Bundle;

    .line 13943
    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->getActiveInstrumentation()Lcom/android/server/am/ActiveInstrumentation;

    move-result-object v0

    .line 13944
    .local v0, "instr":Lcom/android/server/am/ActiveInstrumentation;
    if-nez v0, :cond_0

    .line 13945
    const-string v1, "ActivityManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "finishInstrumentation called on non-instrumented: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 13946
    return-void

    .line 13949
    :cond_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v1

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 13950
    iget-boolean v2, v0, Lcom/android/server/am/ActiveInstrumentation;->mFinished:Z

    const/4 v3, 0x0

    if-nez v2, :cond_5

    .line 13951
    iget-object v2, v0, Lcom/android/server/am/ActiveInstrumentation;->mWatcher:Landroid/app/IInstrumentationWatcher;

    if-eqz v2, :cond_3

    .line 13952
    iget-object v2, v0, Lcom/android/server/am/ActiveInstrumentation;->mCurResults:Landroid/os/Bundle;

    .line 13953
    .local v2, "finalResults":Landroid/os/Bundle;
    if-eqz v2, :cond_1

    .line 13954
    iget-object v4, v0, Lcom/android/server/am/ActiveInstrumentation;->mCurResults:Landroid/os/Bundle;

    if-eqz v4, :cond_2

    if-eqz p3, :cond_2

    .line 13955
    invoke-virtual {v2, p3}, Landroid/os/Bundle;->putAll(Landroid/os/Bundle;)V

    goto :goto_0

    .line 13958
    :cond_1
    move-object v2, p3

    .line 13960
    :cond_2
    :goto_0
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mInstrumentationReporter:Lcom/android/server/am/InstrumentationReporter;

    iget-object v5, v0, Lcom/android/server/am/ActiveInstrumentation;->mWatcher:Landroid/app/IInstrumentationWatcher;

    iget-object v6, v0, Lcom/android/server/am/ActiveInstrumentation;->mClass:Landroid/content/ComponentName;

    invoke-virtual {v4, v5, v6, p2, v2}, Lcom/android/server/am/InstrumentationReporter;->reportFinished(Landroid/app/IInstrumentationWatcher;Landroid/content/ComponentName;ILandroid/os/Bundle;)V

    .line 13965
    .end local v2    # "finalResults":Landroid/os/Bundle;
    :cond_3
    iget-object v2, v0, Lcom/android/server/am/ActiveInstrumentation;->mUiAutomationConnection:Landroid/app/IUiAutomationConnection;

    if-eqz v2, :cond_4

    .line 13967
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/appop/AppOpsService;

    const/16 v4, 0x63

    iget v5, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    iget-object v6, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v6, v6, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    const/4 v7, 0x2

    invoke-virtual {v2, v4, v5, v6, v7}, Lcom/android/server/appop/AppOpsService;->setMode(IILjava/lang/String;I)V

    .line 13969
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/appop/AppOpsService;

    invoke-virtual {v2, v3}, Lcom/android/server/appop/AppOpsService;->setAppOpsServiceDelegate(Landroid/app/AppOpsManagerInternal$CheckOpsDelegate;)V

    .line 13970
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->getPermissionManagerInternal()Lcom/android/server/pm/permission/PermissionManagerServiceInternal;

    move-result-object v2

    invoke-interface {v2}, Lcom/android/server/pm/permission/PermissionManagerServiceInternal;->stopShellPermissionIdentityDelegation()V

    .line 13971
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v4, 0x38

    iget-object v5, v0, Lcom/android/server/am/ActiveInstrumentation;->mUiAutomationConnection:Landroid/app/IUiAutomationConnection;

    invoke-virtual {v2, v4, v5}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    move-result-object v2

    .line 13972
    invoke-virtual {v2}, Landroid/os/Message;->sendToTarget()V

    .line 13974
    :cond_4
    const/4 v2, 0x1

    iput-boolean v2, v0, Lcom/android/server/am/ActiveInstrumentation;->mFinished:Z

    .line 13977
    :cond_5
    invoke-virtual {v0, p1}, Lcom/android/server/am/ActiveInstrumentation;->removeProcess(Lcom/android/server/am/ProcessRecord;)V

    .line 13978
    invoke-virtual {p1, v3}, Lcom/android/server/am/ProcessRecord;->setActiveInstrumentation(Lcom/android/server/am/ActiveInstrumentation;)V

    .line 13979
    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 13981
    iget-boolean v1, v0, Lcom/android/server/am/ActiveInstrumentation;->mNoRestart:Z

    if-nez v1, :cond_6

    .line 13982
    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v3, v1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    const/4 v4, -0x1

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x1

    const/4 v8, 0x1

    const/4 v9, 0x0

    iget v10, p1, Lcom/android/server/am/ProcessRecord;->userId:I

    const-string v11, "finished inst"

    move-object v2, p0

    invoke-virtual/range {v2 .. v11}, Lcom/android/server/am/ActivityManagerService;->forceStopPackageLocked(Ljava/lang/String;IZZZZZILjava/lang/String;)Z

    .line 13986
    :cond_6
    return-void

    .line 13979
    :catchall_0
    move-exception v2

    :try_start_1
    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v2
.end method

.method public finishReceiver(Landroid/os/IBinder;ILjava/lang/String;Landroid/os/Bundle;ZI)V
    .locals 15
    .param p1, "who"    # Landroid/os/IBinder;
    .param p2, "resultCode"    # I
    .param p3, "resultData"    # Ljava/lang/String;
    .param p4, "resultExtras"    # Landroid/os/Bundle;
    .param p5, "resultAbort"    # Z
    .param p6, "flags"    # I

    .line 13675
    move-object v1, p0

    move/from16 v2, p6

    if-eqz p4, :cond_1

    invoke-virtual/range {p4 .. p4}, Landroid/os/Bundle;->hasFileDescriptors()Z

    move-result v0

    if-nez v0, :cond_0

    goto :goto_0

    .line 13676
    :cond_0
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v3, "File descriptors passed in Bundle"

    invoke-direct {v0, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 13679
    :cond_1
    :goto_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v10

    .line 13681
    .local v10, "origId":J
    const/4 v12, 0x0

    .line 13685
    .local v12, "doNext":Z
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_3

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 13686
    invoke-direct {p0, v2}, Lcom/android/server/am/ActivityManagerService;->isOnOffloadQueue(I)Z

    move-result v0

    if-eqz v0, :cond_2

    .line 13687
    iget-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mOffloadBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

    .local v0, "queue":Lcom/android/server/am/BroadcastQueue;
    goto :goto_1

    .line 13689
    .end local v0    # "queue":Lcom/android/server/am/BroadcastQueue;
    :cond_2
    const/high16 v0, 0x10000000

    and-int/2addr v0, v2

    if-eqz v0, :cond_3

    .line 13690
    iget-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mFgBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

    goto :goto_1

    :cond_3
    iget-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mBgBroadcastQueue:Lcom/android/server/am/BroadcastQueue;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 13693
    .restart local v0    # "queue":Lcom/android/server/am/BroadcastQueue;
    :goto_1
    move-object/from16 v13, p1

    :try_start_2
    invoke-virtual {v0, v13}, Lcom/android/server/am/BroadcastQueue;->getMatchingOrderedReceiver(Landroid/os/IBinder;)Lcom/android/server/am/BroadcastRecord;

    move-result-object v3

    move-object v14, v3

    .line 13694
    .local v14, "r":Lcom/android/server/am/BroadcastRecord;
    if-eqz v14, :cond_4

    .line 13695
    iget-object v3, v14, Lcom/android/server/am/BroadcastRecord;->queue:Lcom/android/server/am/BroadcastQueue;

    const/4 v9, 0x1

    move-object v4, v14

    move/from16 v5, p2

    move-object/from16 v6, p3

    move-object/from16 v7, p4

    move/from16 v8, p5

    invoke-virtual/range {v3 .. v9}, Lcom/android/server/am/BroadcastQueue;->finishReceiverLocked(Lcom/android/server/am/BroadcastRecord;ILjava/lang/String;Landroid/os/Bundle;ZZ)Z

    move-result v3

    move v12, v3

    .line 13698
    :cond_4
    const/4 v3, 0x0

    if-eqz v12, :cond_5

    .line 13699
    iget-object v4, v14, Lcom/android/server/am/BroadcastRecord;->queue:Lcom/android/server/am/BroadcastQueue;

    const/4 v5, 0x1

    invoke-virtual {v4, v3, v5}, Lcom/android/server/am/BroadcastQueue;->processNextBroadcastLocked(ZZ)V

    .line 13702
    :cond_5
    const-string/jumbo v4, "updateOomAdj_finishReceiver"

    invoke-direct {p0, v3, v4}, Lcom/android/server/am/ActivityManagerService;->trimApplicationsLocked(ZLjava/lang/String;)V

    .line 13703
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_2

    :try_start_3
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 13706
    .end local v0    # "queue":Lcom/android/server/am/BroadcastQueue;
    .end local v12    # "doNext":Z
    .end local v14    # "r":Lcom/android/server/am/BroadcastRecord;
    invoke-static {v10, v11}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 13707
    nop

    .line 13708
    return-void

    .line 13703
    .restart local v12    # "doNext":Z
    :catchall_0
    move-exception v0

    move-object/from16 v13, p1

    :goto_2
    :try_start_4
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_2

    :try_start_5
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .end local v10    # "origId":J
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "who":Landroid/os/IBinder;
    .end local p2    # "resultCode":I
    .end local p3    # "resultData":Ljava/lang/String;
    .end local p4    # "resultExtras":Landroid/os/Bundle;
    .end local p5    # "resultAbort":Z
    .end local p6    # "flags":I
    throw v0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    .line 13706
    .end local v12    # "doNext":Z
    .restart local v10    # "origId":J
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "who":Landroid/os/IBinder;
    .restart local p2    # "resultCode":I
    .restart local p3    # "resultData":Ljava/lang/String;
    .restart local p4    # "resultExtras":Landroid/os/Bundle;
    .restart local p5    # "resultAbort":Z
    .restart local p6    # "flags":I
    :catchall_1
    move-exception v0

    goto :goto_3

    .line 13703
    .restart local v12    # "doNext":Z
    :catchall_2
    move-exception v0

    goto :goto_2

    .line 13706
    .end local v12    # "doNext":Z
    :catchall_3
    move-exception v0

    move-object/from16 v13, p1

    :goto_3
    invoke-static {v10, v11}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 13707
    throw v0
.end method

.method final forceStopAppZygoteLocked(Ljava/lang/String;II)V
    .locals 3
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "appId"    # I
    .param p3, "userId"    # I

    .line 4109
    if-nez p1, :cond_0

    .line 4110
    return-void

    .line 4112
    :cond_0
    if-gez p2, :cond_1

    .line 4114
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v0

    const/high16 v1, 0x10000000

    const/4 v2, 0x0

    .line 4115
    invoke-interface {v0, p1, v1, v2}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;II)I

    move-result v0

    .line 4114
    invoke-static {v0}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v0
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    move p2, v0

    .line 4117
    goto :goto_0

    .line 4116
    :catch_0
    move-exception v0

    .line 4120
    :cond_1
    :goto_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    const/4 v1, 0x1

    invoke-virtual {v0, p1, p2, p3, v1}, Lcom/android/server/am/ProcessList;->killAppZygotesLocked(Ljava/lang/String;IIZ)V

    .line 4121
    return-void
.end method

.method public forceStopPackage(Ljava/lang/String;I)V
    .locals 16
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "userId"    # I

    .line 3688
    move-object/from16 v1, p0

    move-object/from16 v2, p1

    const-string v0, "android.permission.FORCE_STOP_PACKAGES"

    invoke-virtual {v1, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_5

    .line 3697
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v11

    .line 3698
    .local v11, "callingPid":I
    iget-object v3, v1, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v5

    const/4 v7, 0x1

    const/4 v8, 0x2

    const-string v9, "forceStopPackage"

    const/4 v10, 0x0

    move v4, v11

    move/from16 v6, p2

    invoke-virtual/range {v3 .. v10}, Lcom/android/server/am/UserController;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result v3

    .line 3700
    .end local p2    # "userId":I
    .local v3, "userId":I
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v4

    .line 3702
    .local v4, "callingId":J
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v0

    move-object v6, v0

    .line 3703
    .local v6, "pm":Landroid/content/pm/IPackageManager;
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 3704
    const/4 v7, -0x1

    const/4 v8, 0x0

    const/4 v9, 0x1

    if-ne v3, v7, :cond_0

    .line 3705
    iget-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {v0}, Lcom/android/server/am/UserController;->getUsers()[I

    move-result-object v0

    goto :goto_0

    :cond_0
    new-array v0, v9, [I

    aput v3, v0, v8

    :goto_0
    move-object v10, v0

    .line 3706
    .local v10, "users":[I
    array-length v12, v10

    move v13, v8

    :goto_1
    if-ge v13, v12, :cond_4

    aget v0, v10, v13

    move v14, v0

    .line 3707
    .local v14, "user":I
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getPackageManagerInternal()Landroid/content/pm/PackageManagerInternal;

    move-result-object v0

    invoke-virtual {v0, v2, v14}, Landroid/content/pm/PackageManagerInternal;->isPackageStateProtected(Ljava/lang/String;I)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 3709
    const-string v0, "ActivityManager"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "Ignoring request to force stop protected package "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v8, " u"

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7, v14}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v0, v7}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 3711
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 3738
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3711
    return-void

    .line 3714
    :cond_1
    const/4 v15, -0x1

    .line 3716
    .local v15, "pkgUid":I
    const/high16 v0, 0x10000000

    :try_start_2
    invoke-interface {v6, v2, v0, v14}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;II)I

    move-result v0
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_0
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    move v15, v0

    .line 3719
    goto :goto_2

    .line 3718
    :catch_0
    move-exception v0

    .line 3720
    :goto_2
    if-ne v15, v7, :cond_2

    .line 3721
    :try_start_3
    const-string v0, "ActivityManager"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "Invalid packageName: "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v0, v7}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 3722
    const/4 v7, 0x0

    goto :goto_5

    .line 3725
    :cond_2
    :try_start_4
    invoke-interface {v6, v2, v9, v14}, Landroid/content/pm/IPackageManager;->setPackageStoppedState(Ljava/lang/String;ZI)V
    :try_end_4
    .catch Landroid/os/RemoteException; {:try_start_4 .. :try_end_4} :catch_2
    .catch Ljava/lang/IllegalArgumentException; {:try_start_4 .. :try_end_4} :catch_1
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    .line 3730
    :goto_3
    goto :goto_4

    .line 3727
    :catch_1
    move-exception v0

    move-object v7, v0

    move-object v0, v7

    .line 3728
    .local v0, "e":Ljava/lang/IllegalArgumentException;
    :try_start_5
    const-string v7, "ActivityManager"

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "Failed trying to unstop package "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v8, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v9, ": "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v8, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-static {v7, v8}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_4

    .line 3726
    .end local v0    # "e":Ljava/lang/IllegalArgumentException;
    :catch_2
    move-exception v0

    goto :goto_3

    .line 3731
    :goto_4
    iget-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    const/4 v7, 0x0

    invoke-virtual {v0, v14, v7}, Lcom/android/server/am/UserController;->isUserRunning(II)Z

    move-result v0

    if-eqz v0, :cond_3

    .line 3732
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "from pid "

    invoke-virtual {v0, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v11}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {v1, v2, v15, v0}, Lcom/android/server/am/ActivityManagerService;->forceStopPackageLocked(Ljava/lang/String;ILjava/lang/String;)V

    .line 3733
    invoke-direct {v1, v2, v15}, Lcom/android/server/am/ActivityManagerService;->finishForceStopPackageLocked(Ljava/lang/String;I)V

    .line 3706
    .end local v14    # "user":I
    .end local v15    # "pkgUid":I
    :cond_3
    :goto_5
    add-int/lit8 v13, v13, 0x1

    move v8, v7

    const/4 v7, -0x1

    const/4 v9, 0x1

    goto/16 :goto_1

    .line 3736
    .end local v10    # "users":[I
    :cond_4
    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    :try_start_6
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    .line 3738
    .end local v6    # "pm":Landroid/content/pm/IPackageManager;
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3739
    nop

    .line 3740
    return-void

    .line 3736
    .restart local v6    # "pm":Landroid/content/pm/IPackageManager;
    :catchall_0
    move-exception v0

    :try_start_7
    monitor-exit p0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_0

    :try_start_8
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .end local v3    # "userId":I
    .end local v4    # "callingId":J
    .end local v11    # "callingPid":I
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "packageName":Ljava/lang/String;
    throw v0
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_1

    .line 3738
    .end local v6    # "pm":Landroid/content/pm/IPackageManager;
    .restart local v3    # "userId":I
    .restart local v4    # "callingId":J
    .restart local v11    # "callingPid":I
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "packageName":Ljava/lang/String;
    :catchall_1
    move-exception v0

    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3739
    throw v0

    .line 3690
    .end local v3    # "userId":I
    .end local v4    # "callingId":J
    .end local v11    # "callingPid":I
    .restart local p2    # "userId":I
    :cond_5
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Permission Denial: forceStopPackage() from pid="

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3691
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v3

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, ", uid="

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3692
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v3

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, " requires "

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v3, "android.permission.FORCE_STOP_PACKAGES"

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 3694
    .local v0, "msg":Ljava/lang/String;
    const-string v3, "ActivityManager"

    invoke-static {v3, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 3695
    new-instance v3, Ljava/lang/SecurityException;

    invoke-direct {v3, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v3
.end method

.method final forceStopPackageLocked(Ljava/lang/String;IZZZZZILjava/lang/String;)Z
    .locals 23
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "appId"    # I
    .param p3, "callerWillRestart"    # Z
    .param p4, "purgeCache"    # Z
    .param p5, "doit"    # Z
    .param p6, "evenPersistent"    # Z
    .param p7, "uninstalling"    # Z
    .param p8, "userId"    # I
    .param p9, "reason"    # Ljava/lang/String;

    .line 4129
    move-object/from16 v1, p0

    move-object/from16 v15, p1

    move/from16 v14, p5

    move/from16 v13, p8

    move-object/from16 v12, p9

    const/4 v0, -0x1

    if-ne v13, v0, :cond_0

    if-nez v15, :cond_0

    .line 4130
    const-string v0, "ActivityManager"

    const-string v2, "Can\'t force stop all processes of all users, that is insane!"

    invoke-static {v0, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4133
    :cond_0
    const/4 v11, 0x0

    if-gez p2, :cond_1

    if-eqz v15, :cond_1

    .line 4135
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v0

    const/high16 v2, 0x10000000

    .line 4136
    invoke-interface {v0, v15, v2, v11}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;II)I

    move-result v0

    .line 4135
    invoke-static {v0}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v0
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 4138
    .end local p2    # "appId":I
    .local v0, "appId":I
    move v10, v0

    goto :goto_0

    .line 4137
    .end local v0    # "appId":I
    .restart local p2    # "appId":I
    :catch_0
    move-exception v0

    .line 4142
    :cond_1
    move/from16 v10, p2

    .end local p2    # "appId":I
    .local v10, "appId":I
    :goto_0
    const/4 v0, 0x1

    if-eqz v14, :cond_4

    .line 4143
    if-eqz v15, :cond_2

    .line 4144
    const-string v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Force stopping "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v4, " appid="

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v4, " user="

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v13}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v4, ": "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_1

    .line 4147
    :cond_2
    const-string v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Force stopping u"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v13}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v4, ": "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 4150
    :goto_1
    iget-object v2, v1, Lcom/android/server/am/ActivityManagerService;->mAppErrors:Lcom/android/server/am/AppErrors;

    if-nez v15, :cond_3

    move v3, v0

    goto :goto_2

    :cond_3
    move v3, v11

    :goto_2
    invoke-virtual {v2, v3, v10, v13}, Lcom/android/server/am/AppErrors;->resetProcessCrashTime(ZII)V

    .line 4153
    :cond_4
    iget-object v9, v1, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v9

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 4157
    iget-object v2, v1, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    move/from16 v8, p6

    invoke-virtual {v2, v15, v14, v8, v13}, Lcom/android/server/wm/ActivityTaskManagerInternal;->onForceStopPackage(Ljava/lang/String;ZZI)Z

    move-result v2

    move/from16 v16, v2

    .line 4160
    .local v16, "didSomething":Z
    iget-object v2, v1, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    const/16 v6, -0x2710

    const/16 v17, 0x0

    const/16 v18, 0x1

    .line 4163
    if-nez v15, :cond_5

    const/16 v3, 0xb

    move/from16 v19, v3

    goto :goto_3

    .line 4164
    :cond_5
    const/16 v3, 0xa

    move/from16 v19, v3

    :goto_3
    const/16 v20, 0x0

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_2

    .line 4166
    if-nez v15, :cond_6

    :try_start_2
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "stop user "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v13}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    goto :goto_4

    .line 4168
    .end local v16    # "didSomething":Z
    :catchall_0
    move-exception v0

    move-object/from16 v17, v9

    move v4, v10

    move v12, v13

    move v11, v14

    move-object v10, v15

    goto/16 :goto_b

    .line 4166
    .restart local v16    # "didSomething":Z
    :cond_6
    :try_start_3
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "stop "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    :goto_4
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v4, " due to "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v21
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_2

    .line 4160
    move-object/from16 v3, p1

    move v4, v10

    move/from16 v5, p8

    move/from16 v7, p3

    move/from16 v8, v17

    move-object/from16 v17, v9

    move/from16 v9, p5

    move/from16 v22, v10

    .end local v10    # "appId":I
    .local v22, "appId":I
    move/from16 v10, p6

    move/from16 v11, v18

    move/from16 v12, v19

    move/from16 v13, v20

    move v15, v14

    move-object/from16 v14, v21

    :try_start_4
    invoke-virtual/range {v2 .. v14}, Lcom/android/server/am/ProcessList;->killPackageProcessesLSP(Ljava/lang/String;IIIZZZZZIILjava/lang/String;)Z

    move-result v2

    or-int v8, v16, v2

    .line 4168
    .end local v16    # "didSomething":Z
    .local v8, "didSomething":Z
    monitor-exit v17
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 4170
    iget-object v2, v1, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    const/4 v4, 0x0

    move-object/from16 v3, p1

    move/from16 v5, p8

    move/from16 v6, p6

    move/from16 v7, p5

    invoke-virtual/range {v2 .. v7}, Lcom/android/server/am/ActiveServices;->bringDownDisabledPackageServicesLocked(Ljava/lang/String;Ljava/util/Set;IZZ)Z

    move-result v2

    if-eqz v2, :cond_8

    .line 4172
    if-nez v15, :cond_7

    .line 4173
    return v0

    .line 4175
    :cond_7
    const/4 v8, 0x1

    move v9, v8

    goto :goto_5

    .line 4170
    :cond_8
    move v9, v8

    .line 4178
    .end local v8    # "didSomething":Z
    .local v9, "didSomething":Z
    :goto_5
    move-object/from16 v10, p1

    move v11, v15

    if-nez v10, :cond_9

    .line 4180
    iget-object v2, v1, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    move/from16 v12, p8

    invoke-virtual {v2, v12}, Landroid/util/SparseArray;->remove(I)V

    goto :goto_6

    .line 4178
    :cond_9
    move/from16 v12, p8

    .line 4183
    :goto_6
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    move-object v13, v2

    .line 4184
    .local v13, "providers":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ContentProviderRecord;>;"
    iget-object v2, v1, Lcom/android/server/am/ActivityManagerService;->mCpHelper:Lcom/android/server/am/ContentProviderHelper;

    invoke-virtual {v2}, Lcom/android/server/am/ContentProviderHelper;->getProviderMap()Lcom/android/server/am/ProviderMap;

    move-result-object v2

    const/4 v4, 0x0

    move-object/from16 v3, p1

    move/from16 v5, p5

    move/from16 v6, p6

    move/from16 v7, p8

    move-object v8, v13

    invoke-virtual/range {v2 .. v8}, Lcom/android/server/am/ProviderMap;->collectPackageProvidersLocked(Ljava/lang/String;Ljava/util/Set;ZZILjava/util/ArrayList;)Z

    move-result v2

    if-eqz v2, :cond_b

    .line 4186
    if-nez v11, :cond_a

    .line 4187
    return v0

    .line 4189
    :cond_a
    const/4 v9, 0x1

    .line 4191
    :cond_b
    invoke-virtual {v13}, Ljava/util/ArrayList;->size()I

    move-result v2

    sub-int/2addr v2, v0

    .local v2, "i":I
    :goto_7
    const/4 v3, 0x0

    if-ltz v2, :cond_c

    .line 4192
    iget-object v4, v1, Lcom/android/server/am/ActivityManagerService;->mCpHelper:Lcom/android/server/am/ContentProviderHelper;

    invoke-virtual {v13, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/am/ContentProviderRecord;

    invoke-virtual {v4, v3, v5, v0}, Lcom/android/server/am/ContentProviderHelper;->removeDyingProviderLocked(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ContentProviderRecord;Z)Z

    .line 4191
    add-int/lit8 v2, v2, -0x1

    goto :goto_7

    .line 4196
    :cond_c
    iget-object v4, v1, Lcom/android/server/am/ActivityManagerService;->mUgmInternal:Lcom/android/server/uri/UriGrantsManagerInternal;

    const/4 v5, 0x0

    invoke-interface {v4, v10, v12, v5, v5}, Lcom/android/server/uri/UriGrantsManagerInternal;->removeUriPermissionsForPackage(Ljava/lang/String;IZZ)V

    .line 4198
    if-eqz v11, :cond_d

    .line 4199
    iget-object v4, v1, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    array-length v4, v4

    sub-int/2addr v4, v0

    move v2, v4

    :goto_8
    if-ltz v2, :cond_d

    .line 4200
    iget-object v4, v1, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    aget-object v4, v4, v2

    invoke-virtual {v4, v10, v3, v12, v11}, Lcom/android/server/am/BroadcastQueue;->cleanupDisabledPackageReceiversLocked(Ljava/lang/String;Ljava/util/Set;IZ)Z

    move-result v4

    or-int/2addr v9, v4

    .line 4199
    add-int/lit8 v2, v2, -0x1

    goto :goto_8

    .line 4205
    :cond_d
    if-eqz v10, :cond_f

    if-eqz p7, :cond_e

    goto :goto_9

    :cond_e
    move/from16 v4, v22

    goto :goto_a

    .line 4206
    :cond_f
    :goto_9
    iget-object v3, v1, Lcom/android/server/am/ActivityManagerService;->mPendingIntentController:Lcom/android/server/am/PendingIntentController;

    move/from16 v4, v22

    .end local v22    # "appId":I
    .local v4, "appId":I
    invoke-virtual {v3, v10, v12, v4, v11}, Lcom/android/server/am/PendingIntentController;->removePendingIntentsForPackage(Ljava/lang/String;IIZ)Z

    move-result v3

    or-int/2addr v9, v3

    .line 4210
    :goto_a
    if-eqz v11, :cond_11

    .line 4211
    if-eqz p4, :cond_10

    if-eqz v10, :cond_10

    .line 4212
    invoke-static {}, Lcom/android/internal/policy/AttributeCache;->instance()Lcom/android/internal/policy/AttributeCache;

    move-result-object v3

    .line 4213
    .local v3, "ac":Lcom/android/internal/policy/AttributeCache;
    if-eqz v3, :cond_10

    .line 4214
    invoke-virtual {v3, v10}, Lcom/android/internal/policy/AttributeCache;->removePackage(Ljava/lang/String;)V

    .line 4217
    .end local v3    # "ac":Lcom/android/internal/policy/AttributeCache;
    :cond_10
    iget-boolean v3, v1, Lcom/android/server/am/ActivityManagerService;->mBooted:Z

    if-eqz v3, :cond_11

    .line 4218
    iget-object v3, v1, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-virtual {v3, v0}, Lcom/android/server/wm/ActivityTaskManagerInternal;->resumeTopActivities(Z)V

    .line 4222
    :cond_11
    return v9

    .line 4168
    .end local v2    # "i":I
    .end local v4    # "appId":I
    .end local v9    # "didSomething":Z
    .end local v13    # "providers":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ContentProviderRecord;>;"
    .restart local v22    # "appId":I
    :catchall_1
    move-exception v0

    move-object/from16 v10, p1

    move/from16 v12, p8

    move v11, v15

    move/from16 v4, v22

    .end local v22    # "appId":I
    .restart local v4    # "appId":I
    goto :goto_b

    .end local v4    # "appId":I
    .restart local v10    # "appId":I
    :catchall_2
    move-exception v0

    move-object/from16 v17, v9

    move v4, v10

    move v12, v13

    move v11, v14

    move-object v10, v15

    .end local v10    # "appId":I
    .restart local v4    # "appId":I
    :goto_b
    :try_start_5
    monitor-exit v17
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_3

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v0

    :catchall_3
    move-exception v0

    goto :goto_b
.end method

.method getActivityInfoForUser(Landroid/content/pm/ActivityInfo;I)Landroid/content/pm/ActivityInfo;
    .locals 2
    .param p1, "aInfo"    # Landroid/content/pm/ActivityInfo;
    .param p2, "userId"    # I

    .line 15171
    if-eqz p1, :cond_1

    const/4 v0, 0x1

    if-ge p2, v0, :cond_0

    iget-object v0, p1, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v0, v0, Landroid/content/pm/ApplicationInfo;->uid:I

    const v1, 0x186a0

    if-ge v0, v1, :cond_0

    goto :goto_0

    .line 15176
    :cond_0
    new-instance v0, Landroid/content/pm/ActivityInfo;

    invoke-direct {v0, p1}, Landroid/content/pm/ActivityInfo;-><init>(Landroid/content/pm/ActivityInfo;)V

    .line 15177
    .local v0, "info":Landroid/content/pm/ActivityInfo;
    iget-object v1, v0, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    invoke-virtual {p0, v1, p2}, Lcom/android/server/am/ActivityManagerService;->getAppInfoForUser(Landroid/content/pm/ApplicationInfo;I)Landroid/content/pm/ApplicationInfo;

    move-result-object v1

    iput-object v1, v0, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    .line 15178
    return-object v0

    .line 15173
    .end local v0    # "info":Landroid/content/pm/ActivityInfo;
    :cond_1
    :goto_0
    return-object p1
.end method

.method public getAllRootTaskInfos()Ljava/util/List;
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/List<",
            "Landroid/app/ActivityTaskManager$RootTaskInfo;",
            ">;"
        }
    .end annotation

    .line 5877
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {v0}, Lcom/android/server/wm/ActivityTaskManagerService;->getAllRootTaskInfos()Ljava/util/List;

    move-result-object v0

    return-object v0
.end method

.method getAppId(Ljava/lang/String;)I
    .locals 2
    .param p1, "dumpPackage"    # Ljava/lang/String;

    .line 9214
    if-eqz p1, :cond_0

    .line 9216
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v0}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v0

    const/4 v1, 0x0

    invoke-virtual {v0, p1, v1}, Landroid/content/pm/PackageManager;->getApplicationInfo(Ljava/lang/String;I)Landroid/content/pm/ApplicationInfo;

    move-result-object v0

    .line 9218
    .local v0, "info":Landroid/content/pm/ApplicationInfo;
    iget v1, v0, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-static {v1}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v1
    :try_end_0
    .catch Landroid/content/pm/PackageManager$NameNotFoundException; {:try_start_0 .. :try_end_0} :catch_0

    return v1

    .line 9219
    .end local v0    # "info":Landroid/content/pm/ApplicationInfo;
    :catch_0
    move-exception v0

    .line 9220
    .local v0, "e":Landroid/content/pm/PackageManager$NameNotFoundException;
    invoke-virtual {v0}, Landroid/content/pm/PackageManager$NameNotFoundException;->printStackTrace()V

    .line 9223
    .end local v0    # "e":Landroid/content/pm/PackageManager$NameNotFoundException;
    :cond_0
    const/4 v0, -0x1

    return v0
.end method

.method getAppInfoForUser(Landroid/content/pm/ApplicationInfo;I)Landroid/content/pm/ApplicationInfo;
    .locals 1
    .param p1, "info"    # Landroid/content/pm/ApplicationInfo;
    .param p2, "userId"    # I

    .line 15160
    if-nez p1, :cond_0

    const/4 v0, 0x0

    return-object v0

    .line 15161
    :cond_0
    new-instance v0, Landroid/content/pm/ApplicationInfo;

    invoke-direct {v0, p1}, Landroid/content/pm/ApplicationInfo;-><init>(Landroid/content/pm/ApplicationInfo;)V

    .line 15162
    .local v0, "newInfo":Landroid/content/pm/ApplicationInfo;
    invoke-virtual {v0, p2}, Landroid/content/pm/ApplicationInfo;->initForUser(I)V

    .line 15163
    return-object v0
.end method

.method getAppOpsManager()Landroid/app/AppOpsManager;
    .locals 2

    .line 2164
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppOpsManager:Landroid/app/AppOpsManager;

    if-nez v0, :cond_0

    .line 2165
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    const-class v1, Landroid/app/AppOpsManager;

    invoke-virtual {v0, v1}, Landroid/content/Context;->getSystemService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/app/AppOpsManager;

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppOpsManager:Landroid/app/AppOpsManager;

    .line 2167
    :cond_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppOpsManager:Landroid/app/AppOpsManager;

    return-object v0
.end method

.method public getAppOpsService()Lcom/android/internal/app/IAppOpsService;
    .locals 1

    .line 1885
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/appop/AppOpsService;

    return-object v0
.end method

.method getAppStartModeLOSP(ILjava/lang/String;IIZZZ)I
    .locals 6
    .param p1, "uid"    # I
    .param p2, "packageName"    # Ljava/lang/String;
    .param p3, "packageTargetSdk"    # I
    .param p4, "callingPid"    # I
    .param p5, "alwaysRestrict"    # Z
    .param p6, "disabledOnly"    # Z
    .param p7, "forcedStandby"    # Z

    .line 5566
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mInternal:Landroid/app/ActivityManagerInternal;

    invoke-virtual {v0, p1}, Landroid/app/ActivityManagerInternal;->isPendingTopUid(I)Z

    move-result v0

    const/4 v1, 0x0

    if-eqz v0, :cond_0

    .line 5567
    return v1

    .line 5569
    :cond_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v0, p1}, Lcom/android/server/am/ProcessList;->getUidRecordLOSP(I)Lcom/android/server/am/UidRecord;

    move-result-object v0

    .line 5573
    .local v0, "uidRec":Lcom/android/server/am/UidRecord;
    if-eqz v0, :cond_2

    if-nez p5, :cond_2

    if-nez p7, :cond_2

    invoke-virtual {v0}, Lcom/android/server/am/UidRecord;->isIdle()Z

    move-result v2

    if-eqz v2, :cond_1

    goto :goto_0

    .line 5623
    :cond_1
    return v1

    .line 5575
    :cond_2
    :goto_0
    if-nez v0, :cond_3

    .line 5576
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getPackageManagerInternal()Landroid/content/pm/PackageManagerInternal;

    move-result-object v2

    .line 5577
    invoke-static {p1}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v3

    .line 5576
    invoke-virtual {v2, v3, p2}, Landroid/content/pm/PackageManagerInternal;->isPackageEphemeral(ILjava/lang/String;)Z

    move-result v2

    .local v2, "ephemeral":Z
    goto :goto_1

    .line 5579
    .end local v2    # "ephemeral":Z
    :cond_3
    invoke-virtual {v0}, Lcom/android/server/am/UidRecord;->isEphemeral()Z

    move-result v2

    .line 5582
    .restart local v2    # "ephemeral":Z
    :goto_1
    if-eqz v2, :cond_4

    .line 5584
    const/4 v1, 0x3

    return v1

    .line 5586
    :cond_4
    if-eqz p6, :cond_5

    .line 5591
    return v1

    .line 5593
    :cond_5
    if-eqz p5, :cond_6

    .line 5594
    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/am/ActivityManagerService;->appRestrictedInBackgroundLOSP(ILjava/lang/String;I)I

    move-result v3

    goto :goto_2

    .line 5595
    :cond_6
    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/am/ActivityManagerService;->appServicesRestrictedInBackgroundLOSP(ILjava/lang/String;I)I

    move-result v3

    :goto_2
    nop

    .line 5603
    .local v3, "startMode":I
    const/4 v4, 0x1

    if-ne v3, v4, :cond_7

    .line 5607
    if-ltz p4, :cond_7

    .line 5609
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    monitor-enter v4

    .line 5610
    :try_start_0
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-virtual {v5, p4}, Lcom/android/server/am/ActivityManagerService$PidMap;->get(I)Lcom/android/server/am/ProcessRecord;

    move-result-object v5

    .line 5611
    .local v5, "proc":Lcom/android/server/am/ProcessRecord;
    monitor-exit v4
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 5612
    if-eqz v5, :cond_7

    iget-object v4, v5, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    .line 5613
    invoke-virtual {v4}, Lcom/android/server/am/ProcessStateRecord;->getCurProcState()I

    move-result v4

    .line 5612
    invoke-static {v4}, Landroid/app/ActivityManager;->isProcStateBackground(I)Z

    move-result v4

    if-nez v4, :cond_7

    .line 5616
    return v1

    .line 5611
    .end local v5    # "proc":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v4
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v1

    .line 5620
    :cond_7
    return v3
.end method

.method public getBugreportWhitelistedPackages()Ljava/util/List;
    .locals 2
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/List<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation

    .line 6727
    const-string v0, "android.permission.MANAGE_DEBUGGING"

    const-string v1, "getBugreportWhitelistedPackages"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 6729
    new-instance v0, Ljava/util/ArrayList;

    invoke-static {}, Lcom/android/server/SystemConfig;->getInstance()Lcom/android/server/SystemConfig;

    move-result-object v1

    invoke-virtual {v1}, Lcom/android/server/SystemConfig;->getBugreportWhitelistedPackages()Landroid/util/ArraySet;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/util/ArrayList;-><init>(Ljava/util/Collection;)V

    return-object v0
.end method

.method public getConfiguration()Landroid/content/res/Configuration;
    .locals 1

    .line 14015
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {v0}, Lcom/android/server/wm/ActivityTaskManagerService;->getConfiguration()Landroid/content/res/Configuration;

    move-result-object v0

    return-object v0
.end method

.method public final getContentProvider(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;IZ)Landroid/app/ContentProviderHolder;
    .locals 9
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .param p2, "callingPackage"    # Ljava/lang/String;
    .param p3, "name"    # Ljava/lang/String;
    .param p4, "userId"    # I
    .param p5, "stable"    # Z

    .line 5999
    const-wide/16 v0, 0x40

    const-string v2, "getContentProvider: "

    invoke-static {v0, v1, v2, p3}, Lcom/android/server/am/ActivityManagerService;->traceBegin(JLjava/lang/String;Ljava/lang/String;)V

    .line 6001
    :try_start_0
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mCpHelper:Lcom/android/server/am/ContentProviderHelper;

    move-object v4, p1

    move-object v5, p2

    move-object v6, p3

    move v7, p4

    move v8, p5

    invoke-virtual/range {v3 .. v8}, Lcom/android/server/am/ContentProviderHelper;->getContentProvider(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;IZ)Landroid/app/ContentProviderHolder;

    move-result-object v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 6003
    invoke-static {v0, v1}, Landroid/os/Trace;->traceEnd(J)V

    .line 6001
    return-object v2

    .line 6003
    :catchall_0
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Trace;->traceEnd(J)V

    .line 6004
    throw v2
.end method

.method public getContentProviderExternal(Ljava/lang/String;ILandroid/os/IBinder;Ljava/lang/String;)Landroid/app/ContentProviderHolder;
    .locals 3
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "userId"    # I
    .param p3, "token"    # Landroid/os/IBinder;
    .param p4, "tag"    # Ljava/lang/String;

    .line 6010
    const-wide/16 v0, 0x40

    const-string v2, "getContentProviderExternal: "

    invoke-static {v0, v1, v2, p1}, Lcom/android/server/am/ActivityManagerService;->traceBegin(JLjava/lang/String;Ljava/lang/String;)V

    .line 6012
    :try_start_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mCpHelper:Lcom/android/server/am/ContentProviderHelper;

    invoke-virtual {v2, p1, p2, p3, p4}, Lcom/android/server/am/ContentProviderHelper;->getContentProviderExternal(Ljava/lang/String;ILandroid/os/IBinder;Ljava/lang/String;)Landroid/app/ContentProviderHolder;

    move-result-object v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 6014
    invoke-static {v0, v1}, Landroid/os/Trace;->traceEnd(J)V

    .line 6012
    return-object v2

    .line 6014
    :catchall_0
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Trace;->traceEnd(J)V

    .line 6015
    throw v2
.end method

.method public getContentProviderHelper()Lcom/android/server/am/ContentProviderHelper;
    .locals 1

    .line 5992
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCpHelper:Lcom/android/server/am/ContentProviderHelper;

    return-object v0
.end method

.method public getCurrentUser()Landroid/content/pm/UserInfo;
    .locals 1

    .line 15107
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {v0}, Lcom/android/server/am/UserController;->getCurrentUser()Landroid/content/pm/UserInfo;

    move-result-object v0

    return-object v0
.end method

.method public getCurrentUserId()I
    .locals 1

    .line 15112
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {v0}, Lcom/android/server/am/UserController;->getCurrentUserIdChecked()I

    move-result v0

    return v0
.end method

.method public getDelegatedShellPermissions()Ljava/util/List;
    .locals 2
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/List<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation

    .line 16883
    invoke-static {}, Landroid/os/UserHandle;->getCallingAppId()I

    move-result v0

    const/16 v1, 0x7d0

    if-eq v0, v1, :cond_1

    .line 16884
    invoke-static {}, Landroid/os/UserHandle;->getCallingAppId()I

    move-result v0

    if-nez v0, :cond_0

    goto :goto_0

    .line 16885
    :cond_0
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Only the shell can get delegated permissions"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 16887
    :cond_1
    :goto_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 16888
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->getPermissionManagerInternal()Lcom/android/server/pm/permission/PermissionManagerServiceInternal;

    move-result-object v1

    invoke-interface {v1}, Lcom/android/server/pm/permission/PermissionManagerServiceInternal;->getDelegatedShellPermissions()Ljava/util/List;

    move-result-object v1

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    return-object v1

    .line 16889
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v1
.end method

.method public getFocusedRootTaskInfo()Landroid/app/ActivityTaskManager$RootTaskInfo;
    .locals 1
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .line 14010
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {v0}, Lcom/android/server/wm/ActivityTaskManagerService;->getFocusedRootTaskInfo()Landroid/app/ActivityTaskManager$RootTaskInfo;

    move-result-object v0

    return-object v0
.end method

.method public getForegroundServiceType(Landroid/content/ComponentName;Landroid/os/IBinder;)I
    .locals 1
    .param p1, "className"    # Landroid/content/ComponentName;
    .param p2, "token"    # Landroid/os/IBinder;

    .line 11898
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 11899
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/am/ActiveServices;->getForegroundServiceTypeLocked(Landroid/content/ComponentName;Landroid/os/IBinder;)I

    move-result v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v0

    .line 11900
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public getHistoricalProcessExitReasons(Ljava/lang/String;III)Landroid/content/pm/ParceledListSlice;
    .locals 19
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "pid"    # I
    .param p3, "maxNum"    # I
    .param p4, "userId"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/lang/String;",
            "III)",
            "Landroid/content/pm/ParceledListSlice<",
            "Landroid/app/ApplicationExitInfo;",
            ">;"
        }
    .end annotation

    .line 8473
    move-object/from16 v0, p0

    move/from16 v7, p2

    move/from16 v8, p3

    move/from16 v6, p4

    const-string v1, "getHistoricalProcessExitReasons"

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 8476
    const/4 v2, -0x1

    if-eq v6, v2, :cond_2

    const/4 v3, -0x2

    if-eq v6, v3, :cond_2

    .line 8480
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v17

    .line 8481
    .local v17, "callingPid":I
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v5

    .line 8482
    .local v5, "callingUid":I
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v18

    .line 8483
    .local v18, "callingUserId":I
    iget-object v9, v0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    const/4 v13, 0x1

    const/4 v14, 0x0

    const/16 v16, 0x0

    const-string v15, "getHistoricalProcessExitReasons"

    move/from16 v10, v17

    move v11, v5

    move/from16 v12, p4

    invoke-virtual/range {v9 .. v16}, Lcom/android/server/am/UserController;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    .line 8486
    const-class v3, Lcom/android/server/os/NativeTombstoneManager;

    invoke-static {v3}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v3

    move-object v9, v3

    check-cast v9, Lcom/android/server/os/NativeTombstoneManager;

    .line 8489
    .local v9, "tombstoneService":Lcom/android/server/os/NativeTombstoneManager;
    new-instance v3, Ljava/util/ArrayList;

    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    move-object v10, v3

    .line 8490
    .local v10, "results":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/app/ApplicationExitInfo;>;"
    invoke-static/range {p1 .. p1}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v3

    if-nez v3, :cond_1

    .line 8491
    move-object/from16 v11, p1

    invoke-virtual {v0, v11, v6, v5, v1}, Lcom/android/server/am/ActivityManagerService;->enforceDumpPermissionForPackage(Ljava/lang/String;IILjava/lang/String;)I

    move-result v12

    .line 8493
    .local v12, "uid":I
    if-eq v12, v2, :cond_0

    .line 8494
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    iget-object v1, v1, Lcom/android/server/am/ProcessList;->mAppExitInfoTracker:Lcom/android/server/am/AppExitInfoTracker;

    move-object/from16 v2, p1

    move v3, v12

    move/from16 v4, p2

    move v13, v5

    .end local v5    # "callingUid":I
    .local v13, "callingUid":I
    move/from16 v5, p3

    move-object v6, v10

    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/AppExitInfoTracker;->getExitInfo(Ljava/lang/String;IIILjava/util/ArrayList;)V

    .line 8496
    invoke-virtual {v9, v10, v12, v7, v8}, Lcom/android/server/os/NativeTombstoneManager;->collectTombstones(Ljava/util/ArrayList;III)V

    goto :goto_0

    .line 8493
    .end local v13    # "callingUid":I
    .restart local v5    # "callingUid":I
    :cond_0
    move v13, v5

    .line 8498
    .end local v5    # "callingUid":I
    .end local v12    # "uid":I
    .restart local v13    # "callingUid":I
    :goto_0
    goto :goto_1

    .line 8500
    .end local v13    # "callingUid":I
    .restart local v5    # "callingUid":I
    :cond_1
    move-object/from16 v11, p1

    move v13, v5

    .end local v5    # "callingUid":I
    .restart local v13    # "callingUid":I
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    iget-object v1, v1, Lcom/android/server/am/ProcessList;->mAppExitInfoTracker:Lcom/android/server/am/AppExitInfoTracker;

    move-object/from16 v2, p1

    move v3, v13

    move/from16 v4, p2

    move/from16 v5, p3

    move-object v6, v10

    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/AppExitInfoTracker;->getExitInfo(Ljava/lang/String;IIILjava/util/ArrayList;)V

    .line 8502
    invoke-virtual {v9, v10, v13, v7, v8}, Lcom/android/server/os/NativeTombstoneManager;->collectTombstones(Ljava/util/ArrayList;III)V

    .line 8505
    :goto_1
    new-instance v1, Landroid/content/pm/ParceledListSlice;

    invoke-direct {v1, v10}, Landroid/content/pm/ParceledListSlice;-><init>(Ljava/util/List;)V

    return-object v1

    .line 8476
    .end local v9    # "tombstoneService":Lcom/android/server/os/NativeTombstoneManager;
    .end local v10    # "results":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/app/ApplicationExitInfo;>;"
    .end local v13    # "callingUid":I
    .end local v17    # "callingPid":I
    .end local v18    # "callingUserId":I
    :cond_2
    move-object/from16 v11, p1

    .line 8477
    new-instance v1, Ljava/lang/IllegalArgumentException;

    const-string v2, "Unsupported userId"

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1
.end method

.method public getInfoForIntentSender(Landroid/content/IIntentSender;)Landroid/app/ActivityManager$PendingIntentInfo;
    .locals 6
    .param p1, "sender"    # Landroid/content/IIntentSender;

    .line 4998
    instance-of v0, p1, Lcom/android/server/am/PendingIntentRecord;

    if-eqz v0, :cond_1

    .line 4999
    move-object v0, p1

    check-cast v0, Lcom/android/server/am/PendingIntentRecord;

    .line 5000
    .local v0, "res":Lcom/android/server/am/PendingIntentRecord;
    new-instance v1, Landroid/app/ActivityManager$PendingIntentInfo;

    iget-object v2, v0, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v2, v2, Lcom/android/server/am/PendingIntentRecord$Key;->packageName:Ljava/lang/String;

    iget v3, v0, Lcom/android/server/am/PendingIntentRecord;->uid:I

    iget-object v4, v0, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget v4, v4, Lcom/android/server/am/PendingIntentRecord$Key;->flags:I

    const/high16 v5, 0x4000000

    and-int/2addr v4, v5

    if-eqz v4, :cond_0

    const/4 v4, 0x1

    goto :goto_0

    :cond_0
    const/4 v4, 0x0

    :goto_0
    iget-object v5, v0, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget v5, v5, Lcom/android/server/am/PendingIntentRecord$Key;->type:I

    invoke-direct {v1, v2, v3, v4, v5}, Landroid/app/ActivityManager$PendingIntentInfo;-><init>(Ljava/lang/String;IZI)V

    return-object v1

    .line 5006
    .end local v0    # "res":Lcom/android/server/am/PendingIntentRecord;
    :cond_1
    new-instance v0, Ljava/lang/IllegalArgumentException;

    invoke-direct {v0}, Ljava/lang/IllegalArgumentException;-><init>()V

    throw v0
.end method

.method public getIntentForIntentSender(Landroid/content/IIntentSender;)Landroid/content/Intent;
    .locals 4
    .param p1, "pendingResult"    # Landroid/content/IIntentSender;

    .line 5050
    const-string v0, "android.permission.GET_INTENT_SENDER_INTENT"

    const-string v1, "getIntentForIntentSender()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 5052
    instance-of v0, p1, Lcom/android/server/am/PendingIntentRecord;

    const/4 v1, 0x0

    if-nez v0, :cond_0

    .line 5053
    return-object v1

    .line 5056
    :cond_0
    :try_start_0
    move-object v0, p1

    check-cast v0, Lcom/android/server/am/PendingIntentRecord;

    .line 5057
    .local v0, "res":Lcom/android/server/am/PendingIntentRecord;
    iget-object v2, v0, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v2, v2, Lcom/android/server/am/PendingIntentRecord$Key;->requestIntent:Landroid/content/Intent;

    if-eqz v2, :cond_1

    new-instance v2, Landroid/content/Intent;

    iget-object v3, v0, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v3, v3, Lcom/android/server/am/PendingIntentRecord$Key;->requestIntent:Landroid/content/Intent;

    invoke-direct {v2, v3}, Landroid/content/Intent;-><init>(Landroid/content/Intent;)V
    :try_end_0
    .catch Ljava/lang/ClassCastException; {:try_start_0 .. :try_end_0} :catch_0

    move-object v1, v2

    :cond_1
    return-object v1

    .line 5058
    .end local v0    # "res":Lcom/android/server/am/PendingIntentRecord;
    :catch_0
    move-exception v0

    .line 5060
    return-object v1
.end method

.method public getIntentSender(ILjava/lang/String;Landroid/os/IBinder;Ljava/lang/String;I[Landroid/content/Intent;[Ljava/lang/String;ILandroid/os/Bundle;I)Landroid/content/IIntentSender;
    .locals 12
    .param p1, "type"    # I
    .param p2, "packageName"    # Ljava/lang/String;
    .param p3, "token"    # Landroid/os/IBinder;
    .param p4, "resultWho"    # Ljava/lang/String;
    .param p5, "requestCode"    # I
    .param p6, "intents"    # [Landroid/content/Intent;
    .param p7, "resolvedTypes"    # [Ljava/lang/String;
    .param p8, "flags"    # I
    .param p9, "bOptions"    # Landroid/os/Bundle;
    .param p10, "userId"    # I
    .annotation runtime Ljava/lang/Deprecated;
    .end annotation

    .line 4846
    const/4 v3, 0x0

    move-object v0, p0

    move v1, p1

    move-object v2, p2

    move-object v4, p3

    move-object/from16 v5, p4

    move/from16 v6, p5

    move-object/from16 v7, p6

    move-object/from16 v8, p7

    move/from16 v9, p8

    move-object/from16 v10, p9

    move/from16 v11, p10

    invoke-virtual/range {v0 .. v11}, Lcom/android/server/am/ActivityManagerService;->getIntentSenderWithFeature(ILjava/lang/String;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;I[Landroid/content/Intent;[Ljava/lang/String;ILandroid/os/Bundle;I)Landroid/content/IIntentSender;

    move-result-object v0

    return-object v0
.end method

.method public getIntentSenderWithFeature(ILjava/lang/String;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;I[Landroid/content/Intent;[Ljava/lang/String;ILandroid/os/Bundle;I)Landroid/content/IIntentSender;
    .locals 15
    .param p1, "type"    # I
    .param p2, "packageName"    # Ljava/lang/String;
    .param p3, "featureId"    # Ljava/lang/String;
    .param p4, "token"    # Landroid/os/IBinder;
    .param p5, "resultWho"    # Ljava/lang/String;
    .param p6, "requestCode"    # I
    .param p7, "intents"    # [Landroid/content/Intent;
    .param p8, "resolvedTypes"    # [Ljava/lang/String;
    .param p9, "flags"    # I
    .param p10, "bOptions"    # Landroid/os/Bundle;
    .param p11, "userId"    # I

    .line 4854
    const-string v0, "getIntentSender"

    move-object v14, p0

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 4856
    nop

    .line 4858
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v13

    .line 4856
    move-object v1, p0

    move/from16 v2, p1

    move-object/from16 v3, p2

    move-object/from16 v4, p3

    move-object/from16 v5, p4

    move-object/from16 v6, p5

    move/from16 v7, p6

    move-object/from16 v8, p7

    move-object/from16 v9, p8

    move/from16 v10, p9

    move-object/from16 v11, p10

    move/from16 v12, p11

    invoke-virtual/range {v1 .. v13}, Lcom/android/server/am/ActivityManagerService;->getIntentSenderWithFeatureAsApp(ILjava/lang/String;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;I[Landroid/content/Intent;[Ljava/lang/String;ILandroid/os/Bundle;II)Landroid/content/IIntentSender;

    move-result-object v0

    return-object v0
.end method

.method public getIntentSenderWithFeatureAsApp(ILjava/lang/String;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;I[Landroid/content/Intent;[Ljava/lang/String;ILandroid/os/Bundle;II)Landroid/content/IIntentSender;
    .locals 18
    .param p1, "type"    # I
    .param p2, "packageName"    # Ljava/lang/String;
    .param p3, "featureId"    # Ljava/lang/String;
    .param p4, "token"    # Landroid/os/IBinder;
    .param p5, "resultWho"    # Ljava/lang/String;
    .param p6, "requestCode"    # I
    .param p7, "intents"    # [Landroid/content/Intent;
    .param p8, "resolvedTypes"    # [Ljava/lang/String;
    .param p9, "flags"    # I
    .param p10, "bOptions"    # Landroid/os/Bundle;
    .param p11, "userId"    # I
    .param p12, "owningUid"    # I

    .line 4876
    move-object/from16 v1, p0

    move/from16 v15, p1

    move-object/from16 v14, p2

    move-object/from16 v13, p7

    move-object/from16 v12, p8

    move/from16 v11, p12

    const/4 v0, 0x1

    if-eqz v13, :cond_7

    .line 4877
    array-length v2, v13

    if-lt v2, v0, :cond_6

    .line 4880
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_0
    array-length v3, v13

    if-ge v2, v3, :cond_4

    .line 4881
    aget-object v3, v13, v2

    .line 4882
    .local v3, "intent":Landroid/content/Intent;
    if-eqz v3, :cond_3

    .line 4883
    invoke-virtual {v3}, Landroid/content/Intent;->hasFileDescriptors()Z

    move-result v4

    if-nez v4, :cond_2

    .line 4886
    if-ne v15, v0, :cond_1

    .line 4887
    invoke-virtual {v3}, Landroid/content/Intent;->getFlags()I

    move-result v4

    const/high16 v5, 0x2000000

    and-int/2addr v4, v5

    if-nez v4, :cond_0

    goto :goto_1

    .line 4888
    :cond_0
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v4, "Can\'t use FLAG_RECEIVER_BOOT_UPGRADE here"

    invoke-direct {v0, v4}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 4891
    :cond_1
    :goto_1
    new-instance v4, Landroid/content/Intent;

    invoke-direct {v4, v3}, Landroid/content/Intent;-><init>(Landroid/content/Intent;)V

    aput-object v4, v13, v2

    goto :goto_2

    .line 4884
    :cond_2
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v4, "File descriptors passed in Intent"

    invoke-direct {v0, v4}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 4880
    .end local v3    # "intent":Landroid/content/Intent;
    :cond_3
    :goto_2
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 4894
    .end local v2    # "i":I
    :cond_4
    if-eqz v12, :cond_7

    array-length v2, v12

    array-length v3, v13

    if-ne v2, v3, :cond_5

    goto :goto_3

    .line 4895
    :cond_5
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v2, "Intent array length does not match resolvedTypes length"

    invoke-direct {v0, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 4878
    :cond_6
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v2, "Intents array length must be >= 1"

    invoke-direct {v0, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 4899
    :cond_7
    :goto_3
    if-eqz p10, :cond_9

    .line 4900
    invoke-virtual/range {p10 .. p10}, Landroid/os/Bundle;->hasFileDescriptors()Z

    move-result v2

    if-nez v2, :cond_8

    goto :goto_4

    .line 4901
    :cond_8
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v2, "File descriptors passed in options"

    invoke-direct {v0, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 4905
    :cond_9
    :goto_4
    move/from16 v10, p11

    .line 4906
    .local v10, "origUserId":I
    iget-object v2, v1, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v3

    if-ne v15, v0, :cond_a

    goto :goto_5

    :cond_a
    const/4 v0, 0x0

    :goto_5
    move v6, v0

    const/4 v7, 0x0

    const/4 v9, 0x0

    const-string v8, "getIntentSender"

    move/from16 v4, p12

    move/from16 v5, p11

    invoke-virtual/range {v2 .. v9}, Lcom/android/server/am/UserController;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result v0

    .line 4909
    .end local p11    # "userId":I
    .local v0, "userId":I
    const/4 v2, -0x2

    if-ne v10, v2, :cond_b

    .line 4913
    const/4 v0, -0x2

    move/from16 v16, v0

    goto :goto_6

    .line 4909
    :cond_b
    move/from16 v16, v0

    .line 4916
    .end local v0    # "userId":I
    .local v16, "userId":I
    :goto_6
    if-eqz v11, :cond_d

    const/16 v0, 0x3e8

    if-eq v11, v0, :cond_d

    .line 4917
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v0

    const/high16 v2, 0x10000000

    .line 4918
    invoke-static/range {p12 .. p12}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v3

    .line 4917
    invoke-interface {v0, v14, v2, v3}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;II)I

    move-result v0

    .line 4919
    .local v0, "uid":I
    invoke-static {v11, v0}, Landroid/os/UserHandle;->isSameApp(II)Z

    move-result v2

    if-eqz v2, :cond_c

    goto :goto_7

    .line 4920
    :cond_c
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Permission Denial: getIntentSender() from pid="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 4921
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, ", uid="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v11}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, ", (need uid="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, ") is not allowed to send as package "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    .line 4925
    .local v2, "msg":Ljava/lang/String;
    const-string v3, "ActivityManager"

    invoke-static {v3, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4926
    new-instance v3, Ljava/lang/SecurityException;

    invoke-direct {v3, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .end local v10    # "origUserId":I
    .end local v16    # "userId":I
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "type":I
    .end local p2    # "packageName":Ljava/lang/String;
    .end local p3    # "featureId":Ljava/lang/String;
    .end local p4    # "token":Landroid/os/IBinder;
    .end local p5    # "resultWho":Ljava/lang/String;
    .end local p6    # "requestCode":I
    .end local p7    # "intents":[Landroid/content/Intent;
    .end local p8    # "resolvedTypes":[Ljava/lang/String;
    .end local p9    # "flags":I
    .end local p10    # "bOptions":Landroid/os/Bundle;
    .end local p12    # "owningUid":I
    throw v3
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 4938
    .end local v0    # "uid":I
    .end local v2    # "msg":Ljava/lang/String;
    .restart local v10    # "origUserId":I
    .restart local v16    # "userId":I
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "type":I
    .restart local p2    # "packageName":Ljava/lang/String;
    .restart local p3    # "featureId":Ljava/lang/String;
    .restart local p4    # "token":Landroid/os/IBinder;
    .restart local p5    # "resultWho":Ljava/lang/String;
    .restart local p6    # "requestCode":I
    .restart local p7    # "intents":[Landroid/content/Intent;
    .restart local p8    # "resolvedTypes":[Ljava/lang/String;
    .restart local p9    # "flags":I
    .restart local p10    # "bOptions":Landroid/os/Bundle;
    .restart local p12    # "owningUid":I
    :catch_0
    move-exception v0

    move/from16 v17, v10

    goto :goto_8

    .line 4930
    :cond_d
    :goto_7
    const/4 v0, 0x3

    if-ne v15, v0, :cond_e

    .line 4931
    :try_start_1
    iget-object v2, v1, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_1

    move/from16 v3, p1

    move-object/from16 v4, p2

    move-object/from16 v5, p3

    move/from16 v6, p12

    move/from16 v7, v16

    move-object/from16 v8, p4

    move-object/from16 v9, p5

    move/from16 v17, v10

    .end local v10    # "origUserId":I
    .local v17, "origUserId":I
    move/from16 v10, p6

    move-object/from16 v11, p7

    move-object/from16 v12, p8

    move/from16 v13, p9

    move-object/from16 v14, p10

    :try_start_2
    invoke-virtual/range {v2 .. v14}, Lcom/android/server/wm/ActivityTaskManagerInternal;->getIntentSender(ILjava/lang/String;Ljava/lang/String;IILandroid/os/IBinder;Ljava/lang/String;I[Landroid/content/Intent;[Ljava/lang/String;ILandroid/os/Bundle;)Landroid/content/IIntentSender;

    move-result-object v0

    return-object v0

    .line 4938
    .end local v17    # "origUserId":I
    .restart local v10    # "origUserId":I
    :catch_1
    move-exception v0

    move/from16 v17, v10

    .end local v10    # "origUserId":I
    .restart local v17    # "origUserId":I
    goto :goto_8

    .line 4935
    .end local v17    # "origUserId":I
    .restart local v10    # "origUserId":I
    :cond_e
    move/from16 v17, v10

    .end local v10    # "origUserId":I
    .restart local v17    # "origUserId":I
    iget-object v2, v1, Lcom/android/server/am/ActivityManagerService;->mPendingIntentController:Lcom/android/server/am/PendingIntentController;

    move/from16 v3, p1

    move-object/from16 v4, p2

    move-object/from16 v5, p3

    move/from16 v6, p12

    move/from16 v7, v16

    move-object/from16 v8, p4

    move-object/from16 v9, p5

    move/from16 v10, p6

    move-object/from16 v11, p7

    move-object/from16 v12, p8

    move/from16 v13, p9

    move-object/from16 v14, p10

    invoke-virtual/range {v2 .. v14}, Lcom/android/server/am/PendingIntentController;->getIntentSender(ILjava/lang/String;Ljava/lang/String;IILandroid/os/IBinder;Ljava/lang/String;I[Landroid/content/Intent;[Ljava/lang/String;ILandroid/os/Bundle;)Lcom/android/server/am/PendingIntentRecord;

    move-result-object v0
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_2

    return-object v0

    .line 4938
    :catch_2
    move-exception v0

    .line 4939
    .local v0, "e":Landroid/os/RemoteException;
    :goto_8
    new-instance v2, Ljava/lang/SecurityException;

    invoke-direct {v2, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/Throwable;)V

    throw v2
.end method

.method public getLaunchedFromPackage(Landroid/os/IBinder;)Ljava/lang/String;
    .locals 1
    .param p1, "activityToken"    # Landroid/os/IBinder;

    .line 14091
    invoke-static {}, Landroid/app/ActivityClient;->getInstance()Landroid/app/ActivityClient;

    move-result-object v0

    invoke-virtual {v0, p1}, Landroid/app/ActivityClient;->getLaunchedFromPackage(Landroid/os/IBinder;)Ljava/lang/String;

    move-result-object v0

    return-object v0
.end method

.method public getLaunchedFromUid(Landroid/os/IBinder;)I
    .locals 1
    .param p1, "activityToken"    # Landroid/os/IBinder;

    .line 14087
    invoke-static {}, Landroid/app/ActivityClient;->getInstance()Landroid/app/ActivityClient;

    move-result-object v0

    invoke-virtual {v0, p1}, Landroid/app/ActivityClient;->getLaunchedFromUid(Landroid/os/IBinder;)I

    move-result v0

    return v0
.end method

.method public getLifeMonitor()Landroid/os/ParcelFileDescriptor;
    .locals 4

    .line 17103
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->isCallerShell()Z

    move-result v0

    if-eqz v0, :cond_1

    .line 17106
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 17108
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mLifeMonitorFds:[Landroid/os/ParcelFileDescriptor;

    if-nez v1, :cond_0

    .line 17109
    invoke-static {}, Landroid/os/ParcelFileDescriptor;->createPipe()[Landroid/os/ParcelFileDescriptor;

    move-result-object v1

    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mLifeMonitorFds:[Landroid/os/ParcelFileDescriptor;

    .line 17113
    :cond_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mLifeMonitorFds:[Landroid/os/ParcelFileDescriptor;

    const/4 v2, 0x0

    aget-object v1, v1, v2

    invoke-virtual {v1}, Landroid/os/ParcelFileDescriptor;->dup()Landroid/os/ParcelFileDescriptor;

    move-result-object v1
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    return-object v1

    .line 17118
    :catchall_0
    move-exception v1

    goto :goto_0

    .line 17114
    :catch_0
    move-exception v1

    .line 17115
    .local v1, "e":Ljava/io/IOException;
    :try_start_2
    const-string v2, "ActivityManager"

    const-string v3, "Unable to create pipe"

    invoke-static {v2, v3, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 17116
    const/4 v2, 0x0

    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    return-object v2

    .line 17118
    .end local v1    # "e":Ljava/io/IOException;
    :goto_0
    :try_start_3
    monitor-exit v0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v1

    .line 17104
    :cond_1
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Only shell can call it"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public getLockTaskModeState()I
    .locals 1

    .line 5908
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {v0}, Lcom/android/server/wm/ActivityTaskManagerService;->getLockTaskModeState()I

    move-result v0

    return v0
.end method

.method public getMemoryInfo(Landroid/app/ActivityManager$MemoryInfo;)V
    .locals 1
    .param p1, "outInfo"    # Landroid/app/ActivityManager$MemoryInfo;

    .line 5797
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v0, p1}, Lcom/android/server/am/ProcessList;->getMemoryInfo(Landroid/app/ActivityManager$MemoryInfo;)V

    .line 5798
    return-void
.end method

.method public getMemoryTrimLevel()I
    .locals 1

    .line 8566
    const-string v0, "getMyMemoryState"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 8567
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 8568
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    invoke-virtual {v0}, Lcom/android/server/am/AppProfiler;->getLastMemoryLevelLocked()I

    move-result v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v0

    .line 8569
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public getMyMemoryState(Landroid/app/ActivityManager$RunningAppProcessInfo;)V
    .locals 6
    .param p1, "outState"    # Landroid/app/ActivityManager$RunningAppProcessInfo;

    .line 8545
    if-eqz p1, :cond_1

    .line 8548
    const-string v0, "getMyMemoryState"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 8550
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 8551
    .local v0, "callingUid":I
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPackageManagerInt:Landroid/content/pm/PackageManagerInternal;

    invoke-virtual {v1, v0}, Landroid/content/pm/PackageManagerInternal;->getUidTargetSdkVersion(I)I

    move-result v1

    .line 8553
    .local v1, "clientTargetSdk":I
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v2

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 8555
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    monitor-enter v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 8556
    :try_start_1
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v5

    invoke-virtual {v4, v5}, Lcom/android/server/am/ActivityManagerService$PidMap;->get(I)Lcom/android/server/am/ProcessRecord;

    move-result-object v4

    .line 8557
    .local v4, "proc":Lcom/android/server/am/ProcessRecord;
    monitor-exit v3
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 8558
    if-eqz v4, :cond_0

    .line 8559
    :try_start_2
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v3, v4, p1, v1}, Lcom/android/server/am/ProcessList;->fillInProcMemInfoLOSP(Lcom/android/server/am/ProcessRecord;Landroid/app/ActivityManager$RunningAppProcessInfo;I)V

    .line 8561
    .end local v4    # "proc":Lcom/android/server/am/ProcessRecord;
    :cond_0
    monitor-exit v2
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 8562
    return-void

    .line 8557
    :catchall_0
    move-exception v4

    :try_start_3
    monitor-exit v3
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .end local v0    # "callingUid":I
    .end local v1    # "clientTargetSdk":I
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "outState":Landroid/app/ActivityManager$RunningAppProcessInfo;
    :try_start_4
    throw v4

    .line 8561
    .restart local v0    # "callingUid":I
    .restart local v1    # "clientTargetSdk":I
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "outState":Landroid/app/ActivityManager$RunningAppProcessInfo;
    :catchall_1
    move-exception v3

    monitor-exit v2
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v3

    .line 8546
    .end local v0    # "callingUid":I
    .end local v1    # "clientTargetSdk":I
    :cond_1
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v1, "outState is null"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public getPackageManager()Landroid/content/pm/IPackageManager;
    .locals 1

    .line 5923
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v0

    return-object v0
.end method

.method public getPackageManagerInternal()Landroid/content/pm/PackageManagerInternal;
    .locals 1

    .line 5930
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPackageManagerInt:Landroid/content/pm/PackageManagerInternal;

    if-nez v0, :cond_0

    .line 5931
    const-class v0, Landroid/content/pm/PackageManagerInternal;

    invoke-static {v0}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/content/pm/PackageManagerInternal;

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPackageManagerInt:Landroid/content/pm/PackageManagerInternal;

    .line 5933
    :cond_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPackageManagerInt:Landroid/content/pm/PackageManagerInternal;

    return-object v0
.end method

.method public getPackageProcessState(Ljava/lang/String;Ljava/lang/String;)I
    .locals 5
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "callingPackage"    # Ljava/lang/String;

    .line 2802
    invoke-direct {p0, p2}, Lcom/android/server/am/ActivityManagerService;->hasUsageStatsPermission(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_0

    .line 2803
    const-string v0, "android.permission.PACKAGE_USAGE_STATS"

    const-string v1, "getPackageProcessState"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 2807
    :cond_0
    const/4 v0, 0x1

    new-array v0, v0, [I

    const/16 v1, 0x14

    const/4 v2, 0x0

    aput v1, v0, v2

    .line 2808
    .local v0, "procState":[I
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v1

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 2809
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    new-instance v4, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda36;

    invoke-direct {v4, v0, p1}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda36;-><init>([ILjava/lang/String;)V

    invoke-virtual {v3, v2, v4}, Lcom/android/server/am/ProcessList;->forEachLruProcessesLOSP(ZLjava/util/function/Consumer;)V

    .line 2817
    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 2818
    aget v1, v0, v2

    return v1

    .line 2817
    :catchall_0
    move-exception v2

    :try_start_1
    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v2
.end method

.method getPendingTempAllowlistTagForUidLOSP(I)Ljava/lang/String;
    .locals 2
    .param p1, "uid"    # I

    .line 5664
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPendingTempAllowlist:Lcom/android/server/am/PendingTempAllowlists;

    invoke-virtual {v0, p1}, Lcom/android/server/am/PendingTempAllowlists;->get(I)Lcom/android/server/am/ActivityManagerService$PendingTempAllowlist;

    move-result-object v0

    .line 5665
    .local v0, "ptw":Lcom/android/server/am/ActivityManagerService$PendingTempAllowlist;
    if-eqz v0, :cond_0

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService$PendingTempAllowlist;->tag:Ljava/lang/String;

    goto :goto_0

    :cond_0
    const/4 v1, 0x0

    :goto_0
    return-object v1
.end method

.method public getProcessLimit()I
    .locals 1

    .line 5147
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 5148
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    invoke-virtual {v0}, Lcom/android/server/am/ActivityManagerConstants;->getOverrideMaxCachedProcesses()I

    move-result v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v0

    .line 5149
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public getProcessMemoryInfo([I)[Landroid/os/Debug$MemoryInfo;
    .locals 43
    .param p1, "pids"    # [I

    .line 3804
    move-object/from16 v1, p0

    move-object/from16 v2, p1

    const-string v0, "getProcessMemoryInfo"

    invoke-virtual {v1, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 3806
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v3

    .line 3807
    .local v3, "now":J
    iget-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    iget-wide v5, v0, Lcom/android/server/am/ActivityManagerConstants;->MEMORY_INFO_THROTTLE_TIME:J

    sub-long v5, v3, v5

    .line 3809
    .local v5, "lastNow":J
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v7

    .line 3810
    .local v7, "callingPid":I
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v8

    .line 3811
    .local v8, "callingUid":I
    invoke-static {v8}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v9

    .line 3812
    .local v9, "callingUserId":I
    const-string v0, "android.permission.INTERACT_ACROSS_USERS_FULL"

    invoke-static {v0, v8}, Landroid/app/ActivityManager;->checkUidPermission(Ljava/lang/String;I)I

    move-result v0

    if-nez v0, :cond_0

    const/4 v0, 0x1

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    :goto_0
    move v12, v0

    .line 3815
    .local v12, "allUsers":Z
    iget-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    const-string v13, "getProcessMemoryInfo"

    invoke-virtual {v0, v13, v7, v8}, Lcom/android/server/wm/ActivityTaskManagerInternal;->isGetTasksAllowed(Ljava/lang/String;II)Z

    move-result v13

    .line 3820
    .local v13, "allUids":Z
    const/4 v14, 0x0

    .line 3821
    .local v14, "isCallerInstrumentedFromShell":Z
    iget-object v15, v1, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v15

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 3822
    iget-object v10, v1, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    monitor-enter v10
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_13

    .line 3823
    :try_start_1
    iget-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-virtual {v0, v7}, Lcom/android/server/am/ActivityManagerService$PidMap;->get(I)Lcom/android/server/am/ProcessRecord;

    move-result-object v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_11

    .line 3824
    .local v0, "caller":Lcom/android/server/am/ProcessRecord;
    if-eqz v0, :cond_4

    .line 3825
    :try_start_2
    invoke-virtual {v0}, Lcom/android/server/am/ProcessRecord;->getActiveInstrumentation()Lcom/android/server/am/ActiveInstrumentation;

    move-result-object v17

    move-object/from16 v18, v17

    .line 3826
    .local v18, "instr":Lcom/android/server/am/ActiveInstrumentation;
    move-object/from16 v11, v18

    .end local v18    # "instr":Lcom/android/server/am/ActiveInstrumentation;
    .local v11, "instr":Lcom/android/server/am/ActiveInstrumentation;
    if-eqz v11, :cond_2

    move-object/from16 v18, v0

    .end local v0    # "caller":Lcom/android/server/am/ProcessRecord;
    .local v18, "caller":Lcom/android/server/am/ProcessRecord;
    iget v0, v11, Lcom/android/server/am/ActiveInstrumentation;->mSourceUid:I
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    move-wide/from16 v19, v3

    .end local v3    # "now":J
    .local v19, "now":J
    const/16 v3, 0x7d0

    if-eq v0, v3, :cond_1

    :try_start_3
    iget v0, v11, Lcom/android/server/am/ActiveInstrumentation;->mSourceUid:I
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    if-nez v0, :cond_3

    goto :goto_1

    .line 3829
    .end local v11    # "instr":Lcom/android/server/am/ActiveInstrumentation;
    .end local v18    # "caller":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v0

    move-wide/from16 v35, v5

    move/from16 v16, v7

    move/from16 v32, v8

    move/from16 v18, v9

    move/from16 v38, v12

    move/from16 v40, v13

    goto/16 :goto_d

    .line 3826
    .restart local v11    # "instr":Lcom/android/server/am/ActiveInstrumentation;
    .restart local v18    # "caller":Lcom/android/server/am/ProcessRecord;
    :cond_1
    :goto_1
    const/16 v16, 0x1

    goto :goto_2

    .end local v18    # "caller":Lcom/android/server/am/ProcessRecord;
    .end local v19    # "now":J
    .restart local v0    # "caller":Lcom/android/server/am/ProcessRecord;
    .restart local v3    # "now":J
    :cond_2
    move-object/from16 v18, v0

    move-wide/from16 v19, v3

    .end local v0    # "caller":Lcom/android/server/am/ProcessRecord;
    .end local v3    # "now":J
    .restart local v18    # "caller":Lcom/android/server/am/ProcessRecord;
    .restart local v19    # "now":J
    :cond_3
    const/16 v16, 0x0

    :goto_2
    move/from16 v0, v16

    move v14, v0

    .end local v14    # "isCallerInstrumentedFromShell":Z
    .local v0, "isCallerInstrumentedFromShell":Z
    goto :goto_3

    .line 3829
    .end local v0    # "isCallerInstrumentedFromShell":Z
    .end local v11    # "instr":Lcom/android/server/am/ActiveInstrumentation;
    .end local v18    # "caller":Lcom/android/server/am/ProcessRecord;
    .end local v19    # "now":J
    .restart local v3    # "now":J
    .restart local v14    # "isCallerInstrumentedFromShell":Z
    :catchall_1
    move-exception v0

    move-wide/from16 v19, v3

    move-wide/from16 v35, v5

    move/from16 v16, v7

    move/from16 v32, v8

    move/from16 v18, v9

    move/from16 v38, v12

    move/from16 v40, v13

    .end local v3    # "now":J
    .restart local v19    # "now":J
    goto/16 :goto_d

    .line 3824
    .end local v19    # "now":J
    .local v0, "caller":Lcom/android/server/am/ProcessRecord;
    .restart local v3    # "now":J
    :cond_4
    move-object/from16 v18, v0

    move-wide/from16 v19, v3

    .line 3829
    .end local v0    # "caller":Lcom/android/server/am/ProcessRecord;
    .end local v3    # "now":J
    .restart local v19    # "now":J
    :goto_3
    :try_start_4
    monitor-exit v10
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_10

    .line 3830
    :try_start_5
    monitor-exit v15
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_f

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 3832
    array-length v0, v2

    new-array v3, v0, [Landroid/os/Debug$MemoryInfo;

    .line 3833
    .local v3, "infos":[Landroid/os/Debug$MemoryInfo;
    array-length v0, v2

    const/4 v4, 0x1

    sub-int/2addr v0, v4

    move v4, v0

    .local v4, "i":I
    :goto_4
    if-ltz v4, :cond_e

    .line 3834
    new-instance v0, Landroid/os/Debug$MemoryInfo;

    invoke-direct {v0}, Landroid/os/Debug$MemoryInfo;-><init>()V

    aput-object v0, v3, v4

    move-object v10, v0

    .line 3838
    .local v10, "mi":Landroid/os/Debug$MemoryInfo;
    iget-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    iget-object v11, v0, Lcom/android/server/am/AppProfiler;->mProfilerLock:Ljava/lang/Object;

    monitor-enter v11

    .line 3839
    :try_start_6
    iget-object v15, v1, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    monitor-enter v15
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_d

    .line 3840
    :try_start_7
    iget-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_b

    move/from16 v16, v7

    .end local v7    # "callingPid":I
    .local v16, "callingPid":I
    :try_start_8
    aget v7, v2, v4

    invoke-virtual {v0, v7}, Lcom/android/server/am/ActivityManagerService$PidMap;->get(I)Lcom/android/server/am/ProcessRecord;

    move-result-object v0
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_a

    move-object v7, v0

    .line 3841
    .local v7, "proc":Lcom/android/server/am/ProcessRecord;
    if-eqz v7, :cond_5

    .line 3842
    :try_start_9
    iget-object v0, v7, Lcom/android/server/am/ProcessRecord;->mProfile:Lcom/android/server/am/ProcessProfileRecord;

    .line 3843
    .local v0, "profile":Lcom/android/server/am/ProcessProfileRecord;
    invoke-virtual {v0}, Lcom/android/server/am/ProcessProfileRecord;->getSetAdj()I

    move-result v17
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_2

    move-object/from16 v18, v0

    move/from16 v42, v17

    move-object/from16 v17, v3

    move/from16 v3, v42

    .local v17, "oomAdj":I
    goto :goto_5

    .line 3848
    .end local v0    # "profile":Lcom/android/server/am/ProcessProfileRecord;
    .end local v7    # "proc":Lcom/android/server/am/ProcessRecord;
    .end local v17    # "oomAdj":I
    :catchall_2
    move-exception v0

    move-object/from16 v17, v3

    move-wide/from16 v35, v5

    move/from16 v32, v8

    move/from16 v18, v9

    move/from16 v38, v12

    move/from16 v40, v13

    move/from16 v41, v14

    goto/16 :goto_b

    .line 3845
    .restart local v7    # "proc":Lcom/android/server/am/ProcessRecord;
    :cond_5
    const/4 v0, 0x0

    .line 3846
    .restart local v0    # "profile":Lcom/android/server/am/ProcessProfileRecord;
    const/16 v17, 0x0

    move-object/from16 v18, v0

    move/from16 v42, v17

    move-object/from16 v17, v3

    move/from16 v3, v42

    .line 3848
    .end local v0    # "profile":Lcom/android/server/am/ProcessProfileRecord;
    .local v3, "oomAdj":I
    .local v17, "infos":[Landroid/os/Debug$MemoryInfo;
    .local v18, "profile":Lcom/android/server/am/ProcessProfileRecord;
    :goto_5
    :try_start_a
    monitor-exit v15
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_9

    .line 3849
    :try_start_b
    monitor-exit v11
    :try_end_b
    .catchall {:try_start_b .. :try_end_b} :catchall_8

    .line 3850
    const/4 v0, -0x1

    if-eqz v7, :cond_6

    iget v11, v7, Lcom/android/server/am/ProcessRecord;->uid:I

    goto :goto_6

    :cond_6
    move v11, v0

    .line 3851
    .local v11, "targetUid":I
    :goto_6
    if-eqz v7, :cond_7

    invoke-static {v11}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v0

    :cond_7
    move v15, v0

    .line 3853
    .local v15, "targetUserId":I
    if-eq v8, v11, :cond_9

    .line 3854
    if-nez v13, :cond_8

    .line 3855
    move-wide/from16 v35, v5

    move/from16 v32, v8

    move/from16 v18, v9

    move/from16 v38, v12

    move/from16 v40, v13

    move/from16 v41, v14

    goto/16 :goto_a

    .line 3858
    :cond_8
    if-nez v12, :cond_9

    if-eq v15, v9, :cond_9

    .line 3859
    move-wide/from16 v35, v5

    move/from16 v32, v8

    move/from16 v18, v9

    move/from16 v38, v12

    move/from16 v40, v13

    move/from16 v41, v14

    goto/16 :goto_a

    .line 3862
    :cond_9
    if-eqz v7, :cond_b

    .line 3863
    iget-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    move/from16 v32, v8

    .end local v8    # "callingUid":I
    .local v32, "callingUid":I
    iget-object v8, v0, Lcom/android/server/am/AppProfiler;->mProfilerLock:Ljava/lang/Object;

    monitor-enter v8

    .line 3864
    :try_start_c
    invoke-virtual/range {v18 .. v18}, Lcom/android/server/am/ProcessProfileRecord;->getLastMemInfoTime()J

    move-result-wide v21

    cmp-long v0, v21, v5

    if-ltz v0, :cond_a

    invoke-virtual/range {v18 .. v18}, Lcom/android/server/am/ProcessProfileRecord;->getLastMemInfo()Landroid/os/Debug$MemoryInfo;

    move-result-object v0

    if-eqz v0, :cond_a

    if-nez v14, :cond_a

    .line 3868
    invoke-virtual/range {v18 .. v18}, Lcom/android/server/am/ProcessProfileRecord;->getLastMemInfo()Landroid/os/Debug$MemoryInfo;

    move-result-object v0

    invoke-virtual {v10, v0}, Landroid/os/Debug$MemoryInfo;->set(Landroid/os/Debug$MemoryInfo;)V

    .line 3869
    monitor-exit v8

    move-wide/from16 v35, v5

    move/from16 v18, v9

    move/from16 v38, v12

    move/from16 v40, v13

    move/from16 v41, v14

    goto/16 :goto_a

    .line 3871
    :cond_a
    monitor-exit v8

    goto :goto_7

    :catchall_3
    move-exception v0

    monitor-exit v8
    :try_end_c
    .catchall {:try_start_c .. :try_end_c} :catchall_3

    throw v0

    .line 3862
    .end local v32    # "callingUid":I
    .restart local v8    # "callingUid":I
    :cond_b
    move/from16 v32, v8

    .line 3873
    .end local v8    # "callingUid":I
    .restart local v32    # "callingUid":I
    :goto_7
    invoke-static {}, Landroid/os/SystemClock;->currentThreadTimeMillis()J

    move-result-wide v33

    .line 3874
    .local v33, "startTime":J
    new-instance v0, Landroid/os/Debug$MemoryInfo;

    invoke-direct {v0}, Landroid/os/Debug$MemoryInfo;-><init>()V

    move-object v8, v0

    .line 3875
    .local v8, "memInfo":Landroid/os/Debug$MemoryInfo;
    aget v0, v2, v4

    invoke-static {v0, v8}, Landroid/os/Debug;->getMemoryInfo(ILandroid/os/Debug$MemoryInfo;)Z

    .line 3876
    invoke-static {}, Landroid/os/SystemClock;->currentThreadTimeMillis()J

    move-result-wide v21

    move-wide/from16 v35, v5

    .end local v5    # "lastNow":J
    .local v35, "lastNow":J
    sub-long v5, v21, v33

    .line 3877
    .local v5, "duration":J
    invoke-virtual {v10, v8}, Landroid/os/Debug$MemoryInfo;->set(Landroid/os/Debug$MemoryInfo;)V

    .line 3878
    if-eqz v7, :cond_d

    .line 3879
    iget-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    iget-object v1, v0, Lcom/android/server/am/AppProfiler;->mProfilerLock:Ljava/lang/Object;

    monitor-enter v1

    .line 3880
    move-object/from16 v2, v18

    .end local v18    # "profile":Lcom/android/server/am/ProcessProfileRecord;
    .local v2, "profile":Lcom/android/server/am/ProcessProfileRecord;
    :try_start_d
    invoke-virtual {v2, v8}, Lcom/android/server/am/ProcessProfileRecord;->setLastMemInfo(Landroid/os/Debug$MemoryInfo;)V
    :try_end_d
    .catchall {:try_start_d .. :try_end_d} :catchall_6

    .line 3881
    move-object/from16 v37, v8

    move/from16 v18, v9

    .end local v8    # "memInfo":Landroid/os/Debug$MemoryInfo;
    .end local v9    # "callingUserId":I
    .local v18, "callingUserId":I
    .local v37, "memInfo":Landroid/os/Debug$MemoryInfo;
    :try_start_e
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v8

    invoke-virtual {v2, v8, v9}, Lcom/android/server/am/ProcessProfileRecord;->setLastMemInfoTime(J)V

    .line 3882
    invoke-virtual {v2}, Lcom/android/server/am/ProcessProfileRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v0

    if-eqz v0, :cond_c

    invoke-virtual {v2}, Lcom/android/server/am/ProcessProfileRecord;->getSetAdj()I

    move-result v0

    if-ne v0, v3, :cond_c

    .line 3884
    invoke-virtual {v10}, Landroid/os/Debug$MemoryInfo;->getTotalPss()I

    move-result v0

    int-to-long v8, v0

    .line 3885
    invoke-virtual {v10}, Landroid/os/Debug$MemoryInfo;->getTotalUss()I

    move-result v0
    :try_end_e
    .catchall {:try_start_e .. :try_end_e} :catchall_5

    move/from16 v39, v11

    move/from16 v38, v12

    .end local v11    # "targetUid":I
    .end local v12    # "allUsers":Z
    .local v38, "allUsers":Z
    .local v39, "targetUid":I
    int-to-long v11, v0

    :try_start_f
    invoke-virtual {v10}, Landroid/os/Debug$MemoryInfo;->getTotalRss()I

    move-result v0
    :try_end_f
    .catchall {:try_start_f .. :try_end_f} :catchall_4

    move/from16 v40, v13

    move/from16 v41, v14

    .end local v13    # "allUids":Z
    .end local v14    # "isCallerInstrumentedFromShell":Z
    .local v40, "allUids":Z
    .local v41, "isCallerInstrumentedFromShell":Z
    int-to-long v13, v0

    const/16 v28, 0x0

    const/16 v29, 0x4

    .line 3884
    move-object/from16 v21, v2

    move-wide/from16 v22, v8

    move-wide/from16 v24, v11

    move-wide/from16 v26, v13

    move-wide/from16 v30, v5

    :try_start_10
    invoke-virtual/range {v21 .. v31}, Lcom/android/server/am/ProcessProfileRecord;->addPss(JJJZIJ)V

    .line 3887
    invoke-virtual {v7}, Lcom/android/server/am/ProcessRecord;->getPkgList()Lcom/android/server/am/PackageList;

    move-result-object v0

    new-instance v8, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda32;

    invoke-direct {v8, v7, v10, v5, v6}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda32;-><init>(Lcom/android/server/am/ProcessRecord;Landroid/os/Debug$MemoryInfo;J)V

    invoke-virtual {v0, v8}, Lcom/android/server/am/PackageList;->forEachPackageProcessStats(Ljava/util/function/Consumer;)V

    goto :goto_8

    .line 3901
    .end local v40    # "allUids":Z
    .end local v41    # "isCallerInstrumentedFromShell":Z
    .restart local v13    # "allUids":Z
    .restart local v14    # "isCallerInstrumentedFromShell":Z
    :catchall_4
    move-exception v0

    move/from16 v40, v13

    move/from16 v41, v14

    .end local v13    # "allUids":Z
    .end local v14    # "isCallerInstrumentedFromShell":Z
    .restart local v40    # "allUids":Z
    .restart local v41    # "isCallerInstrumentedFromShell":Z
    goto :goto_9

    .line 3882
    .end local v38    # "allUsers":Z
    .end local v39    # "targetUid":I
    .end local v40    # "allUids":Z
    .end local v41    # "isCallerInstrumentedFromShell":Z
    .restart local v11    # "targetUid":I
    .restart local v12    # "allUsers":Z
    .restart local v13    # "allUids":Z
    .restart local v14    # "isCallerInstrumentedFromShell":Z
    :cond_c
    move/from16 v39, v11

    move/from16 v38, v12

    move/from16 v40, v13

    move/from16 v41, v14

    .line 3901
    .end local v11    # "targetUid":I
    .end local v12    # "allUsers":Z
    .end local v13    # "allUids":Z
    .end local v14    # "isCallerInstrumentedFromShell":Z
    .restart local v38    # "allUsers":Z
    .restart local v39    # "targetUid":I
    .restart local v40    # "allUids":Z
    .restart local v41    # "isCallerInstrumentedFromShell":Z
    :goto_8
    monitor-exit v1

    goto :goto_a

    .end local v38    # "allUsers":Z
    .end local v39    # "targetUid":I
    .end local v40    # "allUids":Z
    .end local v41    # "isCallerInstrumentedFromShell":Z
    .restart local v11    # "targetUid":I
    .restart local v12    # "allUsers":Z
    .restart local v13    # "allUids":Z
    .restart local v14    # "isCallerInstrumentedFromShell":Z
    :catchall_5
    move-exception v0

    move/from16 v39, v11

    move/from16 v38, v12

    move/from16 v40, v13

    move/from16 v41, v14

    .end local v11    # "targetUid":I
    .end local v12    # "allUsers":Z
    .end local v13    # "allUids":Z
    .end local v14    # "isCallerInstrumentedFromShell":Z
    .restart local v38    # "allUsers":Z
    .restart local v39    # "targetUid":I
    .restart local v40    # "allUids":Z
    .restart local v41    # "isCallerInstrumentedFromShell":Z
    goto :goto_9

    .end local v18    # "callingUserId":I
    .end local v37    # "memInfo":Landroid/os/Debug$MemoryInfo;
    .end local v38    # "allUsers":Z
    .end local v39    # "targetUid":I
    .end local v40    # "allUids":Z
    .end local v41    # "isCallerInstrumentedFromShell":Z
    .restart local v8    # "memInfo":Landroid/os/Debug$MemoryInfo;
    .restart local v9    # "callingUserId":I
    .restart local v11    # "targetUid":I
    .restart local v12    # "allUsers":Z
    .restart local v13    # "allUids":Z
    .restart local v14    # "isCallerInstrumentedFromShell":Z
    :catchall_6
    move-exception v0

    move-object/from16 v37, v8

    move/from16 v18, v9

    move/from16 v39, v11

    move/from16 v38, v12

    move/from16 v40, v13

    move/from16 v41, v14

    .end local v8    # "memInfo":Landroid/os/Debug$MemoryInfo;
    .end local v9    # "callingUserId":I
    .end local v11    # "targetUid":I
    .end local v12    # "allUsers":Z
    .end local v13    # "allUids":Z
    .end local v14    # "isCallerInstrumentedFromShell":Z
    .restart local v18    # "callingUserId":I
    .restart local v37    # "memInfo":Landroid/os/Debug$MemoryInfo;
    .restart local v38    # "allUsers":Z
    .restart local v39    # "targetUid":I
    .restart local v40    # "allUids":Z
    .restart local v41    # "isCallerInstrumentedFromShell":Z
    :goto_9
    monitor-exit v1
    :try_end_10
    .catchall {:try_start_10 .. :try_end_10} :catchall_7

    throw v0

    :catchall_7
    move-exception v0

    goto :goto_9

    .line 3878
    .end local v2    # "profile":Lcom/android/server/am/ProcessProfileRecord;
    .end local v37    # "memInfo":Landroid/os/Debug$MemoryInfo;
    .end local v38    # "allUsers":Z
    .end local v39    # "targetUid":I
    .end local v40    # "allUids":Z
    .end local v41    # "isCallerInstrumentedFromShell":Z
    .restart local v8    # "memInfo":Landroid/os/Debug$MemoryInfo;
    .restart local v9    # "callingUserId":I
    .restart local v11    # "targetUid":I
    .restart local v12    # "allUsers":Z
    .restart local v13    # "allUids":Z
    .restart local v14    # "isCallerInstrumentedFromShell":Z
    .local v18, "profile":Lcom/android/server/am/ProcessProfileRecord;
    :cond_d
    move-object/from16 v37, v8

    move/from16 v39, v11

    move/from16 v38, v12

    move/from16 v40, v13

    move/from16 v41, v14

    move-object/from16 v2, v18

    move/from16 v18, v9

    .line 3833
    .end local v3    # "oomAdj":I
    .end local v5    # "duration":J
    .end local v7    # "proc":Lcom/android/server/am/ProcessRecord;
    .end local v8    # "memInfo":Landroid/os/Debug$MemoryInfo;
    .end local v9    # "callingUserId":I
    .end local v10    # "mi":Landroid/os/Debug$MemoryInfo;
    .end local v11    # "targetUid":I
    .end local v12    # "allUsers":Z
    .end local v13    # "allUids":Z
    .end local v14    # "isCallerInstrumentedFromShell":Z
    .end local v15    # "targetUserId":I
    .end local v33    # "startTime":J
    .local v18, "callingUserId":I
    .restart local v38    # "allUsers":Z
    .restart local v40    # "allUids":Z
    .restart local v41    # "isCallerInstrumentedFromShell":Z
    :goto_a
    add-int/lit8 v4, v4, -0x1

    move-object/from16 v1, p0

    move-object/from16 v2, p1

    move/from16 v7, v16

    move-object/from16 v3, v17

    move/from16 v9, v18

    move/from16 v8, v32

    move-wide/from16 v5, v35

    move/from16 v12, v38

    move/from16 v13, v40

    move/from16 v14, v41

    goto/16 :goto_4

    .line 3849
    .end local v18    # "callingUserId":I
    .end local v32    # "callingUid":I
    .end local v35    # "lastNow":J
    .end local v38    # "allUsers":Z
    .end local v40    # "allUids":Z
    .end local v41    # "isCallerInstrumentedFromShell":Z
    .local v5, "lastNow":J
    .local v8, "callingUid":I
    .restart local v9    # "callingUserId":I
    .restart local v10    # "mi":Landroid/os/Debug$MemoryInfo;
    .restart local v12    # "allUsers":Z
    .restart local v13    # "allUids":Z
    .restart local v14    # "isCallerInstrumentedFromShell":Z
    :catchall_8
    move-exception v0

    move-wide/from16 v35, v5

    move/from16 v32, v8

    move/from16 v18, v9

    move/from16 v38, v12

    move/from16 v40, v13

    move/from16 v41, v14

    .end local v5    # "lastNow":J
    .end local v8    # "callingUid":I
    .end local v9    # "callingUserId":I
    .end local v12    # "allUsers":Z
    .end local v13    # "allUids":Z
    .end local v14    # "isCallerInstrumentedFromShell":Z
    .restart local v18    # "callingUserId":I
    .restart local v32    # "callingUid":I
    .restart local v35    # "lastNow":J
    .restart local v38    # "allUsers":Z
    .restart local v40    # "allUids":Z
    .restart local v41    # "isCallerInstrumentedFromShell":Z
    goto :goto_c

    .line 3848
    .end local v18    # "callingUserId":I
    .end local v32    # "callingUid":I
    .end local v35    # "lastNow":J
    .end local v38    # "allUsers":Z
    .end local v40    # "allUids":Z
    .end local v41    # "isCallerInstrumentedFromShell":Z
    .restart local v5    # "lastNow":J
    .restart local v8    # "callingUid":I
    .restart local v9    # "callingUserId":I
    .restart local v12    # "allUsers":Z
    .restart local v13    # "allUids":Z
    .restart local v14    # "isCallerInstrumentedFromShell":Z
    :catchall_9
    move-exception v0

    move-wide/from16 v35, v5

    move/from16 v32, v8

    move/from16 v18, v9

    move/from16 v38, v12

    move/from16 v40, v13

    move/from16 v41, v14

    .end local v5    # "lastNow":J
    .end local v8    # "callingUid":I
    .end local v9    # "callingUserId":I
    .end local v12    # "allUsers":Z
    .end local v13    # "allUids":Z
    .end local v14    # "isCallerInstrumentedFromShell":Z
    .restart local v18    # "callingUserId":I
    .restart local v32    # "callingUid":I
    .restart local v35    # "lastNow":J
    .restart local v38    # "allUsers":Z
    .restart local v40    # "allUids":Z
    .restart local v41    # "isCallerInstrumentedFromShell":Z
    goto :goto_b

    .end local v17    # "infos":[Landroid/os/Debug$MemoryInfo;
    .end local v18    # "callingUserId":I
    .end local v32    # "callingUid":I
    .end local v35    # "lastNow":J
    .end local v38    # "allUsers":Z
    .end local v40    # "allUids":Z
    .end local v41    # "isCallerInstrumentedFromShell":Z
    .local v3, "infos":[Landroid/os/Debug$MemoryInfo;
    .restart local v5    # "lastNow":J
    .restart local v8    # "callingUid":I
    .restart local v9    # "callingUserId":I
    .restart local v12    # "allUsers":Z
    .restart local v13    # "allUids":Z
    .restart local v14    # "isCallerInstrumentedFromShell":Z
    :catchall_a
    move-exception v0

    move-object/from16 v17, v3

    move-wide/from16 v35, v5

    move/from16 v32, v8

    move/from16 v18, v9

    move/from16 v38, v12

    move/from16 v40, v13

    move/from16 v41, v14

    .end local v3    # "infos":[Landroid/os/Debug$MemoryInfo;
    .end local v5    # "lastNow":J
    .end local v8    # "callingUid":I
    .end local v9    # "callingUserId":I
    .end local v12    # "allUsers":Z
    .end local v13    # "allUids":Z
    .end local v14    # "isCallerInstrumentedFromShell":Z
    .restart local v17    # "infos":[Landroid/os/Debug$MemoryInfo;
    .restart local v18    # "callingUserId":I
    .restart local v32    # "callingUid":I
    .restart local v35    # "lastNow":J
    .restart local v38    # "allUsers":Z
    .restart local v40    # "allUids":Z
    .restart local v41    # "isCallerInstrumentedFromShell":Z
    goto :goto_b

    .end local v16    # "callingPid":I
    .end local v17    # "infos":[Landroid/os/Debug$MemoryInfo;
    .end local v18    # "callingUserId":I
    .end local v32    # "callingUid":I
    .end local v35    # "lastNow":J
    .end local v38    # "allUsers":Z
    .end local v40    # "allUids":Z
    .end local v41    # "isCallerInstrumentedFromShell":Z
    .restart local v3    # "infos":[Landroid/os/Debug$MemoryInfo;
    .restart local v5    # "lastNow":J
    .local v7, "callingPid":I
    .restart local v8    # "callingUid":I
    .restart local v9    # "callingUserId":I
    .restart local v12    # "allUsers":Z
    .restart local v13    # "allUids":Z
    .restart local v14    # "isCallerInstrumentedFromShell":Z
    :catchall_b
    move-exception v0

    move-object/from16 v17, v3

    move-wide/from16 v35, v5

    move/from16 v16, v7

    move/from16 v32, v8

    move/from16 v18, v9

    move/from16 v38, v12

    move/from16 v40, v13

    move/from16 v41, v14

    .end local v3    # "infos":[Landroid/os/Debug$MemoryInfo;
    .end local v5    # "lastNow":J
    .end local v7    # "callingPid":I
    .end local v8    # "callingUid":I
    .end local v9    # "callingUserId":I
    .end local v12    # "allUsers":Z
    .end local v13    # "allUids":Z
    .end local v14    # "isCallerInstrumentedFromShell":Z
    .restart local v16    # "callingPid":I
    .restart local v17    # "infos":[Landroid/os/Debug$MemoryInfo;
    .restart local v18    # "callingUserId":I
    .restart local v32    # "callingUid":I
    .restart local v35    # "lastNow":J
    .restart local v38    # "allUsers":Z
    .restart local v40    # "allUids":Z
    .restart local v41    # "isCallerInstrumentedFromShell":Z
    :goto_b
    :try_start_11
    monitor-exit v15
    :try_end_11
    .catchall {:try_start_11 .. :try_end_11} :catchall_c

    .end local v4    # "i":I
    .end local v10    # "mi":Landroid/os/Debug$MemoryInfo;
    .end local v16    # "callingPid":I
    .end local v17    # "infos":[Landroid/os/Debug$MemoryInfo;
    .end local v18    # "callingUserId":I
    .end local v19    # "now":J
    .end local v32    # "callingUid":I
    .end local v35    # "lastNow":J
    .end local v38    # "allUsers":Z
    .end local v40    # "allUids":Z
    .end local v41    # "isCallerInstrumentedFromShell":Z
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "pids":[I
    :try_start_12
    throw v0

    .restart local v4    # "i":I
    .restart local v10    # "mi":Landroid/os/Debug$MemoryInfo;
    .restart local v16    # "callingPid":I
    .restart local v17    # "infos":[Landroid/os/Debug$MemoryInfo;
    .restart local v18    # "callingUserId":I
    .restart local v19    # "now":J
    .restart local v32    # "callingUid":I
    .restart local v35    # "lastNow":J
    .restart local v38    # "allUsers":Z
    .restart local v40    # "allUids":Z
    .restart local v41    # "isCallerInstrumentedFromShell":Z
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "pids":[I
    :catchall_c
    move-exception v0

    goto :goto_b

    .line 3849
    .end local v16    # "callingPid":I
    .end local v17    # "infos":[Landroid/os/Debug$MemoryInfo;
    .end local v18    # "callingUserId":I
    .end local v32    # "callingUid":I
    .end local v35    # "lastNow":J
    .end local v38    # "allUsers":Z
    .end local v40    # "allUids":Z
    .end local v41    # "isCallerInstrumentedFromShell":Z
    .restart local v3    # "infos":[Landroid/os/Debug$MemoryInfo;
    .restart local v5    # "lastNow":J
    .restart local v7    # "callingPid":I
    .restart local v8    # "callingUid":I
    .restart local v9    # "callingUserId":I
    .restart local v12    # "allUsers":Z
    .restart local v13    # "allUids":Z
    .restart local v14    # "isCallerInstrumentedFromShell":Z
    :catchall_d
    move-exception v0

    move-object/from16 v17, v3

    move-wide/from16 v35, v5

    move/from16 v16, v7

    move/from16 v32, v8

    move/from16 v18, v9

    move/from16 v38, v12

    move/from16 v40, v13

    move/from16 v41, v14

    .end local v3    # "infos":[Landroid/os/Debug$MemoryInfo;
    .end local v5    # "lastNow":J
    .end local v7    # "callingPid":I
    .end local v8    # "callingUid":I
    .end local v9    # "callingUserId":I
    .end local v12    # "allUsers":Z
    .end local v13    # "allUids":Z
    .end local v14    # "isCallerInstrumentedFromShell":Z
    .restart local v16    # "callingPid":I
    .restart local v17    # "infos":[Landroid/os/Debug$MemoryInfo;
    .restart local v18    # "callingUserId":I
    .restart local v32    # "callingUid":I
    .restart local v35    # "lastNow":J
    .restart local v38    # "allUsers":Z
    .restart local v40    # "allUids":Z
    .restart local v41    # "isCallerInstrumentedFromShell":Z
    :goto_c
    monitor-exit v11
    :try_end_12
    .catchall {:try_start_12 .. :try_end_12} :catchall_e

    throw v0

    :catchall_e
    move-exception v0

    goto :goto_c

    .line 3833
    .end local v10    # "mi":Landroid/os/Debug$MemoryInfo;
    .end local v16    # "callingPid":I
    .end local v17    # "infos":[Landroid/os/Debug$MemoryInfo;
    .end local v18    # "callingUserId":I
    .end local v32    # "callingUid":I
    .end local v35    # "lastNow":J
    .end local v38    # "allUsers":Z
    .end local v40    # "allUids":Z
    .end local v41    # "isCallerInstrumentedFromShell":Z
    .restart local v3    # "infos":[Landroid/os/Debug$MemoryInfo;
    .restart local v5    # "lastNow":J
    .restart local v7    # "callingPid":I
    .restart local v8    # "callingUid":I
    .restart local v9    # "callingUserId":I
    .restart local v12    # "allUsers":Z
    .restart local v13    # "allUids":Z
    .restart local v14    # "isCallerInstrumentedFromShell":Z
    :cond_e
    move-object/from16 v17, v3

    .line 3904
    .end local v3    # "infos":[Landroid/os/Debug$MemoryInfo;
    .end local v4    # "i":I
    .restart local v17    # "infos":[Landroid/os/Debug$MemoryInfo;
    return-object v17

    .line 3830
    .end local v17    # "infos":[Landroid/os/Debug$MemoryInfo;
    :catchall_f
    move-exception v0

    move-wide/from16 v35, v5

    move/from16 v16, v7

    move/from16 v32, v8

    move/from16 v18, v9

    move/from16 v38, v12

    move/from16 v40, v13

    move/from16 v41, v14

    .end local v5    # "lastNow":J
    .end local v7    # "callingPid":I
    .end local v8    # "callingUid":I
    .end local v9    # "callingUserId":I
    .end local v12    # "allUsers":Z
    .end local v13    # "allUids":Z
    .end local v14    # "isCallerInstrumentedFromShell":Z
    .restart local v16    # "callingPid":I
    .restart local v18    # "callingUserId":I
    .restart local v32    # "callingUid":I
    .restart local v35    # "lastNow":J
    .restart local v38    # "allUsers":Z
    .restart local v40    # "allUids":Z
    .restart local v41    # "isCallerInstrumentedFromShell":Z
    goto :goto_e

    .line 3829
    .end local v16    # "callingPid":I
    .end local v18    # "callingUserId":I
    .end local v32    # "callingUid":I
    .end local v35    # "lastNow":J
    .end local v38    # "allUsers":Z
    .end local v40    # "allUids":Z
    .end local v41    # "isCallerInstrumentedFromShell":Z
    .restart local v5    # "lastNow":J
    .restart local v7    # "callingPid":I
    .restart local v8    # "callingUid":I
    .restart local v9    # "callingUserId":I
    .restart local v12    # "allUsers":Z
    .restart local v13    # "allUids":Z
    .restart local v14    # "isCallerInstrumentedFromShell":Z
    :catchall_10
    move-exception v0

    move-wide/from16 v35, v5

    move/from16 v16, v7

    move/from16 v32, v8

    move/from16 v18, v9

    move/from16 v38, v12

    move/from16 v40, v13

    move/from16 v41, v14

    .end local v5    # "lastNow":J
    .end local v7    # "callingPid":I
    .end local v8    # "callingUid":I
    .end local v9    # "callingUserId":I
    .end local v12    # "allUsers":Z
    .end local v13    # "allUids":Z
    .end local v14    # "isCallerInstrumentedFromShell":Z
    .restart local v16    # "callingPid":I
    .restart local v18    # "callingUserId":I
    .restart local v32    # "callingUid":I
    .restart local v35    # "lastNow":J
    .restart local v38    # "allUsers":Z
    .restart local v40    # "allUids":Z
    .restart local v41    # "isCallerInstrumentedFromShell":Z
    goto :goto_d

    .end local v16    # "callingPid":I
    .end local v18    # "callingUserId":I
    .end local v19    # "now":J
    .end local v32    # "callingUid":I
    .end local v35    # "lastNow":J
    .end local v38    # "allUsers":Z
    .end local v40    # "allUids":Z
    .end local v41    # "isCallerInstrumentedFromShell":Z
    .local v3, "now":J
    .restart local v5    # "lastNow":J
    .restart local v7    # "callingPid":I
    .restart local v8    # "callingUid":I
    .restart local v9    # "callingUserId":I
    .restart local v12    # "allUsers":Z
    .restart local v13    # "allUids":Z
    .restart local v14    # "isCallerInstrumentedFromShell":Z
    :catchall_11
    move-exception v0

    move-wide/from16 v19, v3

    move-wide/from16 v35, v5

    move/from16 v16, v7

    move/from16 v32, v8

    move/from16 v18, v9

    move/from16 v38, v12

    move/from16 v40, v13

    .end local v3    # "now":J
    .end local v5    # "lastNow":J
    .end local v7    # "callingPid":I
    .end local v8    # "callingUid":I
    .end local v9    # "callingUserId":I
    .end local v12    # "allUsers":Z
    .end local v13    # "allUids":Z
    .restart local v16    # "callingPid":I
    .restart local v18    # "callingUserId":I
    .restart local v19    # "now":J
    .restart local v32    # "callingUid":I
    .restart local v35    # "lastNow":J
    .restart local v38    # "allUsers":Z
    .restart local v40    # "allUids":Z
    :goto_d
    :try_start_13
    monitor-exit v10
    :try_end_13
    .catchall {:try_start_13 .. :try_end_13} :catchall_12

    .end local v14    # "isCallerInstrumentedFromShell":Z
    .end local v16    # "callingPid":I
    .end local v18    # "callingUserId":I
    .end local v19    # "now":J
    .end local v32    # "callingUid":I
    .end local v35    # "lastNow":J
    .end local v38    # "allUsers":Z
    .end local v40    # "allUids":Z
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "pids":[I
    :try_start_14
    throw v0

    .restart local v14    # "isCallerInstrumentedFromShell":Z
    .restart local v16    # "callingPid":I
    .restart local v18    # "callingUserId":I
    .restart local v19    # "now":J
    .restart local v32    # "callingUid":I
    .restart local v35    # "lastNow":J
    .restart local v38    # "allUsers":Z
    .restart local v40    # "allUids":Z
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "pids":[I
    :catchall_12
    move-exception v0

    goto :goto_d

    .line 3830
    .end local v16    # "callingPid":I
    .end local v18    # "callingUserId":I
    .end local v19    # "now":J
    .end local v32    # "callingUid":I
    .end local v35    # "lastNow":J
    .end local v38    # "allUsers":Z
    .end local v40    # "allUids":Z
    .restart local v3    # "now":J
    .restart local v5    # "lastNow":J
    .restart local v7    # "callingPid":I
    .restart local v8    # "callingUid":I
    .restart local v9    # "callingUserId":I
    .restart local v12    # "allUsers":Z
    .restart local v13    # "allUids":Z
    :catchall_13
    move-exception v0

    move-wide/from16 v19, v3

    move-wide/from16 v35, v5

    move/from16 v16, v7

    move/from16 v32, v8

    move/from16 v18, v9

    move/from16 v38, v12

    move/from16 v40, v13

    .end local v3    # "now":J
    .end local v5    # "lastNow":J
    .end local v7    # "callingPid":I
    .end local v8    # "callingUid":I
    .end local v9    # "callingUserId":I
    .end local v12    # "allUsers":Z
    .end local v13    # "allUids":Z
    .restart local v16    # "callingPid":I
    .restart local v18    # "callingUserId":I
    .restart local v19    # "now":J
    .restart local v32    # "callingUid":I
    .restart local v35    # "lastNow":J
    .restart local v38    # "allUsers":Z
    .restart local v40    # "allUids":Z
    :goto_e
    monitor-exit v15
    :try_end_14
    .catchall {:try_start_14 .. :try_end_14} :catchall_14

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v0

    :catchall_14
    move-exception v0

    goto :goto_e
.end method

.method final getProcessNamesLOSP()Lcom/android/internal/app/ProcessMap;
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Lcom/android/internal/app/ProcessMap<",
            "Lcom/android/server/am/ProcessRecord;",
            ">;"
        }
    .end annotation

    .line 2646
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v0}, Lcom/android/server/am/ProcessList;->getProcessNamesLOSP()Lcom/android/server/am/ProcessList$MyProcessMap;

    move-result-object v0

    return-object v0
.end method

.method public getProcessPss([I)[J
    .locals 35
    .param p1, "pids"    # [I

    .line 3909
    move-object/from16 v1, p0

    move-object/from16 v2, p1

    const-string v0, "getProcessPss"

    invoke-virtual {v1, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 3911
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v3

    .line 3912
    .local v3, "callingPid":I
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v4

    .line 3913
    .local v4, "callingUid":I
    invoke-static {v4}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v5

    .line 3914
    .local v5, "userId":I
    const-string v0, "android.permission.INTERACT_ACROSS_USERS_FULL"

    invoke-static {v0, v4}, Landroid/app/ActivityManager;->checkUidPermission(Ljava/lang/String;I)I

    move-result v0

    const/4 v6, 0x1

    const/4 v7, 0x0

    if-nez v0, :cond_0

    move v0, v6

    goto :goto_0

    :cond_0
    move v0, v7

    :goto_0
    move v8, v0

    .line 3917
    .local v8, "allUsers":Z
    iget-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    const-string v9, "getProcessPss"

    invoke-virtual {v0, v9, v3, v4}, Lcom/android/server/wm/ActivityTaskManagerInternal;->isGetTasksAllowed(Ljava/lang/String;II)Z

    move-result v9

    .line 3920
    .local v9, "allUids":Z
    array-length v0, v2

    new-array v10, v0, [J

    .line 3921
    .local v10, "pss":[J
    array-length v0, v2

    sub-int/2addr v0, v6

    move v6, v0

    .local v6, "i":I
    :goto_1
    if-ltz v6, :cond_6

    .line 3924
    iget-object v11, v1, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v11

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 3925
    iget-object v12, v1, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    monitor-enter v12
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_3

    .line 3926
    :try_start_1
    iget-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    aget v13, v2, v6

    invoke-virtual {v0, v13}, Lcom/android/server/am/ActivityManagerService$PidMap;->get(I)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    move-object v15, v0

    .line 3927
    .local v15, "proc":Lcom/android/server/am/ProcessRecord;
    if-eqz v15, :cond_1

    iget-object v0, v15, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    invoke-virtual {v0}, Lcom/android/server/am/ProcessStateRecord;->getSetAdj()I

    move-result v0

    goto :goto_2

    :cond_1
    move v0, v7

    :goto_2
    move v14, v0

    .line 3928
    .local v14, "oomAdj":I
    monitor-exit v12
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_2

    .line 3929
    :try_start_2
    monitor-exit v11
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_3

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 3930
    if-eqz v9, :cond_5

    if-nez v8, :cond_2

    iget v0, v15, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-static {v0}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v0

    if-eq v0, v5, :cond_2

    .line 3933
    goto/16 :goto_5

    .line 3935
    :cond_2
    const/4 v0, 0x3

    new-array v11, v0, [J

    .line 3936
    .local v11, "tmpUss":[J
    invoke-static {}, Landroid/os/SystemClock;->currentThreadTimeMillis()J

    move-result-wide v20

    .line 3937
    .local v20, "startTime":J
    aget v0, v2, v6

    const/4 v12, 0x0

    invoke-static {v0, v11, v12}, Landroid/os/Debug;->getPss(I[J[J)J

    move-result-wide v23

    aput-wide v23, v10, v6

    .line 3938
    .local v23, "pi":J
    invoke-static {}, Landroid/os/SystemClock;->currentThreadTimeMillis()J

    move-result-wide v12

    sub-long v33, v12, v20

    .line 3939
    .local v33, "duration":J
    if-eqz v15, :cond_4

    .line 3940
    iget-object v12, v15, Lcom/android/server/am/ProcessRecord;->mProfile:Lcom/android/server/am/ProcessProfileRecord;

    .line 3941
    .local v12, "profile":Lcom/android/server/am/ProcessProfileRecord;
    iget-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    iget-object v13, v0, Lcom/android/server/am/AppProfiler;->mProfilerLock:Ljava/lang/Object;

    monitor-enter v13

    .line 3942
    :try_start_3
    invoke-virtual {v12}, Lcom/android/server/am/ProcessProfileRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v0

    if-eqz v0, :cond_3

    invoke-virtual {v12}, Lcom/android/server/am/ProcessProfileRecord;->getSetAdj()I

    move-result v0

    if-ne v0, v14, :cond_3

    .line 3944
    aget-wide v25, v11, v7

    const/4 v0, 0x2

    aget-wide v27, v11, v0

    const/16 v29, 0x0

    const/16 v30, 0x3

    move-object/from16 v22, v12

    move-wide/from16 v31, v33

    invoke-virtual/range {v22 .. v32}, Lcom/android/server/am/ProcessProfileRecord;->addPss(JJJZIJ)V

    .line 3946
    invoke-virtual {v15}, Lcom/android/server/am/ProcessRecord;->getPkgList()Lcom/android/server/am/PackageList;

    move-result-object v0

    new-instance v7, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda31;
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    move-object/from16 v25, v13

    move-object v13, v7

    move/from16 v26, v14

    .end local v14    # "oomAdj":I
    .local v26, "oomAdj":I
    move-object v14, v15

    move-object/from16 v27, v15

    .end local v15    # "proc":Lcom/android/server/am/ProcessRecord;
    .local v27, "proc":Lcom/android/server/am/ProcessRecord;
    move-wide/from16 v15, v23

    move-object/from16 v17, v11

    move-wide/from16 v18, v33

    :try_start_4
    invoke-direct/range {v13 .. v19}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda31;-><init>(Lcom/android/server/am/ProcessRecord;J[JJ)V

    invoke-virtual {v0, v7}, Lcom/android/server/am/PackageList;->forEachPackageProcessStats(Ljava/util/function/Consumer;)V

    goto :goto_3

    .line 3942
    .end local v26    # "oomAdj":I
    .end local v27    # "proc":Lcom/android/server/am/ProcessRecord;
    .restart local v14    # "oomAdj":I
    .restart local v15    # "proc":Lcom/android/server/am/ProcessRecord;
    :cond_3
    move-object/from16 v25, v13

    move/from16 v26, v14

    move-object/from16 v27, v15

    .line 3959
    .end local v14    # "oomAdj":I
    .end local v15    # "proc":Lcom/android/server/am/ProcessRecord;
    .restart local v26    # "oomAdj":I
    .restart local v27    # "proc":Lcom/android/server/am/ProcessRecord;
    :goto_3
    monitor-exit v25

    goto :goto_5

    .end local v26    # "oomAdj":I
    .end local v27    # "proc":Lcom/android/server/am/ProcessRecord;
    .restart local v14    # "oomAdj":I
    .restart local v15    # "proc":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v0

    move-object/from16 v25, v13

    move/from16 v26, v14

    move-object/from16 v27, v15

    .end local v14    # "oomAdj":I
    .end local v15    # "proc":Lcom/android/server/am/ProcessRecord;
    .restart local v26    # "oomAdj":I
    .restart local v27    # "proc":Lcom/android/server/am/ProcessRecord;
    :goto_4
    monitor-exit v25
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    throw v0

    :catchall_1
    move-exception v0

    goto :goto_4

    .line 3939
    .end local v12    # "profile":Lcom/android/server/am/ProcessProfileRecord;
    .end local v26    # "oomAdj":I
    .end local v27    # "proc":Lcom/android/server/am/ProcessRecord;
    .restart local v14    # "oomAdj":I
    .restart local v15    # "proc":Lcom/android/server/am/ProcessRecord;
    :cond_4
    move/from16 v26, v14

    move-object/from16 v27, v15

    .end local v14    # "oomAdj":I
    .end local v15    # "proc":Lcom/android/server/am/ProcessRecord;
    .restart local v26    # "oomAdj":I
    .restart local v27    # "proc":Lcom/android/server/am/ProcessRecord;
    goto :goto_5

    .line 3930
    .end local v11    # "tmpUss":[J
    .end local v20    # "startTime":J
    .end local v23    # "pi":J
    .end local v26    # "oomAdj":I
    .end local v27    # "proc":Lcom/android/server/am/ProcessRecord;
    .end local v33    # "duration":J
    .restart local v14    # "oomAdj":I
    .restart local v15    # "proc":Lcom/android/server/am/ProcessRecord;
    :cond_5
    move/from16 v26, v14

    move-object/from16 v27, v15

    .line 3921
    .end local v14    # "oomAdj":I
    .end local v15    # "proc":Lcom/android/server/am/ProcessRecord;
    :goto_5
    add-int/lit8 v6, v6, -0x1

    const/4 v7, 0x0

    goto/16 :goto_1

    .line 3928
    :catchall_2
    move-exception v0

    :try_start_5
    monitor-exit v12
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_2

    .end local v3    # "callingPid":I
    .end local v4    # "callingUid":I
    .end local v5    # "userId":I
    .end local v6    # "i":I
    .end local v8    # "allUsers":Z
    .end local v9    # "allUids":Z
    .end local v10    # "pss":[J
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "pids":[I
    :try_start_6
    throw v0

    .line 3929
    .restart local v3    # "callingPid":I
    .restart local v4    # "callingUid":I
    .restart local v5    # "userId":I
    .restart local v6    # "i":I
    .restart local v8    # "allUsers":Z
    .restart local v9    # "allUids":Z
    .restart local v10    # "pss":[J
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "pids":[I
    :catchall_3
    move-exception v0

    monitor-exit v11
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_3

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v0

    .line 3962
    .end local v6    # "i":I
    :cond_6
    return-object v10
.end method

.method final getProcessRecordLocked(Ljava/lang/String;I)Lcom/android/server/am/ProcessRecord;
    .locals 1
    .param p1, "processName"    # Ljava/lang/String;
    .param p2, "uid"    # I

    .line 2641
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/am/ProcessList;->getProcessRecordLocked(Ljava/lang/String;I)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    return-object v0
.end method

.method public getProcessStatesAndOomScoresForPIDs([I[I[I)V
    .locals 7
    .param p1, "pids"    # [I
    .param p2, "states"    # [I
    .param p3, "scores"    # [I

    .line 5281
    if-eqz p3, :cond_0

    .line 5282
    const-string v0, "android.permission.GET_PROCESS_STATE_AND_OOM_SCORE"

    const-string v1, "getProcessStatesAndOomScoresForPIDs()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 5286
    :cond_0
    if-eqz p1, :cond_b

    .line 5288
    if-eqz p2, :cond_a

    .line 5290
    array-length v0, p1

    array-length v1, p2

    if-ne v0, v1, :cond_9

    .line 5292
    if-eqz p3, :cond_2

    array-length v0, p1

    array-length v1, p3

    if-ne v0, v1, :cond_1

    goto :goto_0

    .line 5293
    :cond_1
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v1, "pids and scores arrays have different lengths!"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 5296
    :cond_2
    :goto_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 5297
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    monitor-enter v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 5298
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_1
    :try_start_1
    array-length v3, p1

    if-ge v2, v3, :cond_8

    .line 5299
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    aget v4, p1, v2

    invoke-virtual {v3, v4}, Lcom/android/server/am/ActivityManagerService$PidMap;->get(I)Lcom/android/server/am/ProcessRecord;

    move-result-object v3

    .line 5300
    .local v3, "pr":Lcom/android/server/am/ProcessRecord;
    if-eqz v3, :cond_6

    .line 5301
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mPendingStartActivityUids:Lcom/android/server/am/PendingStartActivityUids;

    iget v5, v3, Lcom/android/server/am/ProcessRecord;->uid:I

    aget v6, p1, v2

    .line 5302
    invoke-virtual {v4, v5, v6}, Lcom/android/server/am/PendingStartActivityUids;->isPendingTopPid(II)Z

    move-result v4

    .line 5303
    .local v4, "isPendingTop":Z
    if-eqz v4, :cond_3

    const/4 v5, 0x2

    goto :goto_2

    :cond_3
    iget-object v5, v3, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    invoke-virtual {v5}, Lcom/android/server/am/ProcessStateRecord;->getCurProcState()I

    move-result v5

    :goto_2
    aput v5, p2, v2

    .line 5304
    if-eqz p3, :cond_5

    .line 5305
    if-eqz v4, :cond_4

    .line 5306
    const/4 v5, -0x1

    goto :goto_3

    :cond_4
    iget-object v5, v3, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    invoke-virtual {v5}, Lcom/android/server/am/ProcessStateRecord;->getCurAdj()I

    move-result v5

    :goto_3
    aput v5, p3, v2

    .line 5308
    .end local v4    # "isPendingTop":Z
    :cond_5
    goto :goto_4

    .line 5309
    :cond_6
    const/16 v4, 0x14

    aput v4, p2, v2

    .line 5310
    if-eqz p3, :cond_7

    .line 5311
    const/16 v4, -0x2710

    aput v4, p3, v2

    .line 5298
    .end local v3    # "pr":Lcom/android/server/am/ProcessRecord;
    :cond_7
    :goto_4
    add-int/lit8 v2, v2, 0x1

    goto :goto_1

    .line 5315
    .end local v2    # "i":I
    :cond_8
    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 5316
    :try_start_2
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 5317
    return-void

    .line 5315
    :catchall_0
    move-exception v2

    :try_start_3
    monitor-exit v1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "pids":[I
    .end local p2    # "states":[I
    .end local p3    # "scores":[I
    :try_start_4
    throw v2

    .line 5316
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "pids":[I
    .restart local p2    # "states":[I
    .restart local p3    # "scores":[I
    :catchall_1
    move-exception v1

    monitor-exit v0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v1

    .line 5291
    :cond_9
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v1, "pids and states arrays have different lengths!"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 5289
    :cond_a
    new-instance v0, Ljava/lang/NullPointerException;

    const-string/jumbo v1, "states"

    invoke-direct {v0, v1}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 5287
    :cond_b
    new-instance v0, Ljava/lang/NullPointerException;

    const-string/jumbo v1, "pids"

    invoke-direct {v0, v1}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public getProcessesInErrorState()Ljava/util/List;
    .locals 7
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/List<",
            "Landroid/app/ActivityManager$ProcessErrorStateInfo;",
            ">;"
        }
    .end annotation

    .line 8378
    const-string v0, "getProcessesInErrorState"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 8380
    const/4 v0, 0x1

    new-array v1, v0, [Ljava/util/List;

    .line 8382
    .local v1, "errList":[Ljava/util/List;, "[Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    const-string v2, "android.permission.INTERACT_ACROSS_USERS_FULL"

    .line 8383
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v3

    .line 8382
    invoke-static {v2, v3}, Landroid/app/ActivityManager;->checkUidPermission(Ljava/lang/String;I)I

    move-result v2

    const/4 v3, 0x0

    if-nez v2, :cond_0

    goto :goto_0

    :cond_0
    move v0, v3

    .line 8384
    .local v0, "allUsers":Z
    :goto_0
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    invoke-static {v2}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v2

    .line 8386
    .local v2, "userId":I
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v4

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 8388
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    new-instance v6, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda35;

    invoke-direct {v6, v0, v2, v1}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda35;-><init>(ZI[Ljava/util/List;)V

    invoke-virtual {v5, v3, v6}, Lcom/android/server/am/ProcessList;->forEachLruProcessesLOSP(ZLjava/util/function/Consumer;)V

    .line 8417
    monitor-exit v4
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 8419
    aget-object v3, v1, v3

    return-object v3

    .line 8417
    :catchall_0
    move-exception v3

    :try_start_1
    monitor-exit v4
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v3
.end method

.method public getProviderMimeType(Landroid/net/Uri;I)Ljava/lang/String;
    .locals 1
    .param p1, "uri"    # Landroid/net/Uri;
    .param p2, "userId"    # I
    .annotation runtime Ljava/lang/Deprecated;
    .end annotation

    .line 6114
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCpHelper:Lcom/android/server/am/ContentProviderHelper;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/am/ContentProviderHelper;->getProviderMimeType(Landroid/net/Uri;I)Ljava/lang/String;

    move-result-object v0

    return-object v0
.end method

.method public getProviderMimeTypeAsync(Landroid/net/Uri;ILandroid/os/RemoteCallback;)V
    .locals 1
    .param p1, "uri"    # Landroid/net/Uri;
    .param p2, "userId"    # I
    .param p3, "resultCallback"    # Landroid/os/RemoteCallback;

    .line 6125
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCpHelper:Lcom/android/server/am/ContentProviderHelper;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/server/am/ContentProviderHelper;->getProviderMimeTypeAsync(Landroid/net/Uri;ILandroid/os/RemoteCallback;)V

    .line 6126
    return-void
.end method

.method public getRecentTasks(III)Landroid/content/pm/ParceledListSlice;
    .locals 1
    .param p1, "maxNum"    # I
    .param p2, "flags"    # I
    .param p3, "userId"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(III)",
            "Landroid/content/pm/ParceledListSlice<",
            "Landroid/app/ActivityManager$RecentTaskInfo;",
            ">;"
        }
    .end annotation

    .line 5872
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/server/wm/ActivityTaskManagerService;->getRecentTasks(III)Landroid/content/pm/ParceledListSlice;

    move-result-object v0

    return-object v0
.end method

.method getRecordForAppLOSP(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;
    .locals 10
    .param p1, "thread"    # Landroid/app/IApplicationThread;

    .line 3036
    const/4 v0, 0x0

    if-nez p1, :cond_0

    .line 3037
    return-object v0

    .line 3040
    :cond_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v1, p1}, Lcom/android/server/am/ProcessList;->getLRURecordForAppLOSP(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;

    move-result-object v1

    .line 3041
    .local v1, "record":Lcom/android/server/am/ProcessRecord;
    if-eqz v1, :cond_1

    return-object v1

    .line 3045
    :cond_1
    invoke-interface {p1}, Landroid/app/IApplicationThread;->asBinder()Landroid/os/IBinder;

    move-result-object v2

    .line 3046
    .local v2, "threadBinder":Landroid/os/IBinder;
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    .line 3047
    invoke-virtual {v3}, Lcom/android/server/am/ProcessList;->getProcessNamesLOSP()Lcom/android/server/am/ProcessList$MyProcessMap;

    move-result-object v3

    invoke-virtual {v3}, Lcom/android/server/am/ProcessList$MyProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v3

    .line 3048
    .local v3, "pmap":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;>;"
    invoke-virtual {v3}, Landroid/util/ArrayMap;->size()I

    move-result v4

    add-int/lit8 v4, v4, -0x1

    .local v4, "i":I
    :goto_0
    if-ltz v4, :cond_4

    .line 3049
    invoke-virtual {v3, v4}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Landroid/util/SparseArray;

    .line 3050
    .local v5, "procs":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    invoke-virtual {v5}, Landroid/util/SparseArray;->size()I

    move-result v6

    add-int/lit8 v6, v6, -0x1

    .local v6, "j":I
    :goto_1
    if-ltz v6, :cond_3

    .line 3051
    invoke-virtual {v5, v6}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/server/am/ProcessRecord;

    .line 3052
    .local v7, "proc":Lcom/android/server/am/ProcessRecord;
    invoke-virtual {v7}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v8

    .line 3053
    .local v8, "procThread":Landroid/app/IApplicationThread;
    if-eqz v8, :cond_2

    invoke-interface {v8}, Landroid/app/IApplicationThread;->asBinder()Landroid/os/IBinder;

    move-result-object v9

    if-ne v9, v2, :cond_2

    .line 3054
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "getRecordForApp: exists in name list but not in LRU list: "

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v9, "ActivityManager"

    invoke-static {v9, v0}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    .line 3056
    return-object v7

    .line 3050
    .end local v7    # "proc":Lcom/android/server/am/ProcessRecord;
    .end local v8    # "procThread":Landroid/app/IApplicationThread;
    :cond_2
    add-int/lit8 v6, v6, -0x1

    goto :goto_1

    .line 3048
    .end local v5    # "procs":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    .end local v6    # "j":I
    :cond_3
    add-int/lit8 v4, v4, -0x1

    goto :goto_0

    .line 3061
    .end local v4    # "i":I
    :cond_4
    return-object v0
.end method

.method public getRunningAppProcesses()Ljava/util/List;
    .locals 11
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/List<",
            "Landroid/app/ActivityManager$RunningAppProcessInfo;",
            ">;"
        }
    .end annotation

    .line 8424
    const-string v0, "getRunningAppProcesses"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 8426
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 8427
    .local v0, "callingUid":I
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPackageManagerInt:Landroid/content/pm/PackageManagerInternal;

    invoke-virtual {v1, v0}, Landroid/content/pm/PackageManagerInternal;->getUidTargetSdkVersion(I)I

    move-result v7

    .line 8429
    .local v7, "clientTargetSdk":I
    const-string v1, "android.permission.INTERACT_ACROSS_USERS_FULL"

    invoke-static {v1, v0}, Landroid/app/ActivityManager;->checkUidPermission(Ljava/lang/String;I)I

    move-result v1

    if-nez v1, :cond_0

    const/4 v1, 0x1

    goto :goto_0

    :cond_0
    const/4 v1, 0x0

    :goto_0
    move v2, v1

    .line 8431
    .local v2, "allUsers":Z
    invoke-static {v0}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v8

    .line 8432
    .local v8, "userId":I
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    const-string v3, "getRunningAppProcesses"

    .line 8433
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v4

    .line 8432
    invoke-virtual {v1, v3, v4, v0}, Lcom/android/server/wm/ActivityTaskManagerInternal;->isGetTasksAllowed(Ljava/lang/String;II)Z

    move-result v9

    .line 8435
    .local v9, "allUids":Z
    iget-object v10, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v10

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 8437
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    move v3, v8

    move v4, v9

    move v5, v0

    move v6, v7

    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/ProcessList;->getRunningAppProcessesLOSP(ZIZII)Ljava/util/List;

    move-result-object v1

    monitor-exit v10
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    return-object v1

    .line 8439
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v10
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v1
.end method

.method public getRunningExternalApplications()Ljava/util/List;
    .locals 10
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/List<",
            "Landroid/content/pm/ApplicationInfo;",
            ">;"
        }
    .end annotation

    .line 8444
    const-string v0, "getRunningExternalApplications"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 8445
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getRunningAppProcesses()Ljava/util/List;

    move-result-object v0

    .line 8446
    .local v0, "runningApps":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    new-instance v1, Ljava/util/ArrayList;

    invoke-direct {v1}, Ljava/util/ArrayList;-><init>()V

    .line 8447
    .local v1, "retList":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ApplicationInfo;>;"
    if-eqz v0, :cond_3

    invoke-interface {v0}, Ljava/util/List;->size()I

    move-result v2

    if-lez v2, :cond_3

    .line 8448
    new-instance v2, Ljava/util/HashSet;

    invoke-direct {v2}, Ljava/util/HashSet;-><init>()V

    .line 8449
    .local v2, "extList":Ljava/util/Set;, "Ljava/util/Set<Ljava/lang/String;>;"
    invoke-interface {v0}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v3

    :goto_0
    invoke-interface {v3}, Ljava/util/Iterator;->hasNext()Z

    move-result v4

    const/4 v5, 0x0

    if-eqz v4, :cond_1

    invoke-interface {v3}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Landroid/app/ActivityManager$RunningAppProcessInfo;

    .line 8450
    .local v4, "app":Landroid/app/ActivityManager$RunningAppProcessInfo;
    iget-object v6, v4, Landroid/app/ActivityManager$RunningAppProcessInfo;->pkgList:[Ljava/lang/String;

    if-eqz v6, :cond_0

    .line 8451
    iget-object v6, v4, Landroid/app/ActivityManager$RunningAppProcessInfo;->pkgList:[Ljava/lang/String;

    array-length v7, v6

    :goto_1
    if-ge v5, v7, :cond_0

    aget-object v8, v6, v5

    .line 8452
    .local v8, "pkg":Ljava/lang/String;
    invoke-interface {v2, v8}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    .line 8451
    .end local v8    # "pkg":Ljava/lang/String;
    add-int/lit8 v5, v5, 0x1

    goto :goto_1

    .line 8455
    .end local v4    # "app":Landroid/app/ActivityManager$RunningAppProcessInfo;
    :cond_0
    goto :goto_0

    .line 8456
    :cond_1
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v3

    .line 8457
    .local v3, "pm":Landroid/content/pm/IPackageManager;
    invoke-interface {v2}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v4

    :goto_2
    invoke-interface {v4}, Ljava/util/Iterator;->hasNext()Z

    move-result v6

    if-eqz v6, :cond_3

    invoke-interface {v4}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Ljava/lang/String;

    .line 8459
    .local v6, "pkg":Ljava/lang/String;
    :try_start_0
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v7

    invoke-interface {v3, v6, v5, v7}, Landroid/content/pm/IPackageManager;->getApplicationInfo(Ljava/lang/String;II)Landroid/content/pm/ApplicationInfo;

    move-result-object v7

    .line 8460
    .local v7, "info":Landroid/content/pm/ApplicationInfo;
    iget v8, v7, Landroid/content/pm/ApplicationInfo;->flags:I

    const/high16 v9, 0x40000

    and-int/2addr v8, v9

    if-eqz v8, :cond_2

    .line 8461
    invoke-interface {v1, v7}, Ljava/util/List;->add(Ljava/lang/Object;)Z
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 8464
    .end local v7    # "info":Landroid/content/pm/ApplicationInfo;
    :cond_2
    goto :goto_3

    .line 8463
    :catch_0
    move-exception v7

    .line 8465
    .end local v6    # "pkg":Ljava/lang/String;
    :goto_3
    goto :goto_2

    .line 8467
    .end local v2    # "extList":Ljava/util/Set;, "Ljava/util/Set<Ljava/lang/String;>;"
    .end local v3    # "pm":Landroid/content/pm/IPackageManager;
    :cond_3
    return-object v1
.end method

.method public getRunningServiceControlPanel(Landroid/content/ComponentName;)Landroid/app/PendingIntent;
    .locals 1
    .param p1, "name"    # Landroid/content/ComponentName;

    .line 11809
    const-string v0, "getRunningServiceControlPanel"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 11810
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 11811
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v0, p1}, Lcom/android/server/am/ActiveServices;->getRunningServiceControlPanelLocked(Landroid/content/ComponentName;)Landroid/app/PendingIntent;

    move-result-object v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-object v0

    .line 11812
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public getRunningUserIds()[I
    .locals 3

    .line 15137
    const-string v0, "android.permission.INTERACT_ACROSS_USERS"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v1

    if-nez v1, :cond_0

    .line 15146
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {v0}, Lcom/android/server/am/UserController;->getStartedUserArray()[I

    move-result-object v0

    return-object v0

    .line 15139
    :cond_0
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Permission Denial: isUserRunning() from pid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15140
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, ", uid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15141
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, " requires "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 15143
    .local v0, "msg":Ljava/lang/String;
    const-string v1, "ActivityManager"

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 15144
    new-instance v1, Ljava/lang/SecurityException;

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1
.end method

.method public getServices(II)Ljava/util/List;
    .locals 8
    .param p1, "maxNum"    # I
    .param p2, "flags"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(II)",
            "Ljava/util/List<",
            "Landroid/app/ActivityManager$RunningServiceInfo;",
            ">;"
        }
    .end annotation

    .line 11794
    const-string v0, "getServices"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 11796
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 11797
    .local v0, "callingUid":I
    const-string v1, "android.permission.INTERACT_ACROSS_USERS_FULL"

    invoke-static {v1, v0}, Landroid/app/ActivityManager;->checkUidPermission(Ljava/lang/String;I)I

    move-result v1

    if-nez v1, :cond_0

    const/4 v1, 0x1

    goto :goto_0

    :cond_0
    const/4 v1, 0x0

    :goto_0
    move v6, v1

    .line 11799
    .local v6, "canInteractAcrossUsers":Z
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    const-string v2, "getServices"

    .line 11800
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v3

    .line 11799
    invoke-virtual {v1, v2, v3, v0}, Lcom/android/server/wm/ActivityTaskManagerInternal;->isGetTasksAllowed(Ljava/lang/String;II)Z

    move-result v7

    .line 11801
    .local v7, "allowed":Z
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 11802
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    move v2, p1

    move v3, p2

    move v4, v0

    move v5, v7

    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/ActiveServices;->getRunningServiceInfoLocked(IIIZZ)Ljava/util/List;

    move-result-object v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-object v1

    .line 11804
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method getStartedUserState(I)Ljava/lang/String;
    .locals 2
    .param p1, "userId"    # I

    .line 15116
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {v0, p1}, Lcom/android/server/am/UserController;->getStartedUserState(I)Lcom/android/server/am/UserState;

    move-result-object v0

    .line 15117
    .local v0, "userState":Lcom/android/server/am/UserState;
    iget v1, v0, Lcom/android/server/am/UserState;->state:I

    invoke-static {v1}, Lcom/android/server/am/UserState;->stateToString(I)Ljava/lang/String;

    move-result-object v1

    return-object v1
.end method

.method public getTagForIntentSender(Landroid/content/IIntentSender;Ljava/lang/String;)Ljava/lang/String;
    .locals 3
    .param p1, "pendingResult"    # Landroid/content/IIntentSender;
    .param p2, "prefix"    # Ljava/lang/String;

    .line 5098
    instance-of v0, p1, Lcom/android/server/am/PendingIntentRecord;

    const/4 v1, 0x0

    if-nez v0, :cond_0

    .line 5099
    return-object v1

    .line 5102
    :cond_0
    :try_start_0
    move-object v0, p1

    check-cast v0, Lcom/android/server/am/PendingIntentRecord;

    .line 5103
    .local v0, "res":Lcom/android/server/am/PendingIntentRecord;
    monitor-enter p0
    :try_end_0
    .catch Ljava/lang/ClassCastException; {:try_start_0 .. :try_end_0} :catch_0

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 5104
    invoke-virtual {p0, v0, p2}, Lcom/android/server/am/ActivityManagerService;->getTagForIntentSenderLocked(Lcom/android/server/am/PendingIntentRecord;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v2

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-object v2

    .line 5105
    :catchall_0
    move-exception v2

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "pendingResult":Landroid/content/IIntentSender;
    .end local p2    # "prefix":Ljava/lang/String;
    throw v2
    :try_end_3
    .catch Ljava/lang/ClassCastException; {:try_start_3 .. :try_end_3} :catch_0

    .line 5106
    .end local v0    # "res":Lcom/android/server/am/PendingIntentRecord;
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "pendingResult":Landroid/content/IIntentSender;
    .restart local p2    # "prefix":Ljava/lang/String;
    :catch_0
    move-exception v0

    .line 5108
    return-object v1
.end method

.method getTagForIntentSenderLocked(Lcom/android/server/am/PendingIntentRecord;Ljava/lang/String;)Ljava/lang/String;
    .locals 3
    .param p1, "res"    # Lcom/android/server/am/PendingIntentRecord;
    .param p2, "prefix"    # Ljava/lang/String;

    .line 5112
    iget-object v0, p1, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v0, v0, Lcom/android/server/am/PendingIntentRecord$Key;->requestIntent:Landroid/content/Intent;

    .line 5113
    .local v0, "intent":Landroid/content/Intent;
    if-eqz v0, :cond_5

    .line 5114
    iget-object v1, p1, Lcom/android/server/am/PendingIntentRecord;->lastTag:Ljava/lang/String;

    if-eqz v1, :cond_1

    iget-object v1, p1, Lcom/android/server/am/PendingIntentRecord;->lastTagPrefix:Ljava/lang/String;

    if-ne v1, p2, :cond_1

    iget-object v1, p1, Lcom/android/server/am/PendingIntentRecord;->lastTagPrefix:Ljava/lang/String;

    if-eqz v1, :cond_0

    iget-object v1, p1, Lcom/android/server/am/PendingIntentRecord;->lastTagPrefix:Ljava/lang/String;

    .line 5115
    invoke-virtual {v1, p2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_1

    .line 5116
    :cond_0
    iget-object v1, p1, Lcom/android/server/am/PendingIntentRecord;->lastTag:Ljava/lang/String;

    return-object v1

    .line 5118
    :cond_1
    iput-object p2, p1, Lcom/android/server/am/PendingIntentRecord;->lastTagPrefix:Ljava/lang/String;

    .line 5119
    new-instance v1, Ljava/lang/StringBuilder;

    const/16 v2, 0x80

    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(I)V

    .line 5120
    .local v1, "sb":Ljava/lang/StringBuilder;
    if-eqz p2, :cond_2

    .line 5121
    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 5123
    :cond_2
    invoke-virtual {v0}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v2

    if-eqz v2, :cond_3

    .line 5124
    invoke-virtual {v0}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    goto :goto_0

    .line 5125
    :cond_3
    invoke-virtual {v0}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v2

    if-eqz v2, :cond_4

    .line 5126
    invoke-virtual {v0}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v2

    invoke-virtual {v2, v1}, Landroid/content/ComponentName;->appendShortString(Ljava/lang/StringBuilder;)V

    goto :goto_0

    .line 5128
    :cond_4
    const-string v2, "?"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 5130
    :goto_0
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    iput-object v2, p1, Lcom/android/server/am/PendingIntentRecord;->lastTag:Ljava/lang/String;

    return-object v2

    .line 5132
    .end local v1    # "sb":Ljava/lang/StringBuilder;
    :cond_5
    const/4 v1, 0x0

    return-object v1
.end method

.method public getTaskBounds(I)Landroid/graphics/Rect;
    .locals 1
    .param p1, "taskId"    # I

    .line 5826
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {v0, p1}, Lcom/android/server/wm/ActivityTaskManagerService;->getTaskBounds(I)Landroid/graphics/Rect;

    move-result-object v0

    return-object v0
.end method

.method public getTaskForActivity(Landroid/os/IBinder;Z)I
    .locals 1
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "onlyRoot"    # Z

    .line 5882
    invoke-static {}, Landroid/app/ActivityClient;->getInstance()Landroid/app/ActivityClient;

    move-result-object v0

    invoke-virtual {v0, p1, p2}, Landroid/app/ActivityClient;->getTaskForActivity(Landroid/os/IBinder;Z)I

    move-result v0

    return v0
.end method

.method public getTasks(I)Ljava/util/List;
    .locals 1
    .param p1, "maxNum"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(I)",
            "Ljava/util/List<",
            "Landroid/app/ActivityManager$RunningTaskInfo;",
            ">;"
        }
    .end annotation

    .line 5806
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {v0, p1}, Lcom/android/server/wm/ActivityTaskManagerService;->getTasks(I)Ljava/util/List;

    move-result-object v0

    return-object v0
.end method

.method getTopApp()Lcom/android/server/am/ProcessRecord;
    .locals 11

    .line 14471
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    const/4 v1, 0x0

    if-eqz v0, :cond_0

    invoke-virtual {v0}, Lcom/android/server/wm/ActivityTaskManagerInternal;->getTopApp()Lcom/android/server/wm/WindowProcessController;

    move-result-object v0

    goto :goto_0

    :cond_0
    move-object v0, v1

    .line 14472
    .local v0, "wpc":Lcom/android/server/wm/WindowProcessController;
    :goto_0
    if-eqz v0, :cond_1

    iget-object v1, v0, Lcom/android/server/wm/WindowProcessController;->mOwner:Ljava/lang/Object;

    check-cast v1, Lcom/android/server/am/ProcessRecord;

    .line 14475
    .local v1, "r":Lcom/android/server/am/ProcessRecord;
    :cond_1
    if-eqz v1, :cond_2

    .line 14476
    iget-object v2, v1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    .line 14477
    .local v2, "pkg":Ljava/lang/String;
    iget-object v3, v1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v3, v3, Landroid/content/pm/ApplicationInfo;->uid:I

    .local v3, "uid":I
    goto :goto_1

    .line 14479
    .end local v2    # "pkg":Ljava/lang/String;
    .end local v3    # "uid":I
    :cond_2
    const/4 v2, 0x0

    .line 14480
    .restart local v2    # "pkg":Ljava/lang/String;
    const/4 v3, -0x1

    .line 14483
    .restart local v3    # "uid":I
    :goto_1
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedAppLock:Ljava/lang/Object;

    monitor-enter v4

    .line 14484
    :try_start_0
    iget v5, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedUid:I

    if-ne v3, v5, :cond_3

    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedPackage:Ljava/lang/String;

    if-eq v2, v5, :cond_6

    if-eqz v2, :cond_3

    .line 14485
    invoke-virtual {v2, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-nez v5, :cond_6

    .line 14487
    :cond_3
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v5
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 14489
    .local v5, "identity":J
    :try_start_1
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedPackage:Ljava/lang/String;

    if-eqz v7, :cond_4

    .line 14490
    iget-object v8, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    const/16 v9, 0x4003

    iget v10, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedUid:I

    invoke-virtual {v8, v9, v7, v10}, Lcom/android/server/am/BatteryStatsService;->noteEvent(ILjava/lang/String;I)V

    .line 14493
    :cond_4
    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedPackage:Ljava/lang/String;

    .line 14494
    iput v3, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedUid:I

    .line 14495
    if-eqz v2, :cond_5

    .line 14496
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    const v8, 0x8003

    invoke-virtual {v7, v8, v2, v3}, Lcom/android/server/am/BatteryStatsService;->noteEvent(ILjava/lang/String;I)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 14500
    :cond_5
    :try_start_2
    invoke-static {v5, v6}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 14501
    nop

    .line 14503
    .end local v5    # "identity":J
    :cond_6
    monitor-exit v4

    .line 14504
    return-object v1

    .line 14500
    .restart local v5    # "identity":J
    :catchall_0
    move-exception v7

    invoke-static {v5, v6}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 14501
    nop

    .end local v0    # "wpc":Lcom/android/server/wm/WindowProcessController;
    .end local v1    # "r":Lcom/android/server/am/ProcessRecord;
    .end local v2    # "pkg":Ljava/lang/String;
    .end local v3    # "uid":I
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    throw v7

    .line 14503
    .end local v5    # "identity":J
    .restart local v0    # "wpc":Lcom/android/server/wm/WindowProcessController;
    .restart local v1    # "r":Lcom/android/server/am/ProcessRecord;
    .restart local v2    # "pkg":Ljava/lang/String;
    .restart local v3    # "uid":I
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    :catchall_1
    move-exception v5

    monitor-exit v4
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    throw v5
.end method

.method public getUidProcessCapabilities(ILjava/lang/String;)I
    .locals 2
    .param p1, "uid"    # I
    .param p2, "callingPackage"    # Ljava/lang/String;

    .line 6757
    invoke-direct {p0, p2}, Lcom/android/server/am/ActivityManagerService;->hasUsageStatsPermission(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_0

    .line 6758
    const-string v0, "android.permission.PACKAGE_USAGE_STATS"

    const-string v1, "getUidProcessState"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 6762
    :cond_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 6763
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v1, p1}, Lcom/android/server/am/ProcessList;->getUidProcessCapabilityLOSP(I)I

    move-result v1

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    return v1

    .line 6764
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v1
.end method

.method public getUidProcessState(ILjava/lang/String;)I
    .locals 2
    .param p1, "uid"    # I
    .param p2, "callingPackage"    # Ljava/lang/String;

    .line 6745
    invoke-direct {p0, p2}, Lcom/android/server/am/ActivityManagerService;->hasUsageStatsPermission(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_0

    .line 6746
    const-string v0, "android.permission.PACKAGE_USAGE_STATS"

    const-string v1, "getUidProcessState"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 6750
    :cond_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 6751
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v1, p1}, Lcom/android/server/am/ProcessList;->getUidProcStateLOSP(I)I

    move-result v1

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    return v1

    .line 6752
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v1
.end method

.method getUidState(I)I
    .locals 2
    .param p1, "uid"    # I

    .line 5238
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 5239
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v1, p1}, Lcom/android/server/am/ProcessList;->getUidProcStateLOSP(I)I

    move-result v1

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    return v1

    .line 5240
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v1
.end method

.method getUidStateLocked(I)I
    .locals 1
    .param p1, "uid"    # I

    .line 5245
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v0, p1}, Lcom/android/server/am/ProcessList;->getUidProcStateLOSP(I)I

    move-result v0

    return v0
.end method

.method public grantImplicitAccess(ILandroid/content/Intent;II)V
    .locals 6
    .param p1, "userId"    # I
    .param p2, "intent"    # Landroid/content/Intent;
    .param p3, "visibleUid"    # I
    .param p4, "recipientAppId"    # I

    .line 5670
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getPackageManagerInternal()Landroid/content/pm/PackageManagerInternal;

    move-result-object v0

    .line 5671
    const/4 v5, 0x1

    move v1, p1

    move-object v2, p2

    move v3, p4

    move v4, p3

    invoke-virtual/range {v0 .. v5}, Landroid/content/pm/PackageManagerInternal;->grantImplicitAccess(ILandroid/content/Intent;IIZ)V

    .line 5672
    return-void
.end method

.method public grantUriPermission(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/net/Uri;II)V
    .locals 6
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .param p2, "targetPkg"    # Ljava/lang/String;
    .param p3, "uri"    # Landroid/net/Uri;
    .param p4, "modeFlags"    # I
    .param p5, "userId"    # I

    .line 5715
    const-string v0, "grantUriPermission"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 5716
    new-instance v0, Lcom/android/server/uri/GrantUri;

    invoke-direct {v0, p5, p3, p4}, Lcom/android/server/uri/GrantUri;-><init>(ILandroid/net/Uri;I)V

    .line 5717
    .local v0, "grantUri":Lcom/android/server/uri/GrantUri;
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 5718
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLOSP(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;

    move-result-object v1

    .line 5719
    .local v1, "r":Lcom/android/server/am/ProcessRecord;
    if-eqz v1, :cond_1

    .line 5724
    if-eqz p2, :cond_0

    .line 5728
    const/16 v2, 0xc3

    invoke-static {p4, v2}, Lcom/android/internal/util/Preconditions;->checkFlagsArgument(II)I

    .line 5733
    new-instance v2, Landroid/content/Intent;

    invoke-direct {v2}, Landroid/content/Intent;-><init>()V

    .line 5734
    .local v2, "intent":Landroid/content/Intent;
    invoke-virtual {v2, p3}, Landroid/content/Intent;->setData(Landroid/net/Uri;)Landroid/content/Intent;

    .line 5735
    invoke-virtual {v2, p4}, Landroid/content/Intent;->setFlags(I)Landroid/content/Intent;

    .line 5737
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mUgmInternal:Lcom/android/server/uri/UriGrantsManagerInternal;

    iget v4, v1, Lcom/android/server/am/ProcessRecord;->uid:I

    iget v5, v1, Lcom/android/server/am/ProcessRecord;->uid:I

    .line 5738
    invoke-static {v5}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v5

    .line 5737
    invoke-interface {v3, v2, v4, p2, v5}, Lcom/android/server/uri/UriGrantsManagerInternal;->checkGrantUriPermissionFromIntent(Landroid/content/Intent;ILjava/lang/String;I)Lcom/android/server/uri/NeededUriGrants;

    move-result-object v3

    .line 5739
    .local v3, "needed":Lcom/android/server/uri/NeededUriGrants;
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mUgmInternal:Lcom/android/server/uri/UriGrantsManagerInternal;

    const/4 v5, 0x0

    invoke-interface {v4, v3, v5}, Lcom/android/server/uri/UriGrantsManagerInternal;->grantUriPermissionUncheckedFromIntent(Lcom/android/server/uri/NeededUriGrants;Lcom/android/server/uri/UriPermissionOwner;)V

    .line 5740
    .end local v1    # "r":Lcom/android/server/am/ProcessRecord;
    .end local v2    # "intent":Landroid/content/Intent;
    .end local v3    # "needed":Lcom/android/server/uri/NeededUriGrants;
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 5741
    return-void

    .line 5725
    .restart local v1    # "r":Lcom/android/server/am/ProcessRecord;
    :cond_0
    :try_start_1
    new-instance v2, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v3, "null target"

    invoke-direct {v2, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .end local v0    # "grantUri":Lcom/android/server/uri/GrantUri;
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "caller":Landroid/app/IApplicationThread;
    .end local p2    # "targetPkg":Ljava/lang/String;
    .end local p3    # "uri":Landroid/net/Uri;
    .end local p4    # "modeFlags":I
    .end local p5    # "userId":I
    throw v2

    .line 5720
    .restart local v0    # "grantUri":Lcom/android/server/uri/GrantUri;
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "caller":Landroid/app/IApplicationThread;
    .restart local p2    # "targetPkg":Ljava/lang/String;
    .restart local p3    # "uri":Landroid/net/Uri;
    .restart local p4    # "modeFlags":I
    .restart local p5    # "userId":I
    :cond_1
    new-instance v2, Ljava/lang/SecurityException;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Unable to find app for caller "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v4, " when granting permission to uri "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .end local v0    # "grantUri":Lcom/android/server/uri/GrantUri;
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "caller":Landroid/app/IApplicationThread;
    .end local p2    # "targetPkg":Ljava/lang/String;
    .end local p3    # "uri":Landroid/net/Uri;
    .end local p4    # "modeFlags":I
    .end local p5    # "userId":I
    throw v2

    .line 5740
    .end local v1    # "r":Lcom/android/server/am/ProcessRecord;
    .restart local v0    # "grantUri":Lcom/android/server/uri/GrantUri;
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "caller":Landroid/app/IApplicationThread;
    .restart local p2    # "targetPkg":Ljava/lang/String;
    .restart local p3    # "uri":Landroid/net/Uri;
    .restart local p4    # "modeFlags":I
    .restart local p5    # "userId":I
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method final handleAppDiedLocked(Lcom/android/server/am/ProcessRecord;IZZZ)V
    .locals 8
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "pid"    # I
    .param p3, "restarting"    # Z
    .param p4, "allowRestart"    # Z
    .param p5, "fromBinderDied"    # Z

    .line 3014
    const/4 v5, -0x1

    const/4 v6, 0x0

    move-object v0, p0

    move-object v1, p1

    move v2, p2

    move v3, p3

    move v4, p4

    move v7, p5

    invoke-virtual/range {v0 .. v7}, Lcom/android/server/am/ActivityManagerService;->cleanUpApplicationRecordLocked(Lcom/android/server/am/ProcessRecord;IZZIZZ)Z

    move-result v0

    .line 3016
    .local v0, "kept":Z
    if-nez v0, :cond_0

    if-nez p3, :cond_0

    .line 3017
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->removeLruProcessLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 3018
    if-lez p2, :cond_0

    .line 3019
    invoke-static {p2}, Lcom/android/server/am/ProcessList;->remove(I)V

    .line 3023
    :cond_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    invoke-virtual {v1, p1}, Lcom/android/server/am/AppProfiler;->onAppDiedLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 3025
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->getWindowProcessController()Lcom/android/server/wm/WindowProcessController;

    move-result-object v2

    new-instance v3, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda8;

    invoke-direct {v3, p0, p1}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda8;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ProcessRecord;)V

    invoke-virtual {v1, v2, p3, v3}, Lcom/android/server/wm/ActivityTaskManagerInternal;->handleAppDied(Lcom/android/server/wm/WindowProcessController;ZLjava/lang/Runnable;)V

    .line 3032
    return-void
.end method

.method public handleApplicationCrash(Landroid/os/IBinder;Landroid/app/ApplicationErrorReport$ParcelableCrashInfo;)V
    .locals 3
    .param p1, "app"    # Landroid/os/IBinder;
    .param p2, "crashInfo"    # Landroid/app/ApplicationErrorReport$ParcelableCrashInfo;

    .line 7818
    const-string v0, "Crash"

    invoke-direct {p0, p1, v0}, Lcom/android/server/am/ActivityManagerService;->findAppProcess(Landroid/os/IBinder;Ljava/lang/String;)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    .line 7819
    .local v0, "r":Lcom/android/server/am/ProcessRecord;
    if-nez p1, :cond_0

    const-string/jumbo v1, "system_server"

    goto :goto_0

    .line 7820
    :cond_0
    if-nez v0, :cond_1

    const-string/jumbo v1, "unknown"

    goto :goto_0

    :cond_1
    iget-object v1, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    :goto_0
    nop

    .line 7822
    .local v1, "processName":Ljava/lang/String;
    const-string v2, "crash"

    invoke-virtual {p0, v2, v0, v1, p2}, Lcom/android/server/am/ActivityManagerService;->handleApplicationCrashInner(Ljava/lang/String;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/app/ApplicationErrorReport$CrashInfo;)V

    .line 7823
    return-void
.end method

.method handleApplicationCrashInner(Ljava/lang/String;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/app/ApplicationErrorReport$CrashInfo;)V
    .locals 45
    .param p1, "eventType"    # Ljava/lang/String;
    .param p2, "r"    # Lcom/android/server/am/ProcessRecord;
    .param p3, "processName"    # Ljava/lang/String;
    .param p4, "crashInfo"    # Landroid/app/ApplicationErrorReport$CrashInfo;

    .line 7830
    move-object/from16 v14, p0

    move-object/from16 v15, p2

    move-object/from16 v13, p4

    const/high16 v0, 0x3f800000    # 1.0f

    .line 7831
    .local v0, "loadingProgress":F
    const/4 v1, 0x0

    .line 7833
    .local v1, "incrementalMetrics":Landroid/os/incremental/IncrementalMetrics;
    if-eqz v15, :cond_1

    iget-object v2, v15, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    if-eqz v2, :cond_1

    iget-object v2, v15, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v2, v2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    if-eqz v2, :cond_1

    .line 7834
    iget-object v2, v14, Lcom/android/server/am/ActivityManagerService;->mPackageManagerInt:Landroid/content/pm/PackageManagerInternal;

    iget-object v3, v15, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v3, v3, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget v4, v15, Lcom/android/server/am/ProcessRecord;->uid:I

    iget v5, v15, Lcom/android/server/am/ProcessRecord;->userId:I

    .line 7835
    invoke-virtual {v2, v3, v4, v5}, Landroid/content/pm/PackageManagerInternal;->getIncrementalStatesInfo(Ljava/lang/String;II)Landroid/content/pm/IncrementalStatesInfo;

    move-result-object v2

    .line 7837
    .local v2, "incrementalStatesInfo":Landroid/content/pm/IncrementalStatesInfo;
    if-eqz v2, :cond_0

    .line 7838
    invoke-virtual {v2}, Landroid/content/pm/IncrementalStatesInfo;->getProgress()F

    move-result v0

    .line 7840
    :cond_0
    iget-object v3, v15, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    invoke-virtual {v3}, Landroid/content/pm/ApplicationInfo;->getCodePath()Ljava/lang/String;

    move-result-object v3

    .line 7841
    .local v3, "codePath":Ljava/lang/String;
    if-eqz v3, :cond_1

    invoke-virtual {v3}, Ljava/lang/String;->isEmpty()Z

    move-result v4

    if-nez v4, :cond_1

    .line 7842
    invoke-static {v3}, Landroid/os/incremental/IncrementalManager;->isIncrementalPath(Ljava/lang/String;)Z

    move-result v4

    if-eqz v4, :cond_1

    .line 7844
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "App crashed on incremental package "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v5, v15, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v5, v5, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v5, " which is "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const/high16 v5, 0x42c80000    # 100.0f

    mul-float/2addr v5, v0

    float-to-int v5, v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v5, "% loaded."

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    const-string v5, "ActivityManager"

    invoke-static {v5, v4}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 7846
    const-string v4, "incremental"

    invoke-static {v4}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v4

    .line 7848
    .local v4, "incrementalService":Landroid/os/IBinder;
    if-eqz v4, :cond_1

    .line 7849
    new-instance v5, Landroid/os/incremental/IncrementalManager;

    .line 7850
    invoke-static {v4}, Landroid/os/incremental/IIncrementalService$Stub;->asInterface(Landroid/os/IBinder;)Landroid/os/incremental/IIncrementalService;

    move-result-object v6

    invoke-direct {v5, v6}, Landroid/os/incremental/IncrementalManager;-><init>(Landroid/os/incremental/IIncrementalService;)V

    .line 7851
    .local v5, "incrementalManager":Landroid/os/incremental/IncrementalManager;
    invoke-virtual {v5, v3}, Landroid/os/incremental/IncrementalManager;->getMetrics(Ljava/lang/String;)Landroid/os/incremental/IncrementalMetrics;

    move-result-object v1

    move v12, v0

    move-object/from16 v44, v1

    goto :goto_0

    .line 7856
    .end local v2    # "incrementalStatesInfo":Landroid/content/pm/IncrementalStatesInfo;
    .end local v3    # "codePath":Ljava/lang/String;
    .end local v4    # "incrementalService":Landroid/os/IBinder;
    .end local v5    # "incrementalManager":Landroid/os/incremental/IncrementalManager;
    :cond_1
    move v12, v0

    move-object/from16 v44, v1

    .end local v0    # "loadingProgress":F
    .end local v1    # "incrementalMetrics":Landroid/os/incremental/IncrementalMetrics;
    .local v12, "loadingProgress":F
    .local v44, "incrementalMetrics":Landroid/os/incremental/IncrementalMetrics;
    :goto_0
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v0

    .line 7857
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    invoke-static {v1}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v1

    .line 7858
    const/4 v8, -0x1

    if-nez v15, :cond_2

    move v3, v8

    goto :goto_1

    :cond_2
    iget-object v2, v15, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v2, v2, Landroid/content/pm/ApplicationInfo;->flags:I

    move v3, v2

    :goto_1
    iget-object v4, v13, Landroid/app/ApplicationErrorReport$CrashInfo;->exceptionClassName:Ljava/lang/String;

    iget-object v5, v13, Landroid/app/ApplicationErrorReport$CrashInfo;->exceptionMessage:Ljava/lang/String;

    iget-object v6, v13, Landroid/app/ApplicationErrorReport$CrashInfo;->throwFileName:Ljava/lang/String;

    iget v7, v13, Landroid/app/ApplicationErrorReport$CrashInfo;->throwLineNumber:I

    .line 7856
    move-object/from16 v2, p3

    invoke-static/range {v0 .. v7}, Lcom/android/server/am/EventLogTags;->writeAmCrash(IILjava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V

    .line 7864
    const/16 v16, 0x4e

    .line 7865
    if-eqz v15, :cond_3

    iget v0, v15, Lcom/android/server/am/ProcessRecord;->uid:I

    move/from16 v17, v0

    goto :goto_2

    :cond_3
    move/from16 v17, v8

    .line 7868
    :goto_2
    if-eqz v15, :cond_4

    invoke-virtual/range {p2 .. p2}, Lcom/android/server/am/ProcessRecord;->getPid()I

    move-result v0

    move/from16 v20, v0

    goto :goto_3

    :cond_4
    move/from16 v20, v8

    .line 7869
    :goto_3
    if-eqz v15, :cond_5

    iget-object v0, v15, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    if-eqz v0, :cond_5

    iget-object v0, v15, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v0, v0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    goto :goto_4

    :cond_5
    const-string v0, ""

    :goto_4
    move-object/from16 v21, v0

    .line 7870
    const/4 v0, 0x2

    const/4 v1, 0x1

    const/4 v2, 0x0

    if-eqz v15, :cond_7

    iget-object v3, v15, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    if-eqz v3, :cond_7

    iget-object v3, v15, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    invoke-virtual {v3}, Landroid/content/pm/ApplicationInfo;->isInstantApp()Z

    move-result v3

    if-eqz v3, :cond_6

    .line 7871
    move/from16 v22, v0

    goto :goto_5

    .line 7872
    :cond_6
    move/from16 v22, v1

    goto :goto_5

    .line 7873
    :cond_7
    move/from16 v22, v2

    .line 7874
    :goto_5
    if-eqz v15, :cond_9

    invoke-virtual/range {p2 .. p2}, Lcom/android/server/am/ProcessRecord;->isInterestingToUserLocked()Z

    move-result v3

    if-eqz v3, :cond_8

    .line 7875
    move/from16 v23, v0

    goto :goto_6

    .line 7876
    :cond_8
    move/from16 v23, v1

    goto :goto_6

    .line 7877
    :cond_9
    move/from16 v23, v2

    .line 7878
    :goto_6
    const-string/jumbo v0, "system_server"

    move-object/from16 v11, p3

    invoke-virtual {v11, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_a

    const/4 v0, 0x3

    move/from16 v24, v0

    goto :goto_7

    .line 7879
    :cond_a
    if-eqz v15, :cond_b

    invoke-virtual/range {p2 .. p2}, Lcom/android/server/am/ProcessRecord;->getProcessClassEnum()I

    move-result v0

    move/from16 v24, v0

    goto :goto_7

    .line 7880
    :cond_b
    move/from16 v24, v2

    :goto_7
    if-eqz v44, :cond_c

    move/from16 v25, v1

    goto :goto_8

    :cond_c
    move/from16 v25, v2

    .line 7882
    :goto_8
    const-wide/16 v3, -0x1

    if-eqz v44, :cond_d

    invoke-virtual/range {v44 .. v44}, Landroid/os/incremental/IncrementalMetrics;->getMillisSinceOldestPendingRead()J

    move-result-wide v5

    move-wide/from16 v27, v5

    goto :goto_9

    .line 7883
    :cond_d
    move-wide/from16 v27, v3

    .line 7884
    :goto_9
    if-eqz v44, :cond_e

    invoke-virtual/range {v44 .. v44}, Landroid/os/incremental/IncrementalMetrics;->getStorageHealthStatusCode()I

    move-result v0

    move/from16 v29, v0

    goto :goto_a

    .line 7885
    :cond_e
    move/from16 v29, v8

    .line 7886
    :goto_a
    if-eqz v44, :cond_f

    invoke-virtual/range {v44 .. v44}, Landroid/os/incremental/IncrementalMetrics;->getDataLoaderStatusCode()I

    move-result v0

    move/from16 v30, v0

    goto :goto_b

    .line 7887
    :cond_f
    move/from16 v30, v8

    :goto_b
    if-eqz v44, :cond_10

    .line 7888
    invoke-virtual/range {v44 .. v44}, Landroid/os/incremental/IncrementalMetrics;->getReadLogsEnabled()Z

    move-result v0

    if-eqz v0, :cond_10

    move/from16 v31, v1

    goto :goto_c

    :cond_10
    move/from16 v31, v2

    .line 7889
    :goto_c
    if-eqz v44, :cond_11

    invoke-virtual/range {v44 .. v44}, Landroid/os/incremental/IncrementalMetrics;->getMillisSinceLastDataLoaderBind()J

    move-result-wide v0

    move-wide/from16 v32, v0

    goto :goto_d

    .line 7890
    :cond_11
    move-wide/from16 v32, v3

    .line 7891
    :goto_d
    if-eqz v44, :cond_12

    invoke-virtual/range {v44 .. v44}, Landroid/os/incremental/IncrementalMetrics;->getDataLoaderBindDelayMillis()J

    move-result-wide v0

    move-wide/from16 v34, v0

    goto :goto_e

    .line 7892
    :cond_12
    move-wide/from16 v34, v3

    .line 7893
    :goto_e
    if-eqz v44, :cond_13

    invoke-virtual/range {v44 .. v44}, Landroid/os/incremental/IncrementalMetrics;->getTotalDelayedReads()I

    move-result v0

    move/from16 v36, v0

    goto :goto_f

    .line 7894
    :cond_13
    move/from16 v36, v8

    .line 7895
    :goto_f
    if-eqz v44, :cond_14

    invoke-virtual/range {v44 .. v44}, Landroid/os/incremental/IncrementalMetrics;->getTotalFailedReads()I

    move-result v0

    move/from16 v37, v0

    goto :goto_10

    .line 7896
    :cond_14
    move/from16 v37, v8

    .line 7897
    :goto_10
    if-eqz v44, :cond_15

    invoke-virtual/range {v44 .. v44}, Landroid/os/incremental/IncrementalMetrics;->getLastReadErrorUid()I

    move-result v0

    move/from16 v38, v0

    goto :goto_11

    .line 7898
    :cond_15
    move/from16 v38, v8

    .line 7899
    :goto_11
    if-eqz v44, :cond_16

    invoke-virtual/range {v44 .. v44}, Landroid/os/incremental/IncrementalMetrics;->getMillisSinceLastReadError()J

    move-result-wide v0

    move-wide/from16 v39, v0

    goto :goto_12

    .line 7900
    :cond_16
    move-wide/from16 v39, v3

    .line 7901
    :goto_12
    if-eqz v44, :cond_17

    invoke-virtual/range {v44 .. v44}, Landroid/os/incremental/IncrementalMetrics;->getLastReadErrorNumber()I

    move-result v0

    move/from16 v41, v0

    goto :goto_13

    .line 7902
    :cond_17
    move/from16 v41, v2

    .line 7903
    :goto_13
    if-eqz v44, :cond_18

    invoke-virtual/range {v44 .. v44}, Landroid/os/incremental/IncrementalMetrics;->getTotalDelayedReadsDurationMillis()J

    move-result-wide v0

    move-wide/from16 v42, v0

    goto :goto_14

    .line 7904
    :cond_18
    move-wide/from16 v42, v3

    .line 7864
    :goto_14
    move-object/from16 v18, p1

    move-object/from16 v19, p3

    move/from16 v26, v12

    invoke-static/range {v16 .. v43}, Lcom/android/internal/util/FrameworkStatsLog;->write(IILjava/lang/String;Ljava/lang/String;ILjava/lang/String;IIIZFJIIZJJIIIJIJ)V

    .line 7907
    if-nez v15, :cond_19

    goto :goto_15

    .line 7908
    :cond_19
    invoke-virtual/range {p2 .. p2}, Lcom/android/server/am/ProcessRecord;->getWindowProcessController()Lcom/android/server/wm/WindowProcessController;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/server/wm/WindowProcessController;->computeRelaunchReason()I

    move-result v2

    :goto_15
    move/from16 v16, v2

    .line 7909
    .local v16, "relaunchReason":I
    invoke-static/range {v16 .. v16}, Lcom/android/server/wm/ActivityTaskManagerService;->relaunchReasonToString(I)Ljava/lang/String;

    move-result-object v10

    .line 7910
    .local v10, "relaunchReasonString":Ljava/lang/String;
    iget-object v0, v13, Landroid/app/ApplicationErrorReport$CrashInfo;->crashTag:Ljava/lang/String;

    if-nez v0, :cond_1a

    .line 7911
    iput-object v10, v13, Landroid/app/ApplicationErrorReport$CrashInfo;->crashTag:Ljava/lang/String;

    goto :goto_16

    .line 7913
    :cond_1a
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    iget-object v1, v13, Landroid/app/ApplicationErrorReport$CrashInfo;->crashTag:Ljava/lang/String;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, " "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    iput-object v0, v13, Landroid/app/ApplicationErrorReport$CrashInfo;->crashTag:Ljava/lang/String;

    .line 7916
    :goto_16
    const/4 v4, 0x0

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    new-instance v3, Ljava/lang/Float;

    invoke-direct {v3, v12}, Ljava/lang/Float;-><init>(F)V

    const/16 v17, 0x0

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move-object/from16 v2, p2

    move-object/from16 v18, v3

    move-object/from16 v3, p3

    move-object/from16 v19, v10

    .end local v10    # "relaunchReasonString":Ljava/lang/String;
    .local v19, "relaunchReasonString":Ljava/lang/String;
    move-object/from16 v10, p4

    move-object/from16 v11, v18

    move/from16 v18, v12

    .end local v12    # "loadingProgress":F
    .local v18, "loadingProgress":F
    move-object/from16 v12, v44

    move-object v15, v13

    move-object/from16 v13, v17

    invoke-virtual/range {v0 .. v13}, Lcom/android/server/am/ActivityManagerService;->addErrorToDropBox(Ljava/lang/String;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Ljava/io/File;Landroid/app/ApplicationErrorReport$CrashInfo;Ljava/lang/Float;Landroid/os/incremental/IncrementalMetrics;Ljava/util/UUID;)V

    .line 7920
    iget-object v0, v14, Lcom/android/server/am/ActivityManagerService;->mAppErrors:Lcom/android/server/am/AppErrors;

    move-object/from16 v1, p2

    move-object v2, v15

    invoke-virtual {v0, v1, v2}, Lcom/android/server/am/AppErrors;->crashApplication(Lcom/android/server/am/ProcessRecord;Landroid/app/ApplicationErrorReport$CrashInfo;)V

    .line 7921
    return-void
.end method

.method public handleApplicationStrictModeViolation(Landroid/os/IBinder;ILandroid/os/StrictMode$ViolationInfo;)V
    .locals 8
    .param p1, "app"    # Landroid/os/IBinder;
    .param p2, "penaltyMask"    # I
    .param p3, "info"    # Landroid/os/StrictMode$ViolationInfo;

    .line 7929
    const-string v0, "StrictMode"

    invoke-direct {p0, p1, v0}, Lcom/android/server/am/ActivityManagerService;->findAppProcess(Landroid/os/IBinder;Ljava/lang/String;)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    .line 7931
    .local v0, "r":Lcom/android/server/am/ProcessRecord;
    const/high16 v1, 0x4000000

    and-int/2addr v1, p2

    if-eqz v1, :cond_2

    .line 7932
    invoke-virtual {p3}, Landroid/os/StrictMode$ViolationInfo;->hashCode()I

    move-result v1

    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    .line 7933
    .local v1, "stackFingerprint":Ljava/lang/Integer;
    const/4 v2, 0x1

    .line 7934
    .local v2, "logIt":Z
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mAlreadyLoggedViolatedStacks:Ljava/util/HashSet;

    monitor-enter v3

    .line 7935
    :try_start_0
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mAlreadyLoggedViolatedStacks:Ljava/util/HashSet;

    invoke-virtual {v4, v1}, Ljava/util/HashSet;->contains(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_0

    .line 7936
    const/4 v2, 0x0

    goto :goto_0

    .line 7944
    :cond_0
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mAlreadyLoggedViolatedStacks:Ljava/util/HashSet;

    invoke-virtual {v4}, Ljava/util/HashSet;->size()I

    move-result v4

    const/16 v5, 0x1388

    if-lt v4, v5, :cond_1

    .line 7945
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mAlreadyLoggedViolatedStacks:Ljava/util/HashSet;

    invoke-virtual {v4}, Ljava/util/HashSet;->clear()V

    .line 7947
    :cond_1
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mAlreadyLoggedViolatedStacks:Ljava/util/HashSet;

    invoke-virtual {v4, v1}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    .line 7949
    :goto_0
    monitor-exit v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 7950
    if-eqz v2, :cond_2

    .line 7951
    invoke-direct {p0, v0, p3}, Lcom/android/server/am/ActivityManagerService;->logStrictModeViolationToDropBox(Lcom/android/server/am/ProcessRecord;Landroid/os/StrictMode$ViolationInfo;)V

    goto :goto_1

    .line 7949
    :catchall_0
    move-exception v4

    :try_start_1
    monitor-exit v3
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v4

    .line 7955
    .end local v1    # "stackFingerprint":Ljava/lang/Integer;
    .end local v2    # "logIt":Z
    :cond_2
    :goto_1
    const/high16 v1, 0x20000000

    and-int/2addr v1, p2

    if-eqz v1, :cond_3

    .line 7956
    new-instance v1, Lcom/android/server/am/AppErrorResult;

    invoke-direct {v1}, Lcom/android/server/am/AppErrorResult;-><init>()V

    .line 7957
    .local v1, "result":Lcom/android/server/am/AppErrorResult;
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 7959
    .local v2, "origId":J
    :try_start_2
    invoke-static {}, Landroid/os/Message;->obtain()Landroid/os/Message;

    move-result-object v4

    .line 7960
    .local v4, "msg":Landroid/os/Message;
    const/16 v5, 0x1a

    iput v5, v4, Landroid/os/Message;->what:I

    .line 7961
    new-instance v5, Ljava/util/HashMap;

    invoke-direct {v5}, Ljava/util/HashMap;-><init>()V

    .line 7962
    .local v5, "data":Ljava/util/HashMap;, "Ljava/util/HashMap<Ljava/lang/String;Ljava/lang/Object;>;"
    const-string/jumbo v6, "result"

    invoke-virtual {v5, v6, v1}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 7963
    const-string v6, "app"

    invoke-virtual {v5, v6, v0}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 7964
    const-string v6, "info"

    invoke-virtual {v5, v6, p3}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 7965
    iput-object v5, v4, Landroid/os/Message;->obj:Ljava/lang/Object;

    .line 7966
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mUiHandler:Landroid/os/Handler;

    invoke-virtual {v6, v4}, Landroid/os/Handler;->sendMessage(Landroid/os/Message;)Z
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 7968
    nop

    .end local v4    # "msg":Landroid/os/Message;
    .end local v5    # "data":Ljava/util/HashMap;, "Ljava/util/HashMap<Ljava/lang/String;Ljava/lang/Object;>;"
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 7969
    nop

    .line 7970
    invoke-virtual {v1}, Lcom/android/server/am/AppErrorResult;->get()I

    move-result v4

    .line 7971
    .local v4, "res":I
    const-string v5, "ActivityManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "handleApplicationStrictModeViolation; res="

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_2

    .line 7968
    .end local v4    # "res":I
    :catchall_1
    move-exception v4

    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 7969
    throw v4

    .line 7973
    .end local v1    # "result":Lcom/android/server/am/AppErrorResult;
    .end local v2    # "origId":J
    :cond_3
    :goto_2
    return-void
.end method

.method public handleApplicationWtf(Landroid/os/IBinder;Ljava/lang/String;ZLandroid/app/ApplicationErrorReport$ParcelableCrashInfo;I)Z
    .locals 15
    .param p1, "app"    # Landroid/os/IBinder;
    .param p2, "tag"    # Ljava/lang/String;
    .param p3, "system"    # Z
    .param p4, "crashInfo"    # Landroid/app/ApplicationErrorReport$ParcelableCrashInfo;
    .param p5, "immediateCallerPid"    # I

    .line 8049
    move-object v7, p0

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v8

    .line 8050
    .local v8, "callingUid":I
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v9

    .line 8053
    .local v9, "callingPid":I
    invoke-static/range {p4 .. p4}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 8063
    const/4 v10, 0x0

    if-nez p3, :cond_6

    invoke-static {}, Landroid/os/Process;->myPid()I

    move-result v0

    move/from16 v11, p5

    if-ne v11, v0, :cond_0

    move-object/from16 v12, p4

    goto :goto_4

    .line 8072
    :cond_0
    move-object v0, p0

    move v1, v8

    move v2, v9

    move-object/from16 v3, p1

    move-object/from16 v4, p2

    move-object/from16 v5, p4

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->handleApplicationWtfInner(IILandroid/os/IBinder;Ljava/lang/String;Landroid/app/ApplicationErrorReport$CrashInfo;)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    .line 8075
    .local v0, "r":Lcom/android/server/am/ProcessRecord;
    sget-boolean v1, Landroid/os/Build;->IS_ENG:Z

    const/4 v2, 0x1

    if-nez v1, :cond_2

    iget-object v1, v7, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    .line 8076
    invoke-virtual {v1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v1

    const-string/jumbo v3, "wtf_is_fatal"

    invoke-static {v1, v3, v10}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v1

    if-eqz v1, :cond_1

    goto :goto_0

    :cond_1
    move v1, v10

    goto :goto_1

    :cond_2
    :goto_0
    move v1, v2

    .line 8077
    .local v1, "isFatal":Z
    :goto_1
    if-eqz v0, :cond_4

    invoke-virtual {v0}, Lcom/android/server/am/ProcessRecord;->isPersistent()Z

    move-result v3

    if-eqz v3, :cond_3

    goto :goto_2

    :cond_3
    move v3, v10

    goto :goto_3

    :cond_4
    :goto_2
    move v3, v2

    .line 8079
    .local v3, "isSystem":Z
    :goto_3
    if-eqz v1, :cond_5

    if-nez v3, :cond_5

    .line 8080
    iget-object v4, v7, Lcom/android/server/am/ActivityManagerService;->mAppErrors:Lcom/android/server/am/AppErrors;

    move-object/from16 v12, p4

    invoke-virtual {v4, v0, v12}, Lcom/android/server/am/AppErrors;->crashApplication(Lcom/android/server/am/ProcessRecord;Landroid/app/ApplicationErrorReport$CrashInfo;)V

    .line 8081
    return v2

    .line 8079
    :cond_5
    move-object/from16 v12, p4

    .line 8083
    return v10

    .line 8063
    .end local v0    # "r":Lcom/android/server/am/ProcessRecord;
    .end local v1    # "isFatal":Z
    .end local v3    # "isSystem":Z
    :cond_6
    move-object/from16 v12, p4

    move/from16 v11, p5

    .line 8064
    :goto_4
    iget-object v13, v7, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    new-instance v14, Lcom/android/server/am/ActivityManagerService$15;

    move-object v0, v14

    move-object v1, p0

    move v2, v8

    move v3, v9

    move-object/from16 v4, p1

    move-object/from16 v5, p2

    move-object/from16 v6, p4

    invoke-direct/range {v0 .. v6}, Lcom/android/server/am/ActivityManagerService$15;-><init>(Lcom/android/server/am/ActivityManagerService;IILandroid/os/IBinder;Ljava/lang/String;Landroid/app/ApplicationErrorReport$ParcelableCrashInfo;)V

    invoke-virtual {v13, v14}, Lcom/android/server/am/ActivityManagerService$MainHandler;->post(Ljava/lang/Runnable;)Z

    .line 8069
    return v10
.end method

.method handleApplicationWtfInner(IILandroid/os/IBinder;Ljava/lang/String;Landroid/app/ApplicationErrorReport$CrashInfo;)Lcom/android/server/am/ProcessRecord;
    .locals 22
    .param p1, "callingUid"    # I
    .param p2, "callingPid"    # I
    .param p3, "app"    # Landroid/os/IBinder;
    .param p4, "tag"    # Ljava/lang/String;
    .param p5, "crashInfo"    # Landroid/app/ApplicationErrorReport$CrashInfo;

    .line 8089
    move-object/from16 v0, p3

    move-object/from16 v15, p5

    const-string v1, "WTF"

    move-object/from16 v14, p0

    invoke-direct {v14, v0, v1}, Lcom/android/server/am/ActivityManagerService;->findAppProcess(Landroid/os/IBinder;Ljava/lang/String;)Lcom/android/server/am/ProcessRecord;

    move-result-object v13

    .line 8090
    .local v13, "r":Lcom/android/server/am/ProcessRecord;
    const-string/jumbo v1, "unknown"

    if-nez v0, :cond_0

    const-string/jumbo v2, "system_server"

    move-object/from16 v18, v2

    goto :goto_0

    .line 8091
    :cond_0
    if-nez v13, :cond_1

    move-object/from16 v18, v1

    goto :goto_0

    :cond_1
    iget-object v2, v13, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v18, v2

    :goto_0
    nop

    .line 8093
    .local v18, "processName":Ljava/lang/String;
    invoke-static/range {p1 .. p1}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v16

    .line 8094
    if-nez v13, :cond_2

    const/4 v2, -0x1

    goto :goto_1

    :cond_2
    iget-object v2, v13, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v2, v2, Landroid/content/pm/ApplicationInfo;->flags:I

    :goto_1
    move/from16 v19, v2

    .line 8095
    if-nez v15, :cond_3

    goto :goto_2

    :cond_3
    iget-object v1, v15, Landroid/app/ApplicationErrorReport$CrashInfo;->exceptionMessage:Ljava/lang/String;

    :goto_2
    move-object/from16 v21, v1

    .line 8093
    move/from16 v17, p2

    move-object/from16 v20, p4

    invoke-static/range {v16 .. v21}, Lcom/android/server/am/EventLogTags;->writeAmWtf(IILjava/lang/String;ILjava/lang/String;Ljava/lang/String;)V

    .line 8097
    const/16 v1, 0x50

    .line 8098
    if-eqz v13, :cond_4

    invoke-virtual {v13}, Lcom/android/server/am/ProcessRecord;->getProcessClassEnum()I

    move-result v2

    goto :goto_3

    :cond_4
    const/4 v2, 0x0

    :goto_3
    move v6, v2

    .line 8097
    move/from16 v2, p1

    move-object/from16 v3, p4

    move-object/from16 v4, v18

    move/from16 v5, p2

    invoke-static/range {v1 .. v6}, Lcom/android/internal/util/FrameworkStatsLog;->write(IILjava/lang/String;Ljava/lang/String;II)V

    .line 8100
    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v9, 0x0

    const/4 v10, 0x0

    const/4 v12, 0x0

    const/16 v16, 0x0

    const/16 v17, 0x0

    const-string/jumbo v2, "wtf"

    move-object/from16 v1, p0

    move-object v3, v13

    move-object/from16 v8, p4

    move-object/from16 v11, p5

    move-object/from16 v19, v13

    .end local v13    # "r":Lcom/android/server/am/ProcessRecord;
    .local v19, "r":Lcom/android/server/am/ProcessRecord;
    move-object/from16 v13, v16

    move-object/from16 v14, v17

    invoke-virtual/range {v1 .. v14}, Lcom/android/server/am/ActivityManagerService;->addErrorToDropBox(Ljava/lang/String;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Ljava/io/File;Landroid/app/ApplicationErrorReport$CrashInfo;Ljava/lang/Float;Landroid/os/incremental/IncrementalMetrics;Ljava/util/UUID;)V

    .line 8103
    return-object v19
.end method

.method public handleIncomingUser(IIIZZLjava/lang/String;Ljava/lang/String;)I
    .locals 8
    .param p1, "callingPid"    # I
    .param p2, "callingUid"    # I
    .param p3, "userId"    # I
    .param p4, "allowAll"    # Z
    .param p5, "requireFull"    # Z
    .param p6, "name"    # Ljava/lang/String;
    .param p7, "callerPackage"    # Ljava/lang/String;

    .line 11906
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    .line 11907
    if-eqz p5, :cond_0

    const/4 v1, 0x2

    goto :goto_0

    :cond_0
    const/4 v1, 0x0

    :goto_0
    move v5, v1

    .line 11906
    move v1, p1

    move v2, p2

    move v3, p3

    move v4, p4

    move-object v6, p6

    move-object v7, p7

    invoke-virtual/range {v0 .. v7}, Lcom/android/server/am/UserController;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result v0

    return v0
.end method

.method public hang(Landroid/os/IBinder;Z)V
    .locals 4
    .param p1, "who"    # Landroid/os/IBinder;
    .param p2, "allowRestart"    # Z

    .line 7286
    const-string v0, "android.permission.SET_ACTIVITY_WATCHER"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_1

    .line 7292
    new-instance v0, Lcom/android/server/am/ActivityManagerService$11;

    invoke-direct {v0, p0}, Lcom/android/server/am/ActivityManagerService$11;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    .line 7302
    .local v0, "death":Landroid/os/IBinder$DeathRecipient;
    const/4 v1, 0x0

    :try_start_0
    invoke-interface {p1, v0, v1}, Landroid/os/IBinder;->linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_1

    .line 7306
    nop

    .line 7308
    monitor-enter p0

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 7309
    invoke-static {}, Lcom/android/server/Watchdog;->getInstance()Lcom/android/server/Watchdog;

    move-result-object v1

    invoke-virtual {v1, p2}, Lcom/android/server/Watchdog;->setAllowRestart(Z)V

    .line 7310
    const-string v1, "ActivityManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Hanging system process at request of pid "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 7311
    monitor-enter v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 7312
    :goto_0
    :try_start_2
    invoke-interface {p1}, Landroid/os/IBinder;->isBinderAlive()Z

    move-result v1
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    if-eqz v1, :cond_0

    .line 7314
    :try_start_3
    invoke-virtual {v0}, Ljava/lang/Object;->wait()V
    :try_end_3
    .catch Ljava/lang/InterruptedException; {:try_start_3 .. :try_end_3} :catch_0
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 7316
    :goto_1
    goto :goto_0

    .line 7315
    :catch_0
    move-exception v1

    goto :goto_1

    .line 7318
    :cond_0
    :try_start_4
    monitor-exit v0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    .line 7319
    :try_start_5
    invoke-static {}, Lcom/android/server/Watchdog;->getInstance()Lcom/android/server/Watchdog;

    move-result-object v1

    const/4 v2, 0x1

    invoke-virtual {v1, v2}, Lcom/android/server/Watchdog;->setAllowRestart(Z)V

    .line 7320
    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 7321
    return-void

    .line 7318
    :catchall_0
    move-exception v1

    :try_start_6
    monitor-exit v0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    .end local v0    # "death":Landroid/os/IBinder$DeathRecipient;
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "who":Landroid/os/IBinder;
    .end local p2    # "allowRestart":Z
    :try_start_7
    throw v1

    .line 7320
    .restart local v0    # "death":Landroid/os/IBinder$DeathRecipient;
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "who":Landroid/os/IBinder;
    .restart local p2    # "allowRestart":Z
    :catchall_1
    move-exception v1

    monitor-exit p0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v1

    .line 7303
    :catch_1
    move-exception v1

    .line 7304
    .local v1, "e":Landroid/os/RemoteException;
    const-string v2, "ActivityManager"

    const-string v3, "hang: given caller IBinder is already dead."

    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 7305
    return-void

    .line 7288
    .end local v0    # "death":Landroid/os/IBinder$DeathRecipient;
    .end local v1    # "e":Landroid/os/RemoteException;
    :cond_1
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires permission android.permission.SET_ACTIVITY_WATCHER"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public holdLock(Landroid/os/IBinder;I)V
    .locals 2
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "durationMs"    # I

    .line 17191
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->getTestUtilityServiceLocked()Landroid/content/pm/TestUtilityService;

    move-result-object v0

    invoke-interface {v0, p1}, Landroid/content/pm/TestUtilityService;->verifyHoldLockToken(Landroid/os/IBinder;)V

    .line 17193
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 17194
    int-to-long v0, p2

    invoke-static {v0, v1}, Landroid/os/SystemClock;->sleep(J)V

    .line 17195
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 17196
    return-void

    .line 17195
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method final idleUids()V
    .locals 1

    .line 14630
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 14631
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mOomAdjuster:Lcom/android/server/am/OomAdjuster;

    invoke-virtual {v0}, Lcom/android/server/am/OomAdjuster;->idleUidsLocked()V

    .line 14632
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 14633
    return-void

    .line 14632
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method importanceTokenDied(Lcom/android/server/am/ActivityManagerService$ImportanceToken;)V
    .locals 5
    .param p1, "token"    # Lcom/android/server/am/ActivityManagerService$ImportanceToken;

    .line 5153
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 5154
    const/4 v0, 0x0

    .line 5155
    .local v0, "pr":Lcom/android/server/am/ProcessRecord;
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    monitor-enter v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 5156
    :try_start_1
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mImportantProcesses:Landroid/util/SparseArray;

    iget v3, p1, Lcom/android/server/am/ActivityManagerService$ImportanceToken;->pid:I

    .line 5157
    invoke-virtual {v2, v3}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ActivityManagerService$ImportanceToken;

    .line 5158
    .local v2, "cur":Lcom/android/server/am/ActivityManagerService$ImportanceToken;
    if-eq v2, p1, :cond_0

    .line 5159
    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 5161
    :cond_0
    :try_start_3
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mImportantProcesses:Landroid/util/SparseArray;

    iget v4, p1, Lcom/android/server/am/ActivityManagerService$ImportanceToken;->pid:I

    invoke-virtual {v3, v4}, Landroid/util/SparseArray;->remove(I)V

    .line 5162
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    iget v4, p1, Lcom/android/server/am/ActivityManagerService$ImportanceToken;->pid:I

    invoke-virtual {v3, v4}, Lcom/android/server/am/ActivityManagerService$PidMap;->get(I)Lcom/android/server/am/ProcessRecord;

    move-result-object v3

    move-object v0, v3

    .line 5163
    if-nez v0, :cond_1

    .line 5164
    monitor-exit v1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 5166
    :cond_1
    :try_start_5
    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    const/4 v4, 0x0

    invoke-virtual {v3, v4}, Lcom/android/server/am/ProcessStateRecord;->setForcingToImportant(Ljava/lang/Object;)V

    .line 5167
    const/4 v3, 0x0

    invoke-virtual {p0, v0, v3, v3, v3}, Lcom/android/server/am/ActivityManagerService;->updateProcessForegroundLocked(Lcom/android/server/am/ProcessRecord;ZIZ)V

    .line 5168
    .end local v2    # "cur":Lcom/android/server/am/ActivityManagerService$ImportanceToken;
    monitor-exit v1
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    .line 5169
    :try_start_6
    const-string/jumbo v1, "updateOomAdj_uiVisibility"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;)Z

    .line 5170
    nop

    .end local v0    # "pr":Lcom/android/server/am/ProcessRecord;
    monitor-exit p0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 5171
    return-void

    .line 5168
    .restart local v0    # "pr":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v2

    :try_start_7
    monitor-exit v1
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_0

    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "token":Lcom/android/server/am/ActivityManagerService$ImportanceToken;
    :try_start_8
    throw v2

    .line 5170
    .end local v0    # "pr":Lcom/android/server/am/ProcessRecord;
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "token":Lcom/android/server/am/ActivityManagerService$ImportanceToken;
    :catchall_1
    move-exception v0

    monitor-exit p0
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public initPowerManagement()V
    .locals 1

    .line 2372
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {v0}, Lcom/android/server/wm/ActivityTaskManagerService;->onInitPowerManagement()V

    .line 2373
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v0}, Lcom/android/server/am/BatteryStatsService;->initPowerManagement()V

    .line 2374
    const-class v0, Landroid/os/PowerManagerInternal;

    invoke-static {v0}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/os/PowerManagerInternal;

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mLocalPowerManager:Landroid/os/PowerManagerInternal;

    .line 2375
    return-void
.end method

.method inputDispatchingTimedOut(IZLjava/lang/String;)J
    .locals 12
    .param p1, "pid"    # I
    .param p2, "aboveSystem"    # Z
    .param p3, "reason"    # Ljava/lang/String;

    .line 16354
    const-string v0, "android.permission.FILTER_EVENTS"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_2

    .line 16358
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    monitor-enter v0

    .line 16359
    :try_start_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-virtual {v1, p1}, Lcom/android/server/am/ActivityManagerService$PidMap;->get(I)Lcom/android/server/am/ProcessRecord;

    move-result-object v1

    .line 16360
    .local v1, "proc":Lcom/android/server/am/ProcessRecord;
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 16361
    if-eqz v1, :cond_0

    invoke-virtual {v1}, Lcom/android/server/am/ProcessRecord;->getInputDispatchingTimeoutMillis()J

    move-result-wide v2

    goto :goto_0

    .line 16362
    :cond_0
    sget v0, Landroid/os/InputConstants;->DEFAULT_DISPATCHING_TIMEOUT_MILLIS:I

    int-to-long v2, v0

    :goto_0
    move-wide v10, v2

    .line 16364
    .local v10, "timeoutMillis":J
    const/4 v4, 0x0

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    move-object v2, p0

    move-object v3, v1

    move v8, p2

    move-object v9, p3

    invoke-virtual/range {v2 .. v9}, Lcom/android/server/am/ActivityManagerService;->inputDispatchingTimedOut(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/pm/ApplicationInfo;Ljava/lang/String;Lcom/android/server/wm/WindowProcessController;ZLjava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 16365
    const-wide/16 v2, 0x0

    return-wide v2

    .line 16368
    :cond_1
    return-wide v10

    .line 16360
    .end local v1    # "proc":Lcom/android/server/am/ProcessRecord;
    .end local v10    # "timeoutMillis":J
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v1

    .line 16355
    :cond_2
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires permission android.permission.FILTER_EVENTS"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method inputDispatchingTimedOut(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/pm/ApplicationInfo;Ljava/lang/String;Lcom/android/server/wm/WindowProcessController;ZLjava/lang/String;)Z
    .locals 13
    .param p1, "proc"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "activityShortComponentName"    # Ljava/lang/String;
    .param p3, "aInfo"    # Landroid/content/pm/ApplicationInfo;
    .param p4, "parentShortComponentName"    # Ljava/lang/String;
    .param p5, "parentProcess"    # Lcom/android/server/wm/WindowProcessController;
    .param p6, "aboveSystem"    # Z
    .param p7, "reason"    # Ljava/lang/String;

    .line 16378
    move-object v1, p0

    move-object v10, p1

    move-object/from16 v11, p7

    const-string v0, "android.permission.FILTER_EVENTS"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_4

    .line 16383
    if-nez v11, :cond_0

    .line 16384
    const-string v0, "Input dispatching timed out"

    move-object v12, v0

    .local v0, "annotation":Ljava/lang/String;
    goto :goto_0

    .line 16386
    .end local v0    # "annotation":Ljava/lang/String;
    :cond_0
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Input dispatching timed out ("

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, ")"

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    move-object v12, v0

    .line 16389
    .local v12, "annotation":Ljava/lang/String;
    :goto_0
    const/4 v0, 0x1

    if-eqz v10, :cond_3

    .line 16390
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 16391
    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->isDebugging()Z

    move-result v2

    const/4 v3, 0x0

    if-eqz v2, :cond_1

    .line 16392
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v3

    .line 16395
    :cond_1
    :try_start_1
    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->getActiveInstrumentation()Lcom/android/server/am/ActiveInstrumentation;

    move-result-object v2

    if-eqz v2, :cond_2

    .line 16396
    new-instance v2, Landroid/os/Bundle;

    invoke-direct {v2}, Landroid/os/Bundle;-><init>()V

    .line 16397
    .local v2, "info":Landroid/os/Bundle;
    const-string/jumbo v4, "shortMsg"

    const-string/jumbo v5, "keyDispatchingTimedOut"

    invoke-virtual {v2, v4, v5}, Landroid/os/Bundle;->putString(Ljava/lang/String;Ljava/lang/String;)V

    .line 16398
    const-string/jumbo v4, "longMsg"

    invoke-virtual {v2, v4, v12}, Landroid/os/Bundle;->putString(Ljava/lang/String;Ljava/lang/String;)V

    .line 16399
    invoke-virtual {p0, p1, v3, v2}, Lcom/android/server/am/ActivityManagerService;->finishInstrumentationLocked(Lcom/android/server/am/ProcessRecord;ILandroid/os/Bundle;)V

    .line 16400
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v0

    .line 16402
    .end local v2    # "info":Landroid/os/Bundle;
    :cond_2
    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 16403
    iget-object v2, v1, Lcom/android/server/am/ActivityManagerService;->mAnrHelper:Lcom/android/server/am/AnrHelper;

    move-object v3, p1

    move-object v4, p2

    move-object/from16 v5, p3

    move-object/from16 v6, p4

    move-object/from16 v7, p5

    move/from16 v8, p6

    move-object v9, v12

    invoke-virtual/range {v2 .. v9}, Lcom/android/server/am/AnrHelper;->appNotResponding(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/pm/ApplicationInfo;Ljava/lang/String;Lcom/android/server/wm/WindowProcessController;ZLjava/lang/String;)V

    goto :goto_1

    .line 16402
    :catchall_0
    move-exception v0

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 16407
    :cond_3
    :goto_1
    return v0

    .line 16379
    .end local v12    # "annotation":Ljava/lang/String;
    :cond_4
    new-instance v0, Ljava/lang/SecurityException;

    const-string v2, "Requires permission android.permission.FILTER_EVENTS"

    invoke-direct {v0, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method isAllowedWhileBooting(Landroid/content/pm/ApplicationInfo;)Z
    .locals 1
    .param p1, "ai"    # Landroid/content/pm/ApplicationInfo;

    .line 2692
    iget v0, p1, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v0, v0, 0x8

    if-eqz v0, :cond_0

    const/4 v0, 0x1

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    :goto_0
    return v0
.end method

.method isAllowlistedForFgsStartLOSP(I)Lcom/android/server/am/ActivityManagerService$FgsTempAllowListItem;
    .locals 2
    .param p1, "uid"    # I

    .line 5651
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mDeviceIdleExceptIdleAllowlist:[I

    invoke-static {p1}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v1

    invoke-static {v0, v1}, Ljava/util/Arrays;->binarySearch([II)I

    move-result v0

    if-ltz v0, :cond_0

    .line 5652
    sget-object v0, Lcom/android/server/am/ActivityManagerService;->FAKE_TEMP_ALLOW_LIST_ITEM:Lcom/android/server/am/ActivityManagerService$FgsTempAllowListItem;

    return-object v0

    .line 5654
    :cond_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mFgsStartTempAllowList:Lcom/android/server/am/FgsTempAllowList;

    invoke-virtual {v0, p1}, Lcom/android/server/am/FgsTempAllowList;->get(I)Landroid/util/Pair;

    move-result-object v0

    .line 5655
    .local v0, "entry":Landroid/util/Pair;, "Landroid/util/Pair<Ljava/lang/Long;Lcom/android/server/am/ActivityManagerService$FgsTempAllowListItem;>;"
    if-nez v0, :cond_1

    const/4 v1, 0x0

    goto :goto_0

    :cond_1
    iget-object v1, v0, Landroid/util/Pair;->second:Ljava/lang/Object;

    check-cast v1, Lcom/android/server/am/ActivityManagerService$FgsTempAllowListItem;

    :goto_0
    return-object v1
.end method

.method public isAppFreezerSupported()Z
    .locals 3

    .line 17138
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 17141
    .local v0, "token":J
    :try_start_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mOomAdjuster:Lcom/android/server/am/OomAdjuster;

    iget-object v2, v2, Lcom/android/server/am/OomAdjuster;->mCachedAppOptimizer:Lcom/android/server/am/CachedAppOptimizer;

    invoke-static {}, Lcom/android/server/am/CachedAppOptimizer;->isFreezerSupported()Z

    move-result v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 17143
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 17141
    return v2

    .line 17143
    :catchall_0
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 17144
    throw v2
.end method

.method public isAppStartModeDisabled(ILjava/lang/String;)Z
    .locals 9
    .param p1, "uid"    # I
    .param p2, "packageName"    # Ljava/lang/String;

    .line 5470
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 5471
    const/4 v4, 0x0

    const/4 v5, -0x1

    const/4 v6, 0x0

    const/4 v7, 0x1

    const/4 v8, 0x0

    move-object v1, p0

    move v2, p1

    move-object v3, p2

    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->getAppStartModeLOSP(ILjava/lang/String;IIZZZ)I

    move-result v1

    const/4 v2, 0x3

    if-ne v1, v2, :cond_0

    const/4 v1, 0x1

    goto :goto_0

    :cond_0
    const/4 v1, 0x0

    :goto_0
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    return v1

    .line 5473
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v1
.end method

.method public isBackgroundRestricted(Ljava/lang/String;)Z
    .locals 6
    .param p1, "packageName"    # Ljava/lang/String;

    .line 6146
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 6147
    .local v0, "callingUid":I
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v1

    .line 6149
    .local v1, "pm":Landroid/content/pm/IPackageManager;
    const/high16 v2, 0x10000000

    .line 6150
    :try_start_0
    invoke-static {v0}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v3

    .line 6149
    invoke-interface {v1, p1, v2, v3}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;II)I

    move-result v2

    .line 6151
    .local v2, "packageUid":I
    if-ne v2, v0, :cond_0

    .line 6157
    .end local v2    # "packageUid":I
    goto :goto_0

    .line 6152
    .restart local v2    # "packageUid":I
    :cond_0
    new-instance v3, Ljava/lang/IllegalArgumentException;

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Uid "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v5, " cannot query restriction state for package "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-direct {v3, v4}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .end local v0    # "callingUid":I
    .end local v1    # "pm":Landroid/content/pm/IPackageManager;
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "packageName":Ljava/lang/String;
    throw v3
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 6155
    .end local v2    # "packageUid":I
    .restart local v0    # "callingUid":I
    .restart local v1    # "pm":Landroid/content/pm/IPackageManager;
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "packageName":Ljava/lang/String;
    :catch_0
    move-exception v2

    .line 6158
    :goto_0
    invoke-virtual {p0, v0, p1}, Lcom/android/server/am/ActivityManagerService;->isBackgroundRestrictedNoCheck(ILjava/lang/String;)Z

    move-result v2

    return v2
.end method

.method isBackgroundRestrictedNoCheck(ILjava/lang/String;)Z
    .locals 2
    .param p1, "uid"    # I
    .param p2, "packageName"    # Ljava/lang/String;

    .line 6162
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getAppOpsManager()Landroid/app/AppOpsManager;

    move-result-object v0

    const/16 v1, 0x46

    invoke-virtual {v0, v1, p1, p2}, Landroid/app/AppOpsManager;->checkOpNoThrow(IILjava/lang/String;)I

    move-result v0

    .line 6164
    .local v0, "mode":I
    if-eqz v0, :cond_0

    const/4 v1, 0x1

    goto :goto_0

    :cond_0
    const/4 v1, 0x0

    :goto_0
    return v1
.end method

.method final isCameraActiveForUid(I)Z
    .locals 2
    .param p1, "uid"    # I

    .line 14666
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mActiveCameraUids:Landroid/util/IntArray;

    monitor-enter v0

    .line 14667
    :try_start_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mActiveCameraUids:Landroid/util/IntArray;

    invoke-virtual {v1, p1}, Landroid/util/IntArray;->indexOf(I)I

    move-result v1

    if-ltz v1, :cond_0

    const/4 v1, 0x1

    goto :goto_0

    :cond_0
    const/4 v1, 0x0

    :goto_0
    monitor-exit v0

    return v1

    .line 14668
    :catchall_0
    move-exception v1

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method public isInLockTaskMode()Z
    .locals 1

    .line 5903
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {v0}, Lcom/android/server/wm/ActivityTaskManagerService;->isInLockTaskMode()Z

    move-result v0

    return v0
.end method

.method public isIntentSenderAnActivity(Landroid/content/IIntentSender;)Z
    .locals 4
    .param p1, "pendingResult"    # Landroid/content/IIntentSender;

    .line 5034
    instance-of v0, p1, Lcom/android/server/am/PendingIntentRecord;

    const/4 v1, 0x0

    if-nez v0, :cond_0

    .line 5035
    return v1

    .line 5038
    :cond_0
    :try_start_0
    move-object v0, p1

    check-cast v0, Lcom/android/server/am/PendingIntentRecord;

    .line 5039
    .local v0, "res":Lcom/android/server/am/PendingIntentRecord;
    iget-object v2, v0, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget v2, v2, Lcom/android/server/am/PendingIntentRecord$Key;->type:I
    :try_end_0
    .catch Ljava/lang/ClassCastException; {:try_start_0 .. :try_end_0} :catch_0

    const/4 v3, 0x2

    if-ne v2, v3, :cond_1

    .line 5040
    const/4 v1, 0x1

    return v1

    .line 5042
    :cond_1
    return v1

    .line 5043
    .end local v0    # "res":Lcom/android/server/am/PendingIntentRecord;
    :catch_0
    move-exception v0

    .line 5045
    return v1
.end method

.method public isIntentSenderTargetedToPackage(Landroid/content/IIntentSender;)Z
    .locals 5
    .param p1, "pendingResult"    # Landroid/content/IIntentSender;

    .line 5012
    instance-of v0, p1, Lcom/android/server/am/PendingIntentRecord;

    const/4 v1, 0x0

    if-nez v0, :cond_0

    .line 5013
    return v1

    .line 5016
    :cond_0
    :try_start_0
    move-object v0, p1

    check-cast v0, Lcom/android/server/am/PendingIntentRecord;

    .line 5017
    .local v0, "res":Lcom/android/server/am/PendingIntentRecord;
    iget-object v2, v0, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v2, v2, Lcom/android/server/am/PendingIntentRecord$Key;->allIntents:[Landroid/content/Intent;

    if-nez v2, :cond_1

    .line 5018
    return v1

    .line 5020
    :cond_1
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_0
    iget-object v3, v0, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v3, v3, Lcom/android/server/am/PendingIntentRecord$Key;->allIntents:[Landroid/content/Intent;

    array-length v3, v3

    if-ge v2, v3, :cond_3

    .line 5021
    iget-object v3, v0, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v3, v3, Lcom/android/server/am/PendingIntentRecord$Key;->allIntents:[Landroid/content/Intent;

    aget-object v3, v3, v2

    .line 5022
    .local v3, "intent":Landroid/content/Intent;
    invoke-virtual {v3}, Landroid/content/Intent;->getPackage()Ljava/lang/String;

    move-result-object v4

    if-eqz v4, :cond_2

    invoke-virtual {v3}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v4
    :try_end_0
    .catch Ljava/lang/ClassCastException; {:try_start_0 .. :try_end_0} :catch_0

    if-eqz v4, :cond_2

    .line 5023
    return v1

    .line 5020
    .end local v3    # "intent":Landroid/content/Intent;
    :cond_2
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 5026
    .end local v2    # "i":I
    :cond_3
    const/4 v1, 0x1

    return v1

    .line 5027
    .end local v0    # "res":Lcom/android/server/am/PendingIntentRecord;
    :catch_0
    move-exception v0

    .line 5029
    return v1
.end method

.method isOnDeviceIdleAllowlistLOSP(IZ)Z
    .locals 3
    .param p1, "uid"    # I
    .param p2, "allowExceptIdleToo"    # Z

    .line 5631
    invoke-static {p1}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v0

    .line 5633
    .local v0, "appId":I
    if-eqz p2, :cond_0

    .line 5634
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mDeviceIdleExceptIdleAllowlist:[I

    goto :goto_0

    .line 5635
    :cond_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mDeviceIdleAllowlist:[I

    :goto_0
    nop

    .line 5637
    .local v1, "allowlist":[I
    invoke-static {v1, v0}, Ljava/util/Arrays;->binarySearch([II)I

    move-result v2

    if-gez v2, :cond_2

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mDeviceIdleTempAllowlist:[I

    .line 5638
    invoke-static {v2, v0}, Ljava/util/Arrays;->binarySearch([II)I

    move-result v2

    if-gez v2, :cond_2

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPendingTempAllowlist:Lcom/android/server/am/PendingTempAllowlists;

    .line 5639
    invoke-virtual {v2, p1}, Lcom/android/server/am/PendingTempAllowlists;->indexOfKey(I)I

    move-result v2

    if-ltz v2, :cond_1

    goto :goto_1

    :cond_1
    const/4 v2, 0x0

    goto :goto_2

    :cond_2
    :goto_1
    const/4 v2, 0x1

    .line 5637
    :goto_2
    return v2
.end method

.method isPendingBroadcastProcessLocked(I)Z
    .locals 1
    .param p1, "pid"    # I

    .line 12301
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mFgBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

    invoke-virtual {v0, p1}, Lcom/android/server/am/BroadcastQueue;->isPendingBroadcastProcessLocked(I)Z

    move-result v0

    if-nez v0, :cond_1

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBgBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

    .line 12302
    invoke-virtual {v0, p1}, Lcom/android/server/am/BroadcastQueue;->isPendingBroadcastProcessLocked(I)Z

    move-result v0

    if-nez v0, :cond_1

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mOffloadBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

    .line 12303
    invoke-virtual {v0, p1}, Lcom/android/server/am/BroadcastQueue;->isPendingBroadcastProcessLocked(I)Z

    move-result v0

    if-eqz v0, :cond_0

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    goto :goto_1

    :cond_1
    :goto_0
    const/4 v0, 0x1

    .line 12301
    :goto_1
    return v0
.end method

.method isReceivingBroadcastLocked(Lcom/android/server/am/ProcessRecord;Landroid/util/ArraySet;)Z
    .locals 9
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Lcom/android/server/am/ProcessRecord;",
            "Landroid/util/ArraySet<",
            "Lcom/android/server/am/BroadcastQueue;",
            ">;)Z"
        }
    .end annotation

    .line 14103
    .local p2, "receivingQueues":Landroid/util/ArraySet;, "Landroid/util/ArraySet<Lcom/android/server/am/BroadcastQueue;>;"
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->mReceivers:Lcom/android/server/am/ProcessReceiverRecord;

    .line 14104
    .local v0, "prr":Lcom/android/server/am/ProcessReceiverRecord;
    invoke-virtual {v0}, Lcom/android/server/am/ProcessReceiverRecord;->numberOfCurReceivers()I

    move-result v1

    .line 14105
    .local v1, "numOfReceivers":I
    const/4 v2, 0x1

    if-lez v1, :cond_1

    .line 14106
    const/4 v3, 0x0

    .local v3, "i":I
    :goto_0
    if-ge v3, v1, :cond_0

    .line 14107
    invoke-virtual {v0, v3}, Lcom/android/server/am/ProcessReceiverRecord;->getCurReceiverAt(I)Lcom/android/server/am/BroadcastRecord;

    move-result-object v4

    iget-object v4, v4, Lcom/android/server/am/BroadcastRecord;->queue:Lcom/android/server/am/BroadcastQueue;

    invoke-virtual {p2, v4}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z

    .line 14106
    add-int/lit8 v3, v3, 0x1

    goto :goto_0

    .line 14109
    .end local v3    # "i":I
    :cond_0
    return v2

    .line 14113
    :cond_1
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    array-length v4, v3

    const/4 v5, 0x0

    :goto_1
    if-ge v5, v4, :cond_3

    aget-object v6, v3, v5

    .line 14114
    .local v6, "queue":Lcom/android/server/am/BroadcastQueue;
    iget-object v7, v6, Lcom/android/server/am/BroadcastQueue;->mPendingBroadcast:Lcom/android/server/am/BroadcastRecord;

    .line 14115
    .local v7, "r":Lcom/android/server/am/BroadcastRecord;
    if-eqz v7, :cond_2

    iget-object v8, v7, Lcom/android/server/am/BroadcastRecord;->curApp:Lcom/android/server/am/ProcessRecord;

    if-ne v8, p1, :cond_2

    .line 14117
    invoke-virtual {p2, v6}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z

    .line 14113
    .end local v6    # "queue":Lcom/android/server/am/BroadcastQueue;
    .end local v7    # "r":Lcom/android/server/am/BroadcastRecord;
    :cond_2
    add-int/lit8 v5, v5, 0x1

    goto :goto_1

    .line 14121
    :cond_3
    invoke-virtual {p2}, Landroid/util/ArraySet;->isEmpty()Z

    move-result v3

    xor-int/2addr v2, v3

    return v2
.end method

.method isServiceRestartBackoffEnabled(Ljava/lang/String;)Z
    .locals 1
    .param p1, "packageName"    # Ljava/lang/String;

    .line 8599
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 8600
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v0, p1}, Lcom/android/server/am/ActiveServices;->isServiceRestartBackoffEnabledLocked(Ljava/lang/String;)Z

    move-result v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v0

    .line 8601
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method isSingleton(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;Ljava/lang/String;I)Z
    .locals 5
    .param p1, "componentProcessName"    # Ljava/lang/String;
    .param p2, "aInfo"    # Landroid/content/pm/ApplicationInfo;
    .param p3, "className"    # Ljava/lang/String;
    .param p4, "flags"    # I

    .line 11912
    const/4 v0, 0x0

    .line 11914
    .local v0, "result":Z
    iget v1, p2, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-static {v1}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v1

    const/high16 v2, 0x40000000    # 2.0f

    const/16 v3, 0x2710

    if-lt v1, v3, :cond_1

    .line 11915
    and-int v1, p4, v2

    if-eqz v1, :cond_5

    .line 11916
    iget v1, p2, Landroid/content/pm/ApplicationInfo;->uid:I

    const-string v2, "android.permission.INTERACT_ACROSS_USERS"

    invoke-static {v2, v1}, Landroid/app/ActivityManager;->checkUidPermission(Ljava/lang/String;I)I

    move-result v1

    if-nez v1, :cond_0

    .line 11927
    const/4 v0, 0x1

    goto :goto_2

    .line 11919
    :cond_0
    new-instance v1, Landroid/content/ComponentName;

    iget-object v3, p2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-direct {v1, v3, p3}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .line 11920
    .local v1, "comp":Landroid/content/ComponentName;
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Permission Denial: Component "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Landroid/content/ComponentName;->flattenToShortString()Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v4, " requests FLAG_SINGLE_USER, but app does not hold "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    .line 11923
    .local v2, "msg":Ljava/lang/String;
    const-string v3, "ActivityManager"

    invoke-static {v3, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 11924
    new-instance v3, Ljava/lang/SecurityException;

    invoke-direct {v3, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 11929
    .end local v1    # "comp":Landroid/content/ComponentName;
    .end local v2    # "msg":Ljava/lang/String;
    :cond_1
    const-string/jumbo v1, "system"

    invoke-virtual {v1, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_2

    .line 11930
    const/4 v0, 0x1

    goto :goto_2

    .line 11931
    :cond_2
    and-int v1, p4, v2

    if-eqz v1, :cond_5

    .line 11933
    iget v1, p2, Landroid/content/pm/ApplicationInfo;->uid:I

    const/16 v2, 0x3e9

    invoke-static {v1, v2}, Landroid/os/UserHandle;->isSameApp(II)Z

    move-result v1

    if-nez v1, :cond_4

    iget v1, p2, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v1, v1, 0x8

    if-eqz v1, :cond_3

    goto :goto_0

    :cond_3
    const/4 v1, 0x0

    goto :goto_1

    :cond_4
    :goto_0
    const/4 v1, 0x1

    :goto_1
    move v0, v1

    .line 11939
    :cond_5
    :goto_2
    return v0
.end method

.method public isTopActivityImmersive()Z
    .locals 1

    .line 6918
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {v0}, Lcom/android/server/wm/ActivityTaskManagerService;->isTopActivityImmersive()Z

    move-result v0

    return v0
.end method

.method public isTopOfTask(Landroid/os/IBinder;)Z
    .locals 1
    .param p1, "token"    # Landroid/os/IBinder;

    .line 6923
    invoke-static {}, Landroid/app/ActivityClient;->getInstance()Landroid/app/ActivityClient;

    move-result-object v0

    invoke-virtual {v0, p1}, Landroid/app/ActivityClient;->isTopOfTask(Landroid/os/IBinder;)Z

    move-result v0

    return v0
.end method

.method public isUidActive(ILjava/lang/String;)Z
    .locals 2
    .param p1, "uid"    # I
    .param p2, "callingPackage"    # Ljava/lang/String;

    .line 6785
    invoke-direct {p0, p2}, Lcom/android/server/am/ActivityManagerService;->hasUsageStatsPermission(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_0

    .line 6786
    const-string v0, "android.permission.PACKAGE_USAGE_STATS"

    const-string/jumbo v1, "isUidActive"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 6789
    :cond_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 6790
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->isUidActiveLOSP(I)Z

    move-result v1

    if-eqz v1, :cond_1

    .line 6791
    const/4 v1, 0x1

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    return v1

    .line 6793
    :cond_1
    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 6794
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mInternal:Landroid/app/ActivityManagerInternal;

    invoke-virtual {v0, p1}, Landroid/app/ActivityManagerInternal;->isPendingTopUid(I)Z

    move-result v0

    return v0

    .line 6793
    :catchall_0
    move-exception v1

    :try_start_2
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v1
.end method

.method isUidActiveLOSP(I)Z
    .locals 2
    .param p1, "uid"    # I

    .line 6799
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v0, p1}, Lcom/android/server/am/ProcessList;->getUidRecordLOSP(I)Lcom/android/server/am/UidRecord;

    move-result-object v0

    .line 6800
    .local v0, "uidRecord":Lcom/android/server/am/UidRecord;
    if-eqz v0, :cond_0

    invoke-virtual {v0}, Lcom/android/server/am/UidRecord;->isSetIdle()Z

    move-result v1

    if-nez v1, :cond_0

    const/4 v1, 0x1

    goto :goto_0

    :cond_0
    const/4 v1, 0x0

    :goto_0
    return v1
.end method

.method public isUserAMonkey()Z
    .locals 2

    .line 6529
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 6531
    iget-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mUserIsMonkey:Z

    if-nez v1, :cond_1

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {v1}, Lcom/android/server/wm/ActivityTaskManagerService;->isControllerAMonkey()Z

    move-result v1

    if-eqz v1, :cond_0

    goto :goto_0

    :cond_0
    const/4 v1, 0x0

    goto :goto_1

    :cond_1
    :goto_0
    const/4 v1, 0x1

    :goto_1
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    return v1

    .line 6532
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v1
.end method

.method public isUserRunning(II)Z
    .locals 3
    .param p1, "userId"    # I
    .param p2, "flags"    # I

    .line 15122
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v1

    invoke-virtual {v0, p1, v1}, Lcom/android/server/am/UserController;->isSameProfileGroup(II)Z

    move-result v0

    if-nez v0, :cond_1

    .line 15123
    const-string v0, "android.permission.INTERACT_ACROSS_USERS"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v1

    if-nez v1, :cond_0

    goto :goto_0

    .line 15125
    :cond_0
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Permission Denial: isUserRunning() from pid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15126
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, ", uid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15127
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, " requires "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 15129
    .local v0, "msg":Ljava/lang/String;
    const-string v1, "ActivityManager"

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 15130
    new-instance v1, Ljava/lang/SecurityException;

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 15132
    .end local v0    # "msg":Ljava/lang/String;
    :cond_1
    :goto_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/am/UserController;->isUserRunning(II)Z

    move-result v0

    return v0
.end method

.method public isUserStopped(I)Z
    .locals 1
    .param p1, "userId"    # I

    .line 15167
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {v0, p1}, Lcom/android/server/am/UserController;->getStartedUserState(I)Lcom/android/server/am/UserState;

    move-result-object v0

    if-nez v0, :cond_0

    const/4 v0, 0x1

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    :goto_0
    return v0
.end method

.method isValidSingletonCall(II)Z
    .locals 2
    .param p1, "callingUid"    # I
    .param p2, "componentUid"    # I

    .line 11949
    invoke-static {p2}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v0

    .line 11950
    .local v0, "componentAppId":I
    invoke-static {p1, p2}, Landroid/os/UserHandle;->isSameApp(II)Z

    move-result v1

    if-nez v1, :cond_1

    const/16 v1, 0x3e8

    if-eq v0, v1, :cond_1

    const/16 v1, 0x3e9

    if-eq v0, v1, :cond_1

    .line 11953
    const-string v1, "android.permission.INTERACT_ACROSS_USERS_FULL"

    invoke-static {v1, p2}, Landroid/app/ActivityManager;->checkUidPermission(Ljava/lang/String;I)I

    move-result v1

    if-nez v1, :cond_0

    goto :goto_0

    :cond_0
    const/4 v1, 0x0

    goto :goto_1

    :cond_1
    :goto_0
    const/4 v1, 0x1

    .line 11950
    :goto_1
    return v1
.end method

.method public isVrModePackageEnabled(Landroid/content/ComponentName;)Z
    .locals 2
    .param p1, "packageName"    # Landroid/content/ComponentName;

    .line 6909
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {v0}, Lcom/android/server/wm/ActivityTaskManagerService;->enforceSystemHasVrFeature()V

    .line 6911
    const-class v0, Lcom/android/server/vr/VrManagerInternal;

    invoke-static {v0}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/vr/VrManagerInternal;

    .line 6913
    .local v0, "vrService":Lcom/android/server/vr/VrManagerInternal;
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v1

    invoke-virtual {v0, p1, v1}, Lcom/android/server/vr/VrManagerInternal;->hasVrPackage(Landroid/content/ComponentName;I)I

    move-result v1

    if-nez v1, :cond_0

    const/4 v1, 0x1

    goto :goto_0

    :cond_0
    const/4 v1, 0x0

    :goto_0
    return v1
.end method

.method public killAllBackgroundProcesses()V
    .locals 11

    .line 3625
    const-string v0, "android.permission.KILL_BACKGROUND_PROCESSES"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_0

    .line 3634
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 3636
    .local v0, "callingId":J
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_2

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 3639
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    const/4 v3, 0x1

    invoke-virtual {v2, v3}, Lcom/android/server/am/AppProfiler;->setAllowLowerMemLevelLocked(Z)V

    .line 3640
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    :try_start_2
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 3641
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    const/4 v4, 0x0

    const/4 v5, -0x1

    const/4 v6, -0x1

    const/16 v7, 0x384

    const/16 v8, 0xa

    const/4 v9, 0x0

    const-string/jumbo v10, "kill all background"

    invoke-virtual/range {v3 .. v10}, Lcom/android/server/am/ProcessList;->killPackageProcessesLSP(Ljava/lang/String;IIIIILjava/lang/String;)Z

    .line 3646
    monitor-exit v2
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 3648
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    const/4 v3, 0x0

    invoke-virtual {v2, v3}, Lcom/android/server/am/AppProfiler;->doLowMemReportIfNeededLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 3649
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    :try_start_4
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_2

    .line 3651
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3652
    nop

    .line 3653
    return-void

    .line 3646
    :catchall_0
    move-exception v3

    :try_start_5
    monitor-exit v2
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    :try_start_6
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .end local v0    # "callingId":J
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    throw v3

    .line 3649
    .restart local v0    # "callingId":J
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    :catchall_1
    move-exception v2

    monitor-exit p0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    :try_start_7
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .end local v0    # "callingId":J
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    throw v2
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_2

    .line 3651
    .restart local v0    # "callingId":J
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    :catchall_2
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3652
    throw v2

    .line 3627
    .end local v0    # "callingId":J
    :cond_0
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Permission Denial: killAllBackgroundProcesses() from pid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3628
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, ", uid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, " requires "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "android.permission.KILL_BACKGROUND_PROCESSES"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 3630
    .local v0, "msg":Ljava/lang/String;
    const-string v1, "ActivityManager"

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 3631
    new-instance v1, Ljava/lang/SecurityException;

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1
.end method

.method killAllBackgroundProcessesExcept(II)V
    .locals 4
    .param p1, "minTargetSdk"    # I
    .param p2, "maxProcState"    # I

    .line 3665
    const-string v0, "android.permission.KILL_BACKGROUND_PROCESSES"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_0

    .line 3674
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 3676
    .local v0, "callingId":J
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_2

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 3677
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    :try_start_2
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 3678
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v3, p1, p2}, Lcom/android/server/am/ProcessList;->killAllBackgroundProcessesExceptLSP(II)V

    .line 3679
    monitor-exit v2
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 3680
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    :try_start_4
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_2

    .line 3682
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3683
    nop

    .line 3684
    return-void

    .line 3679
    :catchall_0
    move-exception v3

    :try_start_5
    monitor-exit v2
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    :try_start_6
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .end local v0    # "callingId":J
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "minTargetSdk":I
    .end local p2    # "maxProcState":I
    throw v3

    .line 3680
    .restart local v0    # "callingId":J
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "minTargetSdk":I
    .restart local p2    # "maxProcState":I
    :catchall_1
    move-exception v2

    monitor-exit p0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    :try_start_7
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .end local v0    # "callingId":J
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "minTargetSdk":I
    .end local p2    # "maxProcState":I
    throw v2
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_2

    .line 3682
    .restart local v0    # "callingId":J
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "minTargetSdk":I
    .restart local p2    # "maxProcState":I
    :catchall_2
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3683
    throw v2

    .line 3667
    .end local v0    # "callingId":J
    :cond_0
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Permission Denial: killAllBackgroundProcessesExcept() from pid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3668
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, ", uid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, " requires "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "android.permission.KILL_BACKGROUND_PROCESSES"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 3670
    .local v0, "msg":Ljava/lang/String;
    const-string v1, "ActivityManager"

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 3671
    new-instance v1, Ljava/lang/SecurityException;

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1
.end method

.method killAppAtUsersRequest(Lcom/android/server/am/ProcessRecord;)V
    .locals 1
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;

    .line 7799
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 7800
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppErrors:Lcom/android/server/am/AppErrors;

    invoke-virtual {v0, p1}, Lcom/android/server/am/AppErrors;->killAppAtUserRequestLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 7801
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 7802
    return-void

    .line 7801
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public killApplication(Ljava/lang/String;IILjava/lang/String;)V
    .locals 4
    .param p1, "pkg"    # Ljava/lang/String;
    .param p2, "appId"    # I
    .param p3, "userId"    # I
    .param p4, "reason"    # Ljava/lang/String;

    .line 3771
    if-nez p1, :cond_0

    .line 3772
    return-void

    .line 3775
    :cond_0
    if-gez p2, :cond_1

    .line 3776
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Invalid appid specified for pkg : "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "ActivityManager"

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 3777
    return-void

    .line 3779
    :cond_1
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 3781
    .local v0, "callerUid":I
    invoke-static {v0}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v1

    const/16 v2, 0x3e8

    if-ne v1, v2, :cond_2

    .line 3783
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v2, 0x16

    invoke-virtual {v1, v2}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v1

    .line 3784
    .local v1, "msg":Landroid/os/Message;
    iput p2, v1, Landroid/os/Message;->arg1:I

    .line 3785
    iput p3, v1, Landroid/os/Message;->arg2:I

    .line 3786
    new-instance v2, Landroid/os/Bundle;

    invoke-direct {v2}, Landroid/os/Bundle;-><init>()V

    .line 3787
    .local v2, "bundle":Landroid/os/Bundle;
    const-string/jumbo v3, "pkg"

    invoke-virtual {v2, v3, p1}, Landroid/os/Bundle;->putString(Ljava/lang/String;Ljava/lang/String;)V

    .line 3788
    const-string/jumbo v3, "reason"

    invoke-virtual {v2, v3, p4}, Landroid/os/Bundle;->putString(Ljava/lang/String;Ljava/lang/String;)V

    .line 3789
    iput-object v2, v1, Landroid/os/Message;->obj:Ljava/lang/Object;

    .line 3790
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v3, v1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 3791
    .end local v1    # "msg":Landroid/os/Message;
    .end local v2    # "bundle":Landroid/os/Bundle;
    nop

    .line 3795
    return-void

    .line 3792
    :cond_2
    new-instance v1, Ljava/lang/SecurityException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, " cannot kill pkg: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1
.end method

.method public killApplicationProcess(Ljava/lang/String;I)V
    .locals 5
    .param p1, "processName"    # Ljava/lang/String;
    .param p2, "uid"    # I

    .line 3967
    if-nez p1, :cond_0

    .line 3968
    return-void

    .line 3971
    :cond_0
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 3973
    .local v0, "callerUid":I
    const/16 v1, 0x3e8

    if-ne v0, v1, :cond_2

    .line 3974
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 3975
    invoke-virtual {p0, p1, p2}, Lcom/android/server/am/ActivityManagerService;->getProcessRecordLocked(Ljava/lang/String;I)Lcom/android/server/am/ProcessRecord;

    move-result-object v1

    .line 3977
    .local v1, "app":Lcom/android/server/am/ProcessRecord;
    if-eqz v1, :cond_1

    invoke-virtual {v1}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-object v3, v2

    .local v3, "thread":Landroid/app/IApplicationThread;
    if-eqz v2, :cond_1

    .line 3979
    :try_start_1
    invoke-interface {v3}, Landroid/app/IApplicationThread;->scheduleSuicide()V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 3982
    :goto_0
    goto :goto_1

    .line 3980
    :catch_0
    move-exception v2

    goto :goto_0

    .line 3984
    .end local v3    # "thread":Landroid/app/IApplicationThread;
    :cond_1
    :try_start_2
    const-string v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Process/uid not found attempting kill of "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v4, " / "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 3987
    .end local v1    # "app":Lcom/android/server/am/ProcessRecord;
    :goto_1
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 3992
    return-void

    .line 3987
    :catchall_0
    move-exception v1

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v1

    .line 3989
    :cond_2
    new-instance v1, Ljava/lang/SecurityException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, " cannot kill app process: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1
.end method

.method public killBackgroundProcesses(Ljava/lang/String;I)V
    .locals 22
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "userId"    # I

    .line 3579
    move-object/from16 v1, p0

    move-object/from16 v10, p1

    const-string v0, "android.permission.KILL_BACKGROUND_PROCESSES"

    invoke-virtual {v1, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-eqz v0, :cond_1

    const-string v0, "android.permission.RESTART_PACKAGES"

    .line 3581
    invoke-virtual {v1, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_0

    goto :goto_0

    .line 3583
    :cond_0
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Permission Denial: killBackgroundProcesses() from pid="

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3584
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, ", uid="

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3585
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, " requires "

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "android.permission.KILL_BACKGROUND_PROCESSES"

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 3587
    .local v0, "msg":Ljava/lang/String;
    const-string v2, "ActivityManager"

    invoke-static {v2, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 3588
    new-instance v2, Ljava/lang/SecurityException;

    invoke-direct {v2, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 3591
    .end local v0    # "msg":Ljava/lang/String;
    :cond_1
    :goto_0
    iget-object v11, v1, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v12

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v13

    const/4 v15, 0x1

    const/16 v16, 0x2

    const-string/jumbo v17, "killBackgroundProcesses"

    const/16 v18, 0x0

    move/from16 v14, p2

    invoke-virtual/range {v11 .. v18}, Lcom/android/server/am/UserController;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result v11

    .line 3593
    .end local p2    # "userId":I
    .local v11, "userId":I
    iget-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {v0, v11}, Lcom/android/server/am/UserController;->expandUserId(I)[I

    move-result-object v12

    .line 3595
    .local v12, "userIds":[I
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v13

    .line 3597
    .local v13, "callingId":J
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v0

    move-object v15, v0

    .line 3598
    .local v15, "pm":Landroid/content/pm/IPackageManager;
    array-length v9, v12

    const/4 v0, 0x0

    move v8, v0

    :goto_1
    if-ge v8, v9, :cond_3

    aget v0, v12, v8
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_4

    move v7, v0

    .line 3599
    .local v7, "targetUserId":I
    const/4 v2, -0x1

    .line 3601
    .local v2, "appId":I
    const/high16 v0, 0x10000000

    .line 3602
    :try_start_1
    invoke-interface {v15, v10, v0, v7}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;II)I

    move-result v0

    .line 3601
    invoke-static {v0}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v0
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_4

    move v2, v0

    .line 3605
    move v6, v2

    goto :goto_2

    .line 3604
    :catch_0
    move-exception v0

    move v6, v2

    .line 3606
    .end local v2    # "appId":I
    .local v6, "appId":I
    :goto_2
    const/4 v0, -0x1

    if-ne v6, v0, :cond_2

    .line 3607
    :try_start_2
    const-string v0, "ActivityManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Invalid packageName: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v0, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_4

    .line 3619
    invoke-static {v13, v14}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3608
    return-void

    .line 3610
    :cond_2
    :try_start_3
    monitor-enter p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_4

    :try_start_4
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 3611
    iget-object v5, v1, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v5
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_2

    :try_start_5
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 3612
    iget-object v2, v1, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    const/16 v0, 0x1f4

    const/16 v16, 0xa

    const/16 v17, 0x0

    const-string/jumbo v18, "kill background"
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    move-object/from16 v3, p1

    move v4, v6

    move-object/from16 v19, v5

    move v5, v7

    move/from16 v20, v6

    .end local v6    # "appId":I
    .local v20, "appId":I
    move v6, v0

    move/from16 v21, v7

    .end local v7    # "targetUserId":I
    .local v21, "targetUserId":I
    move/from16 v7, v16

    move/from16 v16, v8

    move/from16 v8, v17

    move/from16 v17, v9

    move-object/from16 v9, v18

    :try_start_6
    invoke-virtual/range {v2 .. v9}, Lcom/android/server/am/ProcessList;->killPackageProcessesLSP(Ljava/lang/String;IIIIILjava/lang/String;)Z

    .line 3615
    monitor-exit v19
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    :try_start_7
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 3616
    monitor-exit p0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_3

    :try_start_8
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_4

    .line 3598
    .end local v20    # "appId":I
    .end local v21    # "targetUserId":I
    add-int/lit8 v8, v16, 0x1

    move/from16 v9, v17

    goto :goto_1

    .line 3615
    .restart local v6    # "appId":I
    .restart local v7    # "targetUserId":I
    :catchall_0
    move-exception v0

    move-object/from16 v19, v5

    move/from16 v20, v6

    move/from16 v21, v7

    .end local v6    # "appId":I
    .end local v7    # "targetUserId":I
    .restart local v20    # "appId":I
    .restart local v21    # "targetUserId":I
    :goto_3
    :try_start_9
    monitor-exit v19
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_1

    :try_start_a
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .end local v11    # "userId":I
    .end local v12    # "userIds":[I
    .end local v13    # "callingId":J
    .end local v15    # "pm":Landroid/content/pm/IPackageManager;
    .end local v20    # "appId":I
    .end local v21    # "targetUserId":I
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "packageName":Ljava/lang/String;
    throw v0

    .restart local v11    # "userId":I
    .restart local v12    # "userIds":[I
    .restart local v13    # "callingId":J
    .restart local v15    # "pm":Landroid/content/pm/IPackageManager;
    .restart local v20    # "appId":I
    .restart local v21    # "targetUserId":I
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "packageName":Ljava/lang/String;
    :catchall_1
    move-exception v0

    goto :goto_3

    .line 3616
    .end local v20    # "appId":I
    .end local v21    # "targetUserId":I
    .restart local v6    # "appId":I
    .restart local v7    # "targetUserId":I
    :catchall_2
    move-exception v0

    move/from16 v20, v6

    move/from16 v21, v7

    .end local v6    # "appId":I
    .end local v7    # "targetUserId":I
    .restart local v20    # "appId":I
    .restart local v21    # "targetUserId":I
    :goto_4
    monitor-exit p0
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_3

    :try_start_b
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .end local v11    # "userId":I
    .end local v12    # "userIds":[I
    .end local v13    # "callingId":J
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "packageName":Ljava/lang/String;
    throw v0
    :try_end_b
    .catchall {:try_start_b .. :try_end_b} :catchall_4

    .restart local v11    # "userId":I
    .restart local v12    # "userIds":[I
    .restart local v13    # "callingId":J
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "packageName":Ljava/lang/String;
    :catchall_3
    move-exception v0

    goto :goto_4

    .line 3619
    .end local v15    # "pm":Landroid/content/pm/IPackageManager;
    .end local v20    # "appId":I
    .end local v21    # "targetUserId":I
    :cond_3
    invoke-static {v13, v14}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3620
    nop

    .line 3621
    return-void

    .line 3619
    :catchall_4
    move-exception v0

    invoke-static {v13, v14}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3620
    throw v0
.end method

.method public killPackageDependents(Ljava/lang/String;I)V
    .locals 13
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "userId"    # I

    .line 16530
    const-string v0, "android.permission.KILL_UID"

    const-string/jumbo v1, "killPackageDependents()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 16531
    if-eqz p1, :cond_2

    .line 16536
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 16537
    .local v0, "callingId":J
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v2

    .line 16538
    .local v2, "pm":Landroid/content/pm/IPackageManager;
    const/4 v3, -0x1

    .line 16540
    .local v3, "pkgUid":I
    const/high16 v4, 0x10000000

    :try_start_0
    invoke-interface {v2, p1, v4, p2}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;II)I

    move-result v4
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    move v3, v4

    .line 16542
    goto :goto_0

    .line 16541
    :catch_0
    move-exception v4

    .line 16543
    :goto_0
    const/4 v4, -0x1

    if-eq p2, v4, :cond_1

    if-eq v3, v4, :cond_0

    goto :goto_1

    .line 16544
    :cond_0
    new-instance v4, Ljava/lang/IllegalArgumentException;

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Cannot kill dependents of non-existing package "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-direct {v4, v5}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 16548
    :cond_1
    :goto_1
    :try_start_1
    monitor-enter p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_2

    :try_start_2
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 16549
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v4
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    :try_start_3
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 16550
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-static {v3}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v7

    const/4 v9, 0x0

    const/16 v10, 0xc

    const/4 v11, 0x0

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "dep: "

    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v12

    move-object v6, p1

    move v8, p2

    invoke-virtual/range {v5 .. v12}, Lcom/android/server/am/ProcessList;->killPackageProcessesLSP(Ljava/lang/String;IIIIILjava/lang/String;)Z

    .line 16555
    monitor-exit v4
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 16556
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    :try_start_5
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_2

    .line 16558
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 16559
    nop

    .line 16560
    return-void

    .line 16555
    :catchall_0
    move-exception v5

    :try_start_6
    monitor-exit v4
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    :try_start_7
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .end local v0    # "callingId":J
    .end local v2    # "pm":Landroid/content/pm/IPackageManager;
    .end local v3    # "pkgUid":I
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "packageName":Ljava/lang/String;
    .end local p2    # "userId":I
    throw v5

    .line 16556
    .restart local v0    # "callingId":J
    .restart local v2    # "pm":Landroid/content/pm/IPackageManager;
    .restart local v3    # "pkgUid":I
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "packageName":Ljava/lang/String;
    .restart local p2    # "userId":I
    :catchall_1
    move-exception v4

    monitor-exit p0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_1

    :try_start_8
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .end local v0    # "callingId":J
    .end local v2    # "pm":Landroid/content/pm/IPackageManager;
    .end local v3    # "pkgUid":I
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "packageName":Ljava/lang/String;
    .end local p2    # "userId":I
    throw v4
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_2

    .line 16558
    .restart local v0    # "callingId":J
    .restart local v2    # "pm":Landroid/content/pm/IPackageManager;
    .restart local v3    # "pkgUid":I
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "packageName":Ljava/lang/String;
    .restart local p2    # "userId":I
    :catchall_2
    move-exception v4

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 16559
    throw v4

    .line 16532
    .end local v0    # "callingId":J
    .end local v2    # "pm":Landroid/content/pm/IPackageManager;
    .end local v3    # "pkgUid":I
    :cond_2
    new-instance v0, Ljava/lang/NullPointerException;

    const-string v1, "Cannot kill the dependents of a package without its name."

    invoke-direct {v0, v1}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public killPids([ILjava/lang/String;Z)Z
    .locals 9
    .param p1, "pids"    # [I
    .param p2, "pReason"    # Ljava/lang/String;
    .param p3, "secure"    # Z

    .line 7124
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    const/16 v1, 0x3e8

    if-ne v0, v1, :cond_9

    .line 7127
    if-nez p2, :cond_0

    const-string v0, "Unknown"

    goto :goto_0

    :cond_0
    move-object v0, p2

    .line 7131
    .local v0, "reason":Ljava/lang/String;
    :goto_0
    const/4 v1, 0x0

    .line 7132
    .local v1, "killed":Z
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    .line 7133
    .local v2, "killCandidates":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    monitor-enter v3

    .line 7134
    const/4 v4, 0x0

    .line 7135
    .local v4, "worstType":I
    const/4 v5, 0x0

    .local v5, "i":I
    :goto_1
    :try_start_0
    array-length v6, p1

    if-ge v5, v6, :cond_2

    .line 7136
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    aget v7, p1, v5

    invoke-virtual {v6, v7}, Lcom/android/server/am/ActivityManagerService$PidMap;->get(I)Lcom/android/server/am/ProcessRecord;

    move-result-object v6

    .line 7137
    .local v6, "proc":Lcom/android/server/am/ProcessRecord;
    if-eqz v6, :cond_1

    .line 7138
    iget-object v7, v6, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    invoke-virtual {v7}, Lcom/android/server/am/ProcessStateRecord;->getSetAdj()I

    move-result v7

    .line 7139
    .local v7, "type":I
    if-le v7, v4, :cond_1

    .line 7140
    move v4, v7

    .line 7135
    .end local v6    # "proc":Lcom/android/server/am/ProcessRecord;
    .end local v7    # "type":I
    :cond_1
    add-int/lit8 v5, v5, 0x1

    goto :goto_1

    .line 7147
    .end local v5    # "i":I
    :cond_2
    const/16 v5, 0x3e7

    if-ge v4, v5, :cond_3

    const/16 v5, 0x384

    if-le v4, v5, :cond_3

    .line 7149
    const/16 v4, 0x384

    .line 7154
    :cond_3
    if-nez p3, :cond_4

    const/16 v5, 0x1f4

    if-ge v4, v5, :cond_4

    .line 7155
    const/16 v4, 0x1f4

    .line 7158
    :cond_4
    const-string v5, "ActivityManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Killing processes "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v7, " at adjustment "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 7159
    const/4 v5, 0x0

    .restart local v5    # "i":I
    :goto_2
    array-length v6, p1

    if-ge v5, v6, :cond_7

    .line 7160
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    aget v7, p1, v5

    invoke-virtual {v6, v7}, Lcom/android/server/am/ActivityManagerService$PidMap;->get(I)Lcom/android/server/am/ProcessRecord;

    move-result-object v6

    .line 7161
    .restart local v6    # "proc":Lcom/android/server/am/ProcessRecord;
    if-nez v6, :cond_5

    .line 7162
    goto :goto_3

    .line 7164
    :cond_5
    iget-object v7, v6, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    invoke-virtual {v7}, Lcom/android/server/am/ProcessStateRecord;->getSetAdj()I

    move-result v7

    .line 7165
    .local v7, "adj":I
    if-lt v7, v4, :cond_6

    invoke-virtual {v6}, Lcom/android/server/am/ProcessRecord;->isKilledByAm()Z

    move-result v8

    if-nez v8, :cond_6

    .line 7166
    invoke-virtual {v2, v6}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 7167
    const/4 v1, 0x1

    .line 7159
    .end local v6    # "proc":Lcom/android/server/am/ProcessRecord;
    .end local v7    # "adj":I
    :cond_6
    :goto_3
    add-int/lit8 v5, v5, 0x1

    goto :goto_2

    .line 7170
    .end local v4    # "worstType":I
    .end local v5    # "i":I
    :cond_7
    monitor-exit v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 7171
    invoke-virtual {v2}, Ljava/util/ArrayList;->isEmpty()Z

    move-result v3

    if-nez v3, :cond_8

    .line 7172
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    new-instance v4, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda12;

    invoke-direct {v4, p0, v2, v0}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda12;-><init>(Lcom/android/server/am/ActivityManagerService;Ljava/util/ArrayList;Ljava/lang/String;)V

    invoke-virtual {v3, v4}, Lcom/android/server/am/ActivityManagerService$MainHandler;->post(Ljava/lang/Runnable;)Z

    .line 7182
    :cond_8
    return v1

    .line 7170
    :catchall_0
    move-exception v4

    :try_start_1
    monitor-exit v3
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v4

    .line 7125
    .end local v0    # "reason":Ljava/lang/String;
    .end local v1    # "killed":Z
    .end local v2    # "killCandidates":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    :cond_9
    new-instance v0, Ljava/lang/SecurityException;

    const-string/jumbo v1, "killPids only available to the system"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public killProcessesBelowForeground(Ljava/lang/String;)Z
    .locals 2
    .param p1, "reason"    # Ljava/lang/String;

    .line 7229
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    const/16 v1, 0x3e8

    if-ne v0, v1, :cond_0

    .line 7233
    const/4 v0, 0x0

    invoke-direct {p0, v0, p1}, Lcom/android/server/am/ActivityManagerService;->killProcessesBelowAdj(ILjava/lang/String;)Z

    move-result v0

    return v0

    .line 7230
    :cond_0
    new-instance v0, Ljava/lang/SecurityException;

    const-string/jumbo v1, "killProcessesBelowForeground() only available to system"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public killProcessesWhenImperceptible([ILjava/lang/String;)V
    .locals 4
    .param p1, "pids"    # [I
    .param p2, "reason"    # Ljava/lang/String;

    .line 7270
    const-string v0, "android.permission.FORCE_STOP_PACKAGES"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_0

    .line 7275
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 7276
    .local v0, "callerUid":I
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v1

    .line 7278
    .local v1, "iden":J
    :try_start_0
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v3, p1, p2, v0}, Lcom/android/server/am/ProcessList;->killProcessesWhenImperceptible([ILjava/lang/String;I)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 7280
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 7281
    nop

    .line 7282
    return-void

    .line 7280
    :catchall_0
    move-exception v3

    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 7281
    throw v3

    .line 7272
    .end local v0    # "callerUid":I
    .end local v1    # "iden":J
    :cond_0
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires permission android.permission.FORCE_STOP_PACKAGES"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public killUid(IILjava/lang/String;)V
    .locals 18
    .param p1, "appId"    # I
    .param p2, "userId"    # I
    .param p3, "reason"    # Ljava/lang/String;

    .line 7187
    move-object/from16 v1, p0

    const-string v0, "android.permission.KILL_UID"

    const-string/jumbo v2, "killUid"

    invoke-virtual {v1, v0, v2}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 7188
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 7189
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_2

    .line 7191
    .local v2, "identity":J
    :try_start_1
    iget-object v4, v1, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v4
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    :try_start_2
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 7192
    iget-object v5, v1, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    const/4 v6, 0x0

    const/16 v9, -0x320

    const/4 v10, 0x0

    const/4 v11, 0x1

    const/4 v12, 0x1

    const/4 v13, 0x1

    const/4 v14, 0x0

    const/16 v15, 0xd

    const/16 v16, 0xb

    .line 7198
    if-eqz p3, :cond_0

    move-object/from16 v17, p3

    goto :goto_0

    :cond_0
    const-string/jumbo v0, "kill uid"

    move-object/from16 v17, v0

    .line 7192
    :goto_0
    move/from16 v7, p1

    move/from16 v8, p2

    invoke-virtual/range {v5 .. v17}, Lcom/android/server/am/ProcessList;->killPackageProcessesLSP(Ljava/lang/String;IIIZZZZZIILjava/lang/String;)Z

    .line 7199
    monitor-exit v4
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 7201
    :try_start_4
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 7202
    nop

    .line 7203
    .end local v2    # "identity":J
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_2

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 7204
    return-void

    .line 7199
    .restart local v2    # "identity":J
    :catchall_0
    move-exception v0

    :try_start_5
    monitor-exit v4
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    :try_start_6
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .end local v2    # "identity":J
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "appId":I
    .end local p2    # "userId":I
    .end local p3    # "reason":Ljava/lang/String;
    throw v0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    .line 7201
    .restart local v2    # "identity":J
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "appId":I
    .restart local p2    # "userId":I
    .restart local p3    # "reason":Ljava/lang/String;
    :catchall_1
    move-exception v0

    :try_start_7
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 7202
    nop

    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "appId":I
    .end local p2    # "userId":I
    .end local p3    # "reason":Ljava/lang/String;
    throw v0

    .line 7203
    .end local v2    # "identity":J
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "appId":I
    .restart local p2    # "userId":I
    .restart local p3    # "reason":Ljava/lang/String;
    :catchall_2
    move-exception v0

    monitor-exit p0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_2

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public killUidForPermissionChange(IILjava/lang/String;)V
    .locals 18
    .param p1, "appId"    # I
    .param p2, "userId"    # I
    .param p3, "reason"    # Ljava/lang/String;

    .line 7208
    move-object/from16 v1, p0

    const-string v0, "android.permission.KILL_UID"

    const-string/jumbo v2, "killUid"

    invoke-virtual {v1, v0, v2}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 7209
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 7210
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_2

    .line 7212
    .local v2, "identity":J
    :try_start_1
    iget-object v4, v1, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v4
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    :try_start_2
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 7213
    iget-object v5, v1, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    const/4 v6, 0x0

    const/16 v9, -0x320

    const/4 v10, 0x0

    const/4 v11, 0x1

    const/4 v12, 0x1

    const/4 v13, 0x1

    const/4 v14, 0x0

    const/16 v15, 0x8

    const/16 v16, 0x0

    .line 7219
    if-eqz p3, :cond_0

    move-object/from16 v17, p3

    goto :goto_0

    :cond_0
    const-string/jumbo v0, "kill uid"

    move-object/from16 v17, v0

    .line 7213
    :goto_0
    move/from16 v7, p1

    move/from16 v8, p2

    invoke-virtual/range {v5 .. v17}, Lcom/android/server/am/ProcessList;->killPackageProcessesLSP(Ljava/lang/String;IIIZZZZZIILjava/lang/String;)Z

    .line 7220
    monitor-exit v4
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 7222
    :try_start_4
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 7223
    nop

    .line 7224
    .end local v2    # "identity":J
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_2

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 7225
    return-void

    .line 7220
    .restart local v2    # "identity":J
    :catchall_0
    move-exception v0

    :try_start_5
    monitor-exit v4
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    :try_start_6
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .end local v2    # "identity":J
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "appId":I
    .end local p2    # "userId":I
    .end local p3    # "reason":Ljava/lang/String;
    throw v0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    .line 7222
    .restart local v2    # "identity":J
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "appId":I
    .restart local p2    # "userId":I
    .restart local p3    # "reason":Ljava/lang/String;
    :catchall_1
    move-exception v0

    :try_start_7
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 7223
    nop

    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "appId":I
    .end local p2    # "userId":I
    .end local p3    # "reason":Ljava/lang/String;
    throw v0

    .line 7224
    .end local v2    # "identity":J
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "appId":I
    .restart local p2    # "userId":I
    .restart local p3    # "reason":Ljava/lang/String;
    :catchall_2
    move-exception v0

    monitor-exit p0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_2

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public synthetic lambda$checkExcessivePowerUsage$20$ActivityManagerService(JJZLcom/android/server/am/ProcessRecord;)V
    .locals 13
    .param p1, "curUptime"    # J
    .param p3, "uptimeSince"    # J
    .param p5, "doCpuKills"    # Z
    .param p6, "app"    # Lcom/android/server/am/ProcessRecord;

    .line 14245
    move-object v8, p0

    move-object/from16 v9, p6

    invoke-virtual/range {p6 .. p6}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v0

    if-nez v0, :cond_0

    .line 14246
    return-void

    .line 14248
    :cond_0
    iget-object v0, v9, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    invoke-virtual {v0}, Lcom/android/server/am/ProcessStateRecord;->getSetProcState()I

    move-result v0

    const/16 v1, 0xe

    if-lt v0, v1, :cond_5

    .line 14250
    iget-object v0, v9, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    invoke-virtual {v0}, Lcom/android/server/am/ProcessStateRecord;->getWhenUnimportant()J

    move-result-wide v2

    sub-long v10, p1, v2

    .line 14251
    .local v10, "checkDur":J
    iget-object v0, v8, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    iget-wide v2, v0, Lcom/android/server/am/ActivityManagerConstants;->POWER_CHECK_INTERVAL:J

    cmp-long v0, v10, v2

    if-gtz v0, :cond_1

    .line 14252
    iget-object v0, v8, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    iget v0, v0, Lcom/android/server/am/ActivityManagerConstants;->POWER_CHECK_MAX_CPU_1:I

    move v12, v0

    .local v0, "cpuLimit":I
    goto :goto_1

    .line 14253
    .end local v0    # "cpuLimit":I
    :cond_1
    iget-object v0, v8, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    iget-wide v2, v0, Lcom/android/server/am/ActivityManagerConstants;->POWER_CHECK_INTERVAL:J

    const-wide/16 v4, 0x2

    mul-long/2addr v2, v4

    cmp-long v0, v10, v2

    if-lez v0, :cond_4

    iget-object v0, v9, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    .line 14254
    invoke-virtual {v0}, Lcom/android/server/am/ProcessStateRecord;->getSetProcState()I

    move-result v0

    if-gt v0, v1, :cond_2

    goto :goto_0

    .line 14256
    :cond_2
    iget-object v0, v8, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    iget-wide v0, v0, Lcom/android/server/am/ActivityManagerConstants;->POWER_CHECK_INTERVAL:J

    const-wide/16 v2, 0x3

    mul-long/2addr v0, v2

    cmp-long v0, v10, v0

    if-gtz v0, :cond_3

    .line 14257
    iget-object v0, v8, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    iget v0, v0, Lcom/android/server/am/ActivityManagerConstants;->POWER_CHECK_MAX_CPU_3:I

    move v12, v0

    .restart local v0    # "cpuLimit":I
    goto :goto_1

    .line 14259
    .end local v0    # "cpuLimit":I
    :cond_3
    iget-object v0, v8, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    iget v0, v0, Lcom/android/server/am/ActivityManagerConstants;->POWER_CHECK_MAX_CPU_4:I

    move v12, v0

    .restart local v0    # "cpuLimit":I
    goto :goto_1

    .line 14255
    .end local v0    # "cpuLimit":I
    :cond_4
    :goto_0
    iget-object v0, v8, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    iget v0, v0, Lcom/android/server/am/ActivityManagerConstants;->POWER_CHECK_MAX_CPU_2:I

    move v12, v0

    .line 14262
    .local v12, "cpuLimit":I
    :goto_1
    move-object v0, p0

    move-wide/from16 v1, p3

    move/from16 v3, p5

    move-wide v4, v10

    move v6, v12

    move-object/from16 v7, p6

    invoke-direct/range {v0 .. v7}, Lcom/android/server/am/ActivityManagerService;->updateAppProcessCpuTimeLPr(JZJILcom/android/server/am/ProcessRecord;)V

    .line 14265
    invoke-direct/range {v0 .. v7}, Lcom/android/server/am/ActivityManagerService;->updatePhantomProcessCpuTimeLPr(JZJILcom/android/server/am/ProcessRecord;)V

    .line 14268
    .end local v10    # "checkDur":J
    .end local v12    # "cpuLimit":I
    :cond_5
    return-void
.end method

.method public synthetic lambda$handleAppDiedLocked$1$ActivityManagerService(Lcom/android/server/am/ProcessRecord;)V
    .locals 3
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;

    .line 3026
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Crash of app "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, " running instrumentation "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3027
    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->getActiveInstrumentation()Lcom/android/server/am/ActiveInstrumentation;

    move-result-object v1

    iget-object v1, v1, Lcom/android/server/am/ActiveInstrumentation;->mClass:Landroid/content/ComponentName;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 3026
    const-string v1, "ActivityManager"

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 3028
    new-instance v0, Landroid/os/Bundle;

    invoke-direct {v0}, Landroid/os/Bundle;-><init>()V

    .line 3029
    .local v0, "info":Landroid/os/Bundle;
    const-string/jumbo v1, "shortMsg"

    const-string v2, "Process crashed."

    invoke-virtual {v0, v1, v2}, Landroid/os/Bundle;->putString(Ljava/lang/String;Ljava/lang/String;)V

    .line 3030
    const/4 v1, 0x0

    invoke-virtual {p0, p1, v1, v0}, Lcom/android/server/am/ActivityManagerService;->finishInstrumentationLocked(Lcom/android/server/am/ProcessRecord;ILandroid/os/Bundle;)V

    .line 3031
    return-void
.end method

.method public synthetic lambda$killPids$4$ActivityManagerService(Ljava/util/ArrayList;Ljava/lang/String;)V
    .locals 6
    .param p1, "killCandidates"    # Ljava/util/ArrayList;
    .param p2, "reason"    # Ljava/lang/String;

    .line 7173
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 7174
    const/4 v0, 0x0

    .local v0, "i":I
    invoke-virtual {p1}, Ljava/util/ArrayList;->size()I

    move-result v1

    .local v1, "size":I
    :goto_0
    if-ge v0, v1, :cond_0

    .line 7175
    invoke-virtual {p1, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ProcessRecord;

    const/16 v3, 0xd

    const/16 v4, 0xc

    const/4 v5, 0x1

    invoke-virtual {v2, p2, v3, v4, v5}, Lcom/android/server/am/ProcessRecord;->killLocked(Ljava/lang/String;IIZ)V

    .line 7174
    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    .line 7179
    .end local v0    # "i":I
    .end local v1    # "size":I
    :cond_0
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 7180
    return-void

    .line 7179
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public synthetic lambda$performIdleMaintenance$5$ActivityManagerService(Lcom/android/server/am/ProcessRecord;JJ)V
    .locals 4
    .param p1, "proc"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "lastPss"    # J
    .param p4, "initialIdlePss"    # J

    .line 7423
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 7424
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "idle maint (pss "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p2, p3}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string v1, " from "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p4, p5}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string v1, ")"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const/16 v1, 0xd

    const/4 v2, 0x6

    const/4 v3, 0x1

    invoke-virtual {p1, v0, v1, v2, v3}, Lcom/android/server/am/ProcessRecord;->killLocked(Ljava/lang/String;IIZ)V

    .line 7429
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 7430
    return-void

    .line 7429
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public synthetic lambda$performIdleMaintenance$6$ActivityManagerService(ZJJJJLcom/android/server/am/ProcessRecord;)V
    .locals 21
    .param p1, "doKilling"    # Z
    .param p2, "memoryGrowthThreshold"    # J
    .param p4, "timeSinceLastIdle"    # J
    .param p6, "lowRamSinceLastIdle"    # J
    .param p8, "now"    # J
    .param p10, "proc"    # Lcom/android/server/am/ProcessRecord;

    .line 7390
    move-object/from16 v8, p0

    move-object/from16 v9, p10

    invoke-virtual/range {p10 .. p10}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v0

    if-nez v0, :cond_0

    .line 7391
    return-void

    .line 7393
    :cond_0
    iget-object v10, v9, Lcom/android/server/am/ProcessRecord;->mProfile:Lcom/android/server/am/ProcessProfileRecord;

    .line 7394
    .local v10, "pr":Lcom/android/server/am/ProcessProfileRecord;
    iget-object v11, v9, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    .line 7395
    .local v11, "state":Lcom/android/server/am/ProcessStateRecord;
    invoke-virtual {v11}, Lcom/android/server/am/ProcessStateRecord;->getSetProcState()I

    move-result v12

    .line 7396
    .local v12, "setProcState":I
    invoke-virtual {v11}, Lcom/android/server/am/ProcessStateRecord;->isNotCachedSinceIdle()Z

    move-result v0

    const-wide/16 v1, 0x0

    if-eqz v0, :cond_3

    .line 7397
    const/4 v0, 0x5

    if-lt v12, v0, :cond_2

    const/16 v0, 0xa

    if-gt v12, v0, :cond_2

    .line 7400
    iget-object v0, v8, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    iget-object v3, v0, Lcom/android/server/am/AppProfiler;->mProfilerLock:Ljava/lang/Object;

    monitor-enter v3

    .line 7401
    :try_start_0
    invoke-virtual {v10}, Lcom/android/server/am/ProcessProfileRecord;->getInitialIdlePss()J

    move-result-wide v4

    move-wide v13, v4

    .line 7402
    .local v13, "initialIdlePss":J
    invoke-virtual {v10}, Lcom/android/server/am/ProcessProfileRecord;->getLastPss()J

    move-result-wide v4

    move-wide v6, v4

    .line 7403
    .local v6, "lastPss":J
    invoke-virtual {v10}, Lcom/android/server/am/ProcessProfileRecord;->getLastSwapPss()J

    move-result-wide v4

    .line 7404
    .local v4, "lastSwapPss":J
    monitor-exit v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 7405
    if-eqz p1, :cond_1

    cmp-long v0, v13, v1

    if-eqz v0, :cond_1

    const-wide/16 v0, 0x3

    mul-long/2addr v0, v13

    const-wide/16 v2, 0x2

    div-long/2addr v0, v2

    cmp-long v0, v6, v0

    if-lez v0, :cond_1

    add-long v0, v13, p2

    cmp-long v0, v6, v0

    if-lez v0, :cond_1

    .line 7408
    new-instance v0, Ljava/lang/StringBuilder;

    const/16 v1, 0x80

    invoke-direct {v0, v1}, Ljava/lang/StringBuilder;-><init>(I)V

    .line 7409
    .local v0, "sb2":Ljava/lang/StringBuilder;
    const-string v1, "Kill"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 7410
    iget-object v1, v9, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 7411
    const-string v1, " in idle maint: pss="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 7412
    invoke-virtual {v0, v6, v7}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 7413
    const-string v1, ", swapPss="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 7414
    invoke-virtual {v0, v4, v5}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 7415
    const-string v1, ", initialPss="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 7416
    invoke-virtual {v0, v13, v14}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 7417
    const-string v1, ", period="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 7418
    move-wide/from16 v2, p4

    invoke-static {v2, v3, v0}, Landroid/util/TimeUtils;->formatDuration(JLjava/lang/StringBuilder;)V

    .line 7419
    const-string v1, ", lowRamPeriod="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 7420
    move-object v15, v10

    move-wide/from16 v9, p6

    .end local v10    # "pr":Lcom/android/server/am/ProcessProfileRecord;
    .local v15, "pr":Lcom/android/server/am/ProcessProfileRecord;
    invoke-static {v9, v10, v0}, Landroid/util/TimeUtils;->formatDuration(JLjava/lang/StringBuilder;)V

    .line 7421
    const-string v1, "ActivityManager"

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Slog;->wtfQuiet(Ljava/lang/String;Ljava/lang/String;)V

    .line 7422
    iget-object v3, v8, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    new-instance v2, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda9;

    move-object v1, v2

    move-object/from16 v16, v0

    move-object v0, v2

    .end local v0    # "sb2":Ljava/lang/StringBuilder;
    .local v16, "sb2":Ljava/lang/StringBuilder;
    move-object/from16 v2, p0

    move-object v9, v3

    move-object/from16 v3, p10

    move-wide/from16 v17, v4

    .end local v4    # "lastSwapPss":J
    .local v17, "lastSwapPss":J
    move-wide v4, v6

    move-wide/from16 v19, v6

    .end local v6    # "lastPss":J
    .local v19, "lastPss":J
    move-wide v6, v13

    invoke-direct/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda9;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ProcessRecord;JJ)V

    invoke-virtual {v9, v0}, Lcom/android/server/am/ActivityManagerService$MainHandler;->post(Ljava/lang/Runnable;)Z

    goto :goto_0

    .line 7405
    .end local v15    # "pr":Lcom/android/server/am/ProcessProfileRecord;
    .end local v16    # "sb2":Ljava/lang/StringBuilder;
    .end local v17    # "lastSwapPss":J
    .end local v19    # "lastPss":J
    .restart local v4    # "lastSwapPss":J
    .restart local v6    # "lastPss":J
    .restart local v10    # "pr":Lcom/android/server/am/ProcessProfileRecord;
    :cond_1
    move-wide/from16 v17, v4

    move-wide/from16 v19, v6

    move-object v15, v10

    .line 7432
    .end local v4    # "lastSwapPss":J
    .end local v6    # "lastPss":J
    .end local v10    # "pr":Lcom/android/server/am/ProcessProfileRecord;
    .end local v13    # "initialIdlePss":J
    .restart local v15    # "pr":Lcom/android/server/am/ProcessProfileRecord;
    :goto_0
    move-object/from16 v1, p10

    move-object v4, v15

    goto :goto_3

    .line 7404
    .end local v15    # "pr":Lcom/android/server/am/ProcessProfileRecord;
    .restart local v10    # "pr":Lcom/android/server/am/ProcessProfileRecord;
    :catchall_0
    move-exception v0

    move-object v15, v10

    .end local v10    # "pr":Lcom/android/server/am/ProcessProfileRecord;
    .restart local v15    # "pr":Lcom/android/server/am/ProcessProfileRecord;
    :goto_1
    :try_start_1
    monitor-exit v3
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    throw v0

    :catchall_1
    move-exception v0

    goto :goto_1

    .line 7397
    .end local v15    # "pr":Lcom/android/server/am/ProcessProfileRecord;
    .restart local v10    # "pr":Lcom/android/server/am/ProcessProfileRecord;
    :cond_2
    move-object v15, v10

    .end local v10    # "pr":Lcom/android/server/am/ProcessProfileRecord;
    .restart local v15    # "pr":Lcom/android/server/am/ProcessProfileRecord;
    move-object/from16 v1, p10

    move-object v4, v15

    goto :goto_3

    .line 7433
    .end local v15    # "pr":Lcom/android/server/am/ProcessProfileRecord;
    .restart local v10    # "pr":Lcom/android/server/am/ProcessProfileRecord;
    :cond_3
    move-object v15, v10

    .end local v10    # "pr":Lcom/android/server/am/ProcessProfileRecord;
    .restart local v15    # "pr":Lcom/android/server/am/ProcessProfileRecord;
    const/16 v0, 0xe

    if-ge v12, v0, :cond_4

    if-ltz v12, :cond_4

    .line 7435
    const/4 v0, 0x1

    invoke-virtual {v11, v0}, Lcom/android/server/am/ProcessStateRecord;->setNotCachedSinceIdle(Z)V

    .line 7436
    iget-object v0, v8, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    iget-object v3, v0, Lcom/android/server/am/AppProfiler;->mProfilerLock:Ljava/lang/Object;

    monitor-enter v3

    .line 7437
    move-object v4, v15

    .end local v15    # "pr":Lcom/android/server/am/ProcessProfileRecord;
    .local v4, "pr":Lcom/android/server/am/ProcessProfileRecord;
    :try_start_2
    invoke-virtual {v4, v1, v2}, Lcom/android/server/am/ProcessProfileRecord;->setInitialIdlePss(J)V

    .line 7438
    iget-object v13, v8, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    .line 7439
    invoke-virtual {v11}, Lcom/android/server/am/ProcessStateRecord;->getSetProcState()I

    move-result v14
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_2

    move-object/from16 v1, p10

    :try_start_3
    iget-object v15, v1, Lcom/android/server/am/ProcessRecord;->mProfile:Lcom/android/server/am/ProcessProfileRecord;

    const/16 v18, 0x1

    .line 7438
    move-wide/from16 v16, p8

    invoke-virtual/range {v13 .. v18}, Lcom/android/server/am/AppProfiler;->updateNextPssTimeLPf(ILcom/android/server/am/ProcessProfileRecord;JZ)V

    .line 7440
    monitor-exit v3

    goto :goto_3

    :catchall_2
    move-exception v0

    move-object/from16 v1, p10

    :goto_2
    monitor-exit v3
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_3

    throw v0

    :catchall_3
    move-exception v0

    goto :goto_2

    .line 7433
    .end local v4    # "pr":Lcom/android/server/am/ProcessProfileRecord;
    .restart local v15    # "pr":Lcom/android/server/am/ProcessProfileRecord;
    :cond_4
    move-object/from16 v1, p10

    move-object v4, v15

    .line 7442
    .end local v15    # "pr":Lcom/android/server/am/ProcessProfileRecord;
    .restart local v4    # "pr":Lcom/android/server/am/ProcessProfileRecord;
    :goto_3
    return-void
.end method

.method public synthetic lambda$scheduleBinderHeavyHitterAutoSampler$33$ActivityManagerService(Ljava/util/List;IFJ)V
    .locals 0
    .param p1, "a"    # Ljava/util/List;
    .param p2, "b"    # I
    .param p3, "c"    # F
    .param p4, "d"    # J

    .line 16688
    invoke-direct/range {p0 .. p5}, Lcom/android/server/am/ActivityManagerService;->handleBinderHeavyHitters(Ljava/util/List;IFJ)V

    return-void
.end method

.method public synthetic lambda$scheduleBinderHeavyHitterAutoSampler$34$ActivityManagerService(Ljava/util/List;IFJ)V
    .locals 9
    .param p1, "a"    # Ljava/util/List;
    .param p2, "b"    # I
    .param p3, "c"    # F
    .param p4, "d"    # J

    .line 16688
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    new-instance v8, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda14;

    move-object v1, v8

    move-object v2, p0

    move-object v3, p1

    move v4, p2

    move v5, p3

    move-wide v6, p4

    invoke-direct/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda14;-><init>(Lcom/android/server/am/ActivityManagerService;Ljava/util/List;IFJ)V

    invoke-virtual {v0, v8}, Lcom/android/server/am/ActivityManagerService$MainHandler;->post(Ljava/lang/Runnable;)Z

    return-void
.end method

.method public synthetic lambda$scheduleBinderHeavyHitterAutoSampler$35$ActivityManagerService()V
    .locals 8

    .line 16666
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 16667
    sget-boolean v1, Lcom/android/server/am/ActivityManagerConstants;->BINDER_HEAVY_HITTER_AUTO_SAMPLER_ENABLED:Z

    if-nez v1, :cond_0

    .line 16669
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    return-void

    .line 16671
    :cond_0
    :try_start_1
    sget-boolean v1, Lcom/android/server/am/ActivityManagerConstants;->BINDER_HEAVY_HITTER_WATCHER_ENABLED:Z

    if-eqz v1, :cond_1

    .line 16673
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    return-void

    .line 16675
    :cond_1
    :try_start_2
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v1

    .line 16676
    .local v1, "now":J
    iget-wide v3, p0, Lcom/android/server/am/ActivityManagerService;->mLastBinderHeavyHitterAutoSamplerStart:J

    const-wide/32 v5, 0x36ee80

    add-long/2addr v3, v5

    cmp-long v3, v3, v1

    if-lez v3, :cond_2

    .line 16679
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    return-void

    .line 16681
    :cond_2
    :try_start_3
    sget v3, Lcom/android/server/am/ActivityManagerConstants;->BINDER_HEAVY_HITTER_AUTO_SAMPLER_BATCHSIZE:I

    .line 16682
    .local v3, "batchSize":I
    sget v4, Lcom/android/server/am/ActivityManagerConstants;->BINDER_HEAVY_HITTER_AUTO_SAMPLER_THRESHOLD:F

    .line 16683
    .local v4, "threshold":F
    monitor-exit v0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 16685
    iput-wide v1, p0, Lcom/android/server/am/ActivityManagerService;->mLastBinderHeavyHitterAutoSamplerStart:J

    .line 16687
    const/4 v0, 0x1

    new-instance v5, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda0;

    invoke-direct {v5, p0}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda0;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    invoke-static {v0, v3, v4, v5}, Landroid/os/Binder;->setHeavyHitterWatcherConfig(ZIFLcom/android/internal/os/BinderCallHeavyHitterWatcher$BinderCallHeavyHitterListener;)V

    .line 16690
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v5, 0x48

    invoke-virtual {v0, v5}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v5

    const-wide/32 v6, 0x493e0

    invoke-virtual {v0, v5, v6, v7}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessageDelayed(Landroid/os/Message;J)Z

    .line 16693
    return-void

    .line 16683
    .end local v1    # "now":J
    .end local v3    # "batchSize":I
    .end local v4    # "threshold":F
    :catchall_0
    move-exception v1

    :try_start_4
    monitor-exit v0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v1
.end method

.method public synthetic lambda$schedulePendingSystemServerWtfs$10$ActivityManagerService(Ljava/util/LinkedList;)V
    .locals 0
    .param p1, "list"    # Ljava/util/LinkedList;

    .line 8111
    invoke-direct {p0, p1}, Lcom/android/server/am/ActivityManagerService;->handlePendingSystemServerWtfs(Ljava/util/LinkedList;)V

    return-void
.end method

.method public synthetic lambda$scheduleUpdateBinderHeavyHitterWatcherConfig$28$ActivityManagerService(Ljava/util/List;IFJ)V
    .locals 0
    .param p1, "a"    # Ljava/util/List;
    .param p2, "b"    # I
    .param p3, "c"    # F
    .param p4, "d"    # J

    .line 16638
    invoke-direct/range {p0 .. p5}, Lcom/android/server/am/ActivityManagerService;->handleBinderHeavyHitters(Ljava/util/List;IFJ)V

    return-void
.end method

.method public synthetic lambda$scheduleUpdateBinderHeavyHitterWatcherConfig$29$ActivityManagerService(Ljava/util/List;IFJ)V
    .locals 9
    .param p1, "a"    # Ljava/util/List;
    .param p2, "b"    # I
    .param p3, "c"    # F
    .param p4, "d"    # J

    .line 16637
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    new-instance v8, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda15;

    move-object v1, v8

    move-object v2, p0

    move-object v3, p1

    move v4, p2

    move v5, p3

    move-wide v6, p4

    invoke-direct/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda15;-><init>(Lcom/android/server/am/ActivityManagerService;Ljava/util/List;IFJ)V

    invoke-virtual {v0, v8}, Lcom/android/server/am/ActivityManagerService$MainHandler;->post(Ljava/lang/Runnable;)Z

    return-void
.end method

.method public synthetic lambda$scheduleUpdateBinderHeavyHitterWatcherConfig$30$ActivityManagerService(Ljava/util/List;IFJ)V
    .locals 0
    .param p1, "a"    # Ljava/util/List;
    .param p2, "b"    # I
    .param p3, "c"    # F
    .param p4, "d"    # J

    .line 16645
    invoke-direct/range {p0 .. p5}, Lcom/android/server/am/ActivityManagerService;->handleBinderHeavyHitters(Ljava/util/List;IFJ)V

    return-void
.end method

.method public synthetic lambda$scheduleUpdateBinderHeavyHitterWatcherConfig$31$ActivityManagerService(Ljava/util/List;IFJ)V
    .locals 9
    .param p1, "a"    # Ljava/util/List;
    .param p2, "b"    # I
    .param p3, "c"    # F
    .param p4, "d"    # J

    .line 16644
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    new-instance v8, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda16;

    move-object v1, v8

    move-object v2, p0

    move-object v3, p1

    move v4, p2

    move v5, p3

    move-wide v6, p4

    invoke-direct/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda16;-><init>(Lcom/android/server/am/ActivityManagerService;Ljava/util/List;IFJ)V

    invoke-virtual {v0, v8}, Lcom/android/server/am/ActivityManagerService$MainHandler;->post(Ljava/lang/Runnable;)Z

    return-void
.end method

.method public synthetic lambda$scheduleUpdateBinderHeavyHitterWatcherConfig$32$ActivityManagerService()V
    .locals 5

    .line 16629
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 16630
    sget-boolean v1, Lcom/android/server/am/ActivityManagerConstants;->BINDER_HEAVY_HITTER_WATCHER_ENABLED:Z

    const/16 v2, 0x48

    if-eqz v1, :cond_0

    .line 16632
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v1, v2}, Lcom/android/server/am/ActivityManagerService$MainHandler;->removeMessages(I)V

    .line 16634
    const/4 v1, 0x1

    .line 16635
    .local v1, "enabled":Z
    sget v2, Lcom/android/server/am/ActivityManagerConstants;->BINDER_HEAVY_HITTER_WATCHER_BATCHSIZE:I

    .line 16636
    .local v2, "batchSize":I
    sget v3, Lcom/android/server/am/ActivityManagerConstants;->BINDER_HEAVY_HITTER_WATCHER_THRESHOLD:F

    .line 16637
    .local v3, "threshold":F
    new-instance v4, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda1;

    invoke-direct {v4, p0}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda1;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    .local v4, "listener":Lcom/android/internal/os/BinderCallHeavyHitterWatcher$BinderCallHeavyHitterListener;
    goto :goto_0

    .line 16639
    .end local v1    # "enabled":Z
    .end local v2    # "batchSize":I
    .end local v3    # "threshold":F
    .end local v4    # "listener":Lcom/android/internal/os/BinderCallHeavyHitterWatcher$BinderCallHeavyHitterListener;
    :cond_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v1, v2}, Lcom/android/server/am/ActivityManagerService$MainHandler;->hasMessages(I)Z

    move-result v1

    if-eqz v1, :cond_1

    .line 16641
    sget-boolean v1, Lcom/android/server/am/ActivityManagerConstants;->BINDER_HEAVY_HITTER_AUTO_SAMPLER_ENABLED:Z

    .line 16642
    .restart local v1    # "enabled":Z
    sget v2, Lcom/android/server/am/ActivityManagerConstants;->BINDER_HEAVY_HITTER_AUTO_SAMPLER_BATCHSIZE:I

    .line 16643
    .restart local v2    # "batchSize":I
    sget v3, Lcom/android/server/am/ActivityManagerConstants;->BINDER_HEAVY_HITTER_AUTO_SAMPLER_THRESHOLD:F

    .line 16644
    .restart local v3    # "threshold":F
    new-instance v4, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda2;

    invoke-direct {v4, p0}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda2;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    .restart local v4    # "listener":Lcom/android/internal/os/BinderCallHeavyHitterWatcher$BinderCallHeavyHitterListener;
    goto :goto_0

    .line 16648
    .end local v1    # "enabled":Z
    .end local v2    # "batchSize":I
    .end local v3    # "threshold":F
    .end local v4    # "listener":Lcom/android/internal/os/BinderCallHeavyHitterWatcher$BinderCallHeavyHitterListener;
    :cond_1
    const/4 v1, 0x0

    .line 16649
    .restart local v1    # "enabled":Z
    const/4 v2, 0x0

    .line 16650
    .restart local v2    # "batchSize":I
    const/4 v3, 0x0

    .line 16651
    .restart local v3    # "threshold":F
    const/4 v4, 0x0

    .line 16653
    .restart local v4    # "listener":Lcom/android/internal/os/BinderCallHeavyHitterWatcher$BinderCallHeavyHitterListener;
    :goto_0
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 16654
    invoke-static {v1, v2, v3, v4}, Landroid/os/Binder;->setHeavyHitterWatcherConfig(ZIFLcom/android/internal/os/BinderCallHeavyHitterWatcher$BinderCallHeavyHitterListener;)V

    .line 16655
    return-void

    .line 16653
    .end local v1    # "enabled":Z
    .end local v2    # "batchSize":I
    .end local v3    # "threshold":F
    .end local v4    # "listener":Lcom/android/internal/os/BinderCallHeavyHitterWatcher$BinderCallHeavyHitterListener;
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v1
.end method

.method public synthetic lambda$startBinderTracking$26$ActivityManagerService(Lcom/android/server/am/ProcessRecord;)V
    .locals 4
    .param p1, "process"    # Lcom/android/server/am/ProcessRecord;

    .line 15208
    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v0

    .line 15209
    .local v0, "thread":Landroid/app/IApplicationThread;
    invoke-direct {p0, p1, v0}, Lcom/android/server/am/ActivityManagerService;->processSanityChecksLPr(Lcom/android/server/am/ProcessRecord;Landroid/app/IApplicationThread;)Z

    move-result v1

    if-nez v1, :cond_0

    .line 15210
    return-void

    .line 15213
    :cond_0
    :try_start_0
    invoke-interface {v0}, Landroid/app/IApplicationThread;->startBinderTracking()V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 15216
    goto :goto_0

    .line 15214
    :catch_0
    move-exception v1

    .line 15215
    .local v1, "e":Landroid/os/RemoteException;
    const-string v2, "ActivityManager"

    const-string v3, "Process disappared"

    invoke-static {v2, v3}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 15217
    .end local v1    # "e":Landroid/os/RemoteException;
    :goto_0
    return-void
.end method

.method public synthetic lambda$stopBinderTrackingAndDump$27$ActivityManagerService(Ljava/io/PrintWriter;Landroid/os/ParcelFileDescriptor;Lcom/android/server/am/ProcessRecord;)V
    .locals 5
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "fd"    # Landroid/os/ParcelFileDescriptor;
    .param p3, "process"    # Lcom/android/server/am/ProcessRecord;

    .line 15243
    const-string v0, ".  Exception: "

    invoke-virtual {p3}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v1

    .line 15244
    .local v1, "thread":Landroid/app/IApplicationThread;
    invoke-direct {p0, p3, v1}, Lcom/android/server/am/ActivityManagerService;->processSanityChecksLPr(Lcom/android/server/am/ProcessRecord;Landroid/app/IApplicationThread;)Z

    move-result v2

    if-nez v2, :cond_0

    .line 15245
    return-void

    .line 15248
    :cond_0
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Traces for process: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v3, p3, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 15249
    invoke-virtual {p1}, Ljava/io/PrintWriter;->flush()V

    .line 15251
    :try_start_0
    new-instance v2, Lcom/android/internal/os/TransferPipe;

    invoke-direct {v2}, Lcom/android/internal/os/TransferPipe;-><init>()V
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_1
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 15253
    .local v2, "tp":Lcom/android/internal/os/TransferPipe;
    :try_start_1
    invoke-virtual {v2}, Lcom/android/internal/os/TransferPipe;->getWriteFd()Landroid/os/ParcelFileDescriptor;

    move-result-object v3

    invoke-interface {v1, v3}, Landroid/app/IApplicationThread;->stopBinderTrackingAndDump(Landroid/os/ParcelFileDescriptor;)V

    .line 15254
    invoke-virtual {p2}, Landroid/os/ParcelFileDescriptor;->getFileDescriptor()Ljava/io/FileDescriptor;

    move-result-object v3

    invoke-virtual {v2, v3}, Lcom/android/internal/os/TransferPipe;->go(Ljava/io/FileDescriptor;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 15256
    :try_start_2
    invoke-virtual {v2}, Lcom/android/internal/os/TransferPipe;->kill()V

    .line 15257
    goto :goto_0

    .line 15256
    :catchall_0
    move-exception v3

    invoke-virtual {v2}, Lcom/android/internal/os/TransferPipe;->kill()V

    .line 15257
    nop

    .end local v1    # "thread":Landroid/app/IApplicationThread;
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "pw":Ljava/io/PrintWriter;
    .end local p2    # "fd":Landroid/os/ParcelFileDescriptor;
    .end local p3    # "process":Lcom/android/server/am/ProcessRecord;
    throw v3
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_1
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_0

    .line 15262
    .end local v2    # "tp":Lcom/android/internal/os/TransferPipe;
    .restart local v1    # "thread":Landroid/app/IApplicationThread;
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "pw":Ljava/io/PrintWriter;
    .restart local p2    # "fd":Landroid/os/ParcelFileDescriptor;
    .restart local p3    # "process":Lcom/android/server/am/ProcessRecord;
    :catch_0
    move-exception v2

    .line 15263
    .local v2, "e":Landroid/os/RemoteException;
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Got a RemoteException while dumping IPC traces from "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 15265
    invoke-virtual {p1}, Ljava/io/PrintWriter;->flush()V

    goto :goto_1

    .line 15258
    .end local v2    # "e":Landroid/os/RemoteException;
    :catch_1
    move-exception v2

    .line 15259
    .local v2, "e":Ljava/io/IOException;
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Failure while dumping IPC traces from "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 15261
    invoke-virtual {p1}, Ljava/io/PrintWriter;->flush()V

    .line 15266
    .end local v2    # "e":Ljava/io/IOException;
    :goto_0
    nop

    .line 15267
    :goto_1
    return-void
.end method

.method public synthetic lambda$systemReady$7$ActivityManagerService(Landroid/os/PowerSaveState;)V
    .locals 1
    .param p1, "state"    # Landroid/os/PowerSaveState;

    .line 7598
    iget-boolean v0, p1, Landroid/os/PowerSaveState;->batterySaverEnabled:Z

    invoke-direct {p0, v0}, Lcom/android/server/am/ActivityManagerService;->updateForceBackgroundCheck(Z)V

    return-void
.end method

.method public synthetic lambda$systemReady$8$ActivityManagerService(I)V
    .locals 3
    .param p1, "uid"    # I

    .line 7730
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Uid "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, " sent too many Binders to uid "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 7731
    invoke-static {}, Landroid/os/Process;->myUid()I

    move-result v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 7730
    const-string v1, "ActivityManager"

    invoke-static {v1, v0}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    .line 7732
    invoke-static {}, Landroid/os/BinderProxy;->dumpProxyDebugInfo()V

    .line 7733
    const/16 v0, 0x3e8

    if-ne p1, v0, :cond_0

    .line 7734
    const-string v0, "Skipping kill (uid is SYSTEM)"

    invoke-static {v1, v0}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_0

    .line 7736
    :cond_0
    invoke-static {p1}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v0

    invoke-static {p1}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v1

    const-string v2, "Too many Binders sent to SYSTEM"

    invoke-virtual {p0, v0, v1, v2}, Lcom/android/server/am/ActivityManagerService;->killUid(IILjava/lang/String;)V

    .line 7739
    :goto_0
    return-void
.end method

.method public synthetic lambda$updateAppProcessCpuTimeLPr$21$ActivityManagerService(Lcom/android/server/am/ProcessRecord;JJJI)V
    .locals 4
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "cpuTimeUsed"    # J
    .param p4, "uptimeSince"    # J
    .param p6, "checkDur"    # J
    .param p8, "cpuLimit"    # I

    .line 14284
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 14285
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "excessive cpu "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p2, p3}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string v1, " during "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p4, p5}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string v1, " dur="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p6, p7}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string v1, " limit="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const/16 v1, 0x9

    const/4 v2, 0x7

    const/4 v3, 0x1

    invoke-virtual {p1, v0, v1, v2, v3}, Lcom/android/server/am/ProcessRecord;->killLocked(Ljava/lang/String;IIZ)V

    .line 14290
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 14291
    return-void

    .line 14290
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public synthetic lambda$updatePhantomProcessCpuTimeLPr$22$ActivityManagerService(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/PhantomProcessRecord;JJJI)V
    .locals 6
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "r"    # Lcom/android/server/am/PhantomProcessRecord;
    .param p3, "cpuTimeUsed"    # J
    .param p5, "uptimeSince"    # J
    .param p7, "checkDur"    # J
    .param p9, "cpuLimit"    # I

    .line 14309
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 14310
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPhantomProcessList:Lcom/android/server/am/PhantomProcessList;

    const/16 v3, 0x9

    const/4 v4, 0x7

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "excessive cpu "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p3, p4}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string v2, " during "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p5, p6}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string v2, " dur="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p7, p8}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string v2, " limit="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    move-object v1, p1

    move-object v2, p2

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/PhantomProcessList;->killPhantomProcessGroupLocked(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/PhantomProcessRecord;IILjava/lang/String;)V

    .line 14315
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 14316
    return-void

    .line 14315
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public synthetic lambda$updatePhantomProcessCpuTimeLPr$23$ActivityManagerService(JZLcom/android/server/am/ProcessRecord;IJLcom/android/server/am/PhantomProcessRecord;)Ljava/lang/Boolean;
    .locals 24
    .param p1, "uptimeSince"    # J
    .param p3, "doCpuKills"    # Z
    .param p4, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p5, "cpuLimit"    # I
    .param p6, "checkDur"    # J
    .param p8, "r"    # Lcom/android/server/am/PhantomProcessRecord;

    .line 14304
    move-object/from16 v11, p8

    iget-wide v0, v11, Lcom/android/server/am/PhantomProcessRecord;->mLastCputime:J

    const-wide/16 v2, 0x0

    cmp-long v0, v0, v2

    if-lez v0, :cond_1

    .line 14305
    iget-wide v0, v11, Lcom/android/server/am/PhantomProcessRecord;->mCurrentCputime:J

    iget-wide v2, v11, Lcom/android/server/am/PhantomProcessRecord;->mLastCputime:J

    sub-long v22, v0, v2

    .line 14306
    .local v22, "cpuTimeUsed":J
    move-object/from16 v10, p4

    iget-object v0, v10, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    .line 14307
    invoke-virtual/range {p8 .. p8}, Lcom/android/server/am/PhantomProcessRecord;->toString()Ljava/lang/String;

    move-result-object v19

    .line 14306
    move-object/from16 v12, p0

    move-wide/from16 v13, p1

    move/from16 v15, p3

    move-wide/from16 v16, v22

    move-object/from16 v18, v0

    move/from16 v20, p5

    move-object/from16 v21, p4

    invoke-direct/range {v12 .. v21}, Lcom/android/server/am/ActivityManagerService;->checkExcessivePowerUsageLPr(JZJLjava/lang/String;Ljava/lang/String;ILcom/android/server/am/ProcessRecord;)Z

    move-result v0

    if-eqz v0, :cond_0

    .line 14308
    move-object/from16 v12, p0

    iget-object v13, v12, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    new-instance v14, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda11;

    move-object v0, v14

    move-object/from16 v1, p0

    move-object/from16 v2, p4

    move-object/from16 v3, p8

    move-wide/from16 v4, v22

    move-wide/from16 v6, p1

    move-wide/from16 v8, p6

    move/from16 v10, p5

    invoke-direct/range {v0 .. v10}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda11;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/PhantomProcessRecord;JJJI)V

    invoke-virtual {v13, v14}, Lcom/android/server/am/ActivityManagerService$MainHandler;->post(Ljava/lang/Runnable;)Z

    .line 14317
    const/4 v0, 0x0

    invoke-static {v0}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v0

    return-object v0

    .line 14306
    :cond_0
    move-object/from16 v12, p0

    goto :goto_0

    .line 14304
    .end local v22    # "cpuTimeUsed":J
    :cond_1
    move-object/from16 v12, p0

    .line 14320
    :goto_0
    iget-wide v0, v11, Lcom/android/server/am/PhantomProcessRecord;->mCurrentCputime:J

    iput-wide v0, v11, Lcom/android/server/am/PhantomProcessRecord;->mLastCputime:J

    .line 14321
    const/4 v0, 0x1

    invoke-static {v0}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v0

    return-object v0
.end method

.method public launchBugReportHandlerApp()Z
    .locals 2

    .line 6708
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-static {v0}, Lcom/android/server/am/BugReportHandlerUtil;->isBugReportHandlerEnabled(Landroid/content/Context;)Z

    move-result v0

    if-nez v0, :cond_0

    .line 6709
    const/4 v0, 0x0

    return v0

    .line 6713
    :cond_0
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v1, "launchBugReportHandlerApp requested by UID "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "ActivityManager"

    invoke-static {v1, v0}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 6714
    const-string v0, "android.permission.DUMP"

    const-string/jumbo v1, "launchBugReportHandlerApp"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 6717
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-static {v0}, Lcom/android/server/am/BugReportHandlerUtil;->launchBugReportHandlerApp(Landroid/content/Context;)Z

    move-result v0

    return v0
.end method

.method public makePackageIdle(Ljava/lang/String;I)V
    .locals 18
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "userId"    # I

    .line 14566
    move-object/from16 v1, p0

    move-object/from16 v2, p1

    const-string v0, "android.permission.FORCE_STOP_PACKAGES"

    invoke-virtual {v1, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_9

    .line 14575
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v11

    .line 14576
    .local v11, "callingPid":I
    iget-object v3, v1, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v5

    const/4 v7, 0x1

    const/4 v8, 0x2

    const-string/jumbo v9, "makePackageIdle"

    const/4 v10, 0x0

    move v4, v11

    move/from16 v6, p2

    invoke-virtual/range {v3 .. v10}, Lcom/android/server/am/UserController;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result v3

    .line 14578
    .end local p2    # "userId":I
    .local v3, "userId":I
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v4

    .line 14580
    .local v4, "callingId":J
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_6

    move-object v6, v0

    .line 14581
    .local v6, "pm":Landroid/content/pm/IPackageManager;
    const/4 v7, -0x1

    .line 14583
    .local v7, "pkgUid":I
    const v0, 0x10002000

    const/4 v8, 0x0

    :try_start_1
    invoke-interface {v6, v2, v0, v8}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;II)I

    move-result v0
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_6

    move v7, v0

    .line 14586
    goto :goto_0

    .line 14585
    :catch_0
    move-exception v0

    .line 14587
    :goto_0
    const/4 v0, -0x1

    if-eq v7, v0, :cond_8

    .line 14591
    :try_start_2
    monitor-enter p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_6

    :try_start_3
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 14593
    iget-object v8, v1, Lcom/android/server/am/ActivityManagerService;->mLocalPowerManager:Landroid/os/PowerManagerInternal;
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_4

    if-eqz v8, :cond_0

    .line 14594
    :try_start_4
    invoke-virtual {v8}, Landroid/os/PowerManagerInternal;->startUidChanges()V
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    goto :goto_1

    .line 14618
    :catchall_0
    move-exception v0

    move-object/from16 v17, v6

    goto/16 :goto_6

    .line 14596
    :cond_0
    :goto_1
    :try_start_5
    invoke-static {v7}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v8

    .line 14597
    .local v8, "appId":I
    iget-object v9, v1, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    iget-object v9, v9, Lcom/android/server/am/ProcessList;->mActiveUids:Lcom/android/server/am/ActiveUids;

    invoke-virtual {v9}, Lcom/android/server/am/ActiveUids;->size()I

    move-result v9

    const/4 v10, 0x1

    sub-int/2addr v9, v10

    .local v9, "i":I
    :goto_2
    if-ltz v9, :cond_5

    .line 14598
    iget-object v12, v1, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    iget-object v12, v12, Lcom/android/server/am/ProcessList;->mActiveUids:Lcom/android/server/am/ActiveUids;

    invoke-virtual {v12, v9}, Lcom/android/server/am/ActiveUids;->valueAt(I)Lcom/android/server/am/UidRecord;

    move-result-object v12

    .line 14599
    .local v12, "uidRec":Lcom/android/server/am/UidRecord;
    invoke-virtual {v12}, Lcom/android/server/am/UidRecord;->getLastBackgroundTime()J

    move-result-wide v13

    .line 14600
    .local v13, "bgTime":J
    const-wide/16 v15, 0x0

    cmp-long v15, v13, v15

    if-lez v15, :cond_4

    invoke-virtual {v12}, Lcom/android/server/am/UidRecord;->isIdle()Z

    move-result v15

    if-nez v15, :cond_4

    .line 14601
    invoke-virtual {v12}, Lcom/android/server/am/UidRecord;->getUid()I

    move-result v15

    .line 14602
    .local v15, "uid":I
    invoke-static {v15}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v10
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_4

    if-ne v10, v8, :cond_3

    .line 14603
    if-eq v3, v0, :cond_2

    .line 14604
    :try_start_6
    invoke-static {v15}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v10
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    if-ne v3, v10, :cond_1

    goto :goto_3

    :cond_1
    move-object/from16 v17, v6

    goto :goto_5

    .line 14605
    :cond_2
    :goto_3
    :try_start_7
    invoke-static {v15}, Lcom/android/server/am/EventLogTags;->writeAmUidIdle(I)V

    .line 14606
    iget-object v10, v1, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v10
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_4

    :try_start_8
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 14607
    const/4 v0, 0x1

    invoke-virtual {v12, v0}, Lcom/android/server/am/UidRecord;->setIdle(Z)V

    .line 14608
    invoke-virtual {v12, v0}, Lcom/android/server/am/UidRecord;->setSetIdle(Z)V

    .line 14609
    monitor-exit v10
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_1

    :try_start_9
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 14610
    const-string v10, "ActivityManager"

    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_4

    move-object/from16 v17, v6

    .end local v6    # "pm":Landroid/content/pm/IPackageManager;
    .local v17, "pm":Landroid/content/pm/IPackageManager;
    :try_start_a
    const-string v6, "Idling uid "

    invoke-virtual {v0, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {v15}, Landroid/os/UserHandle;->formatUid(I)Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v0, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v6, " from package "

    invoke-virtual {v0, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v6, " user "

    invoke-virtual {v0, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v10, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 14612
    invoke-virtual {v1, v15, v12}, Lcom/android/server/am/ActivityManagerService;->doStopUidLocked(ILcom/android/server/am/UidRecord;)V
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_2

    goto :goto_5

    .line 14609
    .end local v17    # "pm":Landroid/content/pm/IPackageManager;
    .restart local v6    # "pm":Landroid/content/pm/IPackageManager;
    :catchall_1
    move-exception v0

    move-object/from16 v17, v6

    .end local v6    # "pm":Landroid/content/pm/IPackageManager;
    .restart local v17    # "pm":Landroid/content/pm/IPackageManager;
    :goto_4
    :try_start_b
    monitor-exit v10
    :try_end_b
    .catchall {:try_start_b .. :try_end_b} :catchall_3

    :try_start_c
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .end local v3    # "userId":I
    .end local v4    # "callingId":J
    .end local v7    # "pkgUid":I
    .end local v11    # "callingPid":I
    .end local v17    # "pm":Landroid/content/pm/IPackageManager;
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "packageName":Ljava/lang/String;
    throw v0
    :try_end_c
    .catchall {:try_start_c .. :try_end_c} :catchall_2

    .line 14618
    .end local v8    # "appId":I
    .end local v9    # "i":I
    .end local v12    # "uidRec":Lcom/android/server/am/UidRecord;
    .end local v13    # "bgTime":J
    .end local v15    # "uid":I
    .restart local v3    # "userId":I
    .restart local v4    # "callingId":J
    .restart local v7    # "pkgUid":I
    .restart local v11    # "callingPid":I
    .restart local v17    # "pm":Landroid/content/pm/IPackageManager;
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "packageName":Ljava/lang/String;
    :catchall_2
    move-exception v0

    goto :goto_6

    .line 14609
    .restart local v8    # "appId":I
    .restart local v9    # "i":I
    .restart local v12    # "uidRec":Lcom/android/server/am/UidRecord;
    .restart local v13    # "bgTime":J
    .restart local v15    # "uid":I
    :catchall_3
    move-exception v0

    goto :goto_4

    .line 14602
    .end local v17    # "pm":Landroid/content/pm/IPackageManager;
    .restart local v6    # "pm":Landroid/content/pm/IPackageManager;
    :cond_3
    move-object/from16 v17, v6

    .end local v6    # "pm":Landroid/content/pm/IPackageManager;
    .restart local v17    # "pm":Landroid/content/pm/IPackageManager;
    goto :goto_5

    .line 14600
    .end local v15    # "uid":I
    .end local v17    # "pm":Landroid/content/pm/IPackageManager;
    .restart local v6    # "pm":Landroid/content/pm/IPackageManager;
    :cond_4
    move-object/from16 v17, v6

    .line 14597
    .end local v6    # "pm":Landroid/content/pm/IPackageManager;
    .end local v12    # "uidRec":Lcom/android/server/am/UidRecord;
    .end local v13    # "bgTime":J
    .restart local v17    # "pm":Landroid/content/pm/IPackageManager;
    :goto_5
    add-int/lit8 v9, v9, -0x1

    move-object/from16 v6, v17

    const/4 v0, -0x1

    const/4 v10, 0x1

    goto/16 :goto_2

    .end local v17    # "pm":Landroid/content/pm/IPackageManager;
    .restart local v6    # "pm":Landroid/content/pm/IPackageManager;
    :cond_5
    move-object/from16 v17, v6

    .line 14618
    .end local v6    # "pm":Landroid/content/pm/IPackageManager;
    .end local v8    # "appId":I
    .end local v9    # "i":I
    .restart local v17    # "pm":Landroid/content/pm/IPackageManager;
    :try_start_d
    iget-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mLocalPowerManager:Landroid/os/PowerManagerInternal;

    if-eqz v0, :cond_6

    .line 14619
    invoke-virtual {v0}, Landroid/os/PowerManagerInternal;->finishUidChanges()V

    .line 14622
    :cond_6
    monitor-exit p0
    :try_end_d
    .catchall {:try_start_d .. :try_end_d} :catchall_5

    :try_start_e
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V
    :try_end_e
    .catchall {:try_start_e .. :try_end_e} :catchall_6

    .line 14624
    .end local v7    # "pkgUid":I
    .end local v17    # "pm":Landroid/content/pm/IPackageManager;
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 14625
    nop

    .line 14626
    return-void

    .line 14618
    .restart local v6    # "pm":Landroid/content/pm/IPackageManager;
    .restart local v7    # "pkgUid":I
    :catchall_4
    move-exception v0

    move-object/from16 v17, v6

    .end local v6    # "pm":Landroid/content/pm/IPackageManager;
    .restart local v17    # "pm":Landroid/content/pm/IPackageManager;
    :goto_6
    :try_start_f
    iget-object v6, v1, Lcom/android/server/am/ActivityManagerService;->mLocalPowerManager:Landroid/os/PowerManagerInternal;

    if-eqz v6, :cond_7

    .line 14619
    invoke-virtual {v6}, Landroid/os/PowerManagerInternal;->finishUidChanges()V

    .line 14621
    :cond_7
    nop

    .end local v3    # "userId":I
    .end local v4    # "callingId":J
    .end local v7    # "pkgUid":I
    .end local v11    # "callingPid":I
    .end local v17    # "pm":Landroid/content/pm/IPackageManager;
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "packageName":Ljava/lang/String;
    throw v0

    .line 14622
    .restart local v3    # "userId":I
    .restart local v4    # "callingId":J
    .restart local v7    # "pkgUid":I
    .restart local v11    # "callingPid":I
    .restart local v17    # "pm":Landroid/content/pm/IPackageManager;
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "packageName":Ljava/lang/String;
    :catchall_5
    move-exception v0

    monitor-exit p0
    :try_end_f
    .catchall {:try_start_f .. :try_end_f} :catchall_5

    :try_start_10
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .end local v3    # "userId":I
    .end local v4    # "callingId":J
    .end local v11    # "callingPid":I
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "packageName":Ljava/lang/String;
    throw v0

    .line 14588
    .end local v17    # "pm":Landroid/content/pm/IPackageManager;
    .restart local v3    # "userId":I
    .restart local v4    # "callingId":J
    .restart local v6    # "pm":Landroid/content/pm/IPackageManager;
    .restart local v11    # "callingPid":I
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "packageName":Ljava/lang/String;
    :cond_8
    move-object/from16 v17, v6

    .end local v6    # "pm":Landroid/content/pm/IPackageManager;
    .restart local v17    # "pm":Landroid/content/pm/IPackageManager;
    new-instance v0, Ljava/lang/IllegalArgumentException;

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "Unknown package name "

    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-direct {v0, v6}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .end local v3    # "userId":I
    .end local v4    # "callingId":J
    .end local v11    # "callingPid":I
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "packageName":Ljava/lang/String;
    throw v0
    :try_end_10
    .catchall {:try_start_10 .. :try_end_10} :catchall_6

    .line 14624
    .end local v7    # "pkgUid":I
    .end local v17    # "pm":Landroid/content/pm/IPackageManager;
    .restart local v3    # "userId":I
    .restart local v4    # "callingId":J
    .restart local v11    # "callingPid":I
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "packageName":Ljava/lang/String;
    :catchall_6
    move-exception v0

    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 14625
    throw v0

    .line 14568
    .end local v3    # "userId":I
    .end local v4    # "callingId":J
    .end local v11    # "callingPid":I
    .restart local p2    # "userId":I
    :cond_9
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Permission Denial: makePackageIdle() from pid="

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 14569
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v3

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, ", uid="

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 14570
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v3

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, " requires "

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v3, "android.permission.FORCE_STOP_PACKAGES"

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 14572
    .local v0, "msg":Ljava/lang/String;
    const-string v3, "ActivityManager"

    invoke-static {v3, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 14573
    new-instance v3, Ljava/lang/SecurityException;

    invoke-direct {v3, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v3
.end method

.method maybeTriggerWatchdog()V
    .locals 1

    .line 17081
    const-string v0, "debug.trigger.watchdog"

    .line 17095
    .local v0, "key":Ljava/lang/String;
    return-void
.end method

.method public monitor()V
    .locals 1

    .line 15024
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 15025
    return-void

    .line 15024
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public moveActivityTaskToBack(Landroid/os/IBinder;Z)Z
    .locals 1
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "nonRoot"    # Z

    .line 5861
    invoke-static {}, Landroid/app/ActivityClient;->getInstance()Landroid/app/ActivityClient;

    move-result-object v0

    invoke-virtual {v0, p1, p2}, Landroid/app/ActivityClient;->moveActivityTaskToBack(Landroid/os/IBinder;Z)Z

    move-result v0

    return v0
.end method

.method public moveTaskToFront(Landroid/app/IApplicationThread;Ljava/lang/String;IILandroid/os/Bundle;)V
    .locals 6
    .param p1, "appThread"    # Landroid/app/IApplicationThread;
    .param p2, "callingPackage"    # Ljava/lang/String;
    .param p3, "taskId"    # I
    .param p4, "flags"    # I
    .param p5, "bOptions"    # Landroid/os/Bundle;

    .line 5837
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    move-object v1, p1

    move-object v2, p2

    move v3, p3

    move v4, p4

    move-object v5, p5

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/wm/ActivityTaskManagerService;->moveTaskToFront(Landroid/app/IApplicationThread;Ljava/lang/String;IILandroid/os/Bundle;)V

    .line 5838
    return-void
.end method

.method public moveTaskToRootTask(IIZ)V
    .locals 1
    .param p1, "taskId"    # I
    .param p2, "rootTaskId"    # I
    .param p3, "toTop"    # Z

    .line 5866
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/server/wm/ActivityTaskManagerService;->moveTaskToRootTask(IIZ)V

    .line 5867
    return-void
.end method

.method public noteAlarmFinish(Landroid/content/IIntentSender;Landroid/os/WorkSource;ILjava/lang/String;)V
    .locals 3
    .param p1, "sender"    # Landroid/content/IIntentSender;
    .param p2, "workSource"    # Landroid/os/WorkSource;
    .param p3, "sourceUid"    # I
    .param p4, "tag"    # Ljava/lang/String;

    .line 7094
    if-eqz p2, :cond_0

    invoke-virtual {p2}, Landroid/os/WorkSource;->isEmpty()Z

    move-result v0

    if-eqz v0, :cond_0

    .line 7095
    const/4 p2, 0x0

    .line 7098
    :cond_0
    if-gtz p3, :cond_4

    if-nez p2, :cond_4

    .line 7100
    if-eqz p1, :cond_3

    .line 7101
    instance-of v0, p1, Lcom/android/server/am/PendingIntentRecord;

    if-nez v0, :cond_1

    .line 7102
    return-void

    .line 7105
    :cond_1
    move-object v0, p1

    check-cast v0, Lcom/android/server/am/PendingIntentRecord;

    .line 7106
    .local v0, "rec":Lcom/android/server/am/PendingIntentRecord;
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    .line 7107
    .local v1, "callerUid":I
    iget v2, v0, Lcom/android/server/am/PendingIntentRecord;->uid:I

    if-ne v2, v1, :cond_2

    const/16 v2, 0x3e8

    goto :goto_0

    :cond_2
    iget v2, v0, Lcom/android/server/am/PendingIntentRecord;->uid:I

    :goto_0
    move p3, v2

    .line 7108
    .end local v0    # "rec":Lcom/android/server/am/PendingIntentRecord;
    .end local v1    # "callerUid":I
    goto :goto_1

    .line 7111
    :cond_3
    return-void

    .line 7120
    :cond_4
    :goto_1
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v0, p4, p2, p3}, Lcom/android/server/am/BatteryStatsService;->noteAlarmFinish(Ljava/lang/String;Landroid/os/WorkSource;I)V

    .line 7121
    return-void
.end method

.method public noteAlarmStart(Landroid/content/IIntentSender;Landroid/os/WorkSource;ILjava/lang/String;)V
    .locals 3
    .param p1, "sender"    # Landroid/content/IIntentSender;
    .param p2, "workSource"    # Landroid/os/WorkSource;
    .param p3, "sourceUid"    # I
    .param p4, "tag"    # Ljava/lang/String;

    .line 7062
    if-eqz p2, :cond_0

    invoke-virtual {p2}, Landroid/os/WorkSource;->isEmpty()Z

    move-result v0

    if-eqz v0, :cond_0

    .line 7063
    const/4 p2, 0x0

    .line 7066
    :cond_0
    if-gtz p3, :cond_4

    if-nez p2, :cond_4

    .line 7068
    if-eqz p1, :cond_3

    .line 7069
    instance-of v0, p1, Lcom/android/server/am/PendingIntentRecord;

    if-nez v0, :cond_1

    .line 7070
    return-void

    .line 7073
    :cond_1
    move-object v0, p1

    check-cast v0, Lcom/android/server/am/PendingIntentRecord;

    .line 7074
    .local v0, "rec":Lcom/android/server/am/PendingIntentRecord;
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    .line 7075
    .local v1, "callerUid":I
    iget v2, v0, Lcom/android/server/am/PendingIntentRecord;->uid:I

    if-ne v2, v1, :cond_2

    const/16 v2, 0x3e8

    goto :goto_0

    :cond_2
    iget v2, v0, Lcom/android/server/am/PendingIntentRecord;->uid:I

    :goto_0
    move p3, v2

    .line 7076
    .end local v0    # "rec":Lcom/android/server/am/PendingIntentRecord;
    .end local v1    # "callerUid":I
    goto :goto_1

    .line 7079
    :cond_3
    return-void

    .line 7088
    :cond_4
    :goto_1
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v0, p4, p2, p3}, Lcom/android/server/am/BatteryStatsService;->noteAlarmStart(Ljava/lang/String;Landroid/os/WorkSource;I)V

    .line 7089
    return-void
.end method

.method noteUidProcessState(III)V
    .locals 19
    .param p1, "uid"    # I
    .param p2, "state"    # I
    .param p3, "capability"    # I

    .line 14195
    move-object/from16 v0, p0

    move/from16 v1, p1

    move/from16 v2, p2

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v3, v1, v2}, Lcom/android/server/am/BatteryStatsService;->noteUidProcessState(II)V

    .line 14196
    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/appop/AppOpsService;

    move/from16 v4, p3

    invoke-virtual {v3, v1, v2, v4}, Lcom/android/server/appop/AppOpsService;->updateUidProcState(III)V

    .line 14197
    iget-boolean v3, v0, Lcom/android/server/am/ActivityManagerService;->mTrackingAssociations:Z

    if-eqz v3, :cond_5

    .line 14198
    const/4 v3, 0x0

    .local v3, "i1":I
    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mAssociations:Landroid/util/SparseArray;

    invoke-virtual {v5}, Landroid/util/SparseArray;->size()I

    move-result v5

    .local v5, "N1":I
    :goto_0
    if-ge v3, v5, :cond_4

    .line 14199
    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mAssociations:Landroid/util/SparseArray;

    .line 14200
    invoke-virtual {v6, v3}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Landroid/util/ArrayMap;

    .line 14201
    .local v6, "targetComponents":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Landroid/content/ComponentName;Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;>;"
    const/4 v7, 0x0

    .local v7, "i2":I
    invoke-virtual {v6}, Landroid/util/ArrayMap;->size()I

    move-result v8

    .local v8, "N2":I
    :goto_1
    if-ge v7, v8, :cond_3

    .line 14202
    nop

    .line 14203
    invoke-virtual {v6, v7}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Landroid/util/SparseArray;

    .line 14204
    .local v9, "sourceUids":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;"
    invoke-virtual {v9, v1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v10

    check-cast v10, Landroid/util/ArrayMap;

    .line 14205
    .local v10, "sourceProcesses":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;"
    if-eqz v10, :cond_2

    .line 14206
    const/4 v11, 0x0

    .local v11, "i4":I
    invoke-virtual {v10}, Landroid/util/ArrayMap;->size()I

    move-result v12

    .local v12, "N4":I
    :goto_2
    if-ge v11, v12, :cond_1

    .line 14207
    invoke-virtual {v10, v11}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v13

    check-cast v13, Lcom/android/server/am/ActivityManagerService$Association;

    .line 14208
    .local v13, "ass":Lcom/android/server/am/ActivityManagerService$Association;
    iget v14, v13, Lcom/android/server/am/ActivityManagerService$Association;->mNesting:I

    const/4 v15, 0x1

    if-lt v14, v15, :cond_0

    .line 14210
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v14

    .line 14211
    .local v14, "uptime":J
    iget-object v0, v13, Lcom/android/server/am/ActivityManagerService$Association;->mStateTimes:[J

    iget v1, v13, Lcom/android/server/am/ActivityManagerService$Association;->mLastState:I

    add-int/lit8 v1, v1, 0x0

    aget-wide v16, v0, v1

    move/from16 v18, v5

    .end local v5    # "N1":I
    .local v18, "N1":I
    iget-wide v4, v13, Lcom/android/server/am/ActivityManagerService$Association;->mLastStateUptime:J

    sub-long v4, v14, v4

    add-long v16, v16, v4

    aput-wide v16, v0, v1

    .line 14213
    iput v2, v13, Lcom/android/server/am/ActivityManagerService$Association;->mLastState:I

    .line 14214
    iput-wide v14, v13, Lcom/android/server/am/ActivityManagerService$Association;->mLastStateUptime:J

    goto :goto_3

    .line 14208
    .end local v14    # "uptime":J
    .end local v18    # "N1":I
    .restart local v5    # "N1":I
    :cond_0
    move/from16 v18, v5

    .line 14206
    .end local v5    # "N1":I
    .end local v13    # "ass":Lcom/android/server/am/ActivityManagerService$Association;
    .restart local v18    # "N1":I
    :goto_3
    add-int/lit8 v11, v11, 0x1

    move-object/from16 v0, p0

    move/from16 v1, p1

    move/from16 v4, p3

    move/from16 v5, v18

    goto :goto_2

    .end local v18    # "N1":I
    .restart local v5    # "N1":I
    :cond_1
    move/from16 v18, v5

    .end local v5    # "N1":I
    .restart local v18    # "N1":I
    goto :goto_4

    .line 14205
    .end local v11    # "i4":I
    .end local v12    # "N4":I
    .end local v18    # "N1":I
    .restart local v5    # "N1":I
    :cond_2
    move/from16 v18, v5

    .line 14201
    .end local v5    # "N1":I
    .end local v9    # "sourceUids":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;"
    .end local v10    # "sourceProcesses":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;"
    .restart local v18    # "N1":I
    :goto_4
    add-int/lit8 v7, v7, 0x1

    move-object/from16 v0, p0

    move/from16 v1, p1

    move/from16 v4, p3

    move/from16 v5, v18

    goto :goto_1

    .end local v18    # "N1":I
    .restart local v5    # "N1":I
    :cond_3
    move/from16 v18, v5

    .line 14198
    .end local v5    # "N1":I
    .end local v6    # "targetComponents":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Landroid/content/ComponentName;Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;>;"
    .end local v7    # "i2":I
    .end local v8    # "N2":I
    .restart local v18    # "N1":I
    add-int/lit8 v3, v3, 0x1

    move-object/from16 v0, p0

    move/from16 v1, p1

    move/from16 v4, p3

    goto :goto_0

    .end local v18    # "N1":I
    .restart local v5    # "N1":I
    :cond_4
    move/from16 v18, v5

    .line 14221
    .end local v3    # "i1":I
    .end local v5    # "N1":I
    :cond_5
    return-void
.end method

.method public noteWakeupAlarm(Landroid/content/IIntentSender;Landroid/os/WorkSource;ILjava/lang/String;Ljava/lang/String;)V
    .locals 7
    .param p1, "sender"    # Landroid/content/IIntentSender;
    .param p2, "workSource"    # Landroid/os/WorkSource;
    .param p3, "sourceUid"    # I
    .param p4, "sourcePkg"    # Ljava/lang/String;
    .param p5, "tag"    # Ljava/lang/String;

    .line 6999
    if-eqz p2, :cond_0

    invoke-virtual {p2}, Landroid/os/WorkSource;->isEmpty()Z

    move-result v0

    if-eqz v0, :cond_0

    .line 7000
    const/4 p2, 0x0

    .line 7003
    :cond_0
    if-gtz p3, :cond_4

    if-nez p2, :cond_4

    .line 7005
    if-eqz p1, :cond_3

    .line 7006
    instance-of v0, p1, Lcom/android/server/am/PendingIntentRecord;

    if-nez v0, :cond_1

    .line 7007
    return-void

    .line 7010
    :cond_1
    move-object v0, p1

    check-cast v0, Lcom/android/server/am/PendingIntentRecord;

    .line 7011
    .local v0, "rec":Lcom/android/server/am/PendingIntentRecord;
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    .line 7012
    .local v1, "callerUid":I
    iget v2, v0, Lcom/android/server/am/PendingIntentRecord;->uid:I

    if-ne v2, v1, :cond_2

    const/16 v2, 0x3e8

    goto :goto_0

    :cond_2
    iget v2, v0, Lcom/android/server/am/PendingIntentRecord;->uid:I

    :goto_0
    move p3, v2

    .line 7013
    .end local v0    # "rec":Lcom/android/server/am/PendingIntentRecord;
    .end local v1    # "callerUid":I
    goto :goto_1

    .line 7016
    :cond_3
    return-void

    .line 7020
    :cond_4
    :goto_1
    const/4 v0, 0x0

    .line 7022
    .local v0, "standbyBucket":I
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v1, p4, p3, p2, p5}, Lcom/android/server/am/BatteryStatsService;->noteWakupAlarm(Ljava/lang/String;ILandroid/os/WorkSource;Ljava/lang/String;)V

    .line 7023
    if-eqz p2, :cond_7

    .line 7024
    const/4 v1, 0x0

    invoke-virtual {p2, v1}, Landroid/os/WorkSource;->getPackageName(I)Ljava/lang/String;

    move-result-object v1

    .line 7025
    .local v1, "workSourcePackage":Ljava/lang/String;
    invoke-virtual {p2}, Landroid/os/WorkSource;->getAttributionUid()I

    move-result v2

    .line 7026
    .local v2, "workSourceUid":I
    if-nez v1, :cond_5

    .line 7027
    move-object v1, p4

    .line 7028
    move v2, p3

    .line 7031
    :cond_5
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    if-eqz v3, :cond_6

    .line 7032
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    .line 7033
    invoke-static {v2}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v4

    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v5

    .line 7032
    invoke-virtual {v3, v1, v4, v5, v6}, Landroid/app/usage/UsageStatsManagerInternal;->getAppStandbyBucket(Ljava/lang/String;IJ)I

    move-result v0

    .line 7036
    :cond_6
    const/16 v3, 0x23

    invoke-static {v3, p2, p5, p4, v0}, Lcom/android/internal/util/FrameworkStatsLog;->write(ILandroid/os/WorkSource;Ljava/lang/String;Ljava/lang/String;I)V

    .line 7043
    .end local v1    # "workSourcePackage":Ljava/lang/String;
    .end local v2    # "workSourceUid":I
    goto :goto_3

    .line 7044
    :cond_7
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    if-eqz v1, :cond_8

    .line 7045
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    .line 7046
    invoke-static {p3}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v2

    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v3

    .line 7045
    invoke-virtual {v1, p4, v2, v3, v4}, Landroid/app/usage/UsageStatsManagerInternal;->getAppStandbyBucket(Ljava/lang/String;IJ)I

    move-result v0

    move v6, v0

    goto :goto_2

    .line 7044
    :cond_8
    move v6, v0

    .line 7048
    .end local v0    # "standbyBucket":I
    .local v6, "standbyBucket":I
    :goto_2
    const/16 v0, 0x23

    const/4 v2, 0x0

    move v1, p3

    move-object v3, p5

    move-object v4, p4

    move v5, v6

    invoke-static/range {v0 .. v5}, Lcom/android/internal/util/FrameworkStatsLog;->write_non_chained(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V

    move v0, v6

    .line 7057
    .end local v6    # "standbyBucket":I
    .restart local v0    # "standbyBucket":I
    :goto_3
    return-void
.end method

.method public notifyCleartextNetwork(I[B)V
    .locals 3
    .param p1, "uid"    # I
    .param p2, "firstPacket"    # [B

    .line 6338
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v1, 0x31

    const/4 v2, 0x0

    invoke-virtual {v0, v1, p1, v2, p2}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(IIILjava/lang/Object;)Landroid/os/Message;

    move-result-object v0

    invoke-virtual {v0}, Landroid/os/Message;->sendToTarget()V

    .line 6339
    return-void
.end method

.method public notifyLockedProfile(I)V
    .locals 2
    .param p1, "userId"    # I

    .line 6363
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {v1}, Lcom/android/server/am/UserController;->getCurrentUserId()I

    move-result v1

    invoke-virtual {v0, p1, v1}, Lcom/android/server/wm/ActivityTaskManagerInternal;->notifyLockedProfile(II)V

    .line 6364
    return-void
.end method

.method notifyPackageUse(Ljava/lang/String;I)V
    .locals 1
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "reason"    # I

    .line 2650
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getPackageManagerInternal()Landroid/content/pm/PackageManagerInternal;

    move-result-object v0

    invoke-virtual {v0, p1, p2}, Landroid/content/pm/PackageManagerInternal;->notifyPackageUse(Ljava/lang/String;I)V

    .line 2651
    return-void
.end method

.method onCoreSettingsChange(Landroid/os/Bundle;)V
    .locals 2
    .param p1, "settings"    # Landroid/os/Bundle;

    .line 15028
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 15029
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v1, p1}, Lcom/android/server/am/ProcessList;->updateCoreSettingsLOSP(Landroid/os/Bundle;)V

    .line 15030
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 15031
    return-void

    .line 15030
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v1
.end method

.method public onShellCommand(Ljava/io/FileDescriptor;Ljava/io/FileDescriptor;Ljava/io/FileDescriptor;[Ljava/lang/String;Landroid/os/ShellCallback;Landroid/os/ResultReceiver;)V
    .locals 8
    .param p1, "in"    # Ljava/io/FileDescriptor;
    .param p2, "out"    # Ljava/io/FileDescriptor;
    .param p3, "err"    # Ljava/io/FileDescriptor;
    .param p4, "args"    # [Ljava/lang/String;
    .param p5, "callback"    # Landroid/os/ShellCallback;
    .param p6, "resultReceiver"    # Landroid/os/ResultReceiver;

    .line 8608
    new-instance v0, Lcom/android/server/am/ActivityManagerShellCommand;

    const/4 v1, 0x0

    invoke-direct {v0, p0, v1}, Lcom/android/server/am/ActivityManagerShellCommand;-><init>(Lcom/android/server/am/ActivityManagerService;Z)V

    move-object v1, p0

    move-object v2, p1

    move-object v3, p2

    move-object v4, p3

    move-object v5, p4

    move-object v6, p5

    move-object v7, p6

    invoke-virtual/range {v0 .. v7}, Lcom/android/server/am/ActivityManagerShellCommand;->exec(Landroid/os/Binder;Ljava/io/FileDescriptor;Ljava/io/FileDescriptor;Ljava/io/FileDescriptor;[Ljava/lang/String;Landroid/os/ShellCallback;Landroid/os/ResultReceiver;)I

    .line 8610
    return-void
.end method

.method public onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
    .locals 14
    .param p1, "code"    # I
    .param p2, "data"    # Landroid/os/Parcel;
    .param p3, "reply"    # Landroid/os/Parcel;
    .param p4, "flags"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .line 2465
    move-object v1, p0

    move v2, p1

    const v3, 0x5f535052

    if-ne v2, v3, :cond_3

    .line 2467
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    move-object v4, v0

    .line 2468
    .local v4, "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/os/IBinder;>;"
    iget-object v5, v1, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v5

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 2469
    iget-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    .line 2470
    invoke-virtual {v0}, Lcom/android/server/am/ProcessList;->getProcessNamesLOSP()Lcom/android/server/am/ProcessList$MyProcessMap;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/server/am/ProcessList$MyProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v0

    .line 2471
    .local v0, "pmap":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;>;"
    invoke-virtual {v0}, Landroid/util/ArrayMap;->size()I

    move-result v6

    .line 2472
    .local v6, "numOfNames":I
    const/4 v7, 0x0

    .local v7, "ip":I
    :goto_0
    if-ge v7, v6, :cond_2

    .line 2473
    invoke-virtual {v0, v7}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Landroid/util/SparseArray;

    .line 2474
    .local v8, "apps":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    invoke-virtual {v8}, Landroid/util/SparseArray;->size()I

    move-result v9

    .line 2475
    .local v9, "numOfApps":I
    const/4 v10, 0x0

    .local v10, "ia":I
    :goto_1
    if-ge v10, v9, :cond_1

    .line 2476
    invoke-virtual {v8, v10}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v11

    check-cast v11, Lcom/android/server/am/ProcessRecord;

    .line 2477
    .local v11, "app":Lcom/android/server/am/ProcessRecord;
    invoke-virtual {v11}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v12

    .line 2478
    .local v12, "thread":Landroid/app/IApplicationThread;
    if-eqz v12, :cond_0

    .line 2479
    invoke-interface {v12}, Landroid/app/IApplicationThread;->asBinder()Landroid/os/IBinder;

    move-result-object v13

    invoke-virtual {v4, v13}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 2475
    .end local v11    # "app":Lcom/android/server/am/ProcessRecord;
    .end local v12    # "thread":Landroid/app/IApplicationThread;
    :cond_0
    add-int/lit8 v10, v10, 0x1

    goto :goto_1

    .line 2472
    .end local v8    # "apps":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    .end local v9    # "numOfApps":I
    .end local v10    # "ia":I
    :cond_1
    add-int/lit8 v7, v7, 0x1

    goto :goto_0

    .line 2483
    .end local v0    # "pmap":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;>;"
    .end local v6    # "numOfNames":I
    .end local v7    # "ip":I
    :cond_2
    monitor-exit v5
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 2485
    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v5

    .line 2486
    .local v5, "N":I
    const/4 v0, 0x0

    move v6, v0

    .local v6, "i":I
    :goto_2
    if-ge v6, v5, :cond_3

    .line 2487
    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;

    move-result-object v7

    .line 2489
    .local v7, "data2":Landroid/os/Parcel;
    :try_start_1
    invoke-virtual {v4, v6}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/os/IBinder;

    const/4 v8, 0x0

    const/4 v9, 0x1

    invoke-interface {v0, v3, v7, v8, v9}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0

    .line 2492
    goto :goto_3

    .line 2491
    :catch_0
    move-exception v0

    .line 2493
    :goto_3
    invoke-virtual {v7}, Landroid/os/Parcel;->recycle()V

    .line 2486
    .end local v7    # "data2":Landroid/os/Parcel;
    add-int/lit8 v6, v6, 0x1

    goto :goto_2

    .line 2483
    .end local v5    # "N":I
    .end local v6    # "i":I
    :catchall_0
    move-exception v0

    :try_start_2
    monitor-exit v5
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v0

    .line 2497
    .end local v4    # "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/os/IBinder;>;"
    :cond_3
    :try_start_3
    invoke-super/range {p0 .. p4}, Landroid/app/IActivityManager$Stub;->onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z

    move-result v0
    :try_end_3
    .catch Ljava/lang/RuntimeException; {:try_start_3 .. :try_end_3} :catch_1

    return v0

    .line 2498
    :catch_1
    move-exception v0

    move-object v3, v0

    move-object v0, v3

    .line 2501
    .local v0, "e":Ljava/lang/RuntimeException;
    instance-of v3, v0, Ljava/lang/SecurityException;

    if-nez v3, :cond_4

    instance-of v3, v0, Ljava/lang/IllegalArgumentException;

    if-nez v3, :cond_4

    instance-of v3, v0, Ljava/lang/IllegalStateException;

    if-nez v3, :cond_4

    .line 2504
    const-string v3, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Activity Manager Crash. UID:"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2505
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v5, " PID:"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2506
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v5, " TRANS:"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    .line 2504
    invoke-static {v3, v4, v0}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 2509
    :cond_4
    throw v0
.end method

.method onWakefulnessChanged(I)V
    .locals 3
    .param p1, "wakefulness"    # I

    .line 6320
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 6321
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mWakefulness:Ljava/util/concurrent/atomic/AtomicInteger;

    invoke-virtual {v0, p1}, Ljava/util/concurrent/atomic/AtomicInteger;->getAndSet(I)I

    move-result v0

    const/4 v1, 0x0

    const/4 v2, 0x1

    if-ne v0, v2, :cond_0

    move v0, v2

    goto :goto_0

    :cond_0
    move v0, v1

    .line 6323
    .local v0, "wasAwake":Z
    :goto_0
    if-ne p1, v2, :cond_1

    move v1, v2

    .line 6325
    .local v1, "isAwake":Z
    :cond_1
    if-eq v0, v1, :cond_2

    .line 6327
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v2, v1}, Lcom/android/server/am/ActiveServices;->updateScreenStateLocked(Z)V

    .line 6328
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->reportCurWakefulnessUsageEvent()V

    .line 6329
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {v2, v1}, Lcom/android/server/wm/ActivityTaskManagerService;->onScreenAwakeChanged(Z)V

    .line 6330
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mOomAdjProfiler:Lcom/android/server/am/OomAdjProfiler;

    invoke-virtual {v2, p1}, Lcom/android/server/am/OomAdjProfiler;->onWakefulnessChanged(I)V

    .line 6332
    :cond_2
    const-string/jumbo v2, "updateOomAdj_uiVisibility"

    invoke-virtual {p0, v2}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked(Ljava/lang/String;)V

    .line 6333
    .end local v0    # "wasAwake":Z
    .end local v1    # "isAwake":Z
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 6334
    return-void

    .line 6333
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public openContentUri(Ljava/lang/String;)Landroid/os/ParcelFileDescriptor;
    .locals 12
    .param p1, "uriString"    # Ljava/lang/String;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .line 6257
    const-string/jumbo v0, "openContentUri"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 6258
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v0

    .line 6259
    .local v0, "userId":I
    invoke-static {p1}, Landroid/net/Uri;->parse(Ljava/lang/String;)Landroid/net/Uri;

    move-result-object v7

    .line 6260
    .local v7, "uri":Landroid/net/Uri;
    invoke-virtual {v7}, Landroid/net/Uri;->getAuthority()Ljava/lang/String;

    move-result-object v8

    .line 6261
    .local v8, "name":Ljava/lang/String;
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mCpHelper:Lcom/android/server/am/ContentProviderHelper;

    .line 6262
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v4

    .line 6261
    const/4 v3, 0x0

    const-string v5, "*opencontent*"

    move-object v2, v8

    move v6, v0

    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/ContentProviderHelper;->getContentProviderExternalUnchecked(Ljava/lang/String;Landroid/os/IBinder;ILjava/lang/String;I)Landroid/app/ContentProviderHolder;

    move-result-object v1

    .line 6263
    .local v1, "cph":Landroid/app/ContentProviderHolder;
    const/4 v2, 0x0

    .line 6264
    .local v2, "pfd":Landroid/os/ParcelFileDescriptor;
    const-string v3, "ActivityManager"

    if-eqz v1, :cond_2

    .line 6270
    const/4 v4, 0x0

    :try_start_0
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v5

    .line 6272
    .local v5, "uid":I
    invoke-static {v5, v4}, Landroid/app/AppOpsManager;->resolvePackageName(ILjava/lang/String;)Ljava/lang/String;

    move-result-object v6

    .line 6275
    .local v6, "packageName":Ljava/lang/String;
    if-eqz v6, :cond_0

    .line 6276
    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mPackageManagerInt:Landroid/content/pm/PackageManagerInternal;

    invoke-virtual {v9, v6}, Landroid/content/pm/PackageManagerInternal;->getPackage(Ljava/lang/String;)Lcom/android/server/pm/parsing/pkg/AndroidPackage;

    move-result-object v9

    .local v9, "androidPackage":Lcom/android/server/pm/parsing/pkg/AndroidPackage;
    goto :goto_0

    .line 6278
    .end local v9    # "androidPackage":Lcom/android/server/pm/parsing/pkg/AndroidPackage;
    :cond_0
    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mPackageManagerInt:Landroid/content/pm/PackageManagerInternal;

    invoke-virtual {v9, v5}, Landroid/content/pm/PackageManagerInternal;->getPackage(I)Lcom/android/server/pm/parsing/pkg/AndroidPackage;

    move-result-object v9

    .line 6280
    .restart local v9    # "androidPackage":Lcom/android/server/pm/parsing/pkg/AndroidPackage;
    :goto_0
    if-nez v9, :cond_1

    .line 6281
    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string v11, "Cannot find package for uid: "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v10, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-static {v3, v10}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catch Ljava/io/FileNotFoundException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 6282
    nop

    .line 6291
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mCpHelper:Lcom/android/server/am/ContentProviderHelper;

    invoke-virtual {v3, v8, v4, v0}, Lcom/android/server/am/ContentProviderHelper;->removeContentProviderExternalUnchecked(Ljava/lang/String;Landroid/os/IBinder;I)V

    .line 6282
    return-object v4

    .line 6284
    :cond_1
    :try_start_1
    new-instance v3, Landroid/content/AttributionSource;

    .line 6285
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v10

    invoke-interface {v9}, Lcom/android/server/pm/parsing/pkg/AndroidPackage;->getPackageName()Ljava/lang/String;

    move-result-object v11

    invoke-direct {v3, v10, v11, v4}, Landroid/content/AttributionSource;-><init>(ILjava/lang/String;Ljava/lang/String;)V

    .line 6286
    .local v3, "attributionSource":Landroid/content/AttributionSource;
    iget-object v10, v1, Landroid/app/ContentProviderHolder;->provider:Landroid/content/IContentProvider;

    const-string/jumbo v11, "r"

    invoke-interface {v10, v3, v7, v11, v4}, Landroid/content/IContentProvider;->openFile(Landroid/content/AttributionSource;Landroid/net/Uri;Ljava/lang/String;Landroid/os/ICancellationSignal;)Landroid/os/ParcelFileDescriptor;

    move-result-object v10
    :try_end_1
    .catch Ljava/io/FileNotFoundException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    move-object v2, v10

    .end local v3    # "attributionSource":Landroid/content/AttributionSource;
    .end local v5    # "uid":I
    .end local v6    # "packageName":Ljava/lang/String;
    .end local v9    # "androidPackage":Lcom/android/server/pm/parsing/pkg/AndroidPackage;
    goto :goto_1

    .line 6291
    :catchall_0
    move-exception v3

    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mCpHelper:Lcom/android/server/am/ContentProviderHelper;

    invoke-virtual {v5, v8, v4, v0}, Lcom/android/server/am/ContentProviderHelper;->removeContentProviderExternalUnchecked(Ljava/lang/String;Landroid/os/IBinder;I)V

    .line 6292
    throw v3

    .line 6287
    :catch_0
    move-exception v3

    .line 6291
    :goto_1
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mCpHelper:Lcom/android/server/am/ContentProviderHelper;

    invoke-virtual {v3, v8, v4, v0}, Lcom/android/server/am/ContentProviderHelper;->removeContentProviderExternalUnchecked(Ljava/lang/String;Landroid/os/IBinder;I)V

    .line 6292
    goto :goto_2

    .line 6294
    :cond_2
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Failed to get provider for authority \'"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v5, "\'"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 6296
    :goto_2
    return-object v2
.end method

.method public peekService(Landroid/content/Intent;Ljava/lang/String;Ljava/lang/String;)Landroid/os/IBinder;
    .locals 2
    .param p1, "service"    # Landroid/content/Intent;
    .param p2, "resolvedType"    # Ljava/lang/String;
    .param p3, "callingPackage"    # Ljava/lang/String;

    .line 11864
    const-string/jumbo v0, "peekService"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 11866
    if-eqz p1, :cond_1

    invoke-virtual {p1}, Landroid/content/Intent;->hasFileDescriptors()Z

    move-result v0

    const/4 v1, 0x1

    if-eq v0, v1, :cond_0

    goto :goto_0

    .line 11867
    :cond_0
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "File descriptors passed in Intent"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 11870
    :cond_1
    :goto_0
    if-eqz p3, :cond_2

    .line 11874
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 11875
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/server/am/ActiveServices;->peekServiceLocked(Landroid/content/Intent;Ljava/lang/String;Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-object v0

    .line 11876
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 11871
    :cond_2
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "callingPackage cannot be null"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public performIdleMaintenance()V
    .locals 24

    .line 7357
    move-object/from16 v12, p0

    const-string v0, "android.permission.SET_ACTIVITY_WATCHER"

    invoke-virtual {v12, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_1

    .line 7363
    iget-object v13, v12, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v13

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 7364
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v0

    move-wide v14, v0

    .line 7365
    .local v14, "now":J
    iget-wide v0, v12, Lcom/android/server/am/ActivityManagerService;->mLastIdleTime:J

    sub-long v10, v14, v0

    .line 7368
    .local v10, "timeSinceLastIdle":J
    iget-object v0, v12, Lcom/android/server/am/ActivityManagerService;->mOomAdjuster:Lcom/android/server/am/OomAdjuster;

    iget-object v0, v0, Lcom/android/server/am/OomAdjuster;->mCachedAppOptimizer:Lcom/android/server/am/CachedAppOptimizer;

    invoke-virtual {v0}, Lcom/android/server/am/CachedAppOptimizer;->compactAllSystem()V

    .line 7370
    iget-object v0, v12, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    invoke-virtual {v0, v14, v15}, Lcom/android/server/am/AppProfiler;->getLowRamTimeSinceIdleLPr(J)J

    move-result-wide v0

    move-wide v8, v0

    .line 7371
    .local v8, "lowRamSinceLastIdle":J
    iput-wide v14, v12, Lcom/android/server/am/ActivityManagerService;->mLastIdleTime:J

    .line 7372
    iget-object v0, v12, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    invoke-virtual {v0, v14, v15}, Lcom/android/server/am/AppProfiler;->updateLowRamTimestampLPr(J)V

    .line 7374
    new-instance v0, Ljava/lang/StringBuilder;

    const/16 v1, 0x80

    invoke-direct {v0, v1}, Ljava/lang/StringBuilder;-><init>(I)V

    .line 7375
    .local v0, "sb":Ljava/lang/StringBuilder;
    const-string v1, "Idle maintenance over "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 7376
    invoke-static {v10, v11, v0}, Landroid/util/TimeUtils;->formatDuration(JLjava/lang/StringBuilder;)V

    .line 7377
    const-string v1, " low RAM for "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 7378
    invoke-static {v8, v9, v0}, Landroid/util/TimeUtils;->formatDuration(JLjava/lang/StringBuilder;)V

    .line 7379
    const-string v1, "ActivityManager"

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 7383
    const-wide/16 v1, 0x3

    div-long v1, v10, v1

    cmp-long v1, v8, v1

    const/4 v6, 0x0

    if-lez v1, :cond_0

    const/4 v1, 0x1

    move v3, v1

    goto :goto_0

    :cond_0
    move v3, v6

    .line 7386
    .local v3, "doKilling":Z
    :goto_0
    invoke-static {}, Landroid/os/Process;->getTotalMemory()J

    move-result-wide v1

    const-wide/16 v4, 0x3e8

    div-long/2addr v1, v4

    move-wide/from16 v16, v1

    .line 7387
    .local v16, "totalMemoryInKb":J
    const-wide/16 v1, 0x64

    div-long v1, v16, v1

    const-wide/16 v4, 0x2710

    .line 7388
    invoke-static {v1, v2, v4, v5}, Ljava/lang/Math;->max(JJ)J

    move-result-wide v4

    .line 7389
    .local v4, "memoryGrowthThreshold":J
    iget-object v7, v12, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    new-instance v2, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda28;

    move-object v1, v2

    move-object/from16 v18, v0

    move-object v0, v2

    .end local v0    # "sb":Ljava/lang/StringBuilder;
    .local v18, "sb":Ljava/lang/StringBuilder;
    move-object/from16 v2, p0

    move-object/from16 v19, v0

    move v0, v6

    move-object v12, v7

    move-wide v6, v10

    move-wide/from16 v20, v8

    .end local v8    # "lowRamSinceLastIdle":J
    .local v20, "lowRamSinceLastIdle":J
    move-wide/from16 v22, v10

    .end local v10    # "timeSinceLastIdle":J
    .local v22, "timeSinceLastIdle":J
    move-wide v10, v14

    invoke-direct/range {v1 .. v11}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda28;-><init>(Lcom/android/server/am/ActivityManagerService;ZJJJJ)V

    move-object/from16 v1, v19

    invoke-virtual {v12, v0, v1}, Lcom/android/server/am/ProcessList;->forEachLruProcessesLOSP(ZLjava/util/function/Consumer;)V

    .line 7443
    .end local v3    # "doKilling":Z
    .end local v4    # "memoryGrowthThreshold":J
    .end local v14    # "now":J
    .end local v16    # "totalMemoryInKb":J
    .end local v18    # "sb":Ljava/lang/StringBuilder;
    .end local v20    # "lowRamSinceLastIdle":J
    .end local v22    # "timeSinceLastIdle":J
    monitor-exit v13
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 7444
    return-void

    .line 7443
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit v13
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v0

    .line 7359
    :cond_1
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires permission android.permission.SET_ACTIVITY_WATCHER"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public prepareForPossibleShutdown()V
    .locals 1

    .line 16772
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    if-eqz v0, :cond_0

    .line 16773
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    invoke-virtual {v0}, Landroid/app/usage/UsageStatsManagerInternal;->prepareForPossibleShutdown()V

    .line 16775
    :cond_0
    return-void
.end method

.method public profileControl(Ljava/lang/String;IZLandroid/app/ProfilerInfo;I)Z
    .locals 5
    .param p1, "process"    # Ljava/lang/String;
    .param p2, "userId"    # I
    .param p3, "start"    # Z
    .param p4, "profilerInfo"    # Landroid/app/ProfilerInfo;
    .param p5, "profileType"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .line 14872
    const-string v0, "android.permission.SET_ACTIVITY_WATCHER"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_5

    .line 14878
    if-eqz p3, :cond_1

    if-eqz p4, :cond_0

    iget-object v0, p4, Landroid/app/ProfilerInfo;->profileFd:Landroid/os/ParcelFileDescriptor;

    if-eqz v0, :cond_0

    goto :goto_0

    .line 14879
    :cond_0
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v1, "null profile info or fd"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 14882
    :cond_1
    :goto_0
    const/4 v0, 0x0

    .line 14883
    .local v0, "proc":Lcom/android/server/am/ProcessRecord;
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v1

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 14884
    if-eqz p1, :cond_2

    .line 14885
    const-string/jumbo v2, "profileControl"

    invoke-direct {p0, p1, p2, v2}, Lcom/android/server/am/ActivityManagerService;->findProcessLOSP(Ljava/lang/String;ILjava/lang/String;)Lcom/android/server/am/ProcessRecord;

    move-result-object v2

    move-object v0, v2

    .line 14888
    :cond_2
    if-eqz p3, :cond_4

    if-eqz v0, :cond_3

    invoke-virtual {v0}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v2

    if-eqz v2, :cond_3

    goto :goto_1

    .line 14889
    :cond_3
    new-instance v2, Ljava/lang/IllegalArgumentException;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Unknown process: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v2, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .end local v0    # "proc":Lcom/android/server/am/ProcessRecord;
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "process":Ljava/lang/String;
    .end local p2    # "userId":I
    .end local p3    # "start":Z
    .end local p4    # "profilerInfo":Landroid/app/ProfilerInfo;
    .end local p5    # "profileType":I
    throw v2

    .line 14891
    .restart local v0    # "proc":Lcom/android/server/am/ProcessRecord;
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "process":Ljava/lang/String;
    .restart local p2    # "userId":I
    .restart local p3    # "start":Z
    .restart local p4    # "profilerInfo":Landroid/app/ProfilerInfo;
    .restart local p5    # "profileType":I
    :cond_4
    :goto_1
    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 14893
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    iget-object v2, v1, Lcom/android/server/am/AppProfiler;->mProfilerLock:Ljava/lang/Object;

    monitor-enter v2

    .line 14894
    :try_start_1
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    invoke-virtual {v1, v0, p3, p4, p5}, Lcom/android/server/am/AppProfiler;->profileControlLPf(Lcom/android/server/am/ProcessRecord;ZLandroid/app/ProfilerInfo;I)Z

    move-result v1

    monitor-exit v2

    return v1

    .line 14895
    :catchall_0
    move-exception v1

    monitor-exit v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v1

    .line 14891
    :catchall_1
    move-exception v2

    :try_start_2
    monitor-exit v1
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v2

    .line 14874
    .end local v0    # "proc":Lcom/android/server/am/ProcessRecord;
    :cond_5
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires permission android.permission.SET_ACTIVITY_WATCHER"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public final publishContentProviders(Landroid/app/IApplicationThread;Ljava/util/List;)V
    .locals 11
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/app/IApplicationThread;",
            "Ljava/util/List<",
            "Landroid/app/ContentProviderHolder;",
            ">;)V"
        }
    .end annotation

    .line 6051
    .local p2, "providers":Ljava/util/List;, "Ljava/util/List<Landroid/app/ContentProviderHolder;>;"
    const-wide/16 v0, 0x40

    invoke-static {v0, v1}, Landroid/os/Trace;->isTagEnabled(J)Z

    move-result v2

    if-eqz v2, :cond_4

    .line 6052
    const/16 v2, 0x100

    .line 6053
    .local v2, "maxLength":I
    new-instance v3, Ljava/lang/StringBuilder;

    const/16 v4, 0x100

    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(I)V

    .line 6054
    .local v3, "sb":Ljava/lang/StringBuilder;
    const-string/jumbo v5, "publishContentProviders: "

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 6055
    if-eqz p2, :cond_3

    .line 6056
    const/4 v5, 0x1

    .line 6057
    .local v5, "first":Z
    const/4 v6, 0x0

    .local v6, "i":I
    invoke-interface {p2}, Ljava/util/List;->size()I

    move-result v7

    .local v7, "size":I
    :goto_0
    if-ge v6, v7, :cond_3

    .line 6058
    invoke-interface {p2, v6}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Landroid/app/ContentProviderHolder;

    .line 6059
    .local v8, "holder":Landroid/app/ContentProviderHolder;
    if-eqz v8, :cond_2

    iget-object v9, v8, Landroid/app/ContentProviderHolder;->info:Landroid/content/pm/ProviderInfo;

    if-eqz v9, :cond_2

    iget-object v9, v8, Landroid/app/ContentProviderHolder;->info:Landroid/content/pm/ProviderInfo;

    iget-object v9, v9, Landroid/content/pm/ProviderInfo;->authority:Ljava/lang/String;

    if-eqz v9, :cond_2

    .line 6060
    iget-object v9, v8, Landroid/app/ContentProviderHolder;->info:Landroid/content/pm/ProviderInfo;

    iget-object v9, v9, Landroid/content/pm/ProviderInfo;->authority:Ljava/lang/String;

    invoke-virtual {v9}, Ljava/lang/String;->length()I

    move-result v9

    .line 6061
    .local v9, "len":I
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->length()I

    move-result v10

    add-int/2addr v10, v9

    if-le v10, v4, :cond_0

    .line 6062
    const-string v4, "[[TRUNCATED]]"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 6063
    goto :goto_2

    .line 6065
    :cond_0
    if-nez v5, :cond_1

    .line 6066
    const/16 v10, 0x3b

    invoke-virtual {v3, v10}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    goto :goto_1

    .line 6068
    :cond_1
    const/4 v5, 0x0

    .line 6070
    :goto_1
    iget-object v10, v8, Landroid/app/ContentProviderHolder;->info:Landroid/content/pm/ProviderInfo;

    iget-object v10, v10, Landroid/content/pm/ProviderInfo;->authority:Ljava/lang/String;

    invoke-virtual {v3, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 6057
    .end local v8    # "holder":Landroid/app/ContentProviderHolder;
    .end local v9    # "len":I
    :cond_2
    add-int/lit8 v6, v6, 0x1

    goto :goto_0

    .line 6074
    .end local v5    # "first":Z
    .end local v6    # "i":I
    .end local v7    # "size":I
    :cond_3
    :goto_2
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v0, v1, v4}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 6077
    .end local v2    # "maxLength":I
    .end local v3    # "sb":Ljava/lang/StringBuilder;
    :cond_4
    :try_start_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mCpHelper:Lcom/android/server/am/ContentProviderHelper;

    invoke-virtual {v2, p1, p2}, Lcom/android/server/am/ContentProviderHelper;->publishContentProviders(Landroid/app/IApplicationThread;Ljava/util/List;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 6079
    invoke-static {v0, v1}, Landroid/os/Trace;->traceEnd(J)V

    .line 6080
    nop

    .line 6081
    return-void

    .line 6079
    :catchall_0
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Trace;->traceEnd(J)V

    .line 6080
    throw v2
.end method

.method public publishService(Landroid/os/IBinder;Landroid/content/Intent;Landroid/os/IBinder;)V
    .locals 2
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "intent"    # Landroid/content/Intent;
    .param p3, "service"    # Landroid/os/IBinder;

    .line 12010
    if-eqz p2, :cond_1

    invoke-virtual {p2}, Landroid/content/Intent;->hasFileDescriptors()Z

    move-result v0

    const/4 v1, 0x1

    if-eq v0, v1, :cond_0

    goto :goto_0

    .line 12011
    :cond_0
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "File descriptors passed in Intent"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 12014
    :cond_1
    :goto_0
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 12015
    instance-of v0, p1, Lcom/android/server/am/ServiceRecord;

    if-eqz v0, :cond_2

    .line 12018
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    move-object v1, p1

    check-cast v1, Lcom/android/server/am/ServiceRecord;

    invoke-virtual {v0, v1, p2, p3}, Lcom/android/server/am/ActiveServices;->publishServiceLocked(Lcom/android/server/am/ServiceRecord;Landroid/content/Intent;Landroid/os/IBinder;)V

    .line 12019
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 12020
    return-void

    .line 12016
    :cond_2
    :try_start_1
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "Invalid service token"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "token":Landroid/os/IBinder;
    .end local p2    # "intent":Landroid/content/Intent;
    .end local p3    # "service":Landroid/os/IBinder;
    throw v0

    .line 12019
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "token":Landroid/os/IBinder;
    .restart local p2    # "intent":Landroid/content/Intent;
    .restart local p3    # "service":Landroid/os/IBinder;
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method pushTempAllowlist()V
    .locals 13

    .line 14747
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 14748
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPendingTempAllowlist:Lcom/android/server/am/PendingTempAllowlists;

    invoke-virtual {v1}, Lcom/android/server/am/PendingTempAllowlists;->size()I

    move-result v1

    .line 14749
    .local v1, "N":I
    new-array v2, v1, [Lcom/android/server/am/ActivityManagerService$PendingTempAllowlist;

    .line 14750
    .local v2, "list":[Lcom/android/server/am/ActivityManagerService$PendingTempAllowlist;
    const/4 v3, 0x0

    .local v3, "i":I
    :goto_0
    if-ge v3, v1, :cond_0

    .line 14751
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mPendingTempAllowlist:Lcom/android/server/am/PendingTempAllowlists;

    invoke-virtual {v4, v3}, Lcom/android/server/am/PendingTempAllowlists;->valueAt(I)Lcom/android/server/am/ActivityManagerService$PendingTempAllowlist;

    move-result-object v4

    aput-object v4, v2, v3

    .line 14750
    add-int/lit8 v3, v3, 0x1

    goto :goto_0

    .line 14753
    .end local v3    # "i":I
    :cond_0
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_2

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 14758
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mLocalDeviceIdleController:Lcom/android/server/DeviceIdleInternal;

    if-eqz v0, :cond_1

    .line 14759
    const/4 v0, 0x0

    .local v0, "i":I
    :goto_1
    if-ge v0, v1, :cond_1

    .line 14760
    aget-object v3, v2, v0

    .line 14761
    .local v3, "ptw":Lcom/android/server/am/ActivityManagerService$PendingTempAllowlist;
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mLocalDeviceIdleController:Lcom/android/server/DeviceIdleInternal;

    iget v5, v3, Lcom/android/server/am/ActivityManagerService$PendingTempAllowlist;->targetUid:I

    iget-wide v6, v3, Lcom/android/server/am/ActivityManagerService$PendingTempAllowlist;->duration:J

    iget v8, v3, Lcom/android/server/am/ActivityManagerService$PendingTempAllowlist;->type:I

    const/4 v9, 0x1

    iget v10, v3, Lcom/android/server/am/ActivityManagerService$PendingTempAllowlist;->reasonCode:I

    iget-object v11, v3, Lcom/android/server/am/ActivityManagerService$PendingTempAllowlist;->tag:Ljava/lang/String;

    iget v12, v3, Lcom/android/server/am/ActivityManagerService$PendingTempAllowlist;->callingUid:I

    invoke-interface/range {v4 .. v12}, Lcom/android/server/DeviceIdleInternal;->addPowerSaveTempWhitelistAppDirect(IJIZILjava/lang/String;I)V

    .line 14759
    .end local v3    # "ptw":Lcom/android/server/am/ActivityManagerService$PendingTempAllowlist;
    add-int/lit8 v0, v0, 0x1

    goto :goto_1

    .line 14768
    .end local v0    # "i":I
    :cond_1
    monitor-enter p0

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 14769
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    :try_start_2
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 14770
    const/4 v3, 0x0

    .local v3, "i":I
    :goto_2
    if-ge v3, v1, :cond_3

    .line 14771
    aget-object v4, v2, v3

    .line 14772
    .local v4, "ptw":Lcom/android/server/am/ActivityManagerService$PendingTempAllowlist;
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mPendingTempAllowlist:Lcom/android/server/am/PendingTempAllowlists;

    iget v6, v4, Lcom/android/server/am/ActivityManagerService$PendingTempAllowlist;->targetUid:I

    invoke-virtual {v5, v6}, Lcom/android/server/am/PendingTempAllowlists;->indexOfKey(I)I

    move-result v5

    .line 14773
    .local v5, "index":I
    if-ltz v5, :cond_2

    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mPendingTempAllowlist:Lcom/android/server/am/PendingTempAllowlists;

    invoke-virtual {v6, v5}, Lcom/android/server/am/PendingTempAllowlists;->valueAt(I)Lcom/android/server/am/ActivityManagerService$PendingTempAllowlist;

    move-result-object v6

    if-ne v6, v4, :cond_2

    .line 14774
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mPendingTempAllowlist:Lcom/android/server/am/PendingTempAllowlists;

    invoke-virtual {v6, v5}, Lcom/android/server/am/PendingTempAllowlists;->removeAt(I)V

    .line 14770
    .end local v4    # "ptw":Lcom/android/server/am/ActivityManagerService$PendingTempAllowlist;
    .end local v5    # "index":I
    :cond_2
    add-int/lit8 v3, v3, 0x1

    goto :goto_2

    .line 14777
    .end local v3    # "i":I
    :cond_3
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 14778
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 14779
    return-void

    .line 14777
    :catchall_0
    move-exception v3

    :try_start_4
    monitor-exit v0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    :try_start_5
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .end local v1    # "N":I
    .end local v2    # "list":[Lcom/android/server/am/ActivityManagerService$PendingTempAllowlist;
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    throw v3

    .line 14778
    .restart local v1    # "N":I
    .restart local v2    # "list":[Lcom/android/server/am/ActivityManagerService$PendingTempAllowlist;
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    :catchall_1
    move-exception v0

    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 14753
    .end local v1    # "N":I
    .end local v2    # "list":[Lcom/android/server/am/ActivityManagerService$PendingTempAllowlist;
    :catchall_2
    move-exception v1

    :try_start_6
    monitor-exit v0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_2

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v1
.end method

.method public queryIntentComponentsForIntentSender(Landroid/content/IIntentSender;I)Landroid/content/pm/ParceledListSlice;
    .locals 6
    .param p1, "pendingResult"    # Landroid/content/IIntentSender;
    .param p2, "matchFlags"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/IIntentSender;",
            "I)",
            "Landroid/content/pm/ParceledListSlice<",
            "Landroid/content/pm/ResolveInfo;",
            ">;"
        }
    .end annotation

    .line 5066
    const-string v0, "android.permission.GET_INTENT_SENDER_INTENT"

    const-string/jumbo v1, "queryIntentComponentsForIntentSender()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 5068
    invoke-static {p1}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 5071
    const/4 v0, 0x0

    :try_start_0
    move-object v1, p1

    check-cast v1, Lcom/android/server/am/PendingIntentRecord;
    :try_end_0
    .catch Ljava/lang/ClassCastException; {:try_start_0 .. :try_end_0} :catch_0

    .line 5074
    .local v1, "res":Lcom/android/server/am/PendingIntentRecord;
    nop

    .line 5075
    iget-object v2, v1, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v2, v2, Lcom/android/server/am/PendingIntentRecord$Key;->requestIntent:Landroid/content/Intent;

    .line 5076
    .local v2, "intent":Landroid/content/Intent;
    if-nez v2, :cond_0

    .line 5077
    return-object v0

    .line 5079
    :cond_0
    iget-object v0, v1, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget v0, v0, Lcom/android/server/am/PendingIntentRecord$Key;->userId:I

    .line 5080
    .local v0, "userId":I
    iget-object v3, v1, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget v3, v3, Lcom/android/server/am/PendingIntentRecord$Key;->type:I

    packed-switch v3, :pswitch_data_0

    .line 5092
    :pswitch_0
    new-instance v3, Ljava/lang/IllegalStateException;

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Unsupported intent sender type: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v5, v1, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget v5, v5, Lcom/android/server/am/PendingIntentRecord$Key;->type:I

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-direct {v3, v4}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 5086
    :pswitch_1
    new-instance v3, Landroid/content/pm/ParceledListSlice;

    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v4}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v4

    .line 5087
    invoke-virtual {v4, v2, p2, v0}, Landroid/content/pm/PackageManager;->queryIntentServicesAsUser(Landroid/content/Intent;II)Ljava/util/List;

    move-result-object v4

    invoke-direct {v3, v4}, Landroid/content/pm/ParceledListSlice;-><init>(Ljava/util/List;)V

    .line 5086
    return-object v3

    .line 5082
    :pswitch_2
    new-instance v3, Landroid/content/pm/ParceledListSlice;

    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v4}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v4

    .line 5083
    invoke-virtual {v4, v2, p2, v0}, Landroid/content/pm/PackageManager;->queryIntentActivitiesAsUser(Landroid/content/Intent;II)Ljava/util/List;

    move-result-object v4

    invoke-direct {v3, v4}, Landroid/content/pm/ParceledListSlice;-><init>(Ljava/util/List;)V

    .line 5082
    return-object v3

    .line 5089
    :pswitch_3
    new-instance v3, Landroid/content/pm/ParceledListSlice;

    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v4}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v4

    .line 5090
    invoke-virtual {v4, v2, p2, v0}, Landroid/content/pm/PackageManager;->queryBroadcastReceiversAsUser(Landroid/content/Intent;II)Ljava/util/List;

    move-result-object v4

    invoke-direct {v3, v4}, Landroid/content/pm/ParceledListSlice;-><init>(Ljava/util/List;)V

    .line 5089
    return-object v3

    .line 5072
    .end local v0    # "userId":I
    .end local v1    # "res":Lcom/android/server/am/PendingIntentRecord;
    .end local v2    # "intent":Landroid/content/Intent;
    :catch_0
    move-exception v1

    .line 5073
    .local v1, "e":Ljava/lang/ClassCastException;
    return-object v0

    nop

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_3
        :pswitch_2
        :pswitch_0
        :pswitch_1
        :pswitch_1
    .end packed-switch
.end method

.method public refContentProvider(Landroid/os/IBinder;II)Z
    .locals 1
    .param p1, "connection"    # Landroid/os/IBinder;
    .param p2, "stable"    # I
    .param p3, "unstable"    # I

    .line 6085
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCpHelper:Lcom/android/server/am/ContentProviderHelper;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/server/am/ContentProviderHelper;->refContentProvider(Landroid/os/IBinder;II)Z

    move-result v0

    return v0
.end method

.method refreshSettingsCache()V
    .locals 2

    .line 16522
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCoreSettingsObserver:Lcom/android/server/am/CoreSettingsObserver;

    const/4 v1, 0x1

    invoke-virtual {v0, v1}, Lcom/android/server/am/CoreSettingsObserver;->onChange(Z)V

    .line 16523
    return-void
.end method

.method public registerIntentSenderCancelListener(Landroid/content/IIntentSender;Lcom/android/internal/os/IResultReceiver;)V
    .locals 1
    .param p1, "sender"    # Landroid/content/IIntentSender;
    .param p2, "receiver"    # Lcom/android/internal/os/IResultReceiver;

    .line 4987
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPendingIntentController:Lcom/android/server/am/PendingIntentController;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/am/PendingIntentController;->registerIntentSenderCancelListener(Landroid/content/IIntentSender;Lcom/android/internal/os/IResultReceiver;)V

    .line 4988
    return-void
.end method

.method public registerProcessObserver(Landroid/app/IProcessObserver;)V
    .locals 2
    .param p1, "observer"    # Landroid/app/IProcessObserver;

    .line 6733
    const-string v0, "android.permission.SET_ACTIVITY_WATCHER"

    const-string/jumbo v1, "registerProcessObserver()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 6735
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v0, p1}, Lcom/android/server/am/ProcessList;->registerProcessObserver(Landroid/app/IProcessObserver;)V

    .line 6736
    return-void
.end method

.method public registerReceiver(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/content/IIntentReceiver;Landroid/content/IntentFilter;Ljava/lang/String;II)Landroid/content/Intent;
    .locals 10
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .param p2, "callerPackage"    # Ljava/lang/String;
    .param p3, "receiver"    # Landroid/content/IIntentReceiver;
    .param p4, "filter"    # Landroid/content/IntentFilter;
    .param p5, "permission"    # Ljava/lang/String;
    .param p6, "userId"    # I
    .param p7, "flags"    # I
    .annotation runtime Ljava/lang/Deprecated;
    .end annotation

    .line 12329
    const/4 v3, 0x0

    const/4 v4, 0x0

    move-object v0, p0

    move-object v1, p1

    move-object v2, p2

    move-object v5, p3

    move-object v6, p4

    move-object v7, p5

    move/from16 v8, p6

    move/from16 v9, p7

    invoke-virtual/range {v0 .. v9}, Lcom/android/server/am/ActivityManagerService;->registerReceiverWithFeature(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Landroid/content/IIntentReceiver;Landroid/content/IntentFilter;Ljava/lang/String;II)Landroid/content/Intent;

    move-result-object v0

    return-object v0
.end method

.method public registerReceiverWithFeature(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Landroid/content/IIntentReceiver;Landroid/content/IntentFilter;Ljava/lang/String;II)Landroid/content/Intent;
    .locals 57
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .param p2, "callerPackage"    # Ljava/lang/String;
    .param p3, "callerFeatureId"    # Ljava/lang/String;
    .param p4, "receiverId"    # Ljava/lang/String;
    .param p5, "receiver"    # Landroid/content/IIntentReceiver;
    .param p6, "filter"    # Landroid/content/IntentFilter;
    .param p7, "permission"    # Ljava/lang/String;
    .param p8, "userId"    # I
    .param p9, "flags"    # I

    .line 12336
    move-object/from16 v8, p0

    move-object/from16 v9, p1

    move-object/from16 v1, p2

    move-object/from16 v10, p5

    move-object/from16 v15, p6

    const-string/jumbo v0, "registerReceiver"

    invoke-virtual {v8, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 12337
    const/4 v2, 0x0

    .line 12338
    .local v2, "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    const/4 v3, 0x0

    .line 12339
    .local v3, "callerApp":Lcom/android/server/am/ProcessRecord;
    and-int/lit8 v0, p9, 0x1

    const/4 v11, 0x0

    const/4 v12, 0x1

    if-eqz v0, :cond_0

    move/from16 v21, v12

    goto :goto_0

    :cond_0
    move/from16 v21, v11

    .line 12344
    .local v21, "visibleToInstantApps":Z
    :goto_0
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_d

    .line 12345
    const/16 v0, 0x3e8

    if-eqz v9, :cond_4

    .line 12346
    :try_start_1
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLOSP(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;

    move-result-object v4

    move-object v3, v4

    .line 12347
    if-eqz v3, :cond_3

    .line 12353
    iget-object v4, v3, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v4, v4, Landroid/content/pm/ApplicationInfo;->uid:I

    if-eq v4, v0, :cond_2

    .line 12354
    invoke-virtual {v3}, Lcom/android/server/am/ProcessRecord;->getPkgList()Lcom/android/server/am/PackageList;

    move-result-object v4

    invoke-virtual {v4, v1}, Lcom/android/server/am/PackageList;->containsKey(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_2

    const-string v4, "android"

    .line 12355
    invoke-virtual {v4, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_1

    goto :goto_1

    .line 12356
    :cond_1
    new-instance v0, Ljava/lang/SecurityException;

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Given caller package "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v5, " is not running in process "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-direct {v0, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .end local v2    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .end local v3    # "callerApp":Lcom/android/server/am/ProcessRecord;
    .end local v21    # "visibleToInstantApps":Z
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "caller":Landroid/app/IApplicationThread;
    .end local p2    # "callerPackage":Ljava/lang/String;
    .end local p3    # "callerFeatureId":Ljava/lang/String;
    .end local p4    # "receiverId":Ljava/lang/String;
    .end local p5    # "receiver":Landroid/content/IIntentReceiver;
    .end local p6    # "filter":Landroid/content/IntentFilter;
    .end local p7    # "permission":Ljava/lang/String;
    .end local p8    # "userId":I
    .end local p9    # "flags":I
    throw v0

    .line 12359
    .restart local v2    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .restart local v3    # "callerApp":Lcom/android/server/am/ProcessRecord;
    .restart local v21    # "visibleToInstantApps":Z
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "caller":Landroid/app/IApplicationThread;
    .restart local p2    # "callerPackage":Ljava/lang/String;
    .restart local p3    # "callerFeatureId":Ljava/lang/String;
    .restart local p4    # "receiverId":Ljava/lang/String;
    .restart local p5    # "receiver":Landroid/content/IIntentReceiver;
    .restart local p6    # "filter":Landroid/content/IntentFilter;
    .restart local p7    # "permission":Ljava/lang/String;
    .restart local p8    # "userId":I
    .restart local p9    # "flags":I
    :cond_2
    :goto_1
    iget-object v4, v3, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v4, v4, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 12360
    .local v4, "callingUid":I
    invoke-virtual {v3}, Lcom/android/server/am/ProcessRecord;->getPid()I

    move-result v5

    move-object v14, v1

    move-object v13, v3

    move v7, v4

    move v6, v5

    .local v5, "callingPid":I
    goto :goto_2

    .line 12348
    .end local v4    # "callingUid":I
    .end local v5    # "callingPid":I
    :cond_3
    new-instance v0, Ljava/lang/SecurityException;

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Unable to find app for caller "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v5, " (pid="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 12350
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v5, ") when registering receiver "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-direct {v0, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .end local v2    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .end local v3    # "callerApp":Lcom/android/server/am/ProcessRecord;
    .end local v21    # "visibleToInstantApps":Z
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "caller":Landroid/app/IApplicationThread;
    .end local p2    # "callerPackage":Ljava/lang/String;
    .end local p3    # "callerFeatureId":Ljava/lang/String;
    .end local p4    # "receiverId":Ljava/lang/String;
    .end local p5    # "receiver":Landroid/content/IIntentReceiver;
    .end local p6    # "filter":Landroid/content/IntentFilter;
    .end local p7    # "permission":Ljava/lang/String;
    .end local p8    # "userId":I
    .end local p9    # "flags":I
    throw v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 12395
    .restart local v2    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .restart local v3    # "callerApp":Lcom/android/server/am/ProcessRecord;
    .restart local v21    # "visibleToInstantApps":Z
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "caller":Landroid/app/IApplicationThread;
    .restart local p2    # "callerPackage":Ljava/lang/String;
    .restart local p3    # "callerFeatureId":Ljava/lang/String;
    .restart local p4    # "receiverId":Ljava/lang/String;
    .restart local p5    # "receiver":Landroid/content/IIntentReceiver;
    .restart local p6    # "filter":Landroid/content/IntentFilter;
    .restart local p7    # "permission":Ljava/lang/String;
    .restart local p8    # "userId":I
    .restart local p9    # "flags":I
    :catchall_0
    move-exception v0

    move/from16 v5, p8

    move-object v6, v15

    goto/16 :goto_10

    .line 12362
    :cond_4
    const/4 v1, 0x0

    .line 12363
    .end local p2    # "callerPackage":Ljava/lang/String;
    .local v1, "callerPackage":Ljava/lang/String;
    :try_start_2
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v4

    .line 12364
    .restart local v4    # "callingUid":I
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v5
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_c

    move-object v14, v1

    move-object v13, v3

    move v7, v4

    move v6, v5

    .line 12367
    .end local v1    # "callerPackage":Ljava/lang/String;
    .end local v3    # "callerApp":Lcom/android/server/am/ProcessRecord;
    .end local v4    # "callingUid":I
    .local v6, "callingPid":I
    .local v7, "callingUid":I
    .local v13, "callerApp":Lcom/android/server/am/ProcessRecord;
    .local v14, "callerPackage":Ljava/lang/String;
    :goto_2
    :try_start_3
    invoke-direct {v8, v13, v14, v7}, Lcom/android/server/am/ActivityManagerService;->isInstantApp(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;I)Z

    move-result v1

    move/from16 v30, v1

    .line 12368
    .local v30, "instantApp":Z
    iget-object v1, v8, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    const/16 v26, 0x1

    const/16 v27, 0x2

    const-string/jumbo v28, "registerReceiver"

    move-object/from16 v22, v1

    move/from16 v23, v6

    move/from16 v24, v7

    move/from16 v25, p8

    move-object/from16 v29, v14

    invoke-virtual/range {v22 .. v29}, Lcom/android/server/am/UserController;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result v1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_b

    move v5, v1

    .line 12371
    .end local p8    # "userId":I
    .local v5, "userId":I
    :try_start_4
    invoke-virtual/range {p6 .. p6}, Landroid/content/IntentFilter;->actionsIterator()Ljava/util/Iterator;

    move-result-object v1
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_a

    .line 12372
    .local v1, "actions":Ljava/util/Iterator;, "Ljava/util/Iterator<Ljava/lang/String;>;"
    const/4 v3, 0x0

    if-nez v1, :cond_5

    .line 12373
    :try_start_5
    new-instance v4, Ljava/util/ArrayList;

    invoke-direct {v4, v12}, Ljava/util/ArrayList;-><init>(I)V

    .line 12374
    .local v4, "noAction":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Ljava/lang/String;>;"
    invoke-virtual {v4, v3}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 12375
    invoke-virtual {v4}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v16
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    move-object/from16 v1, v16

    goto :goto_3

    .line 12395
    .end local v1    # "actions":Ljava/util/Iterator;, "Ljava/util/Iterator<Ljava/lang/String;>;"
    .end local v4    # "noAction":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Ljava/lang/String;>;"
    .end local v6    # "callingPid":I
    .end local v7    # "callingUid":I
    .end local v30    # "instantApp":Z
    :catchall_1
    move-exception v0

    move-object v3, v13

    move-object v1, v14

    move-object v6, v15

    goto/16 :goto_10

    .line 12379
    .restart local v1    # "actions":Ljava/util/Iterator;, "Ljava/util/Iterator<Ljava/lang/String;>;"
    .restart local v6    # "callingPid":I
    .restart local v7    # "callingUid":I
    .restart local v30    # "instantApp":Z
    :cond_5
    :goto_3
    const/4 v4, 0x2

    :try_start_6
    new-array v0, v4, [I

    const/16 v17, -0x1

    aput v17, v0, v11

    invoke-static {v7}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v17

    aput v17, v0, v12
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_a

    .line 12380
    .local v0, "userIds":[I
    :goto_4
    :try_start_7
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v17
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_9

    if-eqz v17, :cond_a

    .line 12381
    :try_start_8
    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v17

    check-cast v17, Ljava/lang/String;

    move-object/from16 p2, v17

    .line 12382
    .local p2, "action":Ljava/lang/String;
    array-length v3, v0

    move v4, v11

    :goto_5
    if-ge v4, v3, :cond_9

    aget v18, v0, v4

    move/from16 v19, v18

    .line 12383
    .local v19, "id":I
    iget-object v11, v8, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    move/from16 v12, v19

    .end local v19    # "id":I
    .local v12, "id":I
    invoke-virtual {v11, v12}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v11

    check-cast v11, Landroid/util/ArrayMap;

    .line 12384
    .local v11, "stickies":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Ljava/util/ArrayList<Landroid/content/Intent;>;>;"
    if-eqz v11, :cond_7

    .line 12385
    move-object/from16 v19, v0

    move-object/from16 v0, p2

    .end local p2    # "action":Ljava/lang/String;
    .local v0, "action":Ljava/lang/String;
    .local v19, "userIds":[I
    invoke-virtual {v11, v0}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v22

    check-cast v22, Ljava/util/ArrayList;

    move-object/from16 p2, v22

    .line 12386
    .local p2, "intents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    move-object/from16 v22, v0

    move-object/from16 v0, p2

    .end local p2    # "intents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .local v0, "intents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .local v22, "action":Ljava/lang/String;
    if-eqz v0, :cond_8

    .line 12387
    if-nez v2, :cond_6

    .line 12388
    new-instance v23, Ljava/util/ArrayList;

    invoke-direct/range {v23 .. v23}, Ljava/util/ArrayList;-><init>()V

    move-object/from16 v2, v23

    .line 12390
    :cond_6
    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->addAll(Ljava/util/Collection;)Z
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_1

    goto :goto_6

    .line 12384
    .end local v19    # "userIds":[I
    .end local v22    # "action":Ljava/lang/String;
    .local v0, "userIds":[I
    .local p2, "action":Ljava/lang/String;
    :cond_7
    move-object/from16 v22, p2

    move-object/from16 v19, v0

    .line 12382
    .end local v0    # "userIds":[I
    .end local v11    # "stickies":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Ljava/util/ArrayList<Landroid/content/Intent;>;>;"
    .end local v12    # "id":I
    .end local p2    # "action":Ljava/lang/String;
    .restart local v19    # "userIds":[I
    .restart local v22    # "action":Ljava/lang/String;
    :cond_8
    :goto_6
    add-int/lit8 v4, v4, 0x1

    move-object/from16 v0, v19

    move-object/from16 p2, v22

    const/4 v11, 0x0

    const/4 v12, 0x1

    goto :goto_5

    .end local v19    # "userIds":[I
    .end local v22    # "action":Ljava/lang/String;
    .restart local v0    # "userIds":[I
    .restart local p2    # "action":Ljava/lang/String;
    :cond_9
    move-object/from16 v22, p2

    move-object/from16 v19, v0

    .line 12394
    .end local v0    # "userIds":[I
    .end local p2    # "action":Ljava/lang/String;
    .restart local v19    # "userIds":[I
    const/4 v3, 0x0

    const/4 v4, 0x2

    const/4 v11, 0x0

    const/4 v12, 0x1

    goto :goto_4

    .line 12380
    .end local v19    # "userIds":[I
    .restart local v0    # "userIds":[I
    :cond_a
    move-object/from16 v19, v0

    .line 12395
    .end local v0    # "userIds":[I
    .end local v1    # "actions":Ljava/util/Iterator;, "Ljava/util/Iterator<Ljava/lang/String;>;"
    :try_start_9
    monitor-exit p0
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_9

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 12397
    const/4 v0, 0x0

    .line 12398
    .local v0, "allSticky":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    if-eqz v2, :cond_f

    .line 12399
    iget-object v1, v8, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v1

    .line 12401
    .local v1, "resolver":Landroid/content/ContentResolver;
    const/4 v3, 0x0

    .local v3, "i":I
    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v4

    .local v4, "N":I
    :goto_7
    if-ge v3, v4, :cond_e

    .line 12402
    invoke-virtual {v2, v3}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v11

    check-cast v11, Landroid/content/Intent;

    .line 12404
    .local v11, "intent":Landroid/content/Intent;
    if-eqz v30, :cond_b

    .line 12405
    invoke-virtual {v11}, Landroid/content/Intent;->getFlags()I

    move-result v12

    const/high16 v19, 0x200000

    and-int v12, v12, v19

    if-nez v12, :cond_b

    .line 12406
    move-object/from16 p2, v2

    goto :goto_8

    .line 12412
    :cond_b
    const-string v12, "ActivityManager"

    move-object/from16 p2, v2

    const/4 v2, 0x1

    .end local v2    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .local p2, "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    invoke-virtual {v15, v1, v11, v2, v12}, Landroid/content/IntentFilter;->match(Landroid/content/ContentResolver;Landroid/content/Intent;ZLjava/lang/String;)I

    move-result v12

    if-ltz v12, :cond_d

    .line 12413
    if-nez v0, :cond_c

    .line 12414
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    move-object v0, v2

    .line 12416
    :cond_c
    invoke-virtual {v0, v11}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 12401
    .end local v11    # "intent":Landroid/content/Intent;
    :cond_d
    :goto_8
    add-int/lit8 v3, v3, 0x1

    move-object/from16 v2, p2

    goto :goto_7

    .end local p2    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .restart local v2    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    :cond_e
    move-object/from16 p2, v2

    .end local v2    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .restart local p2    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    move-object v12, v0

    goto :goto_9

    .line 12398
    .end local v1    # "resolver":Landroid/content/ContentResolver;
    .end local v3    # "i":I
    .end local v4    # "N":I
    .end local p2    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .restart local v2    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    :cond_f
    move-object/from16 p2, v2

    .end local v2    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .restart local p2    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    move-object v12, v0

    .line 12422
    .end local v0    # "allSticky":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .local v12, "allSticky":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    :goto_9
    if-eqz v12, :cond_10

    const/4 v0, 0x0

    invoke-virtual {v12, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/content/Intent;

    goto :goto_a

    :cond_10
    const/4 v1, 0x0

    :goto_a
    move-object/from16 v22, v1

    .line 12424
    .local v22, "sticky":Landroid/content/Intent;
    if-nez v10, :cond_11

    .line 12425
    return-object v22

    .line 12430
    :cond_11
    invoke-static {}, Landroid/os/Process;->myPid()I

    move-result v0

    if-eq v6, v0, :cond_13

    .line 12431
    const-string v0, "com.android.server.net.action.SNOOZE_WARNING"

    invoke-virtual {v15, v0}, Landroid/content/IntentFilter;->hasAction(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_12

    const-string v0, "com.android.server.net.action.SNOOZE_RAPID"

    .line 12432
    invoke-virtual {v15, v0}, Landroid/content/IntentFilter;->hasAction(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_13

    .line 12433
    :cond_12
    const v0, 0x534e4554

    const/4 v1, 0x3

    new-array v1, v1, [Ljava/lang/Object;

    const-string v2, "177931370"

    const/4 v3, 0x0

    aput-object v2, v1, v3

    invoke-static {v7}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    const/4 v3, 0x1

    aput-object v2, v1, v3

    const-string v2, ""

    const/4 v3, 0x2

    aput-object v2, v1, v3

    invoke-static {v0, v1}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 12437
    :cond_13
    monitor-enter p0

    :try_start_a
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_7

    .line 12439
    if-eqz v13, :cond_15

    :try_start_b
    invoke-virtual {v13}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v0

    move-object v1, v0

    .local v1, "thread":Landroid/app/IApplicationThread;
    if-eqz v0, :cond_14

    .line 12440
    invoke-interface {v1}, Landroid/app/IApplicationThread;->asBinder()Landroid/os/IBinder;

    move-result-object v0

    invoke-interface/range {p1 .. p1}, Landroid/app/IApplicationThread;->asBinder()Landroid/os/IBinder;

    move-result-object v2

    if-eq v0, v2, :cond_15

    .line 12442
    :cond_14
    monitor-exit p0
    :try_end_b
    .catchall {:try_start_b .. :try_end_b} :catchall_2

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    const/4 v0, 0x0

    return-object v0

    .line 12515
    .end local v1    # "thread":Landroid/app/IApplicationThread;
    :catchall_2
    move-exception v0

    move-object/from16 v23, p2

    move v3, v5

    move v9, v6

    move v10, v7

    move-object v2, v12

    move-object v4, v13

    move-object v5, v14

    move-object v6, v15

    goto/16 :goto_f

    .line 12444
    :cond_15
    :try_start_c
    iget-object v0, v8, Lcom/android/server/am/ActivityManagerService;->mRegisteredReceivers:Ljava/util/HashMap;

    invoke-interface/range {p5 .. p5}, Landroid/content/IIntentReceiver;->asBinder()Landroid/os/IBinder;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/ReceiverList;
    :try_end_c
    .catchall {:try_start_c .. :try_end_c} :catchall_7

    .line 12445
    .local v0, "rl":Lcom/android/server/am/ReceiverList;
    if-nez v0, :cond_18

    .line 12446
    :try_start_d
    new-instance v11, Lcom/android/server/am/ReceiverList;
    :try_end_d
    .catchall {:try_start_d .. :try_end_d} :catchall_4

    move-object v1, v11

    move-object/from16 v23, p2

    .end local p2    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .local v23, "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    move-object/from16 v2, p0

    move-object v3, v13

    move v4, v6

    move/from16 p2, v5

    .end local v5    # "userId":I
    .local p2, "userId":I
    move v5, v7

    move v9, v6

    .end local v6    # "callingPid":I
    .local v9, "callingPid":I
    move/from16 v6, p2

    move v10, v7

    .end local v7    # "callingUid":I
    .local v10, "callingUid":I
    move-object/from16 v7, p5

    :try_start_e
    invoke-direct/range {v1 .. v7}, Lcom/android/server/am/ReceiverList;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ProcessRecord;IIILandroid/content/IIntentReceiver;)V

    move-object v1, v11

    .line 12448
    .end local v0    # "rl":Lcom/android/server/am/ReceiverList;
    .local v1, "rl":Lcom/android/server/am/ReceiverList;
    iget-object v0, v1, Lcom/android/server/am/ReceiverList;->app:Lcom/android/server/am/ProcessRecord;

    if-eqz v0, :cond_17

    .line 12449
    iget-object v0, v1, Lcom/android/server/am/ReceiverList;->app:Lcom/android/server/am/ProcessRecord;

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->mReceivers:Lcom/android/server/am/ProcessReceiverRecord;

    invoke-virtual {v0}, Lcom/android/server/am/ProcessReceiverRecord;->numberOfReceivers()I

    move-result v0

    .line 12450
    .local v0, "totalReceiversForApp":I
    const/16 v2, 0x3e8

    if-ge v0, v2, :cond_16

    .line 12455
    iget-object v2, v1, Lcom/android/server/am/ReceiverList;->app:Lcom/android/server/am/ProcessRecord;

    iget-object v2, v2, Lcom/android/server/am/ProcessRecord;->mReceivers:Lcom/android/server/am/ProcessReceiverRecord;

    invoke-virtual {v2, v1}, Lcom/android/server/am/ProcessReceiverRecord;->addReceiver(Lcom/android/server/am/ReceiverList;)V

    .line 12456
    .end local v0    # "totalReceiversForApp":I
    goto :goto_b

    .line 12451
    .restart local v0    # "totalReceiversForApp":I
    :cond_16
    new-instance v2, Ljava/lang/IllegalStateException;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Too many receivers, total of "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v4, ", registered for pid: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v4, v1, Lcom/android/server/am/ReceiverList;->pid:I

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v4, ", callerPackage: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v2, v3}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    .end local v9    # "callingPid":I
    .end local v10    # "callingUid":I
    .end local v12    # "allSticky":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .end local v13    # "callerApp":Lcom/android/server/am/ProcessRecord;
    .end local v14    # "callerPackage":Ljava/lang/String;
    .end local v21    # "visibleToInstantApps":Z
    .end local v22    # "sticky":Landroid/content/Intent;
    .end local v23    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .end local v30    # "instantApp":Z
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "caller":Landroid/app/IApplicationThread;
    .end local p2    # "userId":I
    .end local p3    # "callerFeatureId":Ljava/lang/String;
    .end local p4    # "receiverId":Ljava/lang/String;
    .end local p5    # "receiver":Landroid/content/IIntentReceiver;
    .end local p6    # "filter":Landroid/content/IntentFilter;
    .end local p7    # "permission":Ljava/lang/String;
    .end local p9    # "flags":I
    throw v2
    :try_end_e
    .catchall {:try_start_e .. :try_end_e} :catchall_3

    .line 12458
    .end local v0    # "totalReceiversForApp":I
    .restart local v9    # "callingPid":I
    .restart local v10    # "callingUid":I
    .restart local v12    # "allSticky":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .restart local v13    # "callerApp":Lcom/android/server/am/ProcessRecord;
    .restart local v14    # "callerPackage":Ljava/lang/String;
    .restart local v21    # "visibleToInstantApps":Z
    .restart local v22    # "sticky":Landroid/content/Intent;
    .restart local v23    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .restart local v30    # "instantApp":Z
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "caller":Landroid/app/IApplicationThread;
    .restart local p2    # "userId":I
    .restart local p3    # "callerFeatureId":Ljava/lang/String;
    .restart local p4    # "receiverId":Ljava/lang/String;
    .restart local p5    # "receiver":Landroid/content/IIntentReceiver;
    .restart local p6    # "filter":Landroid/content/IntentFilter;
    .restart local p7    # "permission":Ljava/lang/String;
    .restart local p9    # "flags":I
    :cond_17
    :try_start_f
    invoke-interface/range {p5 .. p5}, Landroid/content/IIntentReceiver;->asBinder()Landroid/os/IBinder;

    move-result-object v0

    const/4 v2, 0x0

    invoke-interface {v0, v1, v2}, Landroid/os/IBinder;->linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V
    :try_end_f
    .catch Landroid/os/RemoteException; {:try_start_f .. :try_end_f} :catch_0
    .catchall {:try_start_f .. :try_end_f} :catchall_3

    .line 12461
    nop

    .line 12462
    const/4 v0, 0x1

    :try_start_10
    iput-boolean v0, v1, Lcom/android/server/am/ReceiverList;->linkedToDeath:Z

    .line 12464
    :goto_b
    iget-object v0, v8, Lcom/android/server/am/ActivityManagerService;->mRegisteredReceivers:Ljava/util/HashMap;

    invoke-interface/range {p5 .. p5}, Landroid/content/IIntentReceiver;->asBinder()Landroid/os/IBinder;

    move-result-object v2

    invoke-virtual {v0, v2, v1}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    move/from16 v3, p2

    move-object v0, v1

    goto :goto_c

    .line 12459
    :catch_0
    move-exception v0

    .line 12460
    .local v0, "e":Landroid/os/RemoteException;
    monitor-exit p0
    :try_end_10
    .catchall {:try_start_10 .. :try_end_10} :catchall_3

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-object v22

    .line 12515
    .end local v0    # "e":Landroid/os/RemoteException;
    .end local v1    # "rl":Lcom/android/server/am/ReceiverList;
    :catchall_3
    move-exception v0

    move/from16 v3, p2

    move-object v2, v12

    move-object v4, v13

    move-object v5, v14

    move-object v6, v15

    goto/16 :goto_f

    .end local v9    # "callingPid":I
    .end local v10    # "callingUid":I
    .end local v23    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .restart local v5    # "userId":I
    .restart local v6    # "callingPid":I
    .restart local v7    # "callingUid":I
    .local p2, "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    :catchall_4
    move-exception v0

    move-object/from16 v23, p2

    move v9, v6

    move v10, v7

    move v3, v5

    move-object v2, v12

    move-object v4, v13

    move-object v5, v14

    move-object v6, v15

    .end local v5    # "userId":I
    .end local v6    # "callingPid":I
    .end local v7    # "callingUid":I
    .restart local v9    # "callingPid":I
    .restart local v10    # "callingUid":I
    .restart local v23    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .local p2, "userId":I
    goto/16 :goto_f

    .line 12465
    .end local v9    # "callingPid":I
    .end local v10    # "callingUid":I
    .end local v23    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .local v0, "rl":Lcom/android/server/am/ReceiverList;
    .restart local v5    # "userId":I
    .restart local v6    # "callingPid":I
    .restart local v7    # "callingUid":I
    .local p2, "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    :cond_18
    move-object/from16 v23, p2

    move/from16 p2, v5

    move v9, v6

    move v10, v7

    .end local v5    # "userId":I
    .end local v6    # "callingPid":I
    .end local v7    # "callingUid":I
    .restart local v9    # "callingPid":I
    .restart local v10    # "callingUid":I
    .restart local v23    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .local p2, "userId":I
    :try_start_11
    iget v1, v0, Lcom/android/server/am/ReceiverList;->uid:I

    if-ne v1, v10, :cond_1e

    .line 12470
    iget v1, v0, Lcom/android/server/am/ReceiverList;->pid:I

    if-ne v1, v9, :cond_1d

    .line 12475
    iget v1, v0, Lcom/android/server/am/ReceiverList;->userId:I
    :try_end_11
    .catchall {:try_start_11 .. :try_end_11} :catchall_6

    move/from16 v3, p2

    .end local p2    # "userId":I
    .local v3, "userId":I
    if-ne v1, v3, :cond_1c

    .line 12481
    :goto_c
    :try_start_12
    new-instance v1, Lcom/android/server/am/BroadcastFilter;
    :try_end_12
    .catchall {:try_start_12 .. :try_end_12} :catchall_5

    move-object v11, v1

    move-object v2, v12

    .end local v12    # "allSticky":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .local v2, "allSticky":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    move-object/from16 v12, p6

    move-object v4, v13

    .end local v13    # "callerApp":Lcom/android/server/am/ProcessRecord;
    .local v4, "callerApp":Lcom/android/server/am/ProcessRecord;
    move-object v13, v0

    move-object v5, v14

    .end local v14    # "callerPackage":Ljava/lang/String;
    .local v5, "callerPackage":Ljava/lang/String;
    move-object v6, v15

    move-object/from16 v15, p3

    move-object/from16 v16, p4

    move-object/from16 v17, p7

    move/from16 v18, v10

    move/from16 v19, v3

    move/from16 v20, v30

    :try_start_13
    invoke-direct/range {v11 .. v21}, Lcom/android/server/am/BroadcastFilter;-><init>(Landroid/content/IntentFilter;Lcom/android/server/am/ReceiverList;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IIZZ)V

    .line 12483
    .local v1, "bf":Lcom/android/server/am/BroadcastFilter;
    invoke-virtual {v0, v6}, Lcom/android/server/am/ReceiverList;->containsFilter(Landroid/content/IntentFilter;)Z

    move-result v7

    if-eqz v7, :cond_19

    .line 12484
    const-string v7, "ActivityManager"

    new-instance v11, Ljava/lang/StringBuilder;

    invoke-direct {v11}, Ljava/lang/StringBuilder;-><init>()V

    const-string v12, "Receiver with filter "

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v11, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v12, " already registered for pid "

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v12, v0, Lcom/android/server/am/ReceiverList;->pid:I

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v12, ", callerPackage is "

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v11, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v11}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v11

    invoke-static {v7, v11}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_d

    .line 12488
    :cond_19
    invoke-virtual {v0, v1}, Lcom/android/server/am/ReceiverList;->add(Ljava/lang/Object;)Z

    .line 12489
    invoke-virtual {v1}, Lcom/android/server/am/BroadcastFilter;->debugCheck()Z

    move-result v7

    if-nez v7, :cond_1a

    .line 12490
    const-string v7, "ActivityManager"

    const-string v11, "==> For Dynamic broadcast"

    invoke-static {v7, v11}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 12492
    :cond_1a
    iget-object v7, v8, Lcom/android/server/am/ActivityManagerService;->mReceiverResolver:Lcom/android/server/IntentResolver;

    invoke-virtual {v7, v1}, Lcom/android/server/IntentResolver;->addFilter(Ljava/lang/Object;)V

    .line 12497
    :goto_d
    if-eqz v2, :cond_1b

    .line 12498
    new-instance v7, Ljava/util/ArrayList;

    invoke-direct {v7}, Ljava/util/ArrayList;-><init>()V

    .line 12499
    .local v7, "receivers":Ljava/util/ArrayList;
    invoke-virtual {v7, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 12501
    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v11

    .line 12502
    .local v11, "stickyCount":I
    const/4 v12, 0x0

    .local v12, "i":I
    :goto_e
    if-ge v12, v11, :cond_1b

    .line 12503
    invoke-virtual {v2, v12}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v13

    check-cast v13, Landroid/content/Intent;

    .line 12504
    .local v13, "intent":Landroid/content/Intent;
    invoke-virtual {v8, v13}, Lcom/android/server/am/ActivityManagerService;->broadcastQueueForIntent(Landroid/content/Intent;)Lcom/android/server/am/BroadcastQueue;

    move-result-object v14

    .line 12505
    .local v14, "queue":Lcom/android/server/am/BroadcastQueue;
    new-instance v15, Lcom/android/server/am/BroadcastRecord;

    const/16 v34, 0x0

    const/16 v35, 0x0

    const/16 v36, 0x0

    const/16 v37, -0x1

    const/16 v38, -0x1

    const/16 v39, 0x0

    const/16 v40, 0x0

    const/16 v41, 0x0

    const/16 v42, 0x0

    const/16 v43, -0x1

    const/16 v44, 0x0

    const/16 v46, 0x0

    const/16 v47, 0x0

    const/16 v48, 0x0

    const/16 v49, 0x0

    const/16 v50, 0x0

    const/16 v51, 0x1

    const/16 v52, 0x1

    const/16 v53, -0x1

    const/16 v54, 0x0

    const/16 v55, 0x0

    const/16 v56, 0x0

    move-object/from16 v31, v15

    move-object/from16 v32, v14

    move-object/from16 v33, v13

    move-object/from16 v45, v7

    invoke-direct/range {v31 .. v56}, Lcom/android/server/am/BroadcastRecord;-><init>(Lcom/android/server/am/BroadcastQueue;Landroid/content/Intent;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;IIZLjava/lang/String;[Ljava/lang/String;[Ljava/lang/String;ILandroid/app/BroadcastOptions;Ljava/util/List;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;ZZZIZLandroid/os/IBinder;Z)V

    .line 12509
    .local v15, "r":Lcom/android/server/am/BroadcastRecord;
    invoke-virtual {v14, v15}, Lcom/android/server/am/BroadcastQueue;->enqueueParallelBroadcastLocked(Lcom/android/server/am/BroadcastRecord;)V

    .line 12510
    invoke-virtual {v14}, Lcom/android/server/am/BroadcastQueue;->scheduleBroadcastsLocked()V

    .line 12502
    .end local v13    # "intent":Landroid/content/Intent;
    .end local v14    # "queue":Lcom/android/server/am/BroadcastQueue;
    .end local v15    # "r":Lcom/android/server/am/BroadcastRecord;
    add-int/lit8 v12, v12, 0x1

    goto :goto_e

    .line 12514
    .end local v7    # "receivers":Ljava/util/ArrayList;
    .end local v11    # "stickyCount":I
    .end local v12    # "i":I
    :cond_1b
    monitor-exit p0
    :try_end_13
    .catchall {:try_start_13 .. :try_end_13} :catchall_8

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-object v22

    .line 12515
    .end local v0    # "rl":Lcom/android/server/am/ReceiverList;
    .end local v1    # "bf":Lcom/android/server/am/BroadcastFilter;
    .end local v2    # "allSticky":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .end local v4    # "callerApp":Lcom/android/server/am/ProcessRecord;
    .end local v5    # "callerPackage":Ljava/lang/String;
    .local v12, "allSticky":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .local v13, "callerApp":Lcom/android/server/am/ProcessRecord;
    .local v14, "callerPackage":Ljava/lang/String;
    :catchall_5
    move-exception v0

    move-object v2, v12

    move-object v4, v13

    move-object v5, v14

    move-object v6, v15

    .end local v12    # "allSticky":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .end local v13    # "callerApp":Lcom/android/server/am/ProcessRecord;
    .end local v14    # "callerPackage":Ljava/lang/String;
    .restart local v2    # "allSticky":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .restart local v4    # "callerApp":Lcom/android/server/am/ProcessRecord;
    .restart local v5    # "callerPackage":Ljava/lang/String;
    goto/16 :goto_f

    .line 12476
    .end local v2    # "allSticky":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .end local v4    # "callerApp":Lcom/android/server/am/ProcessRecord;
    .end local v5    # "callerPackage":Ljava/lang/String;
    .restart local v0    # "rl":Lcom/android/server/am/ReceiverList;
    .restart local v12    # "allSticky":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .restart local v13    # "callerApp":Lcom/android/server/am/ProcessRecord;
    .restart local v14    # "callerPackage":Ljava/lang/String;
    :cond_1c
    move-object v2, v12

    move-object v4, v13

    move-object v5, v14

    move-object v6, v15

    .end local v12    # "allSticky":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .end local v13    # "callerApp":Lcom/android/server/am/ProcessRecord;
    .end local v14    # "callerPackage":Ljava/lang/String;
    .restart local v2    # "allSticky":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .restart local v4    # "callerApp":Lcom/android/server/am/ProcessRecord;
    .restart local v5    # "callerPackage":Ljava/lang/String;
    :try_start_14
    new-instance v1, Ljava/lang/IllegalArgumentException;

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v11, "Receiver requested to register for user "

    invoke-virtual {v7, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v11, " was previously registered for user "

    invoke-virtual {v7, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v11, v0, Lcom/android/server/am/ReceiverList;->userId:I

    invoke-virtual {v7, v11}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v11, " callerPackage is "

    invoke-virtual {v7, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-direct {v1, v7}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .end local v2    # "allSticky":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .end local v3    # "userId":I
    .end local v4    # "callerApp":Lcom/android/server/am/ProcessRecord;
    .end local v5    # "callerPackage":Ljava/lang/String;
    .end local v9    # "callingPid":I
    .end local v10    # "callingUid":I
    .end local v21    # "visibleToInstantApps":Z
    .end local v22    # "sticky":Landroid/content/Intent;
    .end local v23    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .end local v30    # "instantApp":Z
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "caller":Landroid/app/IApplicationThread;
    .end local p3    # "callerFeatureId":Ljava/lang/String;
    .end local p4    # "receiverId":Ljava/lang/String;
    .end local p5    # "receiver":Landroid/content/IIntentReceiver;
    .end local p6    # "filter":Landroid/content/IntentFilter;
    .end local p7    # "permission":Ljava/lang/String;
    .end local p9    # "flags":I
    throw v1

    .line 12471
    .restart local v9    # "callingPid":I
    .restart local v10    # "callingUid":I
    .restart local v12    # "allSticky":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .restart local v13    # "callerApp":Lcom/android/server/am/ProcessRecord;
    .restart local v14    # "callerPackage":Ljava/lang/String;
    .restart local v21    # "visibleToInstantApps":Z
    .restart local v22    # "sticky":Landroid/content/Intent;
    .restart local v23    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .restart local v30    # "instantApp":Z
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "caller":Landroid/app/IApplicationThread;
    .restart local p2    # "userId":I
    .restart local p3    # "callerFeatureId":Ljava/lang/String;
    .restart local p4    # "receiverId":Ljava/lang/String;
    .restart local p5    # "receiver":Landroid/content/IIntentReceiver;
    .restart local p6    # "filter":Landroid/content/IntentFilter;
    .restart local p7    # "permission":Ljava/lang/String;
    .restart local p9    # "flags":I
    :cond_1d
    move/from16 v3, p2

    move-object v2, v12

    move-object v4, v13

    move-object v5, v14

    move-object v6, v15

    .end local v12    # "allSticky":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .end local v13    # "callerApp":Lcom/android/server/am/ProcessRecord;
    .end local v14    # "callerPackage":Ljava/lang/String;
    .end local p2    # "userId":I
    .restart local v2    # "allSticky":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .restart local v3    # "userId":I
    .restart local v4    # "callerApp":Lcom/android/server/am/ProcessRecord;
    .restart local v5    # "callerPackage":Ljava/lang/String;
    new-instance v1, Ljava/lang/IllegalArgumentException;

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v11, "Receiver requested to register for pid "

    invoke-virtual {v7, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v11, " was previously registered for pid "

    invoke-virtual {v7, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v11, v0, Lcom/android/server/am/ReceiverList;->pid:I

    invoke-virtual {v7, v11}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v11, " callerPackage is "

    invoke-virtual {v7, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-direct {v1, v7}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .end local v2    # "allSticky":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .end local v3    # "userId":I
    .end local v4    # "callerApp":Lcom/android/server/am/ProcessRecord;
    .end local v5    # "callerPackage":Ljava/lang/String;
    .end local v9    # "callingPid":I
    .end local v10    # "callingUid":I
    .end local v21    # "visibleToInstantApps":Z
    .end local v22    # "sticky":Landroid/content/Intent;
    .end local v23    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .end local v30    # "instantApp":Z
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "caller":Landroid/app/IApplicationThread;
    .end local p3    # "callerFeatureId":Ljava/lang/String;
    .end local p4    # "receiverId":Ljava/lang/String;
    .end local p5    # "receiver":Landroid/content/IIntentReceiver;
    .end local p6    # "filter":Landroid/content/IntentFilter;
    .end local p7    # "permission":Ljava/lang/String;
    .end local p9    # "flags":I
    throw v1

    .line 12466
    .restart local v9    # "callingPid":I
    .restart local v10    # "callingUid":I
    .restart local v12    # "allSticky":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .restart local v13    # "callerApp":Lcom/android/server/am/ProcessRecord;
    .restart local v14    # "callerPackage":Ljava/lang/String;
    .restart local v21    # "visibleToInstantApps":Z
    .restart local v22    # "sticky":Landroid/content/Intent;
    .restart local v23    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .restart local v30    # "instantApp":Z
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "caller":Landroid/app/IApplicationThread;
    .restart local p2    # "userId":I
    .restart local p3    # "callerFeatureId":Ljava/lang/String;
    .restart local p4    # "receiverId":Ljava/lang/String;
    .restart local p5    # "receiver":Landroid/content/IIntentReceiver;
    .restart local p6    # "filter":Landroid/content/IntentFilter;
    .restart local p7    # "permission":Ljava/lang/String;
    .restart local p9    # "flags":I
    :cond_1e
    move/from16 v3, p2

    move-object v2, v12

    move-object v4, v13

    move-object v5, v14

    move-object v6, v15

    .end local v12    # "allSticky":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .end local v13    # "callerApp":Lcom/android/server/am/ProcessRecord;
    .end local v14    # "callerPackage":Ljava/lang/String;
    .end local p2    # "userId":I
    .restart local v2    # "allSticky":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .restart local v3    # "userId":I
    .restart local v4    # "callerApp":Lcom/android/server/am/ProcessRecord;
    .restart local v5    # "callerPackage":Ljava/lang/String;
    new-instance v1, Ljava/lang/IllegalArgumentException;

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v11, "Receiver requested to register for uid "

    invoke-virtual {v7, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v11, " was previously registered for uid "

    invoke-virtual {v7, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v11, v0, Lcom/android/server/am/ReceiverList;->uid:I

    invoke-virtual {v7, v11}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v11, " callerPackage is "

    invoke-virtual {v7, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-direct {v1, v7}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .end local v2    # "allSticky":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .end local v3    # "userId":I
    .end local v4    # "callerApp":Lcom/android/server/am/ProcessRecord;
    .end local v5    # "callerPackage":Ljava/lang/String;
    .end local v9    # "callingPid":I
    .end local v10    # "callingUid":I
    .end local v21    # "visibleToInstantApps":Z
    .end local v22    # "sticky":Landroid/content/Intent;
    .end local v23    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .end local v30    # "instantApp":Z
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "caller":Landroid/app/IApplicationThread;
    .end local p3    # "callerFeatureId":Ljava/lang/String;
    .end local p4    # "receiverId":Ljava/lang/String;
    .end local p5    # "receiver":Landroid/content/IIntentReceiver;
    .end local p6    # "filter":Landroid/content/IntentFilter;
    .end local p7    # "permission":Ljava/lang/String;
    .end local p9    # "flags":I
    throw v1

    .line 12515
    .end local v0    # "rl":Lcom/android/server/am/ReceiverList;
    .restart local v9    # "callingPid":I
    .restart local v10    # "callingUid":I
    .restart local v12    # "allSticky":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .restart local v13    # "callerApp":Lcom/android/server/am/ProcessRecord;
    .restart local v14    # "callerPackage":Ljava/lang/String;
    .restart local v21    # "visibleToInstantApps":Z
    .restart local v22    # "sticky":Landroid/content/Intent;
    .restart local v23    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .restart local v30    # "instantApp":Z
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "caller":Landroid/app/IApplicationThread;
    .restart local p2    # "userId":I
    .restart local p3    # "callerFeatureId":Ljava/lang/String;
    .restart local p4    # "receiverId":Ljava/lang/String;
    .restart local p5    # "receiver":Landroid/content/IIntentReceiver;
    .restart local p6    # "filter":Landroid/content/IntentFilter;
    .restart local p7    # "permission":Ljava/lang/String;
    .restart local p9    # "flags":I
    :catchall_6
    move-exception v0

    move/from16 v3, p2

    move-object v2, v12

    move-object v4, v13

    move-object v5, v14

    move-object v6, v15

    .end local v12    # "allSticky":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .end local v13    # "callerApp":Lcom/android/server/am/ProcessRecord;
    .end local v14    # "callerPackage":Ljava/lang/String;
    .end local p2    # "userId":I
    .restart local v2    # "allSticky":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .restart local v3    # "userId":I
    .restart local v4    # "callerApp":Lcom/android/server/am/ProcessRecord;
    .restart local v5    # "callerPackage":Ljava/lang/String;
    goto :goto_f

    .end local v2    # "allSticky":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .end local v3    # "userId":I
    .end local v4    # "callerApp":Lcom/android/server/am/ProcessRecord;
    .end local v9    # "callingPid":I
    .end local v10    # "callingUid":I
    .end local v23    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .local v5, "userId":I
    .restart local v6    # "callingPid":I
    .local v7, "callingUid":I
    .restart local v12    # "allSticky":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .restart local v13    # "callerApp":Lcom/android/server/am/ProcessRecord;
    .restart local v14    # "callerPackage":Ljava/lang/String;
    .local p2, "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    :catchall_7
    move-exception v0

    move-object/from16 v23, p2

    move v3, v5

    move v9, v6

    move v10, v7

    move-object v2, v12

    move-object v4, v13

    move-object v5, v14

    move-object v6, v15

    .end local v6    # "callingPid":I
    .end local v7    # "callingUid":I
    .end local v12    # "allSticky":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .end local v13    # "callerApp":Lcom/android/server/am/ProcessRecord;
    .end local v14    # "callerPackage":Ljava/lang/String;
    .end local p2    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .restart local v2    # "allSticky":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .restart local v3    # "userId":I
    .restart local v4    # "callerApp":Lcom/android/server/am/ProcessRecord;
    .local v5, "callerPackage":Ljava/lang/String;
    .restart local v9    # "callingPid":I
    .restart local v10    # "callingUid":I
    .restart local v23    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    :goto_f
    monitor-exit p0
    :try_end_14
    .catchall {:try_start_14 .. :try_end_14} :catchall_8

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    :catchall_8
    move-exception v0

    goto :goto_f

    .line 12395
    .end local v3    # "userId":I
    .end local v4    # "callerApp":Lcom/android/server/am/ProcessRecord;
    .end local v9    # "callingPid":I
    .end local v10    # "callingUid":I
    .end local v22    # "sticky":Landroid/content/Intent;
    .end local v23    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .end local v30    # "instantApp":Z
    .local v2, "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .local v5, "userId":I
    .restart local v13    # "callerApp":Lcom/android/server/am/ProcessRecord;
    .restart local v14    # "callerPackage":Ljava/lang/String;
    :catchall_9
    move-exception v0

    move-object/from16 v23, v2

    move v3, v5

    move-object v4, v13

    move-object v5, v14

    move-object v6, v15

    move-object v1, v5

    move v5, v3

    move-object v3, v4

    .end local v2    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .end local v13    # "callerApp":Lcom/android/server/am/ProcessRecord;
    .end local v14    # "callerPackage":Ljava/lang/String;
    .restart local v3    # "userId":I
    .restart local v4    # "callerApp":Lcom/android/server/am/ProcessRecord;
    .local v5, "callerPackage":Ljava/lang/String;
    .restart local v23    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    goto :goto_10

    .end local v3    # "userId":I
    .end local v4    # "callerApp":Lcom/android/server/am/ProcessRecord;
    .end local v23    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .restart local v2    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .local v5, "userId":I
    .restart local v13    # "callerApp":Lcom/android/server/am/ProcessRecord;
    .restart local v14    # "callerPackage":Ljava/lang/String;
    :catchall_a
    move-exception v0

    move v3, v5

    move-object v4, v13

    move-object v5, v14

    move-object v6, v15

    move-object v1, v5

    move v5, v3

    move-object v3, v4

    .end local v13    # "callerApp":Lcom/android/server/am/ProcessRecord;
    .end local v14    # "callerPackage":Ljava/lang/String;
    .restart local v3    # "userId":I
    .restart local v4    # "callerApp":Lcom/android/server/am/ProcessRecord;
    .local v5, "callerPackage":Ljava/lang/String;
    goto :goto_10

    .end local v3    # "userId":I
    .end local v4    # "callerApp":Lcom/android/server/am/ProcessRecord;
    .end local v5    # "callerPackage":Ljava/lang/String;
    .restart local v13    # "callerApp":Lcom/android/server/am/ProcessRecord;
    .restart local v14    # "callerPackage":Ljava/lang/String;
    .restart local p8    # "userId":I
    :catchall_b
    move-exception v0

    move-object v4, v13

    move-object v5, v14

    move-object v6, v15

    move-object v3, v4

    move-object v1, v5

    move/from16 v5, p8

    .end local v13    # "callerApp":Lcom/android/server/am/ProcessRecord;
    .end local v14    # "callerPackage":Ljava/lang/String;
    .restart local v4    # "callerApp":Lcom/android/server/am/ProcessRecord;
    .restart local v5    # "callerPackage":Ljava/lang/String;
    goto :goto_10

    .end local v4    # "callerApp":Lcom/android/server/am/ProcessRecord;
    .end local v5    # "callerPackage":Ljava/lang/String;
    .local v1, "callerPackage":Ljava/lang/String;
    .local v3, "callerApp":Lcom/android/server/am/ProcessRecord;
    :catchall_c
    move-exception v0

    move-object v6, v15

    move/from16 v5, p8

    goto :goto_10

    .end local v1    # "callerPackage":Ljava/lang/String;
    .local p2, "callerPackage":Ljava/lang/String;
    :catchall_d
    move-exception v0

    move-object v6, v15

    move/from16 v5, p8

    .end local p2    # "callerPackage":Ljava/lang/String;
    .end local p8    # "userId":I
    .restart local v1    # "callerPackage":Ljava/lang/String;
    .local v5, "userId":I
    :goto_10
    :try_start_15
    monitor-exit p0
    :try_end_15
    .catchall {:try_start_15 .. :try_end_15} :catchall_e

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    :catchall_e
    move-exception v0

    goto :goto_10
.end method

.method public registerTaskStackListener(Landroid/app/ITaskStackListener;)V
    .locals 1
    .param p1, "listener"    # Landroid/app/ITaskStackListener;

    .line 2617
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {v0, p1}, Lcom/android/server/wm/ActivityTaskManagerService;->registerTaskStackListener(Landroid/app/ITaskStackListener;)V

    .line 2618
    return-void
.end method

.method public registerUidObserver(Landroid/app/IUidObserver;IILjava/lang/String;)V
    .locals 8
    .param p1, "observer"    # Landroid/app/IUidObserver;
    .param p2, "which"    # I
    .param p3, "cutpoint"    # I
    .param p4, "callingPackage"    # Ljava/lang/String;

    .line 6770
    invoke-direct {p0, p4}, Lcom/android/server/am/ActivityManagerService;->hasUsageStatsPermission(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_0

    .line 6771
    const-string v0, "android.permission.PACKAGE_USAGE_STATS"

    const-string/jumbo v1, "registerUidObserver"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 6774
    :cond_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mUidObserverController:Lcom/android/server/am/UidObserverController;

    .line 6775
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v7

    .line 6774
    move-object v3, p1

    move v4, p2

    move v5, p3

    move-object v6, p4

    invoke-virtual/range {v2 .. v7}, Lcom/android/server/am/UidObserverController;->register(Landroid/app/IUidObserver;IILjava/lang/String;I)V

    .line 6776
    return-void
.end method

.method public registerUserSwitchObserver(Landroid/app/IUserSwitchObserver;Ljava/lang/String;)V
    .locals 1
    .param p1, "observer"    # Landroid/app/IUserSwitchObserver;
    .param p2, "name"    # Ljava/lang/String;

    .line 15151
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/am/UserController;->registerUserSwitchObserver(Landroid/app/IUserSwitchObserver;Ljava/lang/String;)V

    .line 15152
    return-void
.end method

.method public removeContentProvider(Landroid/os/IBinder;Z)V
    .locals 1
    .param p1, "connection"    # Landroid/os/IBinder;
    .param p2, "stable"    # Z

    .line 6023
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCpHelper:Lcom/android/server/am/ContentProviderHelper;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/am/ContentProviderHelper;->removeContentProvider(Landroid/os/IBinder;Z)V

    .line 6024
    return-void
.end method

.method public removeContentProviderExternal(Ljava/lang/String;Landroid/os/IBinder;)V
    .locals 3
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "token"    # Landroid/os/IBinder;
    .annotation runtime Ljava/lang/Deprecated;
    .end annotation

    .line 6030
    const-wide/16 v0, 0x40

    const-string/jumbo v2, "removeContentProviderExternal: "

    invoke-static {v0, v1, v2, p1}, Lcom/android/server/am/ActivityManagerService;->traceBegin(JLjava/lang/String;Ljava/lang/String;)V

    .line 6032
    :try_start_0
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v2

    invoke-virtual {p0, p1, p2, v2}, Lcom/android/server/am/ActivityManagerService;->removeContentProviderExternalAsUser(Ljava/lang/String;Landroid/os/IBinder;I)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 6034
    invoke-static {v0, v1}, Landroid/os/Trace;->traceEnd(J)V

    .line 6035
    nop

    .line 6036
    return-void

    .line 6034
    :catchall_0
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Trace;->traceEnd(J)V

    .line 6035
    throw v2
.end method

.method public removeContentProviderExternalAsUser(Ljava/lang/String;Landroid/os/IBinder;I)V
    .locals 3
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "token"    # Landroid/os/IBinder;
    .param p3, "userId"    # I

    .line 6040
    const-wide/16 v0, 0x40

    const-string/jumbo v2, "removeContentProviderExternalAsUser: "

    invoke-static {v0, v1, v2, p1}, Lcom/android/server/am/ActivityManagerService;->traceBegin(JLjava/lang/String;Ljava/lang/String;)V

    .line 6042
    :try_start_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mCpHelper:Lcom/android/server/am/ContentProviderHelper;

    invoke-virtual {v2, p1, p2, p3}, Lcom/android/server/am/ContentProviderHelper;->removeContentProviderExternalAsUser(Ljava/lang/String;Landroid/os/IBinder;I)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 6044
    invoke-static {v0, v1}, Landroid/os/Trace;->traceEnd(J)V

    .line 6045
    nop

    .line 6046
    return-void

    .line 6044
    :catchall_0
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Trace;->traceEnd(J)V

    .line 6045
    throw v2
.end method

.method final removeLruProcessLocked(Lcom/android/server/am/ProcessRecord;)V
    .locals 1
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;

    .line 2636
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v0, p1}, Lcom/android/server/am/ProcessList;->removeLruProcessLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 2637
    return-void
.end method

.method removeOomAdjTargetLocked(Lcom/android/server/am/ProcessRecord;Z)V
    .locals 1
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "procDied"    # Z

    .line 14521
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mOomAdjuster:Lcom/android/server/am/OomAdjuster;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/am/OomAdjuster;->removeOomAdjTargetLocked(Lcom/android/server/am/ProcessRecord;Z)V

    .line 14522
    return-void
.end method

.method removePidLocked(ILcom/android/server/am/ProcessRecord;)V
    .locals 3
    .param p1, "pid"    # I
    .param p2, "app"    # Lcom/android/server/am/ProcessRecord;

    .line 908
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    monitor-enter v0

    .line 909
    :try_start_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-virtual {v1, p1, p2}, Lcom/android/server/am/ActivityManagerService$PidMap;->doRemoveInternal(ILcom/android/server/am/ProcessRecord;)Z

    move-result v1

    .line 910
    .local v1, "removed":Z
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 911
    if-eqz v1, :cond_0

    .line 912
    sget-object v0, Lcom/android/server/am/ActivityManagerService;->sActiveProcessInfoSelfLocked:Landroid/util/SparseArray;

    monitor-enter v0

    .line 913
    :try_start_1
    invoke-virtual {v0, p1}, Landroid/util/SparseArray;->remove(I)V

    .line 914
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 915
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-virtual {v0, p1}, Lcom/android/server/wm/ActivityTaskManagerInternal;->onProcessUnMapped(I)V

    goto :goto_0

    .line 914
    :catchall_0
    move-exception v2

    :try_start_2
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v2

    .line 917
    :cond_0
    :goto_0
    return-void

    .line 910
    .end local v1    # "removed":Z
    :catchall_1
    move-exception v1

    :try_start_3
    monitor-exit v0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    throw v1
.end method

.method removeReceiverLocked(Lcom/android/server/am/ReceiverList;)V
    .locals 3
    .param p1, "rl"    # Lcom/android/server/am/ReceiverList;

    .line 12564
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mRegisteredReceivers:Ljava/util/HashMap;

    iget-object v1, p1, Lcom/android/server/am/ReceiverList;->receiver:Landroid/content/IIntentReceiver;

    invoke-interface {v1}, Landroid/content/IIntentReceiver;->asBinder()Landroid/os/IBinder;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 12565
    invoke-virtual {p1}, Lcom/android/server/am/ReceiverList;->size()I

    move-result v0

    add-int/lit8 v0, v0, -0x1

    .local v0, "i":I
    :goto_0
    if-ltz v0, :cond_0

    .line 12566
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mReceiverResolver:Lcom/android/server/IntentResolver;

    invoke-virtual {p1, v0}, Lcom/android/server/am/ReceiverList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/BroadcastFilter;

    invoke-virtual {v1, v2}, Lcom/android/server/IntentResolver;->removeFilter(Ljava/lang/Object;)V

    .line 12565
    add-int/lit8 v0, v0, -0x1

    goto :goto_0

    .line 12568
    .end local v0    # "i":I
    :cond_0
    return-void
.end method

.method public removeTask(I)Z
    .locals 1
    .param p1, "taskId"    # I

    .line 5831
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {v0, p1}, Lcom/android/server/wm/ActivityTaskManagerService;->removeTask(I)Z

    move-result v0

    return v0
.end method

.method reportCurWakefulnessUsageEvent()V
    .locals 2

    .line 6314
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mWakefulness:Ljava/util/concurrent/atomic/AtomicInteger;

    invoke-virtual {v0}, Ljava/util/concurrent/atomic/AtomicInteger;->get()I

    move-result v0

    const/4 v1, 0x1

    if-ne v0, v1, :cond_0

    .line 6315
    const/16 v0, 0xf

    goto :goto_0

    .line 6316
    :cond_0
    const/16 v0, 0x10

    .line 6314
    :goto_0
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->reportGlobalUsageEvent(I)V

    .line 6317
    return-void
.end method

.method reportGlobalUsageEvent(I)V
    .locals 6
    .param p1, "event"    # I

    .line 6300
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {v0}, Lcom/android/server/am/UserController;->getCurrentUserId()I

    move-result v0

    .line 6301
    .local v0, "currentUserId":I
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    const-string v2, "android"

    invoke-virtual {v1, v2, v0, p1}, Landroid/app/usage/UsageStatsManagerInternal;->reportEvent(Ljava/lang/String;II)V

    .line 6302
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {v1}, Lcom/android/server/am/UserController;->getCurrentProfileIds()[I

    move-result-object v1

    .line 6303
    .local v1, "profiles":[I
    if-eqz v1, :cond_1

    .line 6304
    array-length v3, v1

    add-int/lit8 v3, v3, -0x1

    .local v3, "i":I
    :goto_0
    if-ltz v3, :cond_1

    .line 6305
    aget v4, v1, v3

    if-ne v4, v0, :cond_0

    .line 6306
    goto :goto_1

    .line 6308
    :cond_0
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    aget v5, v1, v3

    invoke-virtual {v4, v2, v5, p1}, Landroid/app/usage/UsageStatsManagerInternal;->reportEvent(Ljava/lang/String;II)V

    .line 6304
    :goto_1
    add-int/lit8 v3, v3, -0x1

    goto :goto_0

    .line 6311
    .end local v3    # "i":I
    :cond_1
    return-void
.end method

.method reportUidInfoMessageLocked(Ljava/lang/String;Ljava/lang/String;I)V
    .locals 3
    .param p1, "tag"    # Ljava/lang/String;
    .param p2, "msg"    # Ljava/lang/String;
    .param p3, "uid"    # I

    .line 2879
    const-string v0, "ActivityManager"

    invoke-static {v0, p2}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 2880
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mOomAdjObserverLock:Ljava/lang/Object;

    monitor-enter v0

    .line 2881
    :try_start_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mCurOomAdjObserver:Lcom/android/server/am/ActivityManagerService$OomAdjObserver;

    if-eqz v1, :cond_0

    iget v1, p0, Lcom/android/server/am/ActivityManagerService;->mCurOomAdjUid:I

    if-ne p3, v1, :cond_0

    .line 2882
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mUiHandler:Landroid/os/Handler;

    const/16 v2, 0x46

    invoke-virtual {v1, v2, p2}, Landroid/os/Handler;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    move-result-object v1

    invoke-virtual {v1}, Landroid/os/Message;->sendToTarget()V

    .line 2884
    :cond_0
    monitor-exit v0

    .line 2885
    return-void

    .line 2884
    :catchall_0
    move-exception v1

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method public requestBugReport(I)V
    .locals 1
    .param p1, "bugreportType"    # I

    .line 6565
    const/4 v0, 0x0

    invoke-virtual {p0, v0, v0, p1}, Lcom/android/server/am/ActivityManagerService;->requestBugReportWithDescription(Ljava/lang/String;Ljava/lang/String;I)V

    .line 6566
    return-void
.end method

.method public requestBugReportWithDescription(Ljava/lang/String;Ljava/lang/String;I)V
    .locals 6
    .param p1, "shareTitle"    # Ljava/lang/String;
    .param p2, "shareDescription"    # Ljava/lang/String;
    .param p3, "bugreportType"    # I

    .line 6575
    const/4 v0, 0x0

    .line 6576
    .local v0, "type":Ljava/lang/String;
    packed-switch p3, :pswitch_data_0

    .line 6596
    new-instance v1, Ljava/lang/IllegalArgumentException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Provided bugreport type is not correct, value: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 6593
    :pswitch_0
    const-string v0, "bugreportwifi"

    .line 6594
    goto :goto_0

    .line 6590
    :pswitch_1
    const-string v0, "bugreporttelephony"

    .line 6591
    goto :goto_0

    .line 6587
    :pswitch_2
    const-string v0, "bugreportwear"

    .line 6588
    goto :goto_0

    .line 6584
    :pswitch_3
    const-string v0, "bugreportremote"

    .line 6585
    goto :goto_0

    .line 6581
    :pswitch_4
    const-string v0, "bugreportplus"

    .line 6582
    goto :goto_0

    .line 6578
    :pswitch_5
    const-string v0, "bugreportfull"

    .line 6579
    nop

    .line 6601
    :goto_0
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, " requested by UID "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    const-string v2, "ActivityManager"

    invoke-static {v2, v1}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 6602
    const-string v1, "android.permission.DUMP"

    const-string/jumbo v3, "requestBugReport"

    invoke-virtual {p0, v1, v3}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 6604
    invoke-static {p1}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v1

    if-nez v1, :cond_3

    .line 6605
    invoke-virtual {p1}, Ljava/lang/String;->length()I

    move-result v1

    const/16 v3, 0x32

    if-gt v1, v3, :cond_2

    .line 6610
    invoke-static {p2}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v1

    if-nez v1, :cond_1

    .line 6611
    invoke-virtual {p2}, Ljava/lang/String;->length()I

    move-result v1

    const/16 v3, 0x96

    if-gt v1, v3, :cond_0

    goto :goto_1

    .line 6612
    :cond_0
    const-string/jumbo v1, "shareDescription should be less than 150 characters"

    .line 6614
    .local v1, "errorStr":Ljava/lang/String;
    new-instance v2, Ljava/lang/IllegalArgumentException;

    invoke-direct {v2, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 6617
    .end local v1    # "errorStr":Ljava/lang/String;
    :cond_1
    :goto_1
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Bugreport notification title "

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v3, " description "

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v2, v1}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_2

    .line 6606
    :cond_2
    const-string/jumbo v1, "shareTitle should be less than 50 characters"

    .line 6608
    .restart local v1    # "errorStr":Ljava/lang/String;
    new-instance v2, Ljava/lang/IllegalArgumentException;

    invoke-direct {v2, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 6621
    .end local v1    # "errorStr":Ljava/lang/String;
    :cond_3
    :goto_2
    new-instance v1, Landroid/content/Intent;

    invoke-direct {v1}, Landroid/content/Intent;-><init>()V

    .line 6622
    .local v1, "triggerShellBugreport":Landroid/content/Intent;
    const-string v2, "com.android.internal.intent.action.BUGREPORT_REQUESTED"

    invoke-virtual {v1, v2}, Landroid/content/Intent;->setAction(Ljava/lang/String;)Landroid/content/Intent;

    .line 6623
    const-string v2, "com.android.shell"

    invoke-virtual {v1, v2}, Landroid/content/Intent;->setPackage(Ljava/lang/String;)Landroid/content/Intent;

    .line 6624
    const-string v2, "android.intent.extra.BUGREPORT_TYPE"

    invoke-virtual {v1, v2, p3}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 6625
    const/high16 v2, 0x10000000

    invoke-virtual {v1, v2}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 6626
    const/high16 v2, 0x1000000

    invoke-virtual {v1, v2}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 6627
    if-eqz p1, :cond_4

    .line 6628
    const-string v2, "android.intent.extra.TITLE"

    invoke-virtual {v1, v2, p1}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;

    .line 6630
    :cond_4
    if-eqz p2, :cond_5

    .line 6631
    const-string v2, "android.intent.extra.DESCRIPTION"

    invoke-virtual {v1, v2, p2}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;

    .line 6633
    :cond_5
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 6636
    .local v2, "identity":J
    :try_start_0
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    sget-object v5, Landroid/os/UserHandle;->SYSTEM:Landroid/os/UserHandle;

    invoke-virtual {v4, v1, v5}, Landroid/content/Context;->sendBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 6638
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 6639
    nop

    .line 6640
    return-void

    .line 6638
    :catchall_0
    move-exception v4

    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 6639
    throw v4

    nop

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_5
        :pswitch_4
        :pswitch_3
        :pswitch_2
        :pswitch_1
        :pswitch_0
    .end packed-switch
.end method

.method public requestFullBugReport()V
    .locals 2

    .line 6684
    const/4 v0, 0x0

    const/4 v1, 0x0

    invoke-virtual {p0, v0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->requestBugReportWithDescription(Ljava/lang/String;Ljava/lang/String;I)V

    .line 6685
    return-void
.end method

.method public requestInteractiveBugReport()V
    .locals 2

    .line 6665
    const/4 v0, 0x0

    const/4 v1, 0x1

    invoke-virtual {p0, v0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->requestBugReportWithDescription(Ljava/lang/String;Ljava/lang/String;I)V

    .line 6666
    return-void
.end method

.method public requestInteractiveBugReportWithDescription(Ljava/lang/String;Ljava/lang/String;)V
    .locals 1
    .param p1, "shareTitle"    # Ljava/lang/String;
    .param p2, "shareDescription"    # Ljava/lang/String;

    .line 6675
    const/4 v0, 0x1

    invoke-virtual {p0, p1, p2, v0}, Lcom/android/server/am/ActivityManagerService;->requestBugReportWithDescription(Ljava/lang/String;Ljava/lang/String;I)V

    .line 6677
    return-void
.end method

.method public requestRemoteBugReport()V
    .locals 2

    .line 6692
    const/4 v0, 0x0

    const/4 v1, 0x2

    invoke-virtual {p0, v0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->requestBugReportWithDescription(Ljava/lang/String;Ljava/lang/String;I)V

    .line 6693
    return-void
.end method

.method public requestSystemServerHeapDump()V
    .locals 5

    .line 6537
    sget-boolean v0, Landroid/os/Build;->IS_DEBUGGABLE:Z

    if-nez v0, :cond_0

    .line 6538
    const-string v0, "ActivityManager"

    const-string/jumbo v1, "requestSystemServerHeapDump called on a user build"

    invoke-static {v0, v1}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    .line 6539
    return-void

    .line 6541
    :cond_0
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    const/16 v1, 0x3e8

    if-ne v0, v1, :cond_2

    .line 6547
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    monitor-enter v0

    .line 6548
    :try_start_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-static {}, Landroid/os/Process;->myPid()I

    move-result v2

    invoke-virtual {v1, v2}, Lcom/android/server/am/ActivityManagerService$PidMap;->get(I)Lcom/android/server/am/ProcessRecord;

    move-result-object v1

    .line 6549
    .local v1, "pr":Lcom/android/server/am/ProcessRecord;
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 6550
    if-nez v1, :cond_1

    .line 6551
    const-string v0, "ActivityManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "system process not in mPidsSelfLocked: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {}, Landroid/os/Process;->myPid()I

    move-result v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v0, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 6552
    return-void

    .line 6554
    :cond_1
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    iget-object v2, v0, Lcom/android/server/am/AppProfiler;->mProfilerLock:Ljava/lang/Object;

    monitor-enter v2

    .line 6555
    :try_start_1
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    iget-object v3, v1, Lcom/android/server/am/ProcessRecord;->mProfile:Lcom/android/server/am/ProcessProfileRecord;

    const/4 v4, 0x1

    invoke-virtual {v0, v3, v4}, Lcom/android/server/am/AppProfiler;->startHeapDumpLPf(Lcom/android/server/am/ProcessProfileRecord;Z)V

    .line 6556
    monitor-exit v2

    .line 6557
    return-void

    .line 6556
    :catchall_0
    move-exception v0

    monitor-exit v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v0

    .line 6549
    .end local v1    # "pr":Lcom/android/server/am/ProcessRecord;
    :catchall_1
    move-exception v1

    :try_start_2
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    throw v1

    .line 6543
    :cond_2
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Only the system process is allowed to request a system heap dump"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public requestTelephonyBugReport(Ljava/lang/String;Ljava/lang/String;)V
    .locals 1
    .param p1, "shareTitle"    # Ljava/lang/String;
    .param p2, "shareDescription"    # Ljava/lang/String;

    .line 6647
    const/4 v0, 0x4

    invoke-virtual {p0, p1, p2, v0}, Lcom/android/server/am/ActivityManagerService;->requestBugReportWithDescription(Ljava/lang/String;Ljava/lang/String;I)V

    .line 6649
    return-void
.end method

.method public requestWifiBugReport(Ljava/lang/String;Ljava/lang/String;)V
    .locals 1
    .param p1, "shareTitle"    # Ljava/lang/String;
    .param p2, "shareDescription"    # Ljava/lang/String;

    .line 6656
    const/4 v0, 0x5

    invoke-virtual {p0, p1, p2, v0}, Lcom/android/server/am/ActivityManagerService;->requestBugReportWithDescription(Ljava/lang/String;Ljava/lang/String;I)V

    .line 6658
    return-void
.end method

.method requireAllowedAssociationsLocked(Ljava/lang/String;)V
    .locals 4
    .param p1, "packageName"    # Ljava/lang/String;

    .line 2389
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->ensureAllowedAssociations()V

    .line 2390
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAllowedAssociations:Landroid/util/ArrayMap;

    invoke-virtual {v0, p1}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    if-nez v0, :cond_0

    .line 2391
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAllowedAssociations:Landroid/util/ArrayMap;

    new-instance v1, Lcom/android/server/am/ActivityManagerService$PackageAssociationInfo;

    new-instance v2, Landroid/util/ArraySet;

    invoke-direct {v2}, Landroid/util/ArraySet;-><init>()V

    const/4 v3, 0x0

    invoke-direct {v1, p0, p1, v2, v3}, Lcom/android/server/am/ActivityManagerService$PackageAssociationInfo;-><init>(Lcom/android/server/am/ActivityManagerService;Ljava/lang/String;Landroid/util/ArraySet;Z)V

    invoke-virtual {v0, p1, v1}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 2394
    :cond_0
    return-void
.end method

.method public resetAppErrors()V
    .locals 2

    .line 17154
    const-string v0, "android.permission.RESET_APP_ERRORS"

    const-string/jumbo v1, "resetAppErrors"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 17155
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppErrors:Lcom/android/server/am/AppErrors;

    invoke-virtual {v0}, Lcom/android/server/am/AppErrors;->resetState()V

    .line 17156
    return-void
.end method

.method public resizeTask(ILandroid/graphics/Rect;I)V
    .locals 1
    .param p1, "taskId"    # I
    .param p2, "bounds"    # Landroid/graphics/Rect;
    .param p3, "resizeMode"    # I

    .line 5821
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/server/wm/ActivityTaskManagerService;->resizeTask(ILandroid/graphics/Rect;I)Z

    .line 5822
    return-void
.end method

.method public restart()V
    .locals 4

    .line 7325
    const-string v0, "android.permission.SET_ACTIVITY_WATCHER"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_0

    .line 7331
    const-string v0, "ActivityManager"

    const-string v1, "Sending shutdown broadcast..."

    invoke-static {v0, v1}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 7333
    new-instance v0, Lcom/android/server/am/ActivityManagerService$12;

    invoke-direct {v0, p0}, Lcom/android/server/am/ActivityManagerService$12;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    .line 7345
    .local v0, "br":Landroid/content/BroadcastReceiver;
    new-instance v1, Landroid/content/Intent;

    const-string v2, "android.intent.action.ACTION_SHUTDOWN"

    invoke-direct {v1, v2}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 7346
    .local v1, "intent":Landroid/content/Intent;
    const/high16 v2, 0x10000000

    invoke-virtual {v1, v2}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 7347
    const/4 v2, 0x1

    const-string v3, "android.intent.extra.SHUTDOWN_USERSPACE_ONLY"

    invoke-virtual {v1, v3, v2}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Z)Landroid/content/Intent;

    .line 7352
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v0, v2, v1}, Landroid/content/BroadcastReceiver;->onReceive(Landroid/content/Context;Landroid/content/Intent;)V

    .line 7353
    return-void

    .line 7327
    .end local v0    # "br":Landroid/content/BroadcastReceiver;
    .end local v1    # "intent":Landroid/content/Intent;
    :cond_0
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires permission android.permission.SET_ACTIVITY_WATCHER"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public restartUserInBackground(I)I
    .locals 2
    .param p1, "userId"    # I

    .line 16564
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    const/4 v1, 0x0

    invoke-virtual {v0, p1, v1}, Lcom/android/server/am/UserController;->restartUser(IZ)I

    move-result v0

    return v0
.end method

.method public resumeAppSwitches()V
    .locals 1

    .line 6378
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {v0}, Lcom/android/server/wm/ActivityTaskManagerService;->resumeAppSwitches()V

    .line 6379
    return-void
.end method

.method public revokeUriPermission(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/net/Uri;II)V
    .locals 6
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .param p2, "targetPackage"    # Ljava/lang/String;
    .param p3, "uri"    # Landroid/net/Uri;
    .param p4, "modeFlags"    # I
    .param p5, "userId"    # I

    .line 5750
    const-string/jumbo v0, "revokeUriPermission"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 5751
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 5752
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLOSP(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    .line 5753
    .local v0, "r":Lcom/android/server/am/ProcessRecord;
    if-eqz v0, :cond_3

    .line 5758
    if-nez p3, :cond_0

    .line 5759
    const-string v1, "ActivityManager"

    const-string/jumbo v2, "revokeUriPermission: null uri"

    invoke-static {v1, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 5760
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 5763
    :cond_0
    :try_start_1
    invoke-static {p4}, Landroid/content/Intent;->isAccessUriMode(I)Z

    move-result v1

    if-nez v1, :cond_1

    .line 5764
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 5767
    :cond_1
    :try_start_2
    invoke-virtual {p3}, Landroid/net/Uri;->getAuthority()Ljava/lang/String;

    move-result-object v1

    .line 5768
    .local v1, "authority":Ljava/lang/String;
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mCpHelper:Lcom/android/server/am/ContentProviderHelper;

    const/high16 v3, 0xc0000

    invoke-virtual {v2, v1, p5, v3}, Lcom/android/server/am/ContentProviderHelper;->getProviderInfoLocked(Ljava/lang/String;II)Landroid/content/pm/ProviderInfo;

    move-result-object v2

    .line 5770
    .local v2, "pi":Landroid/content/pm/ProviderInfo;
    if-nez v2, :cond_2

    .line 5771
    const-string v3, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "No content provider found for permission revoke: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 5772
    invoke-virtual {p3}, Landroid/net/Uri;->toSafeString()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    .line 5771
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 5773
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 5776
    :cond_2
    :try_start_3
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mUgmInternal:Lcom/android/server/uri/UriGrantsManagerInternal;

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    new-instance v5, Lcom/android/server/uri/GrantUri;

    invoke-direct {v5, p5, p3, p4}, Lcom/android/server/uri/GrantUri;-><init>(ILandroid/net/Uri;I)V

    invoke-interface {v3, p2, v4, v5, p4}, Lcom/android/server/uri/UriGrantsManagerInternal;->revokeUriPermission(Ljava/lang/String;ILcom/android/server/uri/GrantUri;I)V

    .line 5778
    .end local v0    # "r":Lcom/android/server/am/ProcessRecord;
    .end local v1    # "authority":Ljava/lang/String;
    .end local v2    # "pi":Landroid/content/pm/ProviderInfo;
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 5779
    return-void

    .line 5754
    .restart local v0    # "r":Lcom/android/server/am/ProcessRecord;
    :cond_3
    :try_start_4
    new-instance v1, Ljava/lang/SecurityException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Unable to find app for caller "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v3, " when revoking permission to uri "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "caller":Landroid/app/IApplicationThread;
    .end local p2    # "targetPackage":Ljava/lang/String;
    .end local p3    # "uri":Landroid/net/Uri;
    .end local p4    # "modeFlags":I
    .end local p5    # "userId":I
    throw v1

    .line 5778
    .end local v0    # "r":Lcom/android/server/am/ProcessRecord;
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "caller":Landroid/app/IApplicationThread;
    .restart local p2    # "targetPackage":Ljava/lang/String;
    .restart local p3    # "uri":Landroid/net/Uri;
    .restart local p4    # "modeFlags":I
    .restart local p5    # "userId":I
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method final rotateBroadcastStatsIfNeededLocked()V
    .locals 6

    .line 13493
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v0

    .line 13494
    .local v0, "now":J
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mCurBroadcastStats:Lcom/android/server/am/BroadcastStats;

    if-eqz v2, :cond_0

    iget-wide v2, v2, Lcom/android/server/am/BroadcastStats;->mStartRealtime:J

    const-wide/32 v4, 0x5265c00

    add-long/2addr v2, v4

    cmp-long v2, v2, v0

    if-gez v2, :cond_2

    .line 13496
    :cond_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mCurBroadcastStats:Lcom/android/server/am/BroadcastStats;

    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mLastBroadcastStats:Lcom/android/server/am/BroadcastStats;

    .line 13497
    if-eqz v2, :cond_1

    .line 13498
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v3

    iput-wide v3, v2, Lcom/android/server/am/BroadcastStats;->mEndRealtime:J

    .line 13499
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mLastBroadcastStats:Lcom/android/server/am/BroadcastStats;

    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v3

    iput-wide v3, v2, Lcom/android/server/am/BroadcastStats;->mEndUptime:J

    .line 13501
    :cond_1
    new-instance v2, Lcom/android/server/am/BroadcastStats;

    invoke-direct {v2}, Lcom/android/server/am/BroadcastStats;-><init>()V

    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mCurBroadcastStats:Lcom/android/server/am/BroadcastStats;

    .line 13503
    :cond_2
    return-void
.end method

.method final runInBackgroundDisabled(I)V
    .locals 2
    .param p1, "uid"    # I

    .line 14636
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 14637
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v0, p1}, Lcom/android/server/am/ProcessList;->getUidRecordLOSP(I)Lcom/android/server/am/UidRecord;

    move-result-object v0

    .line 14638
    .local v0, "uidRec":Lcom/android/server/am/UidRecord;
    if-eqz v0, :cond_0

    .line 14640
    invoke-virtual {v0}, Lcom/android/server/am/UidRecord;->isIdle()Z

    move-result v1

    if-eqz v1, :cond_1

    .line 14641
    invoke-virtual {v0}, Lcom/android/server/am/UidRecord;->getUid()I

    move-result v1

    invoke-virtual {p0, v1, v0}, Lcom/android/server/am/ActivityManagerService;->doStopUidLocked(ILcom/android/server/am/UidRecord;)V

    goto :goto_0

    .line 14645
    :cond_0
    const/4 v1, 0x0

    invoke-virtual {p0, p1, v1}, Lcom/android/server/am/ActivityManagerService;->doStopUidLocked(ILcom/android/server/am/UidRecord;)V

    .line 14647
    .end local v0    # "uidRec":Lcom/android/server/am/UidRecord;
    :cond_1
    :goto_0
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 14648
    return-void

    .line 14647
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public scheduleApplicationInfoChanged(Ljava/util/List;I)V
    .locals 4
    .param p2, "userId"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/List<",
            "Ljava/lang/String;",
            ">;I)V"
        }
    .end annotation

    .line 16569
    .local p1, "packageNames":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    const-string v0, "android.permission.CHANGE_CONFIGURATION"

    const-string/jumbo v1, "scheduleApplicationInfoChanged()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 16572
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 16573
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 16575
    .local v1, "origId":J
    :try_start_1
    invoke-direct {p0, p1, p2}, Lcom/android/server/am/ActivityManagerService;->updateApplicationInfoLOSP(Ljava/util/List;I)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 16577
    :try_start_2
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 16578
    nop

    .line 16579
    .end local v1    # "origId":J
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 16580
    return-void

    .line 16577
    .restart local v1    # "origId":J
    :catchall_0
    move-exception v3

    :try_start_3
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 16578
    nop

    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "packageNames":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    .end local p2    # "userId":I
    throw v3

    .line 16579
    .end local v1    # "origId":J
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "packageNames":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    .restart local p2    # "userId":I
    :catchall_1
    move-exception v1

    monitor-exit v0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v1
.end method

.method scheduleBinderHeavyHitterAutoSampler()V
    .locals 2

    .line 16662
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    new-instance v1, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda6;

    invoke-direct {v1, p0}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda6;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->post(Ljava/lang/Runnable;)Z

    .line 16694
    return-void
.end method

.method public schedulePendingSystemServerWtfs(Ljava/util/LinkedList;)V
    .locals 2
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/LinkedList<",
            "Landroid/util/Pair<",
            "Ljava/lang/String;",
            "Landroid/app/ApplicationErrorReport$CrashInfo;",
            ">;>;)V"
        }
    .end annotation

    .line 8111
    .local p1, "list":Ljava/util/LinkedList;, "Ljava/util/LinkedList<Landroid/util/Pair<Ljava/lang/String;Landroid/app/ApplicationErrorReport$CrashInfo;>;>;"
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    new-instance v1, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda13;

    invoke-direct {v1, p0, p1}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda13;-><init>(Lcom/android/server/am/ActivityManagerService;Ljava/util/LinkedList;)V

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->post(Ljava/lang/Runnable;)Z

    .line 8112
    return-void
.end method

.method scheduleUpdateBinderHeavyHitterWatcherConfig()V
    .locals 2

    .line 16624
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    new-instance v1, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda7;

    invoke-direct {v1, p0}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda7;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->post(Ljava/lang/Runnable;)Z

    .line 16656
    return-void
.end method

.method public sendIdleJobTrigger()V
    .locals 18

    .line 7448
    const-string v0, "android.permission.SET_ACTIVITY_WATCHER"

    move-object/from16 v15, p0

    invoke-virtual {v15, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_0

    .line 7454
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v16

    .line 7456
    .local v16, "ident":J
    :try_start_0
    new-instance v0, Landroid/content/Intent;

    const-string v1, "com.android.server.ACTION_TRIGGER_IDLE"

    invoke-direct {v0, v1}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    const-string v1, "android"

    .line 7457
    invoke-virtual {v0, v1}, Landroid/content/Intent;->setPackage(Ljava/lang/String;)Landroid/content/Intent;

    move-result-object v0

    const/high16 v1, 0x40000000    # 2.0f

    .line 7458
    invoke-virtual {v0, v1}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    move-result-object v3

    .line 7459
    .local v3, "intent":Landroid/content/Intent;
    const/4 v2, 0x0

    const/4 v4, 0x0

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    const/4 v10, -0x1

    const/4 v11, 0x0

    const/4 v12, 0x0

    const/4 v13, 0x0

    const/4 v14, -0x1

    move-object/from16 v1, p0

    invoke-virtual/range {v1 .. v14}, Lcom/android/server/am/ActivityManagerService;->broadcastIntent(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;ILandroid/os/Bundle;ZZI)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 7462
    nop

    .end local v3    # "intent":Landroid/content/Intent;
    invoke-static/range {v16 .. v17}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 7463
    nop

    .line 7464
    return-void

    .line 7462
    :catchall_0
    move-exception v0

    invoke-static/range {v16 .. v17}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 7463
    throw v0

    .line 7450
    .end local v16    # "ident":J
    :cond_0
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires permission android.permission.SET_ACTIVITY_WATCHER"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public sendIntentSender(Landroid/content/IIntentSender;Landroid/os/IBinder;ILandroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;Ljava/lang/String;Landroid/os/Bundle;)I
    .locals 11
    .param p1, "target"    # Landroid/content/IIntentSender;
    .param p2, "allowlistToken"    # Landroid/os/IBinder;
    .param p3, "code"    # I
    .param p4, "intent"    # Landroid/content/Intent;
    .param p5, "resolvedType"    # Ljava/lang/String;
    .param p6, "finishedReceiver"    # Landroid/content/IIntentReceiver;
    .param p7, "requiredPermission"    # Ljava/lang/String;
    .param p8, "options"    # Landroid/os/Bundle;

    .line 4947
    move-object v9, p1

    instance-of v0, v9, Lcom/android/server/am/PendingIntentRecord;

    if-eqz v0, :cond_0

    .line 4948
    move-object v1, v9

    check-cast v1, Lcom/android/server/am/PendingIntentRecord;

    move v2, p3

    move-object v3, p4

    move-object/from16 v4, p5

    move-object v5, p2

    move-object/from16 v6, p6

    move-object/from16 v7, p7

    move-object/from16 v8, p8

    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/PendingIntentRecord;->sendWithResult(ILandroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Landroid/content/IIntentReceiver;Ljava/lang/String;Landroid/os/Bundle;)I

    move-result v0

    return v0

    .line 4951
    :cond_0
    if-nez p4, :cond_1

    .line 4957
    const-string v0, "ActivityManager"

    const-string v1, "Can\'t use null intent with direct IIntentSender call"

    invoke-static {v0, v1}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    .line 4958
    new-instance v0, Landroid/content/Intent;

    const-string v1, "android.intent.action.MAIN"

    invoke-direct {v0, v1}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    move-object v10, v0

    .end local p4    # "intent":Landroid/content/Intent;
    .local v0, "intent":Landroid/content/Intent;
    goto :goto_0

    .line 4951
    .end local v0    # "intent":Landroid/content/Intent;
    .restart local p4    # "intent":Landroid/content/Intent;
    :cond_1
    move-object v10, p4

    .line 4961
    .end local p4    # "intent":Landroid/content/Intent;
    .local v10, "intent":Landroid/content/Intent;
    :goto_0
    const/4 v6, 0x0

    move-object v1, p1

    move v2, p3

    move-object v3, v10

    move-object/from16 v4, p5

    move-object v5, p2

    move-object/from16 v7, p7

    move-object/from16 v8, p8

    :try_start_0
    invoke-interface/range {v1 .. v8}, Landroid/content/IIntentSender;->send(ILandroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Landroid/content/IIntentReceiver;Ljava/lang/String;Landroid/os/Bundle;)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 4964
    goto :goto_1

    .line 4963
    :catch_0
    move-exception v0

    .line 4969
    :goto_1
    if-eqz p6, :cond_2

    .line 4971
    const/4 v3, 0x0

    const/4 v4, 0x0

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    .line 4972
    :try_start_1
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v8

    .line 4971
    move-object/from16 v1, p6

    move-object v2, v10

    invoke-interface/range {v1 .. v8}, Landroid/content/IIntentReceiver;->performReceive(Landroid/content/Intent;ILjava/lang/String;Landroid/os/Bundle;ZZI)V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_1

    .line 4974
    goto :goto_2

    .line 4973
    :catch_1
    move-exception v0

    .line 4976
    :cond_2
    :goto_2
    const/4 v0, 0x0

    return v0
.end method

.method sendPendingBroadcastsLocked(Lcom/android/server/am/ProcessRecord;)Z
    .locals 6
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;

    .line 12315
    const/4 v0, 0x0

    .line 12316
    .local v0, "didSomething":Z
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    array-length v2, v1

    const/4 v3, 0x0

    :goto_0
    if-ge v3, v2, :cond_0

    aget-object v4, v1, v3

    .line 12317
    .local v4, "queue":Lcom/android/server/am/BroadcastQueue;
    invoke-virtual {v4, p1}, Lcom/android/server/am/BroadcastQueue;->sendPendingBroadcastsLocked(Lcom/android/server/am/ProcessRecord;)Z

    move-result v5

    or-int/2addr v0, v5

    .line 12316
    .end local v4    # "queue":Lcom/android/server/am/BroadcastQueue;
    add-int/lit8 v3, v3, 0x1

    goto :goto_0

    .line 12319
    :cond_0
    return v0
.end method

.method public serviceDoneExecuting(Landroid/os/IBinder;III)V
    .locals 7
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "type"    # I
    .param p3, "startId"    # I
    .param p4, "res"    # I

    .line 12034
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 12035
    instance-of v0, p1, Lcom/android/server/am/ServiceRecord;

    if-eqz v0, :cond_0

    .line 12039
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    move-object v2, p1

    check-cast v2, Lcom/android/server/am/ServiceRecord;

    const/4 v6, 0x0

    move v3, p2

    move v4, p3

    move v5, p4

    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/ActiveServices;->serviceDoneExecutingLocked(Lcom/android/server/am/ServiceRecord;IIIZ)V

    .line 12040
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 12041
    return-void

    .line 12036
    :cond_0
    :try_start_1
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "serviceDoneExecuting: Invalid service token="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 12037
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "Invalid service token"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "token":Landroid/os/IBinder;
    .end local p2    # "type":I
    .end local p3    # "startId":I
    .end local p4    # "res":I
    throw v0

    .line 12040
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "token":Landroid/os/IBinder;
    .restart local p2    # "type":I
    .restart local p3    # "startId":I
    .restart local p4    # "res":I
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public setActivityController(Landroid/app/IActivityController;Z)V
    .locals 1
    .param p1, "controller"    # Landroid/app/IActivityController;
    .param p2, "imAMonkey"    # Z

    .line 6502
    if-eqz p1, :cond_0

    .line 6503
    invoke-interface {p1}, Landroid/app/IActivityController;->asBinder()Landroid/os/IBinder;

    move-result-object v0

    invoke-static {v0}, Landroid/os/Binder;->allowBlocking(Landroid/os/IBinder;)Landroid/os/IBinder;

    .line 6505
    :cond_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/wm/ActivityTaskManagerService;->setActivityController(Landroid/app/IActivityController;Z)V

    .line 6506
    return-void
.end method

.method public setActivityLocusContext(Landroid/content/ComponentName;Landroid/content/LocusId;Landroid/os/IBinder;)V
    .locals 5
    .param p1, "activity"    # Landroid/content/ComponentName;
    .param p2, "locusId"    # Landroid/content/LocusId;
    .param p3, "appToken"    # Landroid/os/IBinder;

    .line 17123
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 17124
    .local v0, "callingUid":I
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v1

    .line 17125
    .local v1, "userId":I
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getPackageManagerInternal()Landroid/content/pm/PackageManagerInternal;

    move-result-object v2

    invoke-virtual {p1}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v3

    const/4 v4, 0x0

    invoke-virtual {v2, v3, v4, v1}, Landroid/content/pm/PackageManagerInternal;->getPackageUid(Ljava/lang/String;II)I

    move-result v2

    if-ne v2, v0, :cond_1

    .line 17130
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {v2, p2, p3}, Lcom/android/server/wm/ActivityTaskManagerService;->setLocusId(Landroid/content/LocusId;Landroid/os/IBinder;)V

    .line 17131
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    if-eqz v2, :cond_0

    .line 17132
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    invoke-virtual {v2, p1, v1, p2, p3}, Landroid/app/usage/UsageStatsManagerInternal;->reportLocusUpdate(Landroid/content/ComponentName;ILandroid/content/LocusId;Landroid/os/IBinder;)V

    .line 17134
    :cond_0
    return-void

    .line 17127
    :cond_1
    new-instance v2, Ljava/lang/SecurityException;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Calling uid "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v4, " cannot set locusIdfor package "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 17128
    invoke-virtual {p1}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2
.end method

.method public setAgentApp(Ljava/lang/String;Ljava/lang/String;)V
    .locals 2
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "agent"    # Ljava/lang/String;

    .line 6435
    const-string v0, "android.permission.SET_ACTIVITY_WATCHER"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_0

    .line 6441
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    iget-object v0, v0, Lcom/android/server/am/AppProfiler;->mProfilerLock:Ljava/lang/Object;

    monitor-enter v0

    .line 6442
    :try_start_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    invoke-virtual {v1, p1, p2}, Lcom/android/server/am/AppProfiler;->setAgentAppLPf(Ljava/lang/String;Ljava/lang/String;)V

    .line 6443
    monitor-exit v0

    .line 6444
    return-void

    .line 6443
    :catchall_0
    move-exception v1

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1

    .line 6437
    :cond_0
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires permission android.permission.SET_ACTIVITY_WATCHER"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public setAlwaysFinish(Z)V
    .locals 5
    .param p1, "enabled"    # Z

    .line 6483
    const-string v0, "android.permission.SET_ALWAYS_FINISH"

    const-string/jumbo v1, "setAlwaysFinish()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 6486
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 6488
    .local v0, "ident":J
    :try_start_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    .line 6489
    invoke-virtual {v2}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v2

    const-string v3, "always_finish_activities"

    .line 6490
    if-eqz p1, :cond_0

    const/4 v4, 0x1

    goto :goto_0

    :cond_0
    const/4 v4, 0x0

    .line 6488
    :goto_0
    invoke-static {v2, v3, v4}, Landroid/provider/Settings$Global;->putInt(Landroid/content/ContentResolver;Ljava/lang/String;I)Z

    .line 6492
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 6493
    iput-boolean p1, p0, Lcom/android/server/am/ActivityManagerService;->mAlwaysFinishActivities:Z

    .line 6494
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 6496
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 6497
    nop

    .line 6498
    return-void

    .line 6494
    :catchall_0
    move-exception v2

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .end local v0    # "ident":J
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "enabled":Z
    throw v2
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 6496
    .restart local v0    # "ident":J
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "enabled":Z
    :catchall_1
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 6497
    throw v2
.end method

.method final setAppIdTempAllowlistStateLSP(IZ)V
    .locals 1
    .param p1, "uid"    # I
    .param p2, "onAllowlist"    # Z

    .line 14783
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mOomAdjuster:Lcom/android/server/am/OomAdjuster;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/am/OomAdjuster;->setAppIdTempAllowlistStateLSP(IZ)V

    .line 14784
    return-void
.end method

.method public setAppOpsPolicy(Landroid/app/AppOpsManagerInternal$CheckOpsDelegate;)V
    .locals 1
    .param p1, "appOpsPolicy"    # Landroid/app/AppOpsManagerInternal$CheckOpsDelegate;

    .line 1881
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/appop/AppOpsService;

    invoke-virtual {v0, p1}, Lcom/android/server/appop/AppOpsService;->setAppOpsPolicy(Landroid/app/AppOpsManagerInternal$CheckOpsDelegate;)V

    .line 1882
    return-void
.end method

.method public setContentCaptureManager(Lcom/android/server/contentcapture/ContentCaptureManagerInternal;)V
    .locals 0
    .param p1, "contentCaptureManager"    # Lcom/android/server/contentcapture/ContentCaptureManagerInternal;

    .line 1867
    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mContentCaptureService:Lcom/android/server/contentcapture/ContentCaptureManagerInternal;

    .line 1868
    return-void
.end method

.method public setDebugApp(Ljava/lang/String;ZZ)V
    .locals 16
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "waitForDebugger"    # Z
    .param p3, "persistent"    # Z

    .line 6383
    move-object/from16 v11, p0

    move-object/from16 v12, p1

    move/from16 v13, p2

    const-string v0, "android.permission.SET_DEBUG_APP"

    const-string/jumbo v1, "setDebugApp()"

    invoke-virtual {v11, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 6386
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v14

    .line 6391
    .local v14, "ident":J
    const/4 v0, 0x1

    const/4 v1, 0x0

    if-eqz p3, :cond_1

    .line 6392
    :try_start_0
    iget-object v2, v11, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v2}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v2

    .line 6393
    .local v2, "resolver":Landroid/content/ContentResolver;
    const-string v3, "debug_app"

    invoke-static {v2, v3, v12}, Landroid/provider/Settings$Global;->putString(Landroid/content/ContentResolver;Ljava/lang/String;Ljava/lang/String;)Z

    .line 6396
    const-string/jumbo v3, "wait_for_debugger"

    .line 6398
    if-eqz v13, :cond_0

    move v4, v0

    goto :goto_0

    :cond_0
    move v4, v1

    .line 6396
    :goto_0
    invoke-static {v2, v3, v4}, Landroid/provider/Settings$Global;->putInt(Landroid/content/ContentResolver;Ljava/lang/String;I)Z

    .line 6401
    .end local v2    # "resolver":Landroid/content/ContentResolver;
    :cond_1
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 6402
    if-nez p3, :cond_2

    .line 6403
    iget-object v2, v11, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;

    iput-object v2, v11, Lcom/android/server/am/ActivityManagerService;->mOrigDebugApp:Ljava/lang/String;

    .line 6404
    iget-boolean v2, v11, Lcom/android/server/am/ActivityManagerService;->mWaitForDebugger:Z

    iput-boolean v2, v11, Lcom/android/server/am/ActivityManagerService;->mOrigWaitForDebugger:Z

    .line 6406
    :cond_2
    iput-object v12, v11, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;

    .line 6407
    iput-boolean v13, v11, Lcom/android/server/am/ActivityManagerService;->mWaitForDebugger:Z

    .line 6408
    if-nez p3, :cond_3

    goto :goto_1

    :cond_3
    move v0, v1

    :goto_1
    iput-boolean v0, v11, Lcom/android/server/am/ActivityManagerService;->mDebugTransient:Z

    .line 6409
    if-eqz v12, :cond_4

    .line 6410
    const/4 v3, -0x1

    const/4 v4, 0x0

    const/4 v5, 0x0

    const/4 v6, 0x1

    const/4 v7, 0x1

    const/4 v8, 0x0

    const/4 v9, -0x1

    const-string/jumbo v10, "set debug app"

    move-object/from16 v1, p0

    move-object/from16 v2, p1

    invoke-virtual/range {v1 .. v10}, Lcom/android/server/am/ActivityManagerService;->forceStopPackageLocked(Ljava/lang/String;IZZZZZILjava/lang/String;)Z

    .line 6413
    :cond_4
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 6415
    invoke-static {v14, v15}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 6416
    nop

    .line 6417
    return-void

    .line 6413
    :catchall_0
    move-exception v0

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .end local v14    # "ident":J
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "packageName":Ljava/lang/String;
    .end local p2    # "waitForDebugger":Z
    .end local p3    # "persistent":Z
    throw v0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 6415
    .restart local v14    # "ident":J
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "packageName":Ljava/lang/String;
    .restart local p2    # "waitForDebugger":Z
    .restart local p3    # "persistent":Z
    :catchall_1
    move-exception v0

    invoke-static {v14, v15}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 6416
    throw v0
.end method

.method public setDumpHeapDebugLimit(Ljava/lang/String;IJLjava/lang/String;)V
    .locals 8
    .param p1, "processName"    # Ljava/lang/String;
    .param p2, "uid"    # I
    .param p3, "maxMemSize"    # J
    .param p5, "reportPackage"    # Ljava/lang/String;

    .line 14992
    if-eqz p1, :cond_0

    .line 14993
    const-string v0, "android.permission.SET_DEBUG_APP"

    const-string/jumbo v1, "setDumpHeapDebugLimit()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    goto :goto_2

    .line 14996
    :cond_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    monitor-enter v0

    .line 14997
    :try_start_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    invoke-virtual {v1, v2}, Lcom/android/server/am/ActivityManagerService$PidMap;->get(I)Lcom/android/server/am/ProcessRecord;

    move-result-object v1

    .line 14998
    .local v1, "proc":Lcom/android/server/am/ProcessRecord;
    if-eqz v1, :cond_5

    .line 15002
    sget-boolean v2, Landroid/os/Build;->IS_DEBUGGABLE:Z

    if-nez v2, :cond_2

    iget-object v2, v1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v2, v2, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v2, v2, 0x2

    if-eqz v2, :cond_1

    goto :goto_0

    .line 15004
    :cond_1
    new-instance v2, Ljava/lang/SecurityException;

    const-string v3, "Not running a debuggable build"

    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "processName":Ljava/lang/String;
    .end local p2    # "uid":I
    .end local p3    # "maxMemSize":J
    .end local p5    # "reportPackage":Ljava/lang/String;
    throw v2

    .line 15006
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "processName":Ljava/lang/String;
    .restart local p2    # "uid":I
    .restart local p3    # "maxMemSize":J
    .restart local p5    # "reportPackage":Ljava/lang/String;
    :cond_2
    :goto_0
    iget-object v2, v1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object p1, v2

    .line 15007
    iget v2, v1, Lcom/android/server/am/ProcessRecord;->uid:I

    move p2, v2

    .line 15008
    if-eqz p5, :cond_4

    invoke-virtual {v1}, Lcom/android/server/am/ProcessRecord;->getPkgList()Lcom/android/server/am/PackageList;

    move-result-object v2

    invoke-virtual {v2, p5}, Lcom/android/server/am/PackageList;->containsKey(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_3

    goto :goto_1

    .line 15009
    :cond_3
    new-instance v2, Ljava/lang/SecurityException;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Package "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, p5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v4, " is not running in "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "processName":Ljava/lang/String;
    .end local p2    # "uid":I
    .end local p3    # "maxMemSize":J
    .end local p5    # "reportPackage":Ljava/lang/String;
    throw v2

    .line 15012
    .end local v1    # "proc":Lcom/android/server/am/ProcessRecord;
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "processName":Ljava/lang/String;
    .restart local p2    # "uid":I
    .restart local p3    # "maxMemSize":J
    .restart local p5    # "reportPackage":Ljava/lang/String;
    :cond_4
    :goto_1
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 15014
    :goto_2
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    move-object v3, p1

    move v4, p2

    move-wide v5, p3

    move-object v7, p5

    invoke-virtual/range {v2 .. v7}, Lcom/android/server/am/AppProfiler;->setDumpHeapDebugLimit(Ljava/lang/String;IJLjava/lang/String;)V

    .line 15015
    return-void

    .line 14999
    .restart local v1    # "proc":Lcom/android/server/am/ProcessRecord;
    :cond_5
    :try_start_1
    new-instance v2, Ljava/lang/SecurityException;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "No process found for calling pid "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15000
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v4

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "processName":Ljava/lang/String;
    .end local p2    # "uid":I
    .end local p3    # "maxMemSize":J
    .end local p5    # "reportPackage":Ljava/lang/String;
    throw v2

    .line 15012
    .end local v1    # "proc":Lcom/android/server/am/ProcessRecord;
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "processName":Ljava/lang/String;
    .restart local p2    # "uid":I
    .restart local p3    # "maxMemSize":J
    .restart local p5    # "reportPackage":Ljava/lang/String;
    :catchall_0
    move-exception v1

    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v1
.end method

.method public setFocusedRootTask(I)V
    .locals 1
    .param p1, "taskId"    # I

    .line 2611
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {v0, p1}, Lcom/android/server/wm/ActivityTaskManagerService;->setFocusedRootTask(I)V

    .line 2612
    return-void
.end method

.method public setHasTopUi(Z)V
    .locals 9
    .param p1, "hasTopUi"    # Z
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .line 6928
    const-string v0, "android.permission.INTERNAL_SYSTEM_WINDOW"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_3

    .line 6936
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v0

    .line 6937
    .local v0, "pid":I
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v1

    .line 6939
    .local v1, "origId":J
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_2

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 6940
    const/4 v3, 0x0

    .line 6942
    .local v3, "changed":Z
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    monitor-enter v4
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 6943
    :try_start_2
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-virtual {v5, v0}, Lcom/android/server/am/ActivityManagerService$PidMap;->get(I)Lcom/android/server/am/ProcessRecord;

    move-result-object v5

    .line 6944
    .local v5, "pr":Lcom/android/server/am/ProcessRecord;
    if-nez v5, :cond_0

    .line 6945
    const-string v6, "ActivityManager"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v8, "setHasTopUi called on unknown pid: "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v6, v7}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 6946
    monitor-exit v4
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 6961
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 6946
    return-void

    .line 6948
    :cond_0
    :try_start_4
    iget-object v6, v5, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    invoke-virtual {v6}, Lcom/android/server/am/ProcessStateRecord;->hasTopUi()Z

    move-result v6

    if-eq v6, p1, :cond_1

    .line 6952
    iget-object v6, v5, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    invoke-virtual {v6, p1}, Lcom/android/server/am/ProcessStateRecord;->setHasTopUi(Z)V

    .line 6953
    const/4 v3, 0x1

    .line 6955
    :cond_1
    monitor-exit v4
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    .line 6956
    if-eqz v3, :cond_2

    .line 6957
    :try_start_5
    const-string/jumbo v4, "updateOomAdj_uiVisibility"

    invoke-virtual {p0, v5, v4}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;)Z

    .line 6959
    .end local v3    # "changed":Z
    .end local v5    # "pr":Lcom/android/server/am/ProcessRecord;
    :cond_2
    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    :try_start_6
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_2

    .line 6961
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 6962
    nop

    .line 6963
    return-void

    .line 6955
    .restart local v3    # "changed":Z
    :catchall_0
    move-exception v5

    :try_start_7
    monitor-exit v4
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_0

    .end local v0    # "pid":I
    .end local v1    # "origId":J
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "hasTopUi":Z
    :try_start_8
    throw v5

    .line 6959
    .end local v3    # "changed":Z
    .restart local v0    # "pid":I
    .restart local v1    # "origId":J
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "hasTopUi":Z
    :catchall_1
    move-exception v3

    monitor-exit p0
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_1

    :try_start_9
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .end local v0    # "pid":I
    .end local v1    # "origId":J
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "hasTopUi":Z
    throw v3
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_2

    .line 6961
    .restart local v0    # "pid":I
    .restart local v1    # "origId":J
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "hasTopUi":Z
    :catchall_2
    move-exception v3

    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 6962
    throw v3

    .line 6929
    .end local v0    # "pid":I
    .end local v1    # "origId":J
    :cond_3
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Permission Denial: setHasTopUi() from pid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 6930
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, ", uid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 6931
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, " requires "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "android.permission.INTERNAL_SYSTEM_WINDOW"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 6933
    .local v0, "msg":Ljava/lang/String;
    const-string v1, "ActivityManager"

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 6934
    new-instance v1, Ljava/lang/SecurityException;

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1
.end method

.method public setInstaller(Lcom/android/server/pm/Installer;)V
    .locals 0
    .param p1, "installer"    # Lcom/android/server/pm/Installer;

    .line 2354
    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mInstaller:Lcom/android/server/pm/Installer;

    .line 2355
    return-void
.end method

.method setMemFactorOverride(I)V
    .locals 1
    .param p1, "level"    # I

    .line 8573
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 8574
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    invoke-virtual {v0}, Lcom/android/server/am/AppProfiler;->getLastMemoryLevelLocked()I

    move-result v0

    if-ne p1, v0, :cond_0

    .line 8575
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 8578
    :cond_0
    :try_start_1
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    invoke-virtual {v0, p1}, Lcom/android/server/am/AppProfiler;->setMemFactorOverrideLocked(I)V

    .line 8580
    const-string/jumbo v0, "updateOomAdj_meh"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked(Ljava/lang/String;)V

    .line 8581
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 8582
    return-void

    .line 8581
    :catchall_0
    move-exception v0

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method setNativeDebuggingAppLocked(Landroid/content/pm/ApplicationInfo;Ljava/lang/String;)V
    .locals 3
    .param p1, "app"    # Landroid/content/pm/ApplicationInfo;
    .param p2, "processName"    # Ljava/lang/String;

    .line 6473
    sget-boolean v0, Landroid/os/Build;->IS_DEBUGGABLE:Z

    if-nez v0, :cond_1

    .line 6474
    iget v0, p1, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v0, v0, 0x2

    if-eqz v0, :cond_0

    goto :goto_0

    .line 6475
    :cond_0
    new-instance v0, Ljava/lang/SecurityException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Process not debuggable: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, p1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 6478
    :cond_1
    :goto_0
    iput-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mNativeDebuggingApp:Ljava/lang/String;

    .line 6479
    return-void
.end method

.method setOomAdjObserver(ILcom/android/server/am/ActivityManagerService$OomAdjObserver;)V
    .locals 2
    .param p1, "uid"    # I
    .param p2, "observer"    # Lcom/android/server/am/ActivityManagerService$OomAdjObserver;

    .line 2865
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mOomAdjObserverLock:Ljava/lang/Object;

    monitor-enter v0

    .line 2866
    :try_start_0
    iput p1, p0, Lcom/android/server/am/ActivityManagerService;->mCurOomAdjUid:I

    .line 2867
    iput-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mCurOomAdjObserver:Lcom/android/server/am/ActivityManagerService$OomAdjObserver;

    .line 2868
    monitor-exit v0

    .line 2869
    return-void

    .line 2868
    :catchall_0
    move-exception v1

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method public setPackageScreenCompatMode(Ljava/lang/String;I)V
    .locals 1
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "mode"    # I

    .line 2787
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/wm/ActivityTaskManagerService;->setPackageScreenCompatMode(Ljava/lang/String;I)V

    .line 2788
    return-void
.end method

.method public setPersistentVrThread(I)V
    .locals 1
    .param p1, "tid"    # I

    .line 6805
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {v0, p1}, Lcom/android/server/wm/ActivityTaskManagerService;->setPersistentVrThread(I)V

    .line 6806
    return-void
.end method

.method public setProcessImportant(Landroid/os/IBinder;IZLjava/lang/String;)V
    .locals 7
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "pid"    # I
    .param p3, "isForeground"    # Z
    .param p4, "reason"    # Ljava/lang/String;

    .line 5175
    const-string v0, "android.permission.SET_PROCESS_LIMIT"

    const-string/jumbo v1, "setProcessImportant()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 5177
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 5178
    const/4 v0, 0x0

    .line 5180
    .local v0, "changed":Z
    const/4 v1, 0x0

    .line 5181
    .local v1, "pr":Lcom/android/server/am/ProcessRecord;
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    monitor-enter v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 5182
    :try_start_1
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-virtual {v3, p2}, Lcom/android/server/am/ActivityManagerService$PidMap;->get(I)Lcom/android/server/am/ProcessRecord;

    move-result-object v3

    move-object v1, v3

    .line 5183
    if-nez v1, :cond_0

    if-eqz p3, :cond_0

    .line 5184
    const-string v3, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "setProcessForeground called on unknown pid: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 5185
    monitor-exit v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 5187
    :cond_0
    :try_start_3
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mImportantProcesses:Landroid/util/SparseArray;

    invoke-virtual {v3, p2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/ActivityManagerService$ImportanceToken;

    .line 5188
    .local v3, "oldToken":Lcom/android/server/am/ActivityManagerService$ImportanceToken;
    const/4 v4, 0x0

    if-eqz v3, :cond_2

    .line 5189
    iget-object v5, v3, Lcom/android/server/am/ActivityManagerService$ImportanceToken;->token:Landroid/os/IBinder;

    invoke-interface {v5, v3, v4}, Landroid/os/IBinder;->unlinkToDeath(Landroid/os/IBinder$DeathRecipient;I)Z

    .line 5190
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mImportantProcesses:Landroid/util/SparseArray;

    invoke-virtual {v5, p2}, Landroid/util/SparseArray;->remove(I)V

    .line 5191
    if-eqz v1, :cond_1

    .line 5192
    iget-object v5, v1, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    const/4 v6, 0x0

    invoke-virtual {v5, v6}, Lcom/android/server/am/ProcessStateRecord;->setForcingToImportant(Ljava/lang/Object;)V

    .line 5194
    :cond_1
    const/4 v0, 0x1

    .line 5196
    :cond_2
    if-eqz p3, :cond_3

    if-eqz p1, :cond_3

    .line 5197
    new-instance v5, Lcom/android/server/am/ActivityManagerService$10;

    invoke-direct {v5, p0, p2, p1, p4}, Lcom/android/server/am/ActivityManagerService$10;-><init>(Lcom/android/server/am/ActivityManagerService;ILandroid/os/IBinder;Ljava/lang/String;)V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 5204
    .local v5, "newToken":Lcom/android/server/am/ActivityManagerService$ImportanceToken;
    :try_start_4
    invoke-interface {p1, v5, v4}, Landroid/os/IBinder;->linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V

    .line 5205
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mImportantProcesses:Landroid/util/SparseArray;

    invoke-virtual {v4, p2, v5}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 5206
    iget-object v4, v1, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    invoke-virtual {v4, v5}, Lcom/android/server/am/ProcessStateRecord;->setForcingToImportant(Ljava/lang/Object;)V
    :try_end_4
    .catch Landroid/os/RemoteException; {:try_start_4 .. :try_end_4} :catch_0
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    .line 5207
    const/4 v0, 0x1

    .line 5211
    goto :goto_0

    .line 5208
    :catch_0
    move-exception v4

    .line 5213
    .end local v3    # "oldToken":Lcom/android/server/am/ActivityManagerService$ImportanceToken;
    .end local v5    # "newToken":Lcom/android/server/am/ActivityManagerService$ImportanceToken;
    :cond_3
    :goto_0
    :try_start_5
    monitor-exit v2
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    .line 5215
    if-eqz v0, :cond_4

    .line 5216
    :try_start_6
    const-string/jumbo v2, "updateOomAdj_uiVisibility"

    invoke-virtual {p0, v1, v2}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;)Z

    .line 5218
    .end local v0    # "changed":Z
    .end local v1    # "pr":Lcom/android/server/am/ProcessRecord;
    :cond_4
    monitor-exit p0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 5219
    return-void

    .line 5213
    .restart local v0    # "changed":Z
    .restart local v1    # "pr":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v3

    :try_start_7
    monitor-exit v2
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_0

    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "token":Landroid/os/IBinder;
    .end local p2    # "pid":I
    .end local p3    # "isForeground":Z
    .end local p4    # "reason":Ljava/lang/String;
    :try_start_8
    throw v3

    .line 5218
    .end local v0    # "changed":Z
    .end local v1    # "pr":Lcom/android/server/am/ProcessRecord;
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "token":Landroid/os/IBinder;
    .restart local p2    # "pid":I
    .restart local p3    # "isForeground":Z
    .restart local p4    # "reason":Ljava/lang/String;
    :catchall_1
    move-exception v0

    monitor-exit p0
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public setProcessLimit(I)V
    .locals 2
    .param p1, "max"    # I

    .line 5137
    const-string v0, "android.permission.SET_PROCESS_LIMIT"

    const-string/jumbo v1, "setProcessLimit()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 5139
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 5140
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    invoke-virtual {v0, p1}, Lcom/android/server/am/ActivityManagerConstants;->setOverrideMaxCachedProcesses(I)V

    .line 5141
    const/4 v0, 0x1

    const-string/jumbo v1, "updateOomAdj_processEnd"

    invoke-direct {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->trimApplicationsLocked(ZLjava/lang/String;)V

    .line 5142
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 5143
    return-void

    .line 5142
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public setProcessMemoryTrimLevel(Ljava/lang/String;II)Z
    .locals 4
    .param p1, "process"    # Ljava/lang/String;
    .param p2, "userId"    # I
    .param p3, "level"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .line 2824
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->isCallerShell()Z

    move-result v0

    if-eqz v0, :cond_5

    .line 2827
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 2828
    const-string/jumbo v0, "setProcessMemoryTrimLevel"

    invoke-direct {p0, p1, p2, v0}, Lcom/android/server/am/ActivityManagerService;->findProcessLOSP(Ljava/lang/String;ILjava/lang/String;)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    .line 2829
    .local v0, "app":Lcom/android/server/am/ProcessRecord;
    if-eqz v0, :cond_4

    .line 2832
    invoke-virtual {v0}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v1

    .line 2833
    .local v1, "thread":Landroid/app/IApplicationThread;
    if-eqz v1, :cond_3

    .line 2836
    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->mProfile:Lcom/android/server/am/ProcessProfileRecord;

    invoke-virtual {v2}, Lcom/android/server/am/ProcessProfileRecord;->getTrimMemoryLevel()I

    move-result v2

    if-ge v2, p3, :cond_2

    .line 2840
    const/16 v2, 0x14

    if-lt p3, v2, :cond_1

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    .line 2841
    invoke-virtual {v2}, Lcom/android/server/am/ProcessStateRecord;->getCurProcState()I

    move-result v2

    const/4 v3, 0x6

    if-le v2, v3, :cond_0

    goto :goto_0

    .line 2842
    :cond_0
    new-instance v2, Ljava/lang/IllegalArgumentException;

    const-string v3, "Unable to set a background trim level on a foreground process"

    invoke-direct {v2, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "process":Ljava/lang/String;
    .end local p2    # "userId":I
    .end local p3    # "level":I
    throw v2

    .line 2845
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "process":Ljava/lang/String;
    .restart local p2    # "userId":I
    .restart local p3    # "level":I
    :cond_1
    :goto_0
    invoke-interface {v1, p3}, Landroid/app/IApplicationThread;->scheduleTrimMemory(I)V

    .line 2846
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 2847
    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->mProfile:Lcom/android/server/am/ProcessProfileRecord;

    invoke-virtual {v3, p3}, Lcom/android/server/am/ProcessProfileRecord;->setTrimMemoryLevel(I)V

    .line 2848
    monitor-exit v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 2849
    const/4 v2, 0x1

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v2

    .line 2848
    :catchall_0
    move-exception v3

    :try_start_3
    monitor-exit v2
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "process":Ljava/lang/String;
    .end local p2    # "userId":I
    .end local p3    # "level":I
    throw v3

    .line 2837
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "process":Ljava/lang/String;
    .restart local p2    # "userId":I
    .restart local p3    # "level":I
    :cond_2
    new-instance v2, Ljava/lang/IllegalArgumentException;

    const-string v3, "Unable to set a higher trim level than current level"

    invoke-direct {v2, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "process":Ljava/lang/String;
    .end local p2    # "userId":I
    .end local p3    # "level":I
    throw v2

    .line 2834
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "process":Ljava/lang/String;
    .restart local p2    # "userId":I
    .restart local p3    # "level":I
    :cond_3
    new-instance v2, Ljava/lang/IllegalArgumentException;

    const-string v3, "Process has no app thread"

    invoke-direct {v2, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "process":Ljava/lang/String;
    .end local p2    # "userId":I
    .end local p3    # "level":I
    throw v2

    .line 2830
    .end local v1    # "thread":Landroid/app/IApplicationThread;
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "process":Ljava/lang/String;
    .restart local p2    # "userId":I
    .restart local p3    # "level":I
    :cond_4
    new-instance v1, Ljava/lang/IllegalArgumentException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Unknown process: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "process":Ljava/lang/String;
    .end local p2    # "userId":I
    .end local p3    # "level":I
    throw v1

    .line 2850
    .end local v0    # "app":Lcom/android/server/am/ProcessRecord;
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "process":Ljava/lang/String;
    .restart local p2    # "userId":I
    .restart local p3    # "level":I
    :catchall_1
    move-exception v0

    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 2825
    :cond_5
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Only shell can call it"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public setProcessStateSummary([B)V
    .locals 3
    .param p1, "state"    # [B

    .line 8510
    if-eqz p1, :cond_1

    array-length v0, p1

    const/16 v1, 0x80

    if-gt v0, v1, :cond_0

    goto :goto_0

    .line 8511
    :cond_0
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "Data size is too large"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 8513
    :cond_1
    :goto_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    iget-object v0, v0, Lcom/android/server/am/ProcessList;->mAppExitInfoTracker:Lcom/android/server/am/AppExitInfoTracker;

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    .line 8514
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    .line 8513
    invoke-virtual {v0, v1, v2, p1}, Lcom/android/server/am/AppExitInfoTracker;->setProcessStateSummary(II[B)V

    .line 8515
    return-void
.end method

.method final setProcessTrackerStateLOSP(Lcom/android/server/am/ProcessRecord;IJ)V
    .locals 2
    .param p1, "proc"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "memFactor"    # I
    .param p3, "now"    # J

    .line 14419
    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v0

    if-eqz v0, :cond_0

    .line 14420
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->mProfile:Lcom/android/server/am/ProcessProfileRecord;

    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    .line 14421
    invoke-virtual {v1}, Lcom/android/server/am/ProcessStateRecord;->getReportedProcState()I

    move-result v1

    .line 14420
    invoke-virtual {v0, v1, p2, p3, p4}, Lcom/android/server/am/ProcessProfileRecord;->setProcessTrackerState(IIJ)V

    .line 14423
    :cond_0
    return-void
.end method

.method setProfileApp(Landroid/content/pm/ApplicationInfo;Ljava/lang/String;Landroid/app/ProfilerInfo;)V
    .locals 6
    .param p1, "app"    # Landroid/content/pm/ApplicationInfo;
    .param p2, "processName"    # Ljava/lang/String;
    .param p3, "profilerInfo"    # Landroid/app/ProfilerInfo;

    .line 6459
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    iget-object v0, v0, Lcom/android/server/am/AppProfiler;->mProfilerLock:Ljava/lang/Object;

    monitor-enter v0

    .line 6460
    :try_start_0
    sget-boolean v1, Landroid/os/Build;->IS_DEBUGGABLE:Z

    if-nez v1, :cond_2

    .line 6461
    iget v1, p1, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v1, v1, 0x2

    if-eqz v1, :cond_0

    const/4 v1, 0x1

    goto :goto_0

    :cond_0
    const/4 v1, 0x0

    .line 6462
    .local v1, "isAppDebuggable":Z
    :goto_0
    invoke-virtual {p1}, Landroid/content/pm/ApplicationInfo;->isProfileableByShell()Z

    move-result v2

    .line 6463
    .local v2, "isAppProfileable":Z
    if-nez v1, :cond_2

    if-eqz v2, :cond_1

    goto :goto_1

    .line 6464
    :cond_1
    new-instance v3, Ljava/lang/SecurityException;

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Process not debuggable, and not profileable by shell: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v5, p1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-direct {v3, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "app":Landroid/content/pm/ApplicationInfo;
    .end local p2    # "processName":Ljava/lang/String;
    .end local p3    # "profilerInfo":Landroid/app/ProfilerInfo;
    throw v3

    .line 6468
    .end local v1    # "isAppDebuggable":Z
    .end local v2    # "isAppProfileable":Z
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "app":Landroid/content/pm/ApplicationInfo;
    .restart local p2    # "processName":Ljava/lang/String;
    .restart local p3    # "profilerInfo":Landroid/app/ProfilerInfo;
    :cond_2
    :goto_1
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    invoke-virtual {v1, p2, p3}, Lcom/android/server/am/AppProfiler;->setProfileAppLPf(Ljava/lang/String;Landroid/app/ProfilerInfo;)V

    .line 6469
    monitor-exit v0

    .line 6470
    return-void

    .line 6469
    :catchall_0
    move-exception v1

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method public setRenderThread(I)V
    .locals 6
    .param p1, "tid"    # I

    .line 6858
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 6860
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    .line 6861
    .local v1, "pid":I
    invoke-static {}, Landroid/os/Process;->myPid()I

    move-result v2

    if-ne v1, v2, :cond_0

    .line 6862
    invoke-direct {p0, p1}, Lcom/android/server/am/ActivityManagerService;->demoteSystemServerRenderThread(I)V

    .line 6863
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    return-void

    .line 6865
    :cond_0
    :try_start_1
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    monitor-enter v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 6866
    :try_start_2
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-virtual {v3, v1}, Lcom/android/server/am/ActivityManagerService$PidMap;->get(I)Lcom/android/server/am/ProcessRecord;

    move-result-object v3

    .line 6867
    .local v3, "proc":Lcom/android/server/am/ProcessRecord;
    monitor-exit v2
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 6868
    if-eqz v3, :cond_3

    :try_start_3
    invoke-virtual {v3}, Lcom/android/server/am/ProcessRecord;->getRenderThreadTid()I

    move-result v2

    if-nez v2, :cond_3

    if-lez p1, :cond_3

    .line 6870
    invoke-static {v1, p1}, Landroid/os/Process;->isThreadInProcess(II)Z

    move-result v2

    if-eqz v2, :cond_2

    .line 6874
    invoke-virtual {v3, p1}, Lcom/android/server/am/ProcessRecord;->setRenderThreadTid(I)V

    .line 6879
    iget-object v2, v3, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    invoke-virtual {v2}, Lcom/android/server/am/ProcessStateRecord;->getCurrentSchedulingGroup()I

    move-result v2

    const/4 v4, 0x3

    if-ne v2, v4, :cond_3

    .line 6881
    iget-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mUseFifoUiScheduling:Z

    if-eqz v2, :cond_1

    .line 6882
    invoke-virtual {v3}, Lcom/android/server/am/ProcessRecord;->getRenderThreadTid()I

    move-result v2

    const v4, 0x40000001    # 2.0000002f

    const/4 v5, 0x1

    invoke-static {v2, v4, v5}, Landroid/os/Process;->setThreadScheduler(III)V

    goto :goto_0

    .line 6885
    :cond_1
    invoke-virtual {v3}, Lcom/android/server/am/ProcessRecord;->getRenderThreadTid()I

    move-result v2

    const/16 v4, -0xa

    invoke-static {v2, v4}, Landroid/os/Process;->setThreadPriority(II)V

    goto :goto_0

    .line 6871
    :cond_2
    new-instance v2, Ljava/lang/IllegalArgumentException;

    const-string v4, "Render thread does not belong to process"

    invoke-direct {v2, v4}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "tid":I
    throw v2

    .line 6894
    .end local v1    # "pid":I
    .end local v3    # "proc":Lcom/android/server/am/ProcessRecord;
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "tid":I
    :cond_3
    :goto_0
    monitor-exit v0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 6895
    return-void

    .line 6867
    .restart local v1    # "pid":I
    :catchall_0
    move-exception v3

    :try_start_4
    monitor-exit v2
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "tid":I
    :try_start_5
    throw v3

    .line 6894
    .end local v1    # "pid":I
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "tid":I
    :catchall_1
    move-exception v1

    monitor-exit v0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v1
.end method

.method public setRequestedOrientation(Landroid/os/IBinder;I)V
    .locals 1
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "requestedOrientation"    # I

    .line 2963
    invoke-static {}, Landroid/app/ActivityClient;->getInstance()Landroid/app/ActivityClient;

    move-result-object v0

    invoke-virtual {v0, p1, p2}, Landroid/app/ActivityClient;->setRequestedOrientation(Landroid/os/IBinder;I)V

    .line 2964
    return-void
.end method

.method public setServiceForeground(Landroid/content/ComponentName;Landroid/os/IBinder;ILandroid/app/Notification;II)V
    .locals 7
    .param p1, "className"    # Landroid/content/ComponentName;
    .param p2, "token"    # Landroid/os/IBinder;
    .param p3, "id"    # I
    .param p4, "notification"    # Landroid/app/Notification;
    .param p5, "flags"    # I
    .param p6, "foregroundServiceType"    # I

    .line 11890
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 11891
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    move-object v1, p1

    move-object v2, p2

    move v3, p3

    move-object v4, p4

    move v5, p5

    move v6, p6

    invoke-virtual/range {v0 .. v6}, Lcom/android/server/am/ActiveServices;->setServiceForegroundLocked(Landroid/content/ComponentName;Landroid/os/IBinder;ILandroid/app/Notification;II)V

    .line 11893
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 11894
    return-void

    .line 11893
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method setServiceRestartBackoffEnabled(Ljava/lang/String;ZLjava/lang/String;)V
    .locals 1
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "enable"    # Z
    .param p3, "reason"    # Ljava/lang/String;

    .line 8589
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 8590
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/server/am/ActiveServices;->setServiceRestartBackoffEnabledLocked(Ljava/lang/String;ZLjava/lang/String;)V

    .line 8591
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 8592
    return-void

    .line 8591
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public setSystemProcess()V
    .locals 11

    .line 1786
    :try_start_0
    const-string v0, "activity"

    const/16 v1, 0x15

    const/4 v2, 0x1

    invoke-static {v0, p0, v2, v1}, Landroid/os/ServiceManager;->addService(Ljava/lang/String;Landroid/os/IBinder;ZI)V

    .line 1788
    const-string/jumbo v0, "procstats"

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    invoke-static {v0, v1}, Landroid/os/ServiceManager;->addService(Ljava/lang/String;Landroid/os/IBinder;)V

    .line 1789
    const-string/jumbo v0, "meminfo"

    new-instance v1, Lcom/android/server/am/ActivityManagerService$MemBinder;

    invoke-direct {v1, p0}, Lcom/android/server/am/ActivityManagerService$MemBinder;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    const/4 v3, 0x2

    const/4 v4, 0x0

    invoke-static {v0, v1, v4, v3}, Landroid/os/ServiceManager;->addService(Ljava/lang/String;Landroid/os/IBinder;ZI)V

    .line 1791
    const-string v0, "gfxinfo"

    new-instance v1, Lcom/android/server/am/ActivityManagerService$GraphicsBinder;

    invoke-direct {v1, p0}, Lcom/android/server/am/ActivityManagerService$GraphicsBinder;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    invoke-static {v0, v1}, Landroid/os/ServiceManager;->addService(Ljava/lang/String;Landroid/os/IBinder;)V

    .line 1792
    const-string v0, "dbinfo"

    new-instance v1, Lcom/android/server/am/ActivityManagerService$DbBinder;

    invoke-direct {v1, p0}, Lcom/android/server/am/ActivityManagerService$DbBinder;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    invoke-static {v0, v1}, Landroid/os/ServiceManager;->addService(Ljava/lang/String;Landroid/os/IBinder;)V

    .line 1793
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    invoke-virtual {v0}, Lcom/android/server/am/AppProfiler;->setCpuInfoService()V

    .line 1794
    const-string/jumbo v0, "permission"

    new-instance v1, Lcom/android/server/am/ActivityManagerService$PermissionController;

    invoke-direct {v1, p0}, Lcom/android/server/am/ActivityManagerService$PermissionController;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    invoke-static {v0, v1}, Landroid/os/ServiceManager;->addService(Ljava/lang/String;Landroid/os/IBinder;)V

    .line 1795
    const-string/jumbo v0, "processinfo"

    new-instance v1, Lcom/android/server/am/ActivityManagerService$ProcessInfoService;

    invoke-direct {v1, p0}, Lcom/android/server/am/ActivityManagerService$ProcessInfoService;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    invoke-static {v0, v1}, Landroid/os/ServiceManager;->addService(Ljava/lang/String;Landroid/os/IBinder;)V

    .line 1796
    const-string v0, "cacheinfo"

    new-instance v1, Lcom/android/server/am/ActivityManagerService$CacheBinder;

    invoke-direct {v1, p0}, Lcom/android/server/am/ActivityManagerService$CacheBinder;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    invoke-static {v0, v1}, Landroid/os/ServiceManager;->addService(Ljava/lang/String;Landroid/os/IBinder;)V

    .line 1798
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v0}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v0

    const-string v1, "android"

    const v3, 0x100400

    invoke-virtual {v0, v1, v3}, Landroid/content/pm/PackageManager;->getApplicationInfo(Ljava/lang/String;I)Landroid/content/pm/ApplicationInfo;

    move-result-object v0

    .line 1800
    .local v0, "info":Landroid/content/pm/ApplicationInfo;
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mSystemThread:Landroid/app/ActivityThread;

    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/Class;->getClassLoader()Ljava/lang/ClassLoader;

    move-result-object v3

    invoke-virtual {v1, v0, v3}, Landroid/app/ActivityThread;->installSystemApplicationInfo(Landroid/content/pm/ApplicationInfo;Ljava/lang/ClassLoader;)V

    .line 1802
    monitor-enter p0
    :try_end_0
    .catch Landroid/content/pm/PackageManager$NameNotFoundException; {:try_start_0 .. :try_end_0} :catch_0

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 1803
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    iget-object v7, v0, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    const/4 v8, 0x0

    const/4 v9, 0x0

    new-instance v10, Lcom/android/server/am/HostingRecord;

    const-string/jumbo v1, "system"

    invoke-direct {v10, v1}, Lcom/android/server/am/HostingRecord;-><init>(Ljava/lang/String;)V

    move-object v6, v0

    invoke-virtual/range {v5 .. v10}, Lcom/android/server/am/ProcessList;->newProcessRecordLocked(Landroid/content/pm/ApplicationInfo;Ljava/lang/String;ZILcom/android/server/am/HostingRecord;)Lcom/android/server/am/ProcessRecord;

    move-result-object v1

    .line 1807
    .local v1, "app":Lcom/android/server/am/ProcessRecord;
    invoke-virtual {v1, v2}, Lcom/android/server/am/ProcessRecord;->setPersistent(Z)V

    .line 1808
    sget v3, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    invoke-virtual {v1, v3}, Lcom/android/server/am/ProcessRecord;->setPid(I)V

    .line 1809
    iget-object v3, v1, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    const/16 v5, -0x384

    invoke-virtual {v3, v5}, Lcom/android/server/am/ProcessStateRecord;->setMaxAdj(I)V

    .line 1810
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mSystemThread:Landroid/app/ActivityThread;

    invoke-virtual {v3}, Landroid/app/ActivityThread;->getApplicationThread()Landroid/app/ActivityThread$ApplicationThread;

    move-result-object v3

    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    invoke-virtual {v1, v3, v5}, Lcom/android/server/am/ProcessRecord;->makeActive(Landroid/app/IApplicationThread;Lcom/android/server/am/ProcessStatsService;)V

    .line 1811
    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->addPidLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 1812
    const/4 v3, 0x0

    invoke-virtual {p0, v1, v4, v3}, Lcom/android/server/am/ActivityManagerService;->updateLruProcessLocked(Lcom/android/server/am/ProcessRecord;ZLcom/android/server/am/ProcessRecord;)V

    .line 1813
    const-string/jumbo v5, "updateOomAdj_meh"

    invoke-virtual {p0, v5}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked(Ljava/lang/String;)V

    .line 1814
    .end local v1    # "app":Lcom/android/server/am/ProcessRecord;
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V
    :try_end_2
    .catch Landroid/content/pm/PackageManager$NameNotFoundException; {:try_start_2 .. :try_end_2} :catch_0

    .line 1818
    .end local v0    # "info":Landroid/content/pm/ApplicationInfo;
    nop

    .line 1821
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/appop/AppOpsService;

    const/16 v1, 0x3f

    new-instance v5, Lcom/android/server/am/ActivityManagerService$4;

    invoke-direct {v5, p0}, Lcom/android/server/am/ActivityManagerService$4;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    invoke-virtual {v0, v1, v3, v5}, Lcom/android/server/appop/AppOpsService;->startWatchingMode(ILjava/lang/String;Lcom/android/internal/app/IAppOpsCallback;)V

    .line 1833
    new-array v0, v2, [I

    const/16 v1, 0x1a

    aput v1, v0, v4

    .line 1834
    .local v0, "cameraOp":[I
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/appop/AppOpsService;

    new-instance v2, Lcom/android/server/am/ActivityManagerService$5;

    invoke-direct {v2, p0}, Lcom/android/server/am/ActivityManagerService$5;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    invoke-virtual {v1, v0, v2}, Lcom/android/server/appop/AppOpsService;->startWatchingActive([ILcom/android/internal/app/IAppOpsActiveCallback;)V

    .line 1842
    return-void

    .line 1814
    .local v0, "info":Landroid/content/pm/ApplicationInfo;
    :catchall_0
    move-exception v1

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    throw v1
    :try_end_4
    .catch Landroid/content/pm/PackageManager$NameNotFoundException; {:try_start_4 .. :try_end_4} :catch_0

    .line 1815
    .end local v0    # "info":Landroid/content/pm/ApplicationInfo;
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    :catch_0
    move-exception v0

    .line 1816
    .local v0, "e":Landroid/content/pm/PackageManager$NameNotFoundException;
    new-instance v1, Ljava/lang/RuntimeException;

    const-string v2, "Unable to find android system package"

    invoke-direct {v1, v2, v0}, Ljava/lang/RuntimeException;-><init>(Ljava/lang/String;Ljava/lang/Throwable;)V

    throw v1
.end method

.method public setSystemServiceManager(Lcom/android/server/SystemServiceManager;)V
    .locals 0
    .param p1, "mgr"    # Lcom/android/server/SystemServiceManager;

    .line 2350
    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mSystemServiceManager:Lcom/android/server/SystemServiceManager;

    .line 2351
    return-void
.end method

.method public setTaskResizeable(II)V
    .locals 1
    .param p1, "taskId"    # I
    .param p2, "resizeableMode"    # I

    .line 5816
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/wm/ActivityTaskManagerService;->setTaskResizeable(II)V

    .line 5817
    return-void
.end method

.method setTrackAllocationApp(Landroid/content/pm/ApplicationInfo;Ljava/lang/String;)V
    .locals 3
    .param p1, "app"    # Landroid/content/pm/ApplicationInfo;
    .param p2, "processName"    # Ljava/lang/String;

    .line 6447
    sget-boolean v0, Landroid/os/Build;->IS_DEBUGGABLE:Z

    if-nez v0, :cond_1

    .line 6448
    iget v0, p1, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v0, v0, 0x2

    if-eqz v0, :cond_0

    goto :goto_0

    .line 6449
    :cond_0
    new-instance v0, Ljava/lang/SecurityException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Process not debuggable: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, p1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 6453
    :cond_1
    :goto_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 6454
    iput-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mTrackAllocationApp:Ljava/lang/String;

    .line 6455
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 6456
    return-void

    .line 6455
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v1
.end method

.method final setUidTempAllowlistStateLSP(IZ)V
    .locals 1
    .param p1, "uid"    # I
    .param p2, "onAllowlist"    # Z

    .line 14788
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mOomAdjuster:Lcom/android/server/am/OomAdjuster;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/am/OomAdjuster;->setUidTempAllowlistStateLSP(IZ)V

    .line 14789
    return-void
.end method

.method public setUsageStatsManager(Landroid/app/usage/UsageStatsManagerInternal;)V
    .locals 1
    .param p1, "usageStatsManager"    # Landroid/app/usage/UsageStatsManagerInternal;

    .line 1856
    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    .line 1857
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {v0, p1}, Lcom/android/server/wm/ActivityTaskManagerService;->setUsageStatsManager(Landroid/app/usage/UsageStatsManagerInternal;)V

    .line 1858
    return-void
.end method

.method public setUserIsMonkey(Z)V
    .locals 7
    .param p1, "userIsMonkey"    # Z

    .line 6510
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 6511
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    monitor-enter v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 6512
    :try_start_1
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    .line 6513
    .local v2, "callingPid":I
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-virtual {v3, v2}, Lcom/android/server/am/ActivityManagerService$PidMap;->get(I)Lcom/android/server/am/ProcessRecord;

    move-result-object v3

    .line 6514
    .local v3, "proc":Lcom/android/server/am/ProcessRecord;
    if-eqz v3, :cond_1

    .line 6517
    invoke-virtual {v3}, Lcom/android/server/am/ProcessRecord;->getActiveInstrumentation()Lcom/android/server/am/ActiveInstrumentation;

    move-result-object v4

    if-eqz v4, :cond_0

    .line 6518
    invoke-virtual {v3}, Lcom/android/server/am/ProcessRecord;->getActiveInstrumentation()Lcom/android/server/am/ActiveInstrumentation;

    move-result-object v4

    iget-object v4, v4, Lcom/android/server/am/ActiveInstrumentation;->mUiAutomationConnection:Landroid/app/IUiAutomationConnection;

    if-eqz v4, :cond_0

    .line 6522
    .end local v2    # "callingPid":I
    .end local v3    # "proc":Lcom/android/server/am/ProcessRecord;
    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 6523
    :try_start_2
    iput-boolean p1, p0, Lcom/android/server/am/ActivityManagerService;->mUserIsMonkey:Z

    .line 6524
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 6525
    return-void

    .line 6519
    .restart local v2    # "callingPid":I
    .restart local v3    # "proc":Lcom/android/server/am/ProcessRecord;
    :cond_0
    :try_start_3
    new-instance v4, Ljava/lang/SecurityException;

    const-string v5, "Only an instrumentation process with a UiAutomation can call setUserIsMonkey"

    invoke-direct {v4, v5}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "userIsMonkey":Z
    throw v4

    .line 6515
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "userIsMonkey":Z
    :cond_1
    new-instance v4, Ljava/lang/SecurityException;

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Unknown process: "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-direct {v4, v5}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "userIsMonkey":Z
    throw v4

    .line 6522
    .end local v2    # "callingPid":I
    .end local v3    # "proc":Lcom/android/server/am/ProcessRecord;
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "userIsMonkey":Z
    :catchall_0
    move-exception v2

    monitor-exit v1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "userIsMonkey":Z
    :try_start_4
    throw v2

    .line 6524
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "userIsMonkey":Z
    :catchall_1
    move-exception v1

    monitor-exit v0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v1
.end method

.method public setWindowManager(Lcom/android/server/wm/WindowManagerService;)V
    .locals 1
    .param p1, "wm"    # Lcom/android/server/wm/WindowManagerService;

    .line 1845
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 1846
    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    .line 1847
    const-class v0, Lcom/android/server/wm/WindowManagerInternal;

    invoke-static {v0}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/WindowManagerInternal;

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mWmInternal:Lcom/android/server/wm/WindowManagerInternal;

    .line 1848
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {v0, p1}, Lcom/android/server/wm/ActivityTaskManagerService;->setWindowManager(Lcom/android/server/wm/WindowManagerService;)V

    .line 1849
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 1850
    return-void

    .line 1849
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public showBootMessage(Ljava/lang/CharSequence;Z)V
    .locals 2
    .param p1, "msg"    # Ljava/lang/CharSequence;
    .param p2, "always"    # Z

    .line 4660
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    invoke-static {}, Landroid/os/Process;->myUid()I

    move-result v1

    if-ne v0, v1, :cond_0

    .line 4663
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/wm/WindowManagerService;->showBootMessage(Ljava/lang/CharSequence;Z)V

    .line 4664
    return-void

    .line 4661
    :cond_0
    new-instance v0, Ljava/lang/SecurityException;

    invoke-direct {v0}, Ljava/lang/SecurityException;-><init>()V

    throw v0
.end method

.method public final showSafeModeOverlay()V
    .locals 4

    .line 6981
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-static {v0}, Landroid/view/LayoutInflater;->from(Landroid/content/Context;)Landroid/view/LayoutInflater;

    move-result-object v0

    const v1, 0x10900f7

    const/4 v2, 0x0

    invoke-virtual {v0, v1, v2}, Landroid/view/LayoutInflater;->inflate(ILandroid/view/ViewGroup;)Landroid/view/View;

    move-result-object v0

    .line 6983
    .local v0, "v":Landroid/view/View;
    new-instance v1, Landroid/view/WindowManager$LayoutParams;

    invoke-direct {v1}, Landroid/view/WindowManager$LayoutParams;-><init>()V

    .line 6984
    .local v1, "lp":Landroid/view/WindowManager$LayoutParams;
    const/16 v2, 0x7df

    iput v2, v1, Landroid/view/WindowManager$LayoutParams;->type:I

    .line 6985
    const/4 v2, -0x2

    iput v2, v1, Landroid/view/WindowManager$LayoutParams;->width:I

    .line 6986
    iput v2, v1, Landroid/view/WindowManager$LayoutParams;->height:I

    .line 6987
    const v2, 0x800053

    iput v2, v1, Landroid/view/WindowManager$LayoutParams;->gravity:I

    .line 6988
    invoke-virtual {v0}, Landroid/view/View;->getBackground()Landroid/graphics/drawable/Drawable;

    move-result-object v2

    invoke-virtual {v2}, Landroid/graphics/drawable/Drawable;->getOpacity()I

    move-result v2

    iput v2, v1, Landroid/view/WindowManager$LayoutParams;->format:I

    .line 6989
    const/16 v2, 0x18

    iput v2, v1, Landroid/view/WindowManager$LayoutParams;->flags:I

    .line 6991
    iget v2, v1, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    or-int/lit8 v2, v2, 0x10

    iput v2, v1, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    .line 6992
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    const-string/jumbo v3, "window"

    invoke-virtual {v2, v3}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/view/WindowManager;

    .line 6993
    invoke-interface {v2, v0, v1}, Landroid/view/WindowManager;->addView(Landroid/view/View;Landroid/view/ViewGroup$LayoutParams;)V

    .line 6994
    return-void
.end method

.method public showWaitingForDebugger(Landroid/app/IApplicationThread;Z)V
    .locals 4
    .param p1, "who"    # Landroid/app/IApplicationThread;
    .param p2, "waiting"    # Z

    .line 5783
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 5784
    if-eqz p1, :cond_0

    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLOSP(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;

    move-result-object v1

    goto :goto_0

    :cond_0
    const/4 v1, 0x0

    .line 5785
    .local v1, "app":Lcom/android/server/am/ProcessRecord;
    :goto_0
    if-nez v1, :cond_1

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    return-void

    .line 5787
    :cond_1
    :try_start_1
    invoke-static {}, Landroid/os/Message;->obtain()Landroid/os/Message;

    move-result-object v2

    .line 5788
    .local v2, "msg":Landroid/os/Message;
    const/4 v3, 0x6

    iput v3, v2, Landroid/os/Message;->what:I

    .line 5789
    iput-object v1, v2, Landroid/os/Message;->obj:Ljava/lang/Object;

    .line 5790
    if-eqz p2, :cond_2

    const/4 v3, 0x1

    goto :goto_1

    :cond_2
    const/4 v3, 0x0

    :goto_1
    iput v3, v2, Landroid/os/Message;->arg1:I

    .line 5791
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mUiHandler:Landroid/os/Handler;

    invoke-virtual {v3, v2}, Landroid/os/Handler;->sendMessage(Landroid/os/Message;)Z

    .line 5792
    nop

    .end local v1    # "app":Lcom/android/server/am/ProcessRecord;
    .end local v2    # "msg":Landroid/os/Message;
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 5793
    return-void

    .line 5792
    :catchall_0
    move-exception v1

    :try_start_2
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v1
.end method

.method public shutdown(I)Z
    .locals 2
    .param p1, "timeout"    # I

    .line 6343
    const-string v0, "android.permission.SHUTDOWN"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_1

    .line 6349
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    iget-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mBooted:Z

    invoke-virtual {v0, v1, p1}, Lcom/android/server/wm/ActivityTaskManagerInternal;->shuttingDown(ZI)Z

    move-result v0

    .line 6351
    .local v0, "timedout":Z
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/appop/AppOpsService;

    invoke-virtual {v1}, Lcom/android/server/appop/AppOpsService;->shutdown()V

    .line 6352
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    if-eqz v1, :cond_0

    .line 6353
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    invoke-virtual {v1}, Landroid/app/usage/UsageStatsManagerInternal;->prepareShutdown()V

    .line 6355
    :cond_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v1}, Lcom/android/server/am/BatteryStatsService;->shutdown()V

    .line 6356
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    invoke-virtual {v1}, Lcom/android/server/am/ProcessStatsService;->shutdown()V

    .line 6358
    return v0

    .line 6345
    .end local v0    # "timedout":Z
    :cond_1
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires permission android.permission.SHUTDOWN"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public signalPersistentProcesses(I)V
    .locals 4
    .param p1, "sig"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .line 14849
    const/16 v0, 0xa

    if-ne p1, v0, :cond_1

    .line 14853
    const-string v0, "android.permission.SIGNAL_PERSISTENT_PROCESSES"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_0

    .line 14859
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 14860
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    const/4 v2, 0x0

    new-instance v3, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda19;

    invoke-direct {v3, p1}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda19;-><init>(I)V

    invoke-virtual {v1, v2, v3}, Lcom/android/server/am/ProcessList;->forEachLruProcessesLOSP(ZLjava/util/function/Consumer;)V

    .line 14865
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 14866
    return-void

    .line 14865
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v1

    .line 14855
    :cond_0
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires permission android.permission.SIGNAL_PERSISTENT_PROCESSES"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 14850
    :cond_1
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Only SIGNAL_USR1 is allowed"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method skipCurrentReceiverLocked(Lcom/android/server/am/ProcessRecord;)V
    .locals 4
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;

    .line 7805
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    array-length v1, v0

    const/4 v2, 0x0

    :goto_0
    if-ge v2, v1, :cond_0

    aget-object v3, v0, v2

    .line 7806
    .local v3, "queue":Lcom/android/server/am/BroadcastQueue;
    invoke-virtual {v3, p1}, Lcom/android/server/am/BroadcastQueue;->skipCurrentReceiverLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 7805
    .end local v3    # "queue":Lcom/android/server/am/BroadcastQueue;
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 7808
    :cond_0
    return-void
.end method

.method skipPendingBroadcastLocked(I)V
    .locals 4
    .param p1, "pid"    # I

    .line 12307
    const-string v0, "ActivityManager"

    const-string v1, "Unattached app died before broadcast acknowledged, skipping"

    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 12308
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    array-length v1, v0

    const/4 v2, 0x0

    :goto_0
    if-ge v2, v1, :cond_0

    aget-object v3, v0, v2

    .line 12309
    .local v3, "queue":Lcom/android/server/am/BroadcastQueue;
    invoke-virtual {v3, p1}, Lcom/android/server/am/BroadcastQueue;->skipPendingBroadcastLocked(I)V

    .line 12308
    .end local v3    # "queue":Lcom/android/server/am/BroadcastQueue;
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 12311
    :cond_0
    return-void
.end method

.method public startActivity(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;)I
    .locals 13
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .param p2, "callingPackage"    # Ljava/lang/String;
    .param p3, "intent"    # Landroid/content/Intent;
    .param p4, "resolvedType"    # Ljava/lang/String;
    .param p5, "resultTo"    # Landroid/os/IBinder;
    .param p6, "resultWho"    # Ljava/lang/String;
    .param p7, "requestCode"    # I
    .param p8, "startFlags"    # I
    .param p9, "profilerInfo"    # Landroid/app/ProfilerInfo;
    .param p10, "bOptions"    # Landroid/os/Bundle;
    .annotation runtime Ljava/lang/Deprecated;
    .end annotation

    .line 2895
    move-object v0, p0

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    const/4 v4, 0x0

    move-object v2, p1

    move-object v3, p2

    move-object/from16 v5, p3

    move-object/from16 v6, p4

    move-object/from16 v7, p5

    move-object/from16 v8, p6

    move/from16 v9, p7

    move/from16 v10, p8

    move-object/from16 v11, p9

    move-object/from16 v12, p10

    invoke-virtual/range {v1 .. v12}, Lcom/android/server/wm/ActivityTaskManagerService;->startActivity(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;)I

    move-result v1

    return v1
.end method

.method startActivityAndWait(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;I)Landroid/app/WaitResult;
    .locals 14
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .param p2, "callingPackage"    # Ljava/lang/String;
    .param p3, "callingFeatureId"    # Ljava/lang/String;
    .param p4, "intent"    # Landroid/content/Intent;
    .param p5, "resolvedType"    # Ljava/lang/String;
    .param p6, "resultTo"    # Landroid/os/IBinder;
    .param p7, "resultWho"    # Ljava/lang/String;
    .param p8, "requestCode"    # I
    .param p9, "startFlags"    # I
    .param p10, "profilerInfo"    # Landroid/app/ProfilerInfo;
    .param p11, "bOptions"    # Landroid/os/Bundle;
    .param p12, "userId"    # I

    .line 2934
    move-object v0, p0

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    move-object v2, p1

    move-object/from16 v3, p2

    move-object/from16 v4, p3

    move-object/from16 v5, p4

    move-object/from16 v6, p5

    move-object/from16 v7, p6

    move-object/from16 v8, p7

    move/from16 v9, p8

    move/from16 v10, p9

    move-object/from16 v11, p10

    move-object/from16 v12, p11

    move/from16 v13, p12

    invoke-virtual/range {v1 .. v13}, Lcom/android/server/wm/ActivityTaskManagerService;->startActivityAndWait(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;I)Landroid/app/WaitResult;

    move-result-object v1

    return-object v1
.end method

.method public final startActivityAsUser(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;I)I
    .locals 13
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .param p2, "callingPackage"    # Ljava/lang/String;
    .param p3, "intent"    # Landroid/content/Intent;
    .param p4, "resolvedType"    # Ljava/lang/String;
    .param p5, "resultTo"    # Landroid/os/IBinder;
    .param p6, "resultWho"    # Ljava/lang/String;
    .param p7, "requestCode"    # I
    .param p8, "startFlags"    # I
    .param p9, "profilerInfo"    # Landroid/app/ProfilerInfo;
    .param p10, "bOptions"    # Landroid/os/Bundle;
    .param p11, "userId"    # I
    .annotation runtime Ljava/lang/Deprecated;
    .end annotation

    .line 2916
    const/4 v3, 0x0

    move-object v0, p0

    move-object v1, p1

    move-object v2, p2

    move-object/from16 v4, p3

    move-object/from16 v5, p4

    move-object/from16 v6, p5

    move-object/from16 v7, p6

    move/from16 v8, p7

    move/from16 v9, p8

    move-object/from16 v10, p9

    move-object/from16 v11, p10

    move/from16 v12, p11

    invoke-virtual/range {v0 .. v12}, Lcom/android/server/am/ActivityManagerService;->startActivityAsUserWithFeature(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;I)I

    move-result v0

    return v0
.end method

.method public final startActivityAsUserWithFeature(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;I)I
    .locals 14
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .param p2, "callingPackage"    # Ljava/lang/String;
    .param p3, "callingFeatureId"    # Ljava/lang/String;
    .param p4, "intent"    # Landroid/content/Intent;
    .param p5, "resolvedType"    # Ljava/lang/String;
    .param p6, "resultTo"    # Landroid/os/IBinder;
    .param p7, "resultWho"    # Ljava/lang/String;
    .param p8, "requestCode"    # I
    .param p9, "startFlags"    # I
    .param p10, "profilerInfo"    # Landroid/app/ProfilerInfo;
    .param p11, "bOptions"    # Landroid/os/Bundle;
    .param p12, "userId"    # I

    .line 2925
    move-object v0, p0

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    move-object v2, p1

    move-object/from16 v3, p2

    move-object/from16 v4, p3

    move-object/from16 v5, p4

    move-object/from16 v6, p5

    move-object/from16 v7, p6

    move-object/from16 v8, p7

    move/from16 v9, p8

    move/from16 v10, p9

    move-object/from16 v11, p10

    move-object/from16 v12, p11

    move/from16 v13, p12

    invoke-virtual/range {v1 .. v13}, Lcom/android/server/wm/ActivityTaskManagerService;->startActivityAsUser(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;I)I

    move-result v1

    return v1
.end method

.method public final startActivityFromRecents(ILandroid/os/Bundle;)I
    .locals 1
    .param p1, "taskId"    # I
    .param p2, "bOptions"    # Landroid/os/Bundle;

    .line 2941
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/wm/ActivityTaskManagerService;->startActivityFromRecents(ILandroid/os/Bundle;)I

    move-result v0

    return v0
.end method

.method public startActivityWithFeature(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;)I
    .locals 13
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .param p2, "callingPackage"    # Ljava/lang/String;
    .param p3, "callingFeatureId"    # Ljava/lang/String;
    .param p4, "intent"    # Landroid/content/Intent;
    .param p5, "resolvedType"    # Ljava/lang/String;
    .param p6, "resultTo"    # Landroid/os/IBinder;
    .param p7, "resultWho"    # Ljava/lang/String;
    .param p8, "requestCode"    # I
    .param p9, "startFlags"    # I
    .param p10, "profilerInfo"    # Landroid/app/ProfilerInfo;
    .param p11, "bOptions"    # Landroid/os/Bundle;

    .line 2904
    move-object v0, p0

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    move-object v2, p1

    move-object v3, p2

    move-object/from16 v4, p3

    move-object/from16 v5, p4

    move-object/from16 v6, p5

    move-object/from16 v7, p6

    move-object/from16 v8, p7

    move/from16 v9, p8

    move/from16 v10, p9

    move-object/from16 v11, p10

    move-object/from16 v12, p11

    invoke-virtual/range {v1 .. v12}, Lcom/android/server/wm/ActivityTaskManagerService;->startActivity(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;)I

    move-result v1

    return v1
.end method

.method startAssociationLocked(ILjava/lang/String;IIJLandroid/content/ComponentName;Ljava/lang/String;)Lcom/android/server/am/ActivityManagerService$Association;
    .locals 16
    .param p1, "sourceUid"    # I
    .param p2, "sourceProcess"    # Ljava/lang/String;
    .param p3, "sourceState"    # I
    .param p4, "targetUid"    # I
    .param p5, "targetVersionCode"    # J
    .param p7, "targetComponent"    # Landroid/content/ComponentName;
    .param p8, "targetProcess"    # Ljava/lang/String;

    .line 14127
    move-object/from16 v0, p0

    move/from16 v7, p1

    move-object/from16 v8, p2

    move/from16 v9, p4

    move-object/from16 v10, p7

    iget-boolean v1, v0, Lcom/android/server/am/ActivityManagerService;->mTrackingAssociations:Z

    if-nez v1, :cond_0

    .line 14128
    const/4 v1, 0x0

    return-object v1

    .line 14130
    :cond_0
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mAssociations:Landroid/util/SparseArray;

    .line 14131
    invoke-virtual {v1, v9}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/util/ArrayMap;

    .line 14132
    .local v1, "components":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Landroid/content/ComponentName;Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;>;"
    if-nez v1, :cond_1

    .line 14133
    new-instance v2, Landroid/util/ArrayMap;

    invoke-direct {v2}, Landroid/util/ArrayMap;-><init>()V

    move-object v1, v2

    .line 14134
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mAssociations:Landroid/util/SparseArray;

    invoke-virtual {v2, v9, v1}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    move-object v11, v1

    goto :goto_0

    .line 14132
    :cond_1
    move-object v11, v1

    .line 14136
    .end local v1    # "components":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Landroid/content/ComponentName;Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;>;"
    .local v11, "components":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Landroid/content/ComponentName;Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;>;"
    :goto_0
    invoke-virtual {v11, v10}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/util/SparseArray;

    .line 14137
    .local v1, "sourceUids":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;"
    if-nez v1, :cond_2

    .line 14138
    new-instance v2, Landroid/util/SparseArray;

    invoke-direct {v2}, Landroid/util/SparseArray;-><init>()V

    move-object v1, v2

    .line 14139
    invoke-virtual {v11, v10, v1}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    move-object v12, v1

    goto :goto_1

    .line 14137
    :cond_2
    move-object v12, v1

    .line 14141
    .end local v1    # "sourceUids":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;"
    .local v12, "sourceUids":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;"
    :goto_1
    invoke-virtual {v12, v7}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/util/ArrayMap;

    .line 14142
    .local v1, "sourceProcesses":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;"
    if-nez v1, :cond_3

    .line 14143
    new-instance v2, Landroid/util/ArrayMap;

    invoke-direct {v2}, Landroid/util/ArrayMap;-><init>()V

    move-object v1, v2

    .line 14144
    invoke-virtual {v12, v7, v1}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    move-object v13, v1

    goto :goto_2

    .line 14142
    :cond_3
    move-object v13, v1

    .line 14146
    .end local v1    # "sourceProcesses":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;"
    .local v13, "sourceProcesses":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;"
    :goto_2
    invoke-virtual {v13, v8}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    move-object v14, v1

    check-cast v14, Lcom/android/server/am/ActivityManagerService$Association;

    .line 14147
    .local v14, "ass":Lcom/android/server/am/ActivityManagerService$Association;
    if-nez v14, :cond_4

    .line 14148
    new-instance v15, Lcom/android/server/am/ActivityManagerService$Association;

    move-object v1, v15

    move/from16 v2, p1

    move-object/from16 v3, p2

    move/from16 v4, p4

    move-object/from16 v5, p7

    move-object/from16 v6, p8

    invoke-direct/range {v1 .. v6}, Lcom/android/server/am/ActivityManagerService$Association;-><init>(ILjava/lang/String;ILandroid/content/ComponentName;Ljava/lang/String;)V

    move-object v14, v15

    .line 14150
    invoke-virtual {v13, v8, v14}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 14152
    :cond_4
    iget v1, v14, Lcom/android/server/am/ActivityManagerService$Association;->mCount:I

    const/4 v2, 0x1

    add-int/2addr v1, v2

    iput v1, v14, Lcom/android/server/am/ActivityManagerService$Association;->mCount:I

    .line 14153
    iget v1, v14, Lcom/android/server/am/ActivityManagerService$Association;->mNesting:I

    add-int/2addr v1, v2

    iput v1, v14, Lcom/android/server/am/ActivityManagerService$Association;->mNesting:I

    .line 14154
    iget v1, v14, Lcom/android/server/am/ActivityManagerService$Association;->mNesting:I

    if-ne v1, v2, :cond_5

    .line 14155
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v1

    iput-wide v1, v14, Lcom/android/server/am/ActivityManagerService$Association;->mLastStateUptime:J

    iput-wide v1, v14, Lcom/android/server/am/ActivityManagerService$Association;->mStartTime:J

    .line 14156
    move/from16 v1, p3

    iput v1, v14, Lcom/android/server/am/ActivityManagerService$Association;->mLastState:I

    goto :goto_3

    .line 14154
    :cond_5
    move/from16 v1, p3

    .line 14158
    :goto_3
    return-object v14
.end method

.method public startBinderTracking()Z
    .locals 4
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .line 15199
    const-string v0, "android.permission.SET_ACTIVITY_WATCHER"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_0

    .line 15205
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 15206
    const/4 v1, 0x1

    iput-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mBinderTransactionTrackingEnabled:Z

    .line 15207
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    new-instance v3, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda25;

    invoke-direct {v3, p0}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda25;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    invoke-virtual {v2, v1, v3}, Lcom/android/server/am/ProcessList;->forEachLruProcessesLOSP(ZLjava/util/function/Consumer;)V

    .line 15218
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 15219
    return v1

    .line 15218
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v1

    .line 15201
    :cond_0
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires permission android.permission.SET_ACTIVITY_WATCHER"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public startConfirmDeviceCredentialIntent(Landroid/content/Intent;Landroid/os/Bundle;)V
    .locals 1
    .param p1, "intent"    # Landroid/content/Intent;
    .param p2, "options"    # Landroid/os/Bundle;

    .line 6368
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/wm/ActivityTaskManagerInternal;->startConfirmDeviceCredentialIntent(Landroid/content/Intent;Landroid/os/Bundle;)V

    .line 6369
    return-void
.end method

.method public startDelegateShellPermissionIdentity(I[Ljava/lang/String;)V
    .locals 8
    .param p1, "delegateUid"    # I
    .param p2, "permissions"    # [Ljava/lang/String;

    .line 16823
    invoke-static {}, Landroid/os/UserHandle;->getCallingAppId()I

    move-result v0

    const/16 v1, 0x7d0

    if-eq v0, v1, :cond_1

    .line 16824
    invoke-static {}, Landroid/os/UserHandle;->getCallingAppId()I

    move-result v0

    if-nez v0, :cond_0

    goto :goto_0

    .line 16825
    :cond_0
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Only the shell can delegate its permissions"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 16829
    :cond_1
    :goto_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 16831
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/appop/AppOpsService;

    invoke-virtual {v1}, Lcom/android/server/appop/AppOpsService;->getAppOpsServiceDelegate()Landroid/app/AppOpsManagerInternal$CheckOpsDelegate;

    move-result-object v1

    if-eqz v1, :cond_4

    .line 16832
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/appop/AppOpsService;

    invoke-virtual {v1}, Lcom/android/server/appop/AppOpsService;->getAppOpsServiceDelegate()Landroid/app/AppOpsManagerInternal$CheckOpsDelegate;

    move-result-object v1

    instance-of v1, v1, Lcom/android/server/am/ActivityManagerService$ShellDelegate;

    if-eqz v1, :cond_3

    .line 16835
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/appop/AppOpsService;

    .line 16836
    invoke-virtual {v1}, Lcom/android/server/appop/AppOpsService;->getAppOpsServiceDelegate()Landroid/app/AppOpsManagerInternal$CheckOpsDelegate;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ActivityManagerService$ShellDelegate;

    .line 16837
    .local v1, "delegate":Lcom/android/server/am/ActivityManagerService$ShellDelegate;
    invoke-virtual {v1}, Lcom/android/server/am/ActivityManagerService$ShellDelegate;->getDelegateUid()I

    move-result v2

    if-ne v2, p1, :cond_2

    goto :goto_1

    .line 16838
    :cond_2
    new-instance v2, Ljava/lang/SecurityException;

    const-string v3, "Shell can delegate permissions only to one instrumentation at a time"

    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "delegateUid":I
    .end local p2    # "permissions":[Ljava/lang/String;
    throw v2

    .line 16833
    .end local v1    # "delegate":Lcom/android/server/am/ActivityManagerService$ShellDelegate;
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "delegateUid":I
    .restart local p2    # "permissions":[Ljava/lang/String;
    :cond_3
    new-instance v1, Ljava/lang/IllegalStateException;

    const-string v2, "Bad shell delegate state"

    invoke-direct {v1, v2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "delegateUid":I
    .end local p2    # "permissions":[Ljava/lang/String;
    throw v1

    .line 16843
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "delegateUid":I
    .restart local p2    # "permissions":[Ljava/lang/String;
    :cond_4
    :goto_1
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mActiveInstrumentation:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v1

    .line 16844
    .local v1, "instrCount":I
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_2
    if-ge v2, v1, :cond_8

    .line 16845
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mActiveInstrumentation:Ljava/util/ArrayList;

    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/ActiveInstrumentation;

    .line 16846
    .local v3, "instr":Lcom/android/server/am/ActiveInstrumentation;
    iget-object v4, v3, Lcom/android/server/am/ActiveInstrumentation;->mTargetInfo:Landroid/content/pm/ApplicationInfo;

    iget v4, v4, Landroid/content/pm/ApplicationInfo;->uid:I

    if-eq v4, p1, :cond_5

    .line 16847
    nop

    .line 16844
    .end local v3    # "instr":Lcom/android/server/am/ActiveInstrumentation;
    add-int/lit8 v2, v2, 0x1

    goto :goto_2

    .line 16850
    .restart local v3    # "instr":Lcom/android/server/am/ActiveInstrumentation;
    :cond_5
    iget-object v4, v3, Lcom/android/server/am/ActiveInstrumentation;->mUiAutomationConnection:Landroid/app/IUiAutomationConnection;

    if-eqz v4, :cond_7

    .line 16856
    new-instance v4, Lcom/android/server/am/ActivityManagerService$ShellDelegate;

    invoke-direct {v4, p0, p1, p2}, Lcom/android/server/am/ActivityManagerService$ShellDelegate;-><init>(Lcom/android/server/am/ActivityManagerService;I[Ljava/lang/String;)V

    .line 16858
    .local v4, "shellDelegate":Lcom/android/server/am/ActivityManagerService$ShellDelegate;
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/appop/AppOpsService;

    invoke-virtual {v5, v4}, Lcom/android/server/appop/AppOpsService;->setAppOpsServiceDelegate(Landroid/app/AppOpsManagerInternal$CheckOpsDelegate;)V

    .line 16859
    iget-object v5, v3, Lcom/android/server/am/ActiveInstrumentation;->mTargetInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v5, v5, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    .line 16860
    .local v5, "packageName":Ljava/lang/String;
    if-eqz p2, :cond_6

    .line 16861
    invoke-static {p2}, Ljava/util/Arrays;->asList([Ljava/lang/Object;)Ljava/util/List;

    move-result-object v6

    goto :goto_3

    :cond_6
    const/4 v6, 0x0

    .line 16862
    .local v6, "permissionNames":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    :goto_3
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->getPermissionManagerInternal()Lcom/android/server/pm/permission/PermissionManagerServiceInternal;

    move-result-object v7

    invoke-interface {v7, p1, v5, v6}, Lcom/android/server/pm/permission/PermissionManagerServiceInternal;->startShellPermissionIdentityDelegation(ILjava/lang/String;Ljava/util/List;)V

    .line 16864
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    return-void

    .line 16851
    .end local v4    # "shellDelegate":Lcom/android/server/am/ActivityManagerService$ShellDelegate;
    .end local v5    # "packageName":Ljava/lang/String;
    .end local v6    # "permissionNames":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    :cond_7
    :try_start_1
    new-instance v4, Ljava/lang/SecurityException;

    const-string v5, "Shell can delegate its permissions only to an instrumentation started from the shell"

    invoke-direct {v4, v5}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "delegateUid":I
    .end local p2    # "permissions":[Ljava/lang/String;
    throw v4

    .line 16866
    .end local v1    # "instrCount":I
    .end local v2    # "i":I
    .end local v3    # "instr":Lcom/android/server/am/ActiveInstrumentation;
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "delegateUid":I
    .restart local p2    # "permissions":[Ljava/lang/String;
    :cond_8
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 16867
    return-void

    .line 16866
    :catchall_0
    move-exception v1

    :try_start_2
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v1
.end method

.method public startInstrumentation(Landroid/content/ComponentName;Ljava/lang/String;ILandroid/os/Bundle;Landroid/app/IInstrumentationWatcher;Landroid/app/IUiAutomationConnection;ILjava/lang/String;)Z
    .locals 30
    .param p1, "className"    # Landroid/content/ComponentName;
    .param p2, "profileFile"    # Ljava/lang/String;
    .param p3, "flags"    # I
    .param p4, "arguments"    # Landroid/os/Bundle;
    .param p5, "watcher"    # Landroid/app/IInstrumentationWatcher;
    .param p6, "uiAutomationConnection"    # Landroid/app/IUiAutomationConnection;
    .param p7, "userId"    # I
    .param p8, "abiOverride"    # Ljava/lang/String;

    .line 13718
    move-object/from16 v11, p0

    move-object/from16 v12, p1

    move-object/from16 v13, p4

    move-object/from16 v14, p5

    const-string/jumbo v0, "startInstrumentation"

    invoke-virtual {v11, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 13719
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v15

    .line 13720
    .local v15, "callingUid":I
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v10

    .line 13721
    .local v10, "callingPid":I
    iget-object v1, v11, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    const-string/jumbo v7, "startInstrumentation"

    const/4 v5, 0x0

    const/4 v6, 0x2

    const/4 v8, 0x0

    move v2, v10

    move v3, v15

    move/from16 v4, p7

    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/UserController;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result v9

    .line 13724
    .end local p7    # "userId":I
    .local v9, "userId":I
    if-eqz v13, :cond_1

    invoke-virtual/range {p4 .. p4}, Landroid/os/Bundle;->hasFileDescriptors()Z

    move-result v0

    if-nez v0, :cond_0

    goto :goto_0

    .line 13725
    :cond_0
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "File descriptors passed in Bundle"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 13728
    :cond_1
    :goto_0
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_b

    .line 13729
    const/4 v1, 0x0

    .line 13730
    .local v1, "ii":Landroid/content/pm/InstrumentationInfo;
    const/4 v2, 0x0

    .line 13732
    .local v2, "ai":Landroid/content/pm/ApplicationInfo;
    and-int/lit8 v0, p3, 0x8

    const/4 v8, 0x1

    const/4 v7, 0x0

    if-eqz v0, :cond_2

    move v0, v8

    goto :goto_1

    :cond_2
    move v0, v7

    :goto_1
    move v6, v0

    .line 13735
    .local v6, "noRestart":Z
    :try_start_1
    iget-object v0, v11, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v0}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v0

    const/16 v3, 0x400

    invoke-virtual {v0, v12, v3}, Landroid/content/pm/PackageManager;->getInstrumentationInfo(Landroid/content/ComponentName;I)Landroid/content/pm/InstrumentationInfo;

    move-result-object v0

    move-object v1, v0

    .line 13737
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v0

    iget-object v4, v1, Landroid/content/pm/InstrumentationInfo;->targetPackage:Ljava/lang/String;

    invoke-interface {v0, v4, v3, v9}, Landroid/content/pm/IPackageManager;->getApplicationInfo(Ljava/lang/String;II)Landroid/content/pm/ApplicationInfo;

    move-result-object v0
    :try_end_1
    .catch Landroid/content/pm/PackageManager$NameNotFoundException; {:try_start_1 .. :try_end_1} :catch_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    move-object v2, v0

    goto :goto_2

    .line 13854
    .end local v1    # "ii":Landroid/content/pm/InstrumentationInfo;
    .end local v2    # "ai":Landroid/content/pm/ApplicationInfo;
    .end local v6    # "noRestart":Z
    :catchall_0
    move-exception v0

    move/from16 v25, v10

    move v10, v9

    goto/16 :goto_12

    .line 13740
    .restart local v1    # "ii":Landroid/content/pm/InstrumentationInfo;
    .restart local v2    # "ai":Landroid/content/pm/ApplicationInfo;
    .restart local v6    # "noRestart":Z
    :catch_0
    move-exception v0

    move-object v5, v1

    move-object v4, v2

    goto :goto_3

    .line 13739
    :catch_1
    move-exception v0

    .line 13741
    :goto_2
    move-object v5, v1

    move-object v4, v2

    .line 13742
    .end local v1    # "ii":Landroid/content/pm/InstrumentationInfo;
    .end local v2    # "ai":Landroid/content/pm/ApplicationInfo;
    .local v4, "ai":Landroid/content/pm/ApplicationInfo;
    .local v5, "ii":Landroid/content/pm/InstrumentationInfo;
    :goto_3
    if-nez v5, :cond_3

    .line 13743
    :try_start_2
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Unable to find instrumentation info for: "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {v11, v14, v12, v0}, Lcom/android/server/am/ActivityManagerService;->reportStartInstrumentationFailureLocked(Landroid/app/IInstrumentationWatcher;Landroid/content/ComponentName;Ljava/lang/String;)V

    .line 13745
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v7

    .line 13747
    :cond_3
    if-nez v4, :cond_4

    .line 13748
    :try_start_3
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Unable to find instrumentation target package: "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v1, v5, Landroid/content/pm/InstrumentationInfo;->targetPackage:Ljava/lang/String;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {v11, v14, v12, v0}, Lcom/android/server/am/ActivityManagerService;->reportStartInstrumentationFailureLocked(Landroid/app/IInstrumentationWatcher;Landroid/content/ComponentName;Ljava/lang/String;)V

    .line 13750
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v7

    .line 13753
    :cond_4
    :try_start_4
    iget-object v0, v5, Landroid/content/pm/InstrumentationInfo;->targetPackage:Ljava/lang/String;

    const-string v1, "android"

    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_b

    if-eqz v0, :cond_5

    .line 13754
    if-nez v6, :cond_6

    .line 13755
    :try_start_5
    const-string v0, "Cannot instrument system server without \'no-restart\'"

    invoke-direct {v11, v14, v12, v0}, Lcom/android/server/am/ActivityManagerService;->reportStartInstrumentationFailureLocked(Landroid/app/IInstrumentationWatcher;Landroid/content/ComponentName;Ljava/lang/String;)V

    .line 13757
    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v7

    .line 13759
    :cond_5
    :try_start_6
    invoke-virtual {v4}, Landroid/content/pm/ApplicationInfo;->hasCode()Z

    move-result v0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_b

    if-nez v0, :cond_6

    .line 13760
    :try_start_7
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Instrumentation target has no code: "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v1, v5, Landroid/content/pm/InstrumentationInfo;->targetPackage:Ljava/lang/String;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {v11, v14, v12, v0}, Lcom/android/server/am/ActivityManagerService;->reportStartInstrumentationFailureLocked(Landroid/app/IInstrumentationWatcher;Landroid/content/ComponentName;Ljava/lang/String;)V

    .line 13762
    monitor-exit p0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v7

    .line 13765
    :cond_6
    :try_start_8
    sget-boolean v0, Landroid/os/Build;->IS_DEBUGGABLE:Z
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_b

    if-nez v0, :cond_8

    .line 13766
    :try_start_9
    iget-object v0, v11, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v0}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v0

    iget-object v1, v5, Landroid/content/pm/InstrumentationInfo;->targetPackage:Ljava/lang/String;

    iget-object v2, v5, Landroid/content/pm/InstrumentationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v0, v1, v2}, Landroid/content/pm/PackageManager;->checkSignatures(Ljava/lang/String;Ljava/lang/String;)I

    move-result v0

    .line 13768
    .local v0, "match":I
    if-gez v0, :cond_8

    const/4 v1, -0x1

    if-ne v0, v1, :cond_7

    goto :goto_4

    .line 13769
    :cond_7
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Permission Denial: starting instrumentation "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v2, " from pid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 13771
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, ", uid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 13772
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, " not allowed because package "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, v5, Landroid/content/pm/InstrumentationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, " does not have a signature matching the target "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, v5, Landroid/content/pm/InstrumentationInfo;->targetPackage:Ljava/lang/String;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    .line 13776
    .local v1, "msg":Ljava/lang/String;
    invoke-direct {v11, v14, v12, v1}, Lcom/android/server/am/ActivityManagerService;->reportStartInstrumentationFailureLocked(Landroid/app/IInstrumentationWatcher;Landroid/content/ComponentName;Ljava/lang/String;)V

    .line 13777
    new-instance v2, Ljava/lang/SecurityException;

    invoke-direct {v2, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .end local v9    # "userId":I
    .end local v10    # "callingPid":I
    .end local v15    # "callingUid":I
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "className":Landroid/content/ComponentName;
    .end local p2    # "profileFile":Ljava/lang/String;
    .end local p3    # "flags":I
    .end local p4    # "arguments":Landroid/os/Bundle;
    .end local p5    # "watcher":Landroid/app/IInstrumentationWatcher;
    .end local p6    # "uiAutomationConnection":Landroid/app/IUiAutomationConnection;
    .end local p8    # "abiOverride":Ljava/lang/String;
    throw v2
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_0

    .line 13781
    .end local v0    # "match":I
    .end local v1    # "msg":Ljava/lang/String;
    .restart local v9    # "userId":I
    .restart local v10    # "callingPid":I
    .restart local v15    # "callingUid":I
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "className":Landroid/content/ComponentName;
    .restart local p2    # "profileFile":Ljava/lang/String;
    .restart local p3    # "flags":I
    .restart local p4    # "arguments":Landroid/os/Bundle;
    .restart local p5    # "watcher":Landroid/app/IInstrumentationWatcher;
    .restart local p6    # "uiAutomationConnection":Landroid/app/IUiAutomationConnection;
    .restart local p8    # "abiOverride":Ljava/lang/String;
    :cond_8
    :goto_4
    :try_start_a
    new-instance v0, Lcom/android/server/am/ActiveInstrumentation;

    invoke-direct {v0, v11}, Lcom/android/server/am/ActiveInstrumentation;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    move-object v3, v0

    .line 13782
    .local v3, "activeInstr":Lcom/android/server/am/ActiveInstrumentation;
    iput-object v12, v3, Lcom/android/server/am/ActiveInstrumentation;->mClass:Landroid/content/ComponentName;

    .line 13783
    iget-object v0, v4, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    .line 13784
    .local v0, "defProcess":Ljava/lang/String;
    iget-object v1, v5, Landroid/content/pm/InstrumentationInfo;->targetProcesses:Ljava/lang/String;
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_b

    if-nez v1, :cond_9

    .line 13785
    :try_start_b
    new-array v1, v8, [Ljava/lang/String;

    iget-object v2, v4, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    aput-object v2, v1, v7

    iput-object v1, v3, Lcom/android/server/am/ActiveInstrumentation;->mTargetProcesses:[Ljava/lang/String;
    :try_end_b
    .catchall {:try_start_b .. :try_end_b} :catchall_0

    goto :goto_5

    .line 13786
    :cond_9
    :try_start_c
    iget-object v1, v5, Landroid/content/pm/InstrumentationInfo;->targetProcesses:Ljava/lang/String;

    const-string v2, "*"

    invoke-virtual {v1, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1
    :try_end_c
    .catchall {:try_start_c .. :try_end_c} :catchall_b

    if-eqz v1, :cond_a

    .line 13787
    :try_start_d
    new-array v1, v7, [Ljava/lang/String;

    iput-object v1, v3, Lcom/android/server/am/ActiveInstrumentation;->mTargetProcesses:[Ljava/lang/String;
    :try_end_d
    .catchall {:try_start_d .. :try_end_d} :catchall_0

    .line 13792
    :goto_5
    move-object/from16 v16, v0

    goto :goto_6

    .line 13789
    :cond_a
    :try_start_e
    iget-object v1, v5, Landroid/content/pm/InstrumentationInfo;->targetProcesses:Ljava/lang/String;

    const-string v2, ","

    invoke-virtual {v1, v2}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v1

    iput-object v1, v3, Lcom/android/server/am/ActiveInstrumentation;->mTargetProcesses:[Ljava/lang/String;

    .line 13790
    iget-object v1, v3, Lcom/android/server/am/ActiveInstrumentation;->mTargetProcesses:[Ljava/lang/String;

    aget-object v1, v1, v7

    move-object v0, v1

    move-object/from16 v16, v0

    .line 13792
    .end local v0    # "defProcess":Ljava/lang/String;
    .local v16, "defProcess":Ljava/lang/String;
    :goto_6
    iput-object v4, v3, Lcom/android/server/am/ActiveInstrumentation;->mTargetInfo:Landroid/content/pm/ApplicationInfo;

    .line 13793
    move-object/from16 v2, p2

    iput-object v2, v3, Lcom/android/server/am/ActiveInstrumentation;->mProfileFile:Ljava/lang/String;

    .line 13794
    iput-object v13, v3, Lcom/android/server/am/ActiveInstrumentation;->mArguments:Landroid/os/Bundle;

    .line 13795
    iput-object v14, v3, Lcom/android/server/am/ActiveInstrumentation;->mWatcher:Landroid/app/IInstrumentationWatcher;

    .line 13796
    move-object/from16 v1, p6

    iput-object v1, v3, Lcom/android/server/am/ActiveInstrumentation;->mUiAutomationConnection:Landroid/app/IUiAutomationConnection;

    .line 13797
    iput-object v12, v3, Lcom/android/server/am/ActiveInstrumentation;->mResultClass:Landroid/content/ComponentName;

    .line 13798
    const-string v0, "android.permission.START_ACTIVITIES_FROM_BACKGROUND"

    invoke-virtual {v11, v0, v10, v15}, Lcom/android/server/am/ActivityManagerService;->checkPermission(Ljava/lang/String;II)I

    move-result v0

    if-nez v0, :cond_b

    move v0, v8

    goto :goto_7

    :cond_b
    move v0, v7

    :goto_7
    iput-boolean v0, v3, Lcom/android/server/am/ActiveInstrumentation;->mHasBackgroundActivityStartsPermission:Z

    .line 13801
    const-string v0, "android.permission.START_FOREGROUND_SERVICES_FROM_BACKGROUND"

    invoke-virtual {v11, v0, v10, v15}, Lcom/android/server/am/ActivityManagerService;->checkPermission(Ljava/lang/String;II)I

    move-result v0

    if-nez v0, :cond_c

    move v0, v8

    goto :goto_8

    :cond_c
    move v0, v7

    :goto_8
    iput-boolean v0, v3, Lcom/android/server/am/ActiveInstrumentation;->mHasBackgroundForegroundServiceStartsPermission:Z

    .line 13804
    iput-boolean v6, v3, Lcom/android/server/am/ActiveInstrumentation;->mNoRestart:Z

    .line 13805
    invoke-virtual {v4}, Landroid/content/pm/ApplicationInfo;->usesNonSdkApi()Z

    move-result v0

    if-nez v0, :cond_e

    and-int/lit8 v0, p3, 0x1

    if-eqz v0, :cond_d

    goto :goto_9

    :cond_d
    move v0, v7

    goto :goto_a

    :cond_e
    :goto_9
    move v0, v8

    :goto_a
    move/from16 v17, v0

    .line 13807
    .local v17, "disableHiddenApiChecks":Z
    if-nez v17, :cond_10

    and-int/lit8 v0, p3, 0x4

    if-eqz v0, :cond_f

    goto :goto_b

    :cond_f
    move v0, v7

    goto :goto_c

    :cond_10
    :goto_b
    move v0, v8

    :goto_c
    move/from16 v18, v0

    .line 13810
    .local v18, "disableTestApiChecks":Z
    if-nez v17, :cond_11

    if-eqz v18, :cond_12

    .line 13811
    :cond_11
    const-string v0, "android.permission.DISABLE_HIDDEN_API_CHECKS"

    const-string v7, "disable hidden API checks"

    invoke-virtual {v11, v0, v7}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 13815
    :cond_12
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v19

    .line 13818
    .local v19, "origId":J
    iget-object v7, v11, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v7
    :try_end_e
    .catchall {:try_start_e .. :try_end_e} :catchall_b

    :try_start_f
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V
    :try_end_f
    .catchall {:try_start_f .. :try_end_f} :catchall_9

    .line 13819
    if-eqz v6, :cond_13

    .line 13820
    :try_start_10
    iget-object v0, v4, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    iget v8, v4, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v11, v0, v8}, Lcom/android/server/am/ActivityManagerService;->getProcessRecordLocked(Ljava/lang/String;I)Lcom/android/server/am/ProcessRecord;

    move-result-object v0
    :try_end_10
    .catchall {:try_start_10 .. :try_end_10} :catchall_1

    move-object/from16 v28, v3

    move-object/from16 p7, v4

    move/from16 v22, v6

    move-object/from16 v23, v7

    move/from16 v25, v10

    const/16 v21, 0x1

    move v10, v9

    move-object v9, v5

    .local v0, "app":Lcom/android/server/am/ProcessRecord;
    goto/16 :goto_e

    .line 13841
    .end local v0    # "app":Lcom/android/server/am/ProcessRecord;
    :catchall_1
    move-exception v0

    move-object v1, v3

    move/from16 v22, v6

    move-object/from16 v23, v7

    move/from16 v25, v10

    move v10, v9

    move-object v9, v5

    move-object v5, v4

    goto/16 :goto_11

    .line 13823
    :cond_13
    :try_start_11
    iget-object v0, v5, Landroid/content/pm/InstrumentationInfo;->targetPackage:Ljava/lang/String;

    const/4 v8, -0x1

    const/16 v22, 0x1

    const/16 v23, 0x0

    const/16 v24, 0x1

    const/16 v25, 0x1

    const/16 v26, 0x0

    const-string/jumbo v27, "start instr"
    :try_end_11
    .catchall {:try_start_11 .. :try_end_11} :catchall_9

    move-object/from16 v1, p0

    move-object v2, v0

    move-object/from16 v28, v3

    .end local v3    # "activeInstr":Lcom/android/server/am/ActiveInstrumentation;
    .local v28, "activeInstr":Lcom/android/server/am/ActiveInstrumentation;
    move v3, v8

    move-object v8, v4

    .end local v4    # "ai":Landroid/content/pm/ApplicationInfo;
    .local v8, "ai":Landroid/content/pm/ApplicationInfo;
    move/from16 v4, v22

    move-object/from16 v29, v5

    .end local v5    # "ii":Landroid/content/pm/InstrumentationInfo;
    .local v29, "ii":Landroid/content/pm/InstrumentationInfo;
    move/from16 v5, v23

    move/from16 v22, v6

    .end local v6    # "noRestart":Z
    .local v22, "noRestart":Z
    move/from16 v6, v24

    move-object/from16 v23, v7

    move/from16 v7, v25

    move-object/from16 p7, v8

    const/16 v21, 0x1

    .end local v8    # "ai":Landroid/content/pm/ApplicationInfo;
    .local p7, "ai":Landroid/content/pm/ApplicationInfo;
    move/from16 v8, v26

    move/from16 v24, v9

    .end local v9    # "userId":I
    .local v24, "userId":I
    move/from16 v25, v10

    .end local v10    # "callingPid":I
    .local v25, "callingPid":I
    move-object/from16 v10, v27

    :try_start_12
    invoke-virtual/range {v1 .. v10}, Lcom/android/server/am/ActivityManagerService;->forceStopPackageLocked(Ljava/lang/String;IZZZZZILjava/lang/String;)Z

    .line 13826
    iget-object v0, v11, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;
    :try_end_12
    .catchall {:try_start_12 .. :try_end_12} :catchall_8

    if-eqz v0, :cond_14

    .line 13827
    :try_start_13
    iget-object v0, v11, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;
    :try_end_13
    .catchall {:try_start_13 .. :try_end_13} :catchall_4

    move-object/from16 v9, v29

    .end local v29    # "ii":Landroid/content/pm/InstrumentationInfo;
    .local v9, "ii":Landroid/content/pm/InstrumentationInfo;
    :try_start_14
    iget-object v1, v9, Landroid/content/pm/InstrumentationInfo;->targetPackage:Ljava/lang/String;
    :try_end_14
    .catchall {:try_start_14 .. :try_end_14} :catchall_3

    const/4 v2, 0x6

    move/from16 v10, v24

    .end local v24    # "userId":I
    .local v10, "userId":I
    :try_start_15
    invoke-virtual {v0, v1, v10, v2}, Landroid/app/usage/UsageStatsManagerInternal;->reportEvent(Ljava/lang/String;II)V
    :try_end_15
    .catchall {:try_start_15 .. :try_end_15} :catchall_2

    goto :goto_d

    .line 13841
    :catchall_2
    move-exception v0

    move-object/from16 v5, p7

    move-object/from16 v1, v28

    goto/16 :goto_11

    .end local v10    # "userId":I
    .restart local v24    # "userId":I
    :catchall_3
    move-exception v0

    move/from16 v10, v24

    move-object/from16 v5, p7

    move-object/from16 v1, v28

    .end local v24    # "userId":I
    .restart local v10    # "userId":I
    goto/16 :goto_11

    .end local v9    # "ii":Landroid/content/pm/InstrumentationInfo;
    .end local v10    # "userId":I
    .restart local v24    # "userId":I
    .restart local v29    # "ii":Landroid/content/pm/InstrumentationInfo;
    :catchall_4
    move-exception v0

    move/from16 v10, v24

    move-object/from16 v9, v29

    move-object/from16 v5, p7

    move-object/from16 v1, v28

    .end local v24    # "userId":I
    .end local v29    # "ii":Landroid/content/pm/InstrumentationInfo;
    .restart local v9    # "ii":Landroid/content/pm/InstrumentationInfo;
    .restart local v10    # "userId":I
    goto/16 :goto_11

    .line 13826
    .end local v9    # "ii":Landroid/content/pm/InstrumentationInfo;
    .end local v10    # "userId":I
    .restart local v24    # "userId":I
    .restart local v29    # "ii":Landroid/content/pm/InstrumentationInfo;
    :cond_14
    move/from16 v10, v24

    move-object/from16 v9, v29

    .line 13830
    .end local v24    # "userId":I
    .end local v29    # "ii":Landroid/content/pm/InstrumentationInfo;
    .restart local v9    # "ii":Landroid/content/pm/InstrumentationInfo;
    .restart local v10    # "userId":I
    :goto_d
    const/4 v4, 0x0

    const/4 v8, 0x0

    move-object/from16 v1, p0

    move-object/from16 v2, p7

    move-object/from16 v3, v16

    move/from16 v5, v17

    move/from16 v6, v18

    move-object/from16 v7, p8

    :try_start_16
    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->addAppLocked(Landroid/content/pm/ApplicationInfo;Ljava/lang/String;ZZZLjava/lang/String;I)Lcom/android/server/am/ProcessRecord;

    move-result-object v0
    :try_end_16
    .catchall {:try_start_16 .. :try_end_16} :catchall_7

    .line 13834
    .restart local v0    # "app":Lcom/android/server/am/ProcessRecord;
    :goto_e
    move-object/from16 v1, v28

    .end local v28    # "activeInstr":Lcom/android/server/am/ActiveInstrumentation;
    .local v1, "activeInstr":Lcom/android/server/am/ActiveInstrumentation;
    :try_start_17
    invoke-virtual {v0, v1}, Lcom/android/server/am/ProcessRecord;->setActiveInstrumentation(Lcom/android/server/am/ActiveInstrumentation;)V

    .line 13835
    const/4 v2, 0x0

    iput-boolean v2, v1, Lcom/android/server/am/ActiveInstrumentation;->mFinished:Z

    .line 13836
    iput v15, v1, Lcom/android/server/am/ActiveInstrumentation;->mSourceUid:I

    .line 13837
    iget-object v3, v1, Lcom/android/server/am/ActiveInstrumentation;->mRunningProcesses:Ljava/util/ArrayList;

    invoke-virtual {v3, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 13838
    iget-object v3, v11, Lcom/android/server/am/ActivityManagerService;->mActiveInstrumentation:Ljava/util/ArrayList;

    invoke-virtual {v3, v1}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v3
    :try_end_17
    .catchall {:try_start_17 .. :try_end_17} :catchall_6

    if-nez v3, :cond_15

    .line 13839
    :try_start_18
    iget-object v3, v11, Lcom/android/server/am/ActivityManagerService;->mActiveInstrumentation:Ljava/util/ArrayList;

    invoke-virtual {v3, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
    :try_end_18
    .catchall {:try_start_18 .. :try_end_18} :catchall_5

    goto :goto_f

    .line 13841
    .end local v0    # "app":Lcom/android/server/am/ProcessRecord;
    :catchall_5
    move-exception v0

    move-object/from16 v5, p7

    goto :goto_11

    .restart local v0    # "app":Lcom/android/server/am/ProcessRecord;
    :cond_15
    :goto_f
    :try_start_19
    monitor-exit v23
    :try_end_19
    .catchall {:try_start_19 .. :try_end_19} :catchall_6

    :try_start_1a
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 13843
    and-int/lit8 v3, p3, 0x2

    if-eqz v3, :cond_16

    .line 13846
    iget-object v3, v11, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/appop/AppOpsService;

    const/16 v4, 0x63

    move-object/from16 v5, p7

    .end local p7    # "ai":Landroid/content/pm/ApplicationInfo;
    .local v5, "ai":Landroid/content/pm/ApplicationInfo;
    iget v6, v5, Landroid/content/pm/ApplicationInfo;->uid:I

    iget-object v7, v9, Landroid/content/pm/InstrumentationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v3, v4, v6, v7, v2}, Lcom/android/server/appop/AppOpsService;->setMode(IILjava/lang/String;I)V

    goto :goto_10

    .line 13843
    .end local v5    # "ai":Landroid/content/pm/ApplicationInfo;
    .restart local p7    # "ai":Landroid/content/pm/ApplicationInfo;
    :cond_16
    move-object/from16 v5, p7

    .line 13849
    .end local p7    # "ai":Landroid/content/pm/ApplicationInfo;
    .restart local v5    # "ai":Landroid/content/pm/ApplicationInfo;
    :goto_10
    invoke-static/range {v19 .. v20}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 13851
    if-eqz v22, :cond_17

    .line 13852
    invoke-direct {v11, v1, v5}, Lcom/android/server/am/ActivityManagerService;->instrumentWithoutRestart(Lcom/android/server/am/ActiveInstrumentation;Landroid/content/pm/ApplicationInfo;)V

    .line 13854
    .end local v0    # "app":Lcom/android/server/am/ProcessRecord;
    .end local v1    # "activeInstr":Lcom/android/server/am/ActiveInstrumentation;
    .end local v5    # "ai":Landroid/content/pm/ApplicationInfo;
    .end local v9    # "ii":Landroid/content/pm/InstrumentationInfo;
    .end local v16    # "defProcess":Ljava/lang/String;
    .end local v17    # "disableHiddenApiChecks":Z
    .end local v18    # "disableTestApiChecks":Z
    .end local v19    # "origId":J
    .end local v22    # "noRestart":Z
    :cond_17
    monitor-exit p0
    :try_end_1a
    .catchall {:try_start_1a .. :try_end_1a} :catchall_c

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 13856
    return v21

    .line 13841
    .restart local v1    # "activeInstr":Lcom/android/server/am/ActiveInstrumentation;
    .restart local v9    # "ii":Landroid/content/pm/InstrumentationInfo;
    .restart local v16    # "defProcess":Ljava/lang/String;
    .restart local v17    # "disableHiddenApiChecks":Z
    .restart local v18    # "disableTestApiChecks":Z
    .restart local v19    # "origId":J
    .restart local v22    # "noRestart":Z
    .restart local p7    # "ai":Landroid/content/pm/ApplicationInfo;
    :catchall_6
    move-exception v0

    move-object/from16 v5, p7

    .end local p7    # "ai":Landroid/content/pm/ApplicationInfo;
    .restart local v5    # "ai":Landroid/content/pm/ApplicationInfo;
    goto :goto_11

    .end local v1    # "activeInstr":Lcom/android/server/am/ActiveInstrumentation;
    .end local v5    # "ai":Landroid/content/pm/ApplicationInfo;
    .restart local v28    # "activeInstr":Lcom/android/server/am/ActiveInstrumentation;
    .restart local p7    # "ai":Landroid/content/pm/ApplicationInfo;
    :catchall_7
    move-exception v0

    move-object/from16 v5, p7

    move-object/from16 v1, v28

    .end local v28    # "activeInstr":Lcom/android/server/am/ActiveInstrumentation;
    .end local p7    # "ai":Landroid/content/pm/ApplicationInfo;
    .restart local v1    # "activeInstr":Lcom/android/server/am/ActiveInstrumentation;
    .restart local v5    # "ai":Landroid/content/pm/ApplicationInfo;
    goto :goto_11

    .end local v1    # "activeInstr":Lcom/android/server/am/ActiveInstrumentation;
    .end local v5    # "ai":Landroid/content/pm/ApplicationInfo;
    .end local v9    # "ii":Landroid/content/pm/InstrumentationInfo;
    .end local v10    # "userId":I
    .restart local v24    # "userId":I
    .restart local v28    # "activeInstr":Lcom/android/server/am/ActiveInstrumentation;
    .restart local v29    # "ii":Landroid/content/pm/InstrumentationInfo;
    .restart local p7    # "ai":Landroid/content/pm/ApplicationInfo;
    :catchall_8
    move-exception v0

    move-object/from16 v5, p7

    move/from16 v10, v24

    move-object/from16 v1, v28

    move-object/from16 v9, v29

    .end local v24    # "userId":I
    .end local v28    # "activeInstr":Lcom/android/server/am/ActiveInstrumentation;
    .end local v29    # "ii":Landroid/content/pm/InstrumentationInfo;
    .end local p7    # "ai":Landroid/content/pm/ApplicationInfo;
    .restart local v1    # "activeInstr":Lcom/android/server/am/ActiveInstrumentation;
    .restart local v5    # "ai":Landroid/content/pm/ApplicationInfo;
    .restart local v9    # "ii":Landroid/content/pm/InstrumentationInfo;
    .restart local v10    # "userId":I
    goto :goto_11

    .end local v1    # "activeInstr":Lcom/android/server/am/ActiveInstrumentation;
    .end local v22    # "noRestart":Z
    .end local v25    # "callingPid":I
    .restart local v3    # "activeInstr":Lcom/android/server/am/ActiveInstrumentation;
    .restart local v4    # "ai":Landroid/content/pm/ApplicationInfo;
    .local v5, "ii":Landroid/content/pm/InstrumentationInfo;
    .restart local v6    # "noRestart":Z
    .local v9, "userId":I
    .local v10, "callingPid":I
    :catchall_9
    move-exception v0

    move-object v1, v3

    move/from16 v22, v6

    move-object/from16 v23, v7

    move/from16 v25, v10

    move v10, v9

    move-object v9, v5

    move-object v5, v4

    .end local v3    # "activeInstr":Lcom/android/server/am/ActiveInstrumentation;
    .end local v4    # "ai":Landroid/content/pm/ApplicationInfo;
    .end local v6    # "noRestart":Z
    .restart local v1    # "activeInstr":Lcom/android/server/am/ActiveInstrumentation;
    .local v5, "ai":Landroid/content/pm/ApplicationInfo;
    .local v9, "ii":Landroid/content/pm/InstrumentationInfo;
    .local v10, "userId":I
    .restart local v22    # "noRestart":Z
    .restart local v25    # "callingPid":I
    :goto_11
    :try_start_1b
    monitor-exit v23
    :try_end_1b
    .catchall {:try_start_1b .. :try_end_1b} :catchall_a

    :try_start_1c
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .end local v10    # "userId":I
    .end local v15    # "callingUid":I
    .end local v25    # "callingPid":I
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "className":Landroid/content/ComponentName;
    .end local p2    # "profileFile":Ljava/lang/String;
    .end local p3    # "flags":I
    .end local p4    # "arguments":Landroid/os/Bundle;
    .end local p5    # "watcher":Landroid/app/IInstrumentationWatcher;
    .end local p6    # "uiAutomationConnection":Landroid/app/IUiAutomationConnection;
    .end local p8    # "abiOverride":Ljava/lang/String;
    throw v0

    .restart local v10    # "userId":I
    .restart local v15    # "callingUid":I
    .restart local v25    # "callingPid":I
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "className":Landroid/content/ComponentName;
    .restart local p2    # "profileFile":Ljava/lang/String;
    .restart local p3    # "flags":I
    .restart local p4    # "arguments":Landroid/os/Bundle;
    .restart local p5    # "watcher":Landroid/app/IInstrumentationWatcher;
    .restart local p6    # "uiAutomationConnection":Landroid/app/IUiAutomationConnection;
    .restart local p8    # "abiOverride":Ljava/lang/String;
    :catchall_a
    move-exception v0

    goto :goto_11

    .line 13854
    .end local v1    # "activeInstr":Lcom/android/server/am/ActiveInstrumentation;
    .end local v5    # "ai":Landroid/content/pm/ApplicationInfo;
    .end local v16    # "defProcess":Ljava/lang/String;
    .end local v17    # "disableHiddenApiChecks":Z
    .end local v18    # "disableTestApiChecks":Z
    .end local v19    # "origId":J
    .end local v22    # "noRestart":Z
    .end local v25    # "callingPid":I
    .local v9, "userId":I
    .local v10, "callingPid":I
    :catchall_b
    move-exception v0

    move/from16 v25, v10

    move v10, v9

    .end local v9    # "userId":I
    .local v10, "userId":I
    .restart local v25    # "callingPid":I
    :goto_12
    monitor-exit p0
    :try_end_1c
    .catchall {:try_start_1c .. :try_end_1c} :catchall_c

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    :catchall_c
    move-exception v0

    goto :goto_12
.end method

.method startIsolatedProcess(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Runnable;)Z
    .locals 16
    .param p1, "entryPoint"    # Ljava/lang/String;
    .param p2, "entryPointArgs"    # [Ljava/lang/String;
    .param p3, "processName"    # Ljava/lang/String;
    .param p4, "abiOverride"    # Ljava/lang/String;
    .param p5, "uid"    # I
    .param p6, "crashHandler"    # Ljava/lang/Runnable;

    .line 2655
    move-object/from16 v1, p0

    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 2656
    new-instance v0, Landroid/content/pm/ApplicationInfo;

    invoke-direct {v0}, Landroid/content/pm/ApplicationInfo;-><init>()V

    .line 2665
    .local v0, "info":Landroid/content/pm/ApplicationInfo;
    const/16 v2, 0x3e8

    iput v2, v0, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 2666
    move-object/from16 v15, p3

    iput-object v15, v0, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    .line 2667
    move-object/from16 v14, p1

    iput-object v14, v0, Landroid/content/pm/ApplicationInfo;->className:Ljava/lang/String;

    .line 2668
    const-string v2, "android"

    iput-object v2, v0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    .line 2669
    const-string v2, ":complete"

    iput-object v2, v0, Landroid/content/pm/ApplicationInfo;->seInfoUser:Ljava/lang/String;

    .line 2670
    sget v2, Landroid/os/Build$VERSION;->SDK_INT:I

    iput v2, v0, Landroid/content/pm/ApplicationInfo;->targetSdkVersion:I

    .line 2671
    iget-object v2, v1, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    const/4 v5, 0x0

    const/4 v6, 0x0

    sget-object v7, Lcom/android/server/am/ActivityManagerService;->sNullHostingRecord:Lcom/android/server/am/HostingRecord;

    const/4 v8, 0x0

    const/4 v9, 0x1

    const/4 v10, 0x1

    move-object/from16 v3, p3

    move-object v4, v0

    move/from16 v11, p5

    move-object/from16 v12, p4

    move-object/from16 v13, p1

    move-object/from16 v14, p2

    move-object/from16 v15, p6

    invoke-virtual/range {v2 .. v15}, Lcom/android/server/am/ProcessList;->startProcessLocked(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;ZILcom/android/server/am/HostingRecord;IZZILjava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/Runnable;)Lcom/android/server/am/ProcessRecord;

    move-result-object v2

    .line 2676
    .local v2, "proc":Lcom/android/server/am/ProcessRecord;
    if-eqz v2, :cond_0

    const/4 v3, 0x1

    goto :goto_0

    :cond_0
    const/4 v3, 0x0

    :goto_0
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v3

    .line 2677
    .end local v0    # "info":Landroid/content/pm/ApplicationInfo;
    .end local v2    # "proc":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public startObservingNativeCrashes()V
    .locals 1

    .line 1871
    new-instance v0, Lcom/android/server/am/NativeCrashListener;

    invoke-direct {v0, p0}, Lcom/android/server/am/NativeCrashListener;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    .line 1872
    .local v0, "ncl":Lcom/android/server/am/NativeCrashListener;
    invoke-virtual {v0}, Lcom/android/server/am/NativeCrashListener;->start()V

    .line 1873
    return-void
.end method

.method startPersistentApps(I)V
    .locals 9
    .param p1, "matchFlags"    # I

    .line 5970
    iget v0, p0, Lcom/android/server/am/ActivityManagerService;->mFactoryTest:I

    const/4 v1, 0x1

    if-ne v0, v1, :cond_0

    return-void

    .line 5972
    :cond_0
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 5974
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v0

    or-int/lit16 v1, p1, 0x400

    .line 5975
    invoke-interface {v0, v1}, Landroid/content/pm/IPackageManager;->getPersistentApplications(I)Landroid/content/pm/ParceledListSlice;

    move-result-object v0

    invoke-virtual {v0}, Landroid/content/pm/ParceledListSlice;->getList()Ljava/util/List;

    move-result-object v0

    .line 5976
    .local v0, "apps":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ApplicationInfo;>;"
    invoke-interface {v0}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :goto_0
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_2

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/content/pm/ApplicationInfo;

    .line 5977
    .local v2, "app":Landroid/content/pm/ApplicationInfo;
    const-string v3, "android"

    iget-object v4, v2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v3, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_1

    .line 5978
    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x2

    move-object v3, p0

    move-object v4, v2

    invoke-virtual/range {v3 .. v8}, Lcom/android/server/am/ActivityManagerService;->addAppLocked(Landroid/content/pm/ApplicationInfo;Ljava/lang/String;ZLjava/lang/String;I)Lcom/android/server/am/ProcessRecord;
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 5981
    .end local v2    # "app":Landroid/content/pm/ApplicationInfo;
    :cond_1
    goto :goto_0

    .line 5983
    .end local v0    # "apps":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ApplicationInfo;>;"
    :cond_2
    goto :goto_1

    .line 5984
    :catchall_0
    move-exception v0

    goto :goto_2

    .line 5982
    :catch_0
    move-exception v0

    .line 5984
    :goto_1
    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 5985
    return-void

    .line 5984
    :goto_2
    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method final startProcessLocked(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;ZILcom/android/server/am/HostingRecord;IZZ)Lcom/android/server/am/ProcessRecord;
    .locals 15
    .param p1, "processName"    # Ljava/lang/String;
    .param p2, "info"    # Landroid/content/pm/ApplicationInfo;
    .param p3, "knownToBeDead"    # Z
    .param p4, "intentFlags"    # I
    .param p5, "hostingRecord"    # Lcom/android/server/am/HostingRecord;
    .param p6, "zygotePolicyFlags"    # I
    .param p7, "allowWhileBooting"    # Z
    .param p8, "isolated"    # Z

    .line 2685
    move-object v0, p0

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    const/4 v10, 0x0

    const/4 v11, 0x0

    const/4 v12, 0x0

    const/4 v13, 0x0

    const/4 v14, 0x0

    move-object/from16 v2, p1

    move-object/from16 v3, p2

    move/from16 v4, p3

    move/from16 v5, p4

    move-object/from16 v6, p5

    move/from16 v7, p6

    move/from16 v8, p7

    move/from16 v9, p8

    invoke-virtual/range {v1 .. v14}, Lcom/android/server/am/ProcessList;->startProcessLocked(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;ZILcom/android/server/am/HostingRecord;IZZILjava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/Runnable;)Lcom/android/server/am/ProcessRecord;

    move-result-object v1

    return-object v1
.end method

.method public startProfile(I)Z
    .locals 1
    .param p1, "userId"    # I

    .line 15097
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {v0, p1}, Lcom/android/server/am/UserController;->startProfile(I)Z

    move-result v0

    return v0
.end method

.method public startService(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;ZLjava/lang/String;Ljava/lang/String;I)Landroid/content/ComponentName;
    .locals 14
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .param p2, "service"    # Landroid/content/Intent;
    .param p3, "resolvedType"    # Ljava/lang/String;
    .param p4, "requireForeground"    # Z
    .param p5, "callingPackage"    # Ljava/lang/String;
    .param p6, "callingFeatureId"    # Ljava/lang/String;
    .param p7, "userId"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/TransactionTooLargeException;
        }
    .end annotation

    .line 11820
    move-object v1, p0

    const-string/jumbo v0, "startService"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 11822
    if-eqz p2, :cond_1

    invoke-virtual/range {p2 .. p2}, Landroid/content/Intent;->hasFileDescriptors()Z

    move-result v0

    const/4 v2, 0x1

    if-eq v0, v2, :cond_0

    goto :goto_0

    .line 11823
    :cond_0
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v2, "File descriptors passed in Intent"

    invoke-direct {v0, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 11826
    :cond_1
    :goto_0
    if-eqz p5, :cond_2

    .line 11832
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 11833
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v6

    .line 11834
    .local v6, "callingPid":I
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v7

    .line 11835
    .local v7, "callingUid":I
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    move-wide v12, v2

    .line 11838
    .local v12, "origId":J
    :try_start_1
    iget-object v2, v1, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    move-object v3, p1

    move-object/from16 v4, p2

    move-object/from16 v5, p3

    move/from16 v8, p4

    move-object/from16 v9, p5

    move-object/from16 v10, p6

    move/from16 v11, p7

    invoke-virtual/range {v2 .. v11}, Lcom/android/server/am/ActiveServices;->startServiceLocked(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;IIZLjava/lang/String;Ljava/lang/String;I)Landroid/content/ComponentName;

    move-result-object v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 11842
    .local v0, "res":Landroid/content/ComponentName;
    :try_start_2
    invoke-static {v12, v13}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 11843
    nop

    .line 11844
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-object v0

    .line 11842
    .end local v0    # "res":Landroid/content/ComponentName;
    :catchall_0
    move-exception v0

    :try_start_3
    invoke-static {v12, v13}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 11843
    nop

    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "caller":Landroid/app/IApplicationThread;
    .end local p2    # "service":Landroid/content/Intent;
    .end local p3    # "resolvedType":Ljava/lang/String;
    .end local p4    # "requireForeground":Z
    .end local p5    # "callingPackage":Ljava/lang/String;
    .end local p6    # "callingFeatureId":Ljava/lang/String;
    .end local p7    # "userId":I
    throw v0

    .line 11845
    .end local v6    # "callingPid":I
    .end local v7    # "callingUid":I
    .end local v12    # "origId":J
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "caller":Landroid/app/IApplicationThread;
    .restart local p2    # "service":Landroid/content/Intent;
    .restart local p3    # "resolvedType":Ljava/lang/String;
    .restart local p4    # "requireForeground":Z
    .restart local p5    # "callingPackage":Ljava/lang/String;
    .restart local p6    # "callingFeatureId":Ljava/lang/String;
    .restart local p7    # "userId":I
    :catchall_1
    move-exception v0

    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 11827
    :cond_2
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v2, "callingPackage cannot be null"

    invoke-direct {v0, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public startSystemLockTaskMode(I)V
    .locals 1
    .param p1, "taskId"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .line 5913
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {v0, p1}, Lcom/android/server/wm/ActivityTaskManagerService;->startSystemLockTaskMode(I)V

    .line 5914
    return-void
.end method

.method public startUserInBackground(I)Z
    .locals 1
    .param p1, "userId"    # I

    .line 15040
    const/4 v0, 0x0

    invoke-virtual {p0, p1, v0}, Lcom/android/server/am/ActivityManagerService;->startUserInBackgroundWithListener(ILandroid/os/IProgressListener;)Z

    move-result v0

    return v0
.end method

.method public startUserInBackgroundWithListener(ILandroid/os/IProgressListener;)Z
    .locals 2
    .param p1, "userId"    # I
    .param p2, "unlockListener"    # Landroid/os/IProgressListener;

    .line 15046
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    const/4 v1, 0x0

    invoke-virtual {v0, p1, v1, p2}, Lcom/android/server/am/UserController;->startUser(IZLandroid/os/IProgressListener;)Z

    move-result v0

    return v0
.end method

.method public startUserInForegroundWithListener(ILandroid/os/IProgressListener;)Z
    .locals 2
    .param p1, "userId"    # I
    .param p2, "unlockListener"    # Landroid/os/IProgressListener;

    .line 15053
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    const/4 v1, 0x1

    invoke-virtual {v0, p1, v1, p2}, Lcom/android/server/am/UserController;->startUser(IZLandroid/os/IProgressListener;)Z

    move-result v0

    return v0
.end method

.method public stopAppSwitches()V
    .locals 1

    .line 6373
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {v0}, Lcom/android/server/wm/ActivityTaskManagerService;->stopAppSwitches()V

    .line 6374
    return-void
.end method

.method stopAssociationLocked(ILjava/lang/String;IJLandroid/content/ComponentName;Ljava/lang/String;)V
    .locals 16
    .param p1, "sourceUid"    # I
    .param p2, "sourceProcess"    # Ljava/lang/String;
    .param p3, "targetUid"    # I
    .param p4, "targetVersionCode"    # J
    .param p6, "targetComponent"    # Landroid/content/ComponentName;
    .param p7, "targetProcess"    # Ljava/lang/String;

    .line 14163
    move-object/from16 v0, p0

    iget-boolean v1, v0, Lcom/android/server/am/ActivityManagerService;->mTrackingAssociations:Z

    if-nez v1, :cond_0

    .line 14164
    return-void

    .line 14166
    :cond_0
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mAssociations:Landroid/util/SparseArray;

    .line 14167
    move/from16 v2, p3

    invoke-virtual {v1, v2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/util/ArrayMap;

    .line 14168
    .local v1, "components":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Landroid/content/ComponentName;Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;>;"
    if-nez v1, :cond_1

    .line 14169
    return-void

    .line 14171
    :cond_1
    move-object/from16 v3, p6

    invoke-virtual {v1, v3}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Landroid/util/SparseArray;

    .line 14172
    .local v4, "sourceUids":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;"
    if-nez v4, :cond_2

    .line 14173
    return-void

    .line 14175
    :cond_2
    move/from16 v5, p1

    invoke-virtual {v4, v5}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Landroid/util/ArrayMap;

    .line 14176
    .local v6, "sourceProcesses":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;"
    if-nez v6, :cond_3

    .line 14177
    return-void

    .line 14179
    :cond_3
    move-object/from16 v7, p2

    invoke-virtual {v6, v7}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/android/server/am/ActivityManagerService$Association;

    .line 14180
    .local v8, "ass":Lcom/android/server/am/ActivityManagerService$Association;
    if-eqz v8, :cond_6

    iget v9, v8, Lcom/android/server/am/ActivityManagerService$Association;->mNesting:I

    if-gtz v9, :cond_4

    move-object v15, v1

    goto :goto_1

    .line 14183
    :cond_4
    iget v9, v8, Lcom/android/server/am/ActivityManagerService$Association;->mNesting:I

    add-int/lit8 v9, v9, -0x1

    iput v9, v8, Lcom/android/server/am/ActivityManagerService$Association;->mNesting:I

    .line 14184
    iget v9, v8, Lcom/android/server/am/ActivityManagerService$Association;->mNesting:I

    if-nez v9, :cond_5

    .line 14185
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v9

    .line 14186
    .local v9, "uptime":J
    iget-wide v11, v8, Lcom/android/server/am/ActivityManagerService$Association;->mTime:J

    iget-wide v13, v8, Lcom/android/server/am/ActivityManagerService$Association;->mStartTime:J

    sub-long v13, v9, v13

    add-long/2addr v11, v13

    iput-wide v11, v8, Lcom/android/server/am/ActivityManagerService$Association;->mTime:J

    .line 14187
    iget-object v11, v8, Lcom/android/server/am/ActivityManagerService$Association;->mStateTimes:[J

    iget v12, v8, Lcom/android/server/am/ActivityManagerService$Association;->mLastState:I

    add-int/lit8 v12, v12, 0x0

    aget-wide v13, v11, v12

    move-object v15, v1

    .end local v1    # "components":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Landroid/content/ComponentName;Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;>;"
    .local v15, "components":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Landroid/content/ComponentName;Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;>;"
    iget-wide v0, v8, Lcom/android/server/am/ActivityManagerService$Association;->mLastStateUptime:J

    sub-long v0, v9, v0

    add-long/2addr v13, v0

    aput-wide v13, v11, v12

    .line 14189
    const/16 v0, 0x16

    iput v0, v8, Lcom/android/server/am/ActivityManagerService$Association;->mLastState:I

    goto :goto_0

    .line 14184
    .end local v9    # "uptime":J
    .end local v15    # "components":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Landroid/content/ComponentName;Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;>;"
    .restart local v1    # "components":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Landroid/content/ComponentName;Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;>;"
    :cond_5
    move-object v15, v1

    .line 14191
    .end local v1    # "components":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Landroid/content/ComponentName;Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;>;"
    .restart local v15    # "components":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Landroid/content/ComponentName;Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;>;"
    :goto_0
    return-void

    .line 14180
    .end local v15    # "components":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Landroid/content/ComponentName;Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;>;"
    .restart local v1    # "components":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Landroid/content/ComponentName;Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;>;"
    :cond_6
    move-object v15, v1

    .line 14181
    .end local v1    # "components":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Landroid/content/ComponentName;Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;>;"
    .restart local v15    # "components":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Landroid/content/ComponentName;Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;>;"
    :goto_1
    return-void
.end method

.method public stopBinderTrackingAndDump(Landroid/os/ParcelFileDescriptor;)Z
    .locals 6
    .param p1, "fd"    # Landroid/os/ParcelFileDescriptor;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .line 15226
    const-string v0, "android.permission.SET_ACTIVITY_WATCHER"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_3

    .line 15232
    const/4 v0, 0x1

    .line 15234
    .local v0, "closeFd":Z
    :try_start_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 15235
    if-eqz p1, :cond_1

    .line 15238
    const/4 v2, 0x0

    iput-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mBinderTransactionTrackingEnabled:Z

    .line 15240
    new-instance v2, Lcom/android/internal/util/FastPrintWriter;

    new-instance v3, Ljava/io/FileOutputStream;

    invoke-virtual {p1}, Landroid/os/ParcelFileDescriptor;->getFileDescriptor()Ljava/io/FileDescriptor;

    move-result-object v4

    invoke-direct {v3, v4}, Ljava/io/FileOutputStream;-><init>(Ljava/io/FileDescriptor;)V

    invoke-direct {v2, v3}, Lcom/android/internal/util/FastPrintWriter;-><init>(Ljava/io/OutputStream;)V

    .line 15241
    .local v2, "pw":Ljava/io/PrintWriter;
    const-string v3, "Binder transaction traces for all processes.\n"

    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 15242
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    new-instance v4, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda27;

    invoke-direct {v4, p0, v2, p1}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda27;-><init>(Lcom/android/server/am/ActivityManagerService;Ljava/io/PrintWriter;Landroid/os/ParcelFileDescriptor;)V

    const/4 v5, 0x1

    invoke-virtual {v3, v5, v4}, Lcom/android/server/am/ProcessList;->forEachLruProcessesLOSP(ZLjava/util/function/Consumer;)V

    .line 15268
    const/4 v0, 0x0

    .line 15269
    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 15272
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    if-eqz p1, :cond_0

    if-eqz v0, :cond_0

    .line 15274
    :try_start_2
    invoke-virtual {p1}, Landroid/os/ParcelFileDescriptor;->close()V
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_0

    .line 15276
    goto :goto_0

    .line 15275
    :catch_0
    move-exception v1

    .line 15269
    :cond_0
    :goto_0
    return v5

    .line 15236
    .end local v2    # "pw":Ljava/io/PrintWriter;
    :cond_1
    :try_start_3
    new-instance v2, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v3, "null fd"

    invoke-direct {v2, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .end local v0    # "closeFd":Z
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "fd":Landroid/os/ParcelFileDescriptor;
    throw v2

    .line 15270
    .restart local v0    # "closeFd":Z
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "fd":Landroid/os/ParcelFileDescriptor;
    :catchall_0
    move-exception v2

    monitor-exit v1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .end local v0    # "closeFd":Z
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "fd":Landroid/os/ParcelFileDescriptor;
    throw v2
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 15272
    .restart local v0    # "closeFd":Z
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "fd":Landroid/os/ParcelFileDescriptor;
    :catchall_1
    move-exception v1

    if-eqz p1, :cond_2

    if-eqz v0, :cond_2

    .line 15274
    :try_start_5
    invoke-virtual {p1}, Landroid/os/ParcelFileDescriptor;->close()V
    :try_end_5
    .catch Ljava/io/IOException; {:try_start_5 .. :try_end_5} :catch_1

    .line 15276
    goto :goto_1

    .line 15275
    :catch_1
    move-exception v2

    .line 15278
    :cond_2
    :goto_1
    throw v1

    .line 15228
    .end local v0    # "closeFd":Z
    :cond_3
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires permission android.permission.SET_ACTIVITY_WATCHER"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public stopDelegateShellPermissionIdentity()V
    .locals 3

    .line 16871
    invoke-static {}, Landroid/os/UserHandle;->getCallingAppId()I

    move-result v0

    const/16 v1, 0x7d0

    if-eq v0, v1, :cond_1

    .line 16872
    invoke-static {}, Landroid/os/UserHandle;->getCallingAppId()I

    move-result v0

    if-nez v0, :cond_0

    goto :goto_0

    .line 16873
    :cond_0
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Only the shell can delegate its permissions"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 16875
    :cond_1
    :goto_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 16876
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/appop/AppOpsService;

    const/4 v2, 0x0

    invoke-virtual {v1, v2}, Lcom/android/server/appop/AppOpsService;->setAppOpsServiceDelegate(Landroid/app/AppOpsManagerInternal$CheckOpsDelegate;)V

    .line 16877
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->getPermissionManagerInternal()Lcom/android/server/pm/permission/PermissionManagerServiceInternal;

    move-result-object v1

    invoke-interface {v1}, Lcom/android/server/pm/permission/PermissionManagerServiceInternal;->stopShellPermissionIdentityDelegation()V

    .line 16878
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 16879
    return-void

    .line 16878
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v1
.end method

.method public stopProfile(I)Z
    .locals 1
    .param p1, "userId"    # I

    .line 15102
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {v0, p1}, Lcom/android/server/am/UserController;->stopProfile(I)Z

    move-result v0

    return v0
.end method

.method public stopService(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;I)I
    .locals 2
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .param p2, "service"    # Landroid/content/Intent;
    .param p3, "resolvedType"    # Ljava/lang/String;
    .param p4, "userId"    # I

    .line 11851
    const-string/jumbo v0, "stopService"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 11853
    if-eqz p2, :cond_1

    invoke-virtual {p2}, Landroid/content/Intent;->hasFileDescriptors()Z

    move-result v0

    const/4 v1, 0x1

    if-eq v0, v1, :cond_0

    goto :goto_0

    .line 11854
    :cond_0
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "File descriptors passed in Intent"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 11857
    :cond_1
    :goto_0
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 11858
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v0, p1, p2, p3, p4}, Lcom/android/server/am/ActiveServices;->stopServiceLocked(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;I)I

    move-result v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v0

    .line 11859
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public stopServiceToken(Landroid/content/ComponentName;Landroid/os/IBinder;I)Z
    .locals 1
    .param p1, "className"    # Landroid/content/ComponentName;
    .param p2, "token"    # Landroid/os/IBinder;
    .param p3, "startId"    # I

    .line 11882
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 11883
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/server/am/ActiveServices;->stopServiceTokenLocked(Landroid/content/ComponentName;Landroid/os/IBinder;I)Z

    move-result v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v0

    .line 11884
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public stopUser(IZLandroid/app/IStopUserCallback;)I
    .locals 6
    .param p1, "userId"    # I
    .param p2, "force"    # Z
    .param p3, "callback"    # Landroid/app/IStopUserCallback;

    .line 15068
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    const/4 v3, 0x0

    const/4 v5, 0x0

    move v1, p1

    move v2, p2

    move-object v4, p3

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/UserController;->stopUser(IZZLandroid/app/IStopUserCallback;Lcom/android/server/am/UserState$KeyEvictedCallback;)I

    move-result v0

    return v0
.end method

.method public stopUserWithDelayedLocking(IZLandroid/app/IStopUserCallback;)I
    .locals 6
    .param p1, "userId"    # I
    .param p2, "force"    # Z
    .param p3, "callback"    # Landroid/app/IStopUserCallback;

    .line 15091
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    const/4 v3, 0x1

    const/4 v5, 0x0

    move v1, p1

    move v2, p2

    move-object v4, p3

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/UserController;->stopUser(IZZLandroid/app/IStopUserCallback;Lcom/android/server/am/UserState$KeyEvictedCallback;)I

    move-result v0

    return v0
.end method

.method public suppressResizeConfigChanges(Z)V
    .locals 1
    .param p1, "suppress"    # Z
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .line 14020
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {v0, p1}, Lcom/android/server/wm/ActivityTaskManagerService;->suppressResizeConfigChanges(Z)V

    .line 14021
    return-void
.end method

.method public switchUser(I)Z
    .locals 1
    .param p1, "targetUserId"    # I

    .line 15063
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {v0, p1}, Lcom/android/server/am/UserController;->switchUser(I)Z

    move-result v0

    return v0
.end method

.method public systemReady(Ljava/lang/Runnable;Lcom/android/server/utils/TimingsTraceAndSlog;)V
    .locals 49
    .param p1, "goingCallback"    # Ljava/lang/Runnable;
    .param p2, "t"    # Lcom/android/server/utils/TimingsTraceAndSlog;

    .line 7506
    move-object/from16 v15, p0

    move-object/from16 v14, p2

    const-string v0, "PhaseActivityManagerReady"

    invoke-virtual {v14, v0}, Lcom/android/server/utils/TimingsTraceAndSlog;->traceBegin(Ljava/lang/String;)V

    .line 7507
    iget-object v0, v15, Lcom/android/server/am/ActivityManagerService;->mSystemServiceManager:Lcom/android/server/SystemServiceManager;

    invoke-virtual {v0}, Lcom/android/server/SystemServiceManager;->preSystemReady()V

    .line 7508
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 7509
    iget-boolean v0, v15, Lcom/android/server/am/ActivityManagerService;->mSystemReady:Z

    if-eqz v0, :cond_1

    .line 7512
    if-eqz p1, :cond_0

    .line 7513
    invoke-interface/range {p1 .. p1}, Ljava/lang/Runnable;->run()V

    .line 7515
    :cond_0
    invoke-virtual/range {p2 .. p2}, Lcom/android/server/utils/TimingsTraceAndSlog;->traceEnd()V

    .line 7516
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_12

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 7519
    :cond_1
    :try_start_1
    const-string v0, "controllersReady"

    invoke-virtual {v14, v0}, Lcom/android/server/utils/TimingsTraceAndSlog;->traceBegin(Ljava/lang/String;)V

    .line 7520
    const-class v0, Lcom/android/server/DeviceIdleInternal;

    .line 7521
    invoke-static {v0}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/DeviceIdleInternal;

    iput-object v0, v15, Lcom/android/server/am/ActivityManagerService;->mLocalDeviceIdleController:Lcom/android/server/DeviceIdleInternal;

    .line 7522
    iget-object v0, v15, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {v0}, Lcom/android/server/wm/ActivityTaskManagerService;->onSystemReady()V

    .line 7524
    iget-object v0, v15, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {v0}, Lcom/android/server/am/UserController;->onSystemReady()V

    .line 7525
    iget-object v0, v15, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/appop/AppOpsService;

    invoke-virtual {v0}, Lcom/android/server/appop/AppOpsService;->systemReady()V

    .line 7526
    iget-object v0, v15, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v0}, Lcom/android/server/am/ProcessList;->onSystemReady()V

    .line 7527
    const/4 v13, 0x1

    iput-boolean v13, v15, Lcom/android/server/am/ActivityManagerService;->mSystemReady:Z

    .line 7528
    invoke-virtual/range {p2 .. p2}, Lcom/android/server/utils/TimingsTraceAndSlog;->traceEnd()V

    .line 7529
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_12

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 7532
    :try_start_2
    const-string v0, "device_identifiers"

    .line 7533
    invoke-static {v0}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v0

    .line 7532
    invoke-static {v0}, Landroid/os/IDeviceIdentifiersPolicyService$Stub;->asInterface(Landroid/os/IBinder;)Landroid/os/IDeviceIdentifiersPolicyService;

    move-result-object v0

    .line 7534
    invoke-interface {v0}, Landroid/os/IDeviceIdentifiersPolicyService;->getSerial()Ljava/lang/String;

    move-result-object v0

    sput-object v0, Lcom/android/server/am/ActivityManagerService;->sTheRealBuildSerial:Ljava/lang/String;
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_0

    goto :goto_0

    .line 7535
    :catch_0
    move-exception v0

    :goto_0
    nop

    .line 7537
    const-string/jumbo v0, "killProcesses"

    invoke-virtual {v14, v0}, Lcom/android/server/utils/TimingsTraceAndSlog;->traceBegin(Ljava/lang/String;)V

    .line 7538
    const/4 v1, 0x0

    .line 7539
    .local v1, "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    iget-object v2, v15, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    monitor-enter v2

    .line 7540
    :try_start_3
    iget-object v0, v15, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-virtual {v0}, Lcom/android/server/am/ActivityManagerService$PidMap;->size()I

    move-result v0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_10

    sub-int/2addr v0, v13

    move-object v12, v1

    .end local v1    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    .local v0, "i":I
    .local v12, "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    :goto_1
    if-ltz v0, :cond_4

    .line 7541
    :try_start_4
    iget-object v1, v15, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-virtual {v1, v0}, Lcom/android/server/am/ActivityManagerService$PidMap;->valueAt(I)Lcom/android/server/am/ProcessRecord;

    move-result-object v1

    .line 7542
    .local v1, "proc":Lcom/android/server/am/ProcessRecord;
    iget-object v3, v1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    invoke-virtual {v15, v3}, Lcom/android/server/am/ActivityManagerService;->isAllowedWhileBooting(Landroid/content/pm/ApplicationInfo;)Z

    move-result v3

    if-nez v3, :cond_3

    .line 7543
    if-nez v12, :cond_2

    .line 7544
    new-instance v3, Ljava/util/ArrayList;

    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .end local v12    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    .local v3, "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    goto :goto_2

    .line 7543
    .end local v3    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    .restart local v12    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    :cond_2
    move-object v3, v12

    .line 7546
    .end local v12    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    .restart local v3    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    :goto_2
    :try_start_5
    invoke-virtual {v3, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    move-object v12, v3

    goto :goto_3

    .line 7549
    .end local v0    # "i":I
    .end local v1    # "proc":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v0

    move-object v1, v3

    move-object v4, v14

    move-object v3, v15

    goto/16 :goto_f

    .line 7540
    .end local v3    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    .restart local v0    # "i":I
    .restart local v12    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    :cond_3
    :goto_3
    add-int/lit8 v0, v0, -0x1

    goto :goto_1

    .line 7549
    .end local v0    # "i":I
    :catchall_1
    move-exception v0

    move-object v1, v12

    move-object v4, v14

    move-object v3, v15

    goto/16 :goto_f

    :cond_4
    :try_start_6
    monitor-exit v2
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_f

    .line 7551
    monitor-enter p0

    :try_start_7
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_d

    .line 7552
    if-eqz v12, :cond_5

    .line 7553
    :try_start_8
    invoke-virtual {v12}, Ljava/util/ArrayList;->size()I

    move-result v0

    sub-int/2addr v0, v13

    .restart local v0    # "i":I
    :goto_4
    if-ltz v0, :cond_5

    .line 7554
    invoke-virtual {v12, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ProcessRecord;

    .line 7555
    .restart local v1    # "proc":Lcom/android/server/am/ProcessRecord;
    const-string v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Removing system update proc: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 7556
    iget-object v2, v15, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    const/4 v4, 0x1

    const/4 v5, 0x0

    const/16 v6, 0xd

    const/16 v7, 0x8

    const-string/jumbo v8, "system update done"

    move-object v3, v1

    invoke-virtual/range {v2 .. v8}, Lcom/android/server/am/ProcessList;->removeProcessLocked(Lcom/android/server/am/ProcessRecord;ZZIILjava/lang/String;)Z
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_2

    .line 7553
    nop

    .end local v1    # "proc":Lcom/android/server/am/ProcessRecord;
    add-int/lit8 v0, v0, -0x1

    goto :goto_4

    .line 7567
    .end local v0    # "i":I
    :catchall_2
    move-exception v0

    move-object/from16 v47, v12

    move-object v4, v14

    move-object v3, v15

    goto/16 :goto_e

    .line 7566
    :cond_5
    :try_start_9
    iput-boolean v13, v15, Lcom/android/server/am/ActivityManagerService;->mProcessesReady:Z

    .line 7567
    monitor-exit p0
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_d

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 7568
    invoke-virtual/range {p2 .. p2}, Lcom/android/server/utils/TimingsTraceAndSlog;->traceEnd()V

    .line 7570
    const-string v0, "ActivityManager"

    const-string v1, "System now ready"

    invoke-static {v0, v1}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 7572
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v0

    invoke-static {v0, v1}, Lcom/android/server/am/EventLogTags;->writeBootProgressAmsReady(J)V

    .line 7574
    const-string/jumbo v0, "updateTopComponentForFactoryTest"

    invoke-virtual {v14, v0}, Lcom/android/server/utils/TimingsTraceAndSlog;->traceBegin(Ljava/lang/String;)V

    .line 7575
    iget-object v0, v15, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-virtual {v0}, Lcom/android/server/wm/ActivityTaskManagerInternal;->updateTopComponentForFactoryTest()V

    .line 7576
    invoke-virtual/range {p2 .. p2}, Lcom/android/server/utils/TimingsTraceAndSlog;->traceEnd()V

    .line 7578
    const-string/jumbo v0, "registerActivityLaunchObserver"

    invoke-virtual {v14, v0}, Lcom/android/server/utils/TimingsTraceAndSlog;->traceBegin(Ljava/lang/String;)V

    .line 7579
    iget-object v0, v15, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-virtual {v0}, Lcom/android/server/wm/ActivityTaskManagerInternal;->getLaunchObserverRegistry()Lcom/android/server/wm/ActivityMetricsLaunchObserverRegistry;

    move-result-object v0

    iget-object v1, v15, Lcom/android/server/am/ActivityManagerService;->mActivityLaunchObserver:Lcom/android/server/wm/ActivityMetricsLaunchObserver;

    invoke-interface {v0, v1}, Lcom/android/server/wm/ActivityMetricsLaunchObserverRegistry;->registerLaunchObserver(Lcom/android/server/wm/ActivityMetricsLaunchObserver;)V

    .line 7580
    invoke-virtual/range {p2 .. p2}, Lcom/android/server/utils/TimingsTraceAndSlog;->traceEnd()V

    .line 7582
    const-string/jumbo v0, "watchDeviceProvisioning"

    invoke-virtual {v14, v0}, Lcom/android/server/utils/TimingsTraceAndSlog;->traceBegin(Ljava/lang/String;)V

    .line 7583
    iget-object v0, v15, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-direct {v15, v0}, Lcom/android/server/am/ActivityManagerService;->watchDeviceProvisioning(Landroid/content/Context;)V

    .line 7584
    invoke-virtual/range {p2 .. p2}, Lcom/android/server/utils/TimingsTraceAndSlog;->traceEnd()V

    .line 7586
    const-string/jumbo v0, "retrieveSettings"

    invoke-virtual {v14, v0}, Lcom/android/server/utils/TimingsTraceAndSlog;->traceBegin(Ljava/lang/String;)V

    .line 7587
    invoke-direct/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->retrieveSettings()V

    .line 7588
    invoke-virtual/range {p2 .. p2}, Lcom/android/server/utils/TimingsTraceAndSlog;->traceEnd()V

    .line 7590
    const-string v0, "Ugm.onSystemReady"

    invoke-virtual {v14, v0}, Lcom/android/server/utils/TimingsTraceAndSlog;->traceBegin(Ljava/lang/String;)V

    .line 7591
    iget-object v0, v15, Lcom/android/server/am/ActivityManagerService;->mUgmInternal:Lcom/android/server/uri/UriGrantsManagerInternal;

    invoke-interface {v0}, Lcom/android/server/uri/UriGrantsManagerInternal;->onSystemReady()V

    .line 7592
    invoke-virtual/range {p2 .. p2}, Lcom/android/server/utils/TimingsTraceAndSlog;->traceEnd()V

    .line 7594
    const-string/jumbo v0, "updateForceBackgroundCheck"

    invoke-virtual {v14, v0}, Lcom/android/server/utils/TimingsTraceAndSlog;->traceBegin(Ljava/lang/String;)V

    .line 7595
    const-class v0, Landroid/os/PowerManagerInternal;

    invoke-static {v0}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v0

    move-object v11, v0

    check-cast v11, Landroid/os/PowerManagerInternal;

    .line 7596
    .local v11, "pmi":Landroid/os/PowerManagerInternal;
    if-eqz v11, :cond_6

    .line 7597
    new-instance v0, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda24;

    invoke-direct {v0, v15}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda24;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    const/16 v1, 0xc

    invoke-virtual {v11, v1, v0}, Landroid/os/PowerManagerInternal;->registerLowPowerModeObserver(ILjava/util/function/Consumer;)V

    .line 7599
    nop

    .line 7600
    invoke-virtual {v11, v1}, Landroid/os/PowerManagerInternal;->getLowPowerState(I)Landroid/os/PowerSaveState;

    move-result-object v0

    iget-boolean v0, v0, Landroid/os/PowerSaveState;->batterySaverEnabled:Z

    .line 7599
    invoke-direct {v15, v0}, Lcom/android/server/am/ActivityManagerService;->updateForceBackgroundCheck(Z)V

    goto :goto_5

    .line 7602
    :cond_6
    const-string v0, "ActivityManager"

    const-string v1, "PowerManagerInternal not found."

    invoke-static {v0, v1}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    .line 7604
    :goto_5
    invoke-virtual/range {p2 .. p2}, Lcom/android/server/utils/TimingsTraceAndSlog;->traceEnd()V

    .line 7606
    if-eqz p1, :cond_7

    invoke-interface/range {p1 .. p1}, Ljava/lang/Runnable;->run()V

    .line 7608
    :cond_7
    const-string v0, "getCurrentUser"

    invoke-virtual {v14, v0}, Lcom/android/server/utils/TimingsTraceAndSlog;->traceBegin(Ljava/lang/String;)V

    .line 7611
    iget-object v0, v15, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {v0}, Lcom/android/server/am/UserController;->getCurrentUserId()I

    move-result v10

    .line 7612
    .local v10, "currentUserId":I
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Current user:"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 7613
    if-eqz v10, :cond_9

    iget-object v0, v15, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {v0}, Lcom/android/server/am/UserController;->isSystemUserStarted()Z

    move-result v0

    if-eqz v0, :cond_8

    goto :goto_6

    .line 7616
    :cond_8
    new-instance v0, Ljava/lang/RuntimeException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "System user not started while current user is:"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/RuntimeException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 7619
    :cond_9
    :goto_6
    invoke-virtual/range {p2 .. p2}, Lcom/android/server/utils/TimingsTraceAndSlog;->traceEnd()V

    .line 7621
    const-string v0, "ActivityManagerStartApps"

    invoke-virtual {v14, v0}, Lcom/android/server/utils/TimingsTraceAndSlog;->traceBegin(Ljava/lang/String;)V

    .line 7622
    iget-object v0, v15, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v0}, Lcom/android/server/am/BatteryStatsService;->onSystemReady()V

    .line 7623
    iget-object v0, v15, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    const v1, 0x8007

    .line 7624
    invoke-static {v10}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    move-result-object v2

    .line 7623
    invoke-virtual {v0, v1, v2, v10}, Lcom/android/server/am/BatteryStatsService;->noteEvent(ILjava/lang/String;I)V

    .line 7625
    iget-object v0, v15, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    const v1, 0x8008

    .line 7626
    invoke-static {v10}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    move-result-object v2

    .line 7625
    invoke-virtual {v0, v1, v2, v10}, Lcom/android/server/am/BatteryStatsService;->noteEvent(ILjava/lang/String;I)V

    .line 7632
    const/4 v9, 0x0

    if-nez v10, :cond_a

    move v0, v13

    goto :goto_7

    :cond_a
    move v0, v9

    :goto_7
    move/from16 v42, v0

    .line 7634
    .local v42, "bootingSystemUser":Z
    if-eqz v42, :cond_b

    .line 7635
    iget-object v0, v15, Lcom/android/server/am/ActivityManagerService;->mSystemServiceManager:Lcom/android/server/SystemServiceManager;

    invoke-virtual {v0, v14, v10}, Lcom/android/server/SystemServiceManager;->onUserStarting(Lcom/android/server/utils/TimingsTraceAndSlog;I)V

    .line 7638
    :cond_b
    monitor-enter p0

    :try_start_a
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 7641
    const-string/jumbo v0, "startPersistentApps"

    invoke-virtual {v14, v0}, Lcom/android/server/utils/TimingsTraceAndSlog;->traceBegin(Ljava/lang/String;)V

    .line 7642
    const/high16 v0, 0x80000

    invoke-virtual {v15, v0}, Lcom/android/server/am/ActivityManagerService;->startPersistentApps(I)V

    .line 7643
    invoke-virtual/range {p2 .. p2}, Lcom/android/server/utils/TimingsTraceAndSlog;->traceEnd()V

    .line 7646
    iput-boolean v13, v15, Lcom/android/server/am/ActivityManagerService;->mBooting:Z

    .line 7650
    invoke-static {}, Landroid/os/UserManager;->isSplitSystemUser()Z

    move-result v0
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_b

    if-eqz v0, :cond_c

    :try_start_b
    iget-object v0, v15, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    .line 7651
    invoke-virtual {v0}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v0

    const-string/jumbo v1, "user_setup_complete"

    invoke-static {v0, v1, v9}, Landroid/provider/Settings$Secure;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v0
    :try_end_b
    .catchall {:try_start_b .. :try_end_b} :catchall_3

    if-nez v0, :cond_d

    goto :goto_8

    .line 7744
    :catchall_3
    move-exception v0

    move v2, v10

    move-object/from16 v46, v11

    move-object/from16 v47, v12

    move-object v4, v14

    move-object v3, v15

    goto/16 :goto_d

    .line 7651
    :cond_c
    :goto_8
    :try_start_c
    const-string/jumbo v0, "ro.system_user_home_needed"

    .line 7653
    invoke-static {v0, v9}, Landroid/os/SystemProperties;->getBoolean(Ljava/lang/String;Z)Z

    move-result v0
    :try_end_c
    .catchall {:try_start_c .. :try_end_c} :catchall_b

    if-eqz v0, :cond_e

    .line 7654
    :cond_d
    :try_start_d
    const-string v0, "enableHomeActivity"

    invoke-virtual {v14, v0}, Lcom/android/server/utils/TimingsTraceAndSlog;->traceBegin(Ljava/lang/String;)V

    .line 7655
    new-instance v0, Landroid/content/ComponentName;

    iget-object v1, v15, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    const-class v2, Lcom/android/internal/app/SystemUserHomeActivity;

    invoke-direct {v0, v1, v2}, Landroid/content/ComponentName;-><init>(Landroid/content/Context;Ljava/lang/Class;)V
    :try_end_d
    .catchall {:try_start_d .. :try_end_d} :catchall_3

    move-object v1, v0

    .line 7657
    .local v1, "cName":Landroid/content/ComponentName;
    :try_start_e
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v0

    invoke-interface {v0, v1, v13, v9, v9}, Landroid/content/pm/IPackageManager;->setComponentEnabledSetting(Landroid/content/ComponentName;III)V
    :try_end_e
    .catch Landroid/os/RemoteException; {:try_start_e .. :try_end_e} :catch_1
    .catchall {:try_start_e .. :try_end_e} :catchall_3

    .line 7662
    nop

    .line 7663
    :try_start_f
    invoke-virtual/range {p2 .. p2}, Lcom/android/server/utils/TimingsTraceAndSlog;->traceEnd()V

    goto :goto_9

    .line 7660
    :catch_1
    move-exception v0

    .line 7661
    .local v0, "e":Landroid/os/RemoteException;
    invoke-virtual {v0}, Landroid/os/RemoteException;->rethrowAsRuntimeException()Ljava/lang/RuntimeException;

    move-result-object v2

    .end local v10    # "currentUserId":I
    .end local v11    # "pmi":Landroid/os/PowerManagerInternal;
    .end local v12    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    .end local v42    # "bootingSystemUser":Z
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "goingCallback":Ljava/lang/Runnable;
    .end local p2    # "t":Lcom/android/server/utils/TimingsTraceAndSlog;
    throw v2

    .line 7666
    .end local v0    # "e":Landroid/os/RemoteException;
    .end local v1    # "cName":Landroid/content/ComponentName;
    .restart local v10    # "currentUserId":I
    .restart local v11    # "pmi":Landroid/os/PowerManagerInternal;
    .restart local v12    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    .restart local v42    # "bootingSystemUser":Z
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "goingCallback":Ljava/lang/Runnable;
    .restart local p2    # "t":Lcom/android/server/utils/TimingsTraceAndSlog;
    :cond_e
    :goto_9
    if-eqz v42, :cond_f

    .line 7667
    const-string/jumbo v0, "startHomeOnAllDisplays"

    invoke-virtual {v14, v0}, Lcom/android/server/utils/TimingsTraceAndSlog;->traceBegin(Ljava/lang/String;)V

    .line 7668
    iget-object v0, v15, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    const-string/jumbo v1, "systemReady"

    invoke-virtual {v0, v10, v1}, Lcom/android/server/wm/ActivityTaskManagerInternal;->startHomeOnAllDisplays(ILjava/lang/String;)Z

    .line 7669
    invoke-virtual/range {p2 .. p2}, Lcom/android/server/utils/TimingsTraceAndSlog;->traceEnd()V
    :try_end_f
    .catchall {:try_start_f .. :try_end_f} :catchall_3

    .line 7672
    :cond_f
    :try_start_10
    const-string/jumbo v0, "showSystemReadyErrorDialogs"

    invoke-virtual {v14, v0}, Lcom/android/server/utils/TimingsTraceAndSlog;->traceBegin(Ljava/lang/String;)V

    .line 7673
    iget-object v0, v15, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-virtual {v0}, Lcom/android/server/wm/ActivityTaskManagerInternal;->showSystemReadyErrorDialogsIfNeeded()V

    .line 7674
    invoke-virtual/range {p2 .. p2}, Lcom/android/server/utils/TimingsTraceAndSlog;->traceEnd()V
    :try_end_10
    .catchall {:try_start_10 .. :try_end_10} :catchall_b

    .line 7677
    if-eqz v42, :cond_10

    .line 7678
    :try_start_11
    const-string/jumbo v0, "sendUserStartBroadcast"

    invoke-virtual {v14, v0}, Lcom/android/server/utils/TimingsTraceAndSlog;->traceBegin(Ljava/lang/String;)V

    .line 7679
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v19

    .line 7680
    .local v19, "callingUid":I
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v20

    .line 7681
    .local v20, "callingPid":I
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0
    :try_end_11
    .catchall {:try_start_11 .. :try_end_11} :catchall_9

    move-wide/from16 v43, v0

    .line 7683
    .local v43, "ident":J
    :try_start_12
    new-instance v0, Landroid/content/Intent;

    const-string v1, "android.intent.action.USER_STARTED"

    invoke-direct {v0, v1}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 7684
    .local v0, "intent":Landroid/content/Intent;
    const/high16 v1, 0x50000000

    invoke-virtual {v0, v1}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 7686
    const-string v1, "android.intent.extra.user_handle"

    invoke-virtual {v0, v1, v10}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 7687
    const/4 v2, 0x0

    const/4 v3, 0x0

    const/4 v4, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/16 v16, 0x0

    const/16 v17, 0x0

    const/16 v21, 0x0

    const/16 v22, 0x0

    const/16 v23, -0x1

    const/16 v24, 0x0

    const/16 v25, 0x0

    const/16 v26, 0x0

    sget v37, Lcom/android/server/am/ActivityManagerService;->MY_PID:I
    :try_end_12
    .catchall {:try_start_12 .. :try_end_12} :catchall_7

    const/16 v18, 0x3e8

    move-object/from16 v1, p0

    move-object v5, v0

    move-object/from16 v9, v16

    move/from16 v45, v10

    .end local v10    # "currentUserId":I
    .local v45, "currentUserId":I
    move-object/from16 v10, v17

    move-object/from16 v46, v11

    .end local v11    # "pmi":Landroid/os/PowerManagerInternal;
    .local v46, "pmi":Landroid/os/PowerManagerInternal;
    move-object/from16 v11, v21

    move-object/from16 v47, v12

    .end local v12    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    .local v47, "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    move-object/from16 v12, v22

    move/from16 v48, v13

    move/from16 v13, v23

    move-object/from16 v14, v24

    move/from16 v15, v25

    move/from16 v16, v26

    move/from16 v17, v37

    move/from16 v21, v45

    :try_start_13
    invoke-virtual/range {v1 .. v21}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;[Ljava/lang/String;ILandroid/os/Bundle;ZZIIIII)I

    .line 7691
    new-instance v1, Landroid/content/Intent;

    const-string v2, "android.intent.action.USER_STARTING"

    invoke-direct {v1, v2}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    move-object v0, v1

    .line 7692
    const/high16 v1, 0x40000000    # 2.0f

    invoke-virtual {v0, v1}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 7693
    const-string v1, "android.intent.extra.user_handle"
    :try_end_13
    .catchall {:try_start_13 .. :try_end_13} :catchall_6

    move/from16 v2, v45

    .end local v45    # "currentUserId":I
    .local v2, "currentUserId":I
    :try_start_14
    invoke-virtual {v0, v1, v2}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 7694
    const/16 v22, 0x0

    const/16 v23, 0x0

    const/16 v24, 0x0

    const/16 v26, 0x0

    new-instance v1, Lcom/android/server/am/ActivityManagerService$13;
    :try_end_14
    .catchall {:try_start_14 .. :try_end_14} :catchall_5

    move-object/from16 v3, p0

    :try_start_15
    invoke-direct {v1, v3}, Lcom/android/server/am/ActivityManagerService$13;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    const/16 v28, 0x0

    const/16 v29, 0x0

    const/16 v30, 0x0

    const-string v4, "android.permission.INTERACT_ACROSS_USERS"

    filled-new-array {v4}, [Ljava/lang/String;

    move-result-object v31

    const/16 v32, 0x0

    const/16 v33, -0x1

    const/16 v34, 0x0

    const/16 v35, 0x1

    const/16 v36, 0x0

    const/16 v38, 0x3e8

    const/16 v41, -0x1

    move-object/from16 v21, p0

    move-object/from16 v25, v0

    move-object/from16 v27, v1

    move/from16 v39, v19

    move/from16 v40, v20

    invoke-virtual/range {v21 .. v41}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;[Ljava/lang/String;ILandroid/os/Bundle;ZZIIIII)I
    :try_end_15
    .catchall {:try_start_15 .. :try_end_15} :catchall_4

    goto :goto_b

    .line 7703
    .end local v0    # "intent":Landroid/content/Intent;
    :catchall_4
    move-exception v0

    goto :goto_a

    :catchall_5
    move-exception v0

    move-object/from16 v3, p0

    goto :goto_a

    .end local v2    # "currentUserId":I
    .restart local v45    # "currentUserId":I
    :catchall_6
    move-exception v0

    move-object/from16 v3, p0

    move/from16 v2, v45

    .end local v45    # "currentUserId":I
    .restart local v2    # "currentUserId":I
    goto :goto_a

    .end local v2    # "currentUserId":I
    .end local v46    # "pmi":Landroid/os/PowerManagerInternal;
    .end local v47    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    .restart local v10    # "currentUserId":I
    .restart local v11    # "pmi":Landroid/os/PowerManagerInternal;
    .restart local v12    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    :catchall_7
    move-exception v0

    move v2, v10

    move-object/from16 v46, v11

    move-object/from16 v47, v12

    move/from16 v48, v13

    move-object v3, v15

    .line 7704
    .end local v10    # "currentUserId":I
    .end local v11    # "pmi":Landroid/os/PowerManagerInternal;
    .end local v12    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    .local v0, "e":Ljava/lang/Throwable;
    .restart local v2    # "currentUserId":I
    .restart local v46    # "pmi":Landroid/os/PowerManagerInternal;
    .restart local v47    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    :goto_a
    :try_start_16
    const-string v1, "ActivityManager"

    const-string v4, "Failed sending first user broadcasts"

    invoke-static {v1, v4, v0}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_16
    .catchall {:try_start_16 .. :try_end_16} :catchall_8

    .line 7706
    .end local v0    # "e":Ljava/lang/Throwable;
    :goto_b
    :try_start_17
    invoke-static/range {v43 .. v44}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 7707
    nop

    .line 7708
    invoke-virtual/range {p2 .. p2}, Lcom/android/server/utils/TimingsTraceAndSlog;->traceEnd()V

    .line 7709
    .end local v19    # "callingUid":I
    .end local v20    # "callingPid":I
    .end local v43    # "ident":J
    goto :goto_c

    .line 7706
    .restart local v19    # "callingUid":I
    .restart local v20    # "callingPid":I
    .restart local v43    # "ident":J
    :catchall_8
    move-exception v0

    invoke-static/range {v43 .. v44}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 7707
    nop

    .end local v2    # "currentUserId":I
    .end local v42    # "bootingSystemUser":Z
    .end local v46    # "pmi":Landroid/os/PowerManagerInternal;
    .end local v47    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "goingCallback":Ljava/lang/Runnable;
    .end local p2    # "t":Lcom/android/server/utils/TimingsTraceAndSlog;
    throw v0

    .line 7744
    .end local v19    # "callingUid":I
    .end local v20    # "callingPid":I
    .end local v43    # "ident":J
    .restart local v10    # "currentUserId":I
    .restart local v11    # "pmi":Landroid/os/PowerManagerInternal;
    .restart local v12    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    .restart local v42    # "bootingSystemUser":Z
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "goingCallback":Ljava/lang/Runnable;
    .restart local p2    # "t":Lcom/android/server/utils/TimingsTraceAndSlog;
    :catchall_9
    move-exception v0

    move v2, v10

    move-object/from16 v46, v11

    move-object/from16 v47, v12

    move-object v3, v15

    move-object/from16 v4, p2

    goto/16 :goto_d

    .line 7710
    :cond_10
    move v2, v10

    move-object/from16 v46, v11

    move-object/from16 v47, v12

    move/from16 v48, v13

    move-object v3, v15

    .end local v10    # "currentUserId":I
    .end local v11    # "pmi":Landroid/os/PowerManagerInternal;
    .end local v12    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    .restart local v2    # "currentUserId":I
    .restart local v46    # "pmi":Landroid/os/PowerManagerInternal;
    .restart local v47    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Not sending multi-user broadcasts for non-system user "

    invoke-virtual {v1, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 7714
    :goto_c
    const-string/jumbo v0, "resumeTopActivities"
    :try_end_17
    .catchall {:try_start_17 .. :try_end_17} :catchall_a

    move-object/from16 v4, p2

    :try_start_18
    invoke-virtual {v4, v0}, Lcom/android/server/utils/TimingsTraceAndSlog;->traceBegin(Ljava/lang/String;)V

    .line 7715
    iget-object v0, v3, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    const/4 v1, 0x0

    invoke-virtual {v0, v1}, Lcom/android/server/wm/ActivityTaskManagerInternal;->resumeTopActivities(Z)V

    .line 7716
    invoke-virtual/range {p2 .. p2}, Lcom/android/server/utils/TimingsTraceAndSlog;->traceEnd()V

    .line 7718
    if-eqz v42, :cond_11

    .line 7719
    const-string/jumbo v0, "sendUserSwitchBroadcasts"

    invoke-virtual {v4, v0}, Lcom/android/server/utils/TimingsTraceAndSlog;->traceBegin(Ljava/lang/String;)V

    .line 7720
    iget-object v0, v3, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    const/4 v1, -0x1

    invoke-virtual {v0, v1, v2}, Lcom/android/server/am/UserController;->sendUserSwitchBroadcasts(II)V

    .line 7721
    invoke-virtual/range {p2 .. p2}, Lcom/android/server/utils/TimingsTraceAndSlog;->traceEnd()V

    .line 7724
    :cond_11
    const-string/jumbo v0, "setBinderProxies"

    invoke-virtual {v4, v0}, Lcom/android/server/utils/TimingsTraceAndSlog;->traceBegin(Ljava/lang/String;)V

    .line 7725
    const/16 v0, 0x1770

    const/16 v1, 0x157c

    invoke-static {v0, v1}, Lcom/android/internal/os/BinderInternal;->nSetBinderProxyCountWatermarks(II)V

    .line 7727
    invoke-static/range {v48 .. v48}, Lcom/android/internal/os/BinderInternal;->nSetBinderProxyCountEnabled(Z)V

    .line 7728
    new-instance v0, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda3;

    invoke-direct {v0, v3}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda3;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iget-object v1, v3, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-static {v0, v1}, Lcom/android/internal/os/BinderInternal;->setBinderProxyCountCallback(Lcom/android/internal/os/BinderInternal$BinderProxyLimitListener;Landroid/os/Handler;)V

    .line 7740
    invoke-virtual/range {p2 .. p2}, Lcom/android/server/utils/TimingsTraceAndSlog;->traceEnd()V

    .line 7742
    invoke-virtual/range {p2 .. p2}, Lcom/android/server/utils/TimingsTraceAndSlog;->traceEnd()V

    .line 7743
    invoke-virtual/range {p2 .. p2}, Lcom/android/server/utils/TimingsTraceAndSlog;->traceEnd()V

    .line 7744
    monitor-exit p0
    :try_end_18
    .catchall {:try_start_18 .. :try_end_18} :catchall_c

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 7745
    return-void

    .line 7744
    :catchall_a
    move-exception v0

    move-object/from16 v4, p2

    goto :goto_d

    .end local v2    # "currentUserId":I
    .end local v46    # "pmi":Landroid/os/PowerManagerInternal;
    .end local v47    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    .restart local v10    # "currentUserId":I
    .restart local v11    # "pmi":Landroid/os/PowerManagerInternal;
    .restart local v12    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    :catchall_b
    move-exception v0

    move v2, v10

    move-object/from16 v46, v11

    move-object/from16 v47, v12

    move-object v4, v14

    move-object v3, v15

    .end local v10    # "currentUserId":I
    .end local v11    # "pmi":Landroid/os/PowerManagerInternal;
    .end local v12    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    .restart local v2    # "currentUserId":I
    .restart local v46    # "pmi":Landroid/os/PowerManagerInternal;
    .restart local v47    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    :goto_d
    :try_start_19
    monitor-exit p0
    :try_end_19
    .catchall {:try_start_19 .. :try_end_19} :catchall_c

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    :catchall_c
    move-exception v0

    goto :goto_d

    .line 7567
    .end local v2    # "currentUserId":I
    .end local v42    # "bootingSystemUser":Z
    .end local v46    # "pmi":Landroid/os/PowerManagerInternal;
    .end local v47    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    .restart local v12    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    :catchall_d
    move-exception v0

    move-object/from16 v47, v12

    move-object v4, v14

    move-object v3, v15

    .end local v12    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    .restart local v47    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    :goto_e
    :try_start_1a
    monitor-exit p0
    :try_end_1a
    .catchall {:try_start_1a .. :try_end_1a} :catchall_e

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    :catchall_e
    move-exception v0

    goto :goto_e

    .line 7549
    .end local v47    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    .restart local v12    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    :catchall_f
    move-exception v0

    move-object/from16 v47, v12

    move-object v4, v14

    move-object v3, v15

    move-object/from16 v1, v47

    .end local v12    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    .restart local v47    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    goto :goto_f

    .end local v47    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    .local v1, "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    :catchall_10
    move-exception v0

    move-object v4, v14

    move-object v3, v15

    :goto_f
    :try_start_1b
    monitor-exit v2
    :try_end_1b
    .catchall {:try_start_1b .. :try_end_1b} :catchall_11

    throw v0

    :catchall_11
    move-exception v0

    goto :goto_f

    .line 7529
    .end local v1    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    :catchall_12
    move-exception v0

    move-object v4, v14

    move-object v3, v15

    :goto_10
    :try_start_1c
    monitor-exit p0
    :try_end_1c
    .catchall {:try_start_1c .. :try_end_1c} :catchall_13

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    :catchall_13
    move-exception v0

    goto :goto_10
.end method

.method tempAllowlistForPendingIntentLocked(IIIJIILjava/lang/String;)V
    .locals 12
    .param p1, "callerPid"    # I
    .param p2, "callerUid"    # I
    .param p3, "targetUid"    # I
    .param p4, "duration"    # J
    .param p6, "type"    # I
    .param p7, "reasonCode"    # I
    .param p8, "reason"    # Ljava/lang/String;

    .line 14688
    move-object v9, p0

    move v10, p1

    move v11, p2

    iget-object v1, v9, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    monitor-enter v1

    .line 14689
    :try_start_0
    iget-object v0, v9, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-virtual {v0, p1}, Lcom/android/server/am/ActivityManagerService$PidMap;->get(I)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    .line 14690
    .local v0, "pr":Lcom/android/server/am/ProcessRecord;
    if-nez v0, :cond_0

    .line 14691
    const-string v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "tempAllowlistForPendingIntentLocked() no ProcessRecord for pid "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 14693
    monitor-exit v1

    return-void

    .line 14695
    :cond_0
    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->mServices:Lcom/android/server/am/ProcessServiceRecord;

    iget-boolean v2, v2, Lcom/android/server/am/ProcessServiceRecord;->mAllowlistManager:Z

    if-nez v2, :cond_1

    .line 14696
    const-string v2, "android.permission.CHANGE_DEVICE_IDLE_TEMP_WHITELIST"

    invoke-virtual {p0, v2, p1, p2}, Lcom/android/server/am/ActivityManagerService;->checkPermission(Ljava/lang/String;II)I

    move-result v2

    if-eqz v2, :cond_1

    const-string v2, "android.permission.START_ACTIVITIES_FROM_BACKGROUND"

    .line 14698
    invoke-virtual {p0, v2, p1, p2}, Lcom/android/server/am/ActivityManagerService;->checkPermission(Ljava/lang/String;II)I

    move-result v2

    if-eqz v2, :cond_1

    const-string v2, "android.permission.START_FOREGROUND_SERVICES_FROM_BACKGROUND"

    .line 14700
    invoke-virtual {p0, v2, p1, p2}, Lcom/android/server/am/ActivityManagerService;->checkPermission(Ljava/lang/String;II)I

    move-result v2

    if-eqz v2, :cond_1

    .line 14706
    monitor-exit v1

    return-void

    .line 14709
    .end local v0    # "pr":Lcom/android/server/am/ProcessRecord;
    :cond_1
    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 14711
    move-object v1, p0

    move v2, p3

    move-wide/from16 v3, p4

    move/from16 v5, p7

    move-object/from16 v6, p8

    move/from16 v7, p6

    move v8, p2

    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->tempAllowlistUidLocked(IJILjava/lang/String;II)V

    .line 14712
    return-void

    .line 14709
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v0
.end method

.method tempAllowlistUidLocked(IJILjava/lang/String;II)V
    .locals 15
    .param p1, "targetUid"    # I
    .param p2, "duration"    # J
    .param p4, "reasonCode"    # I
    .param p5, "reason"    # Ljava/lang/String;
    .param p6, "type"    # I
    .param p7, "callingUid"    # I

    .line 14720
    move-object v1, p0

    move/from16 v10, p1

    iget-object v11, v1, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v11

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 14722
    iget-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mLocalDeviceIdleController:Lcom/android/server/DeviceIdleInternal;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_2

    if-eqz v0, :cond_0

    .line 14723
    move/from16 v12, p4

    move/from16 v2, p6

    :try_start_1
    invoke-interface {v0, v12, v2}, Lcom/android/server/DeviceIdleInternal;->getTempAllowListType(II)I

    move-result v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    move v13, v0

    .end local p6    # "type":I
    .local v0, "type":I
    goto :goto_0

    .line 14738
    .end local v0    # "type":I
    .restart local p6    # "type":I
    :catchall_0
    move-exception v0

    move-wide/from16 v3, p2

    goto :goto_2

    .line 14722
    :cond_0
    move/from16 v12, p4

    move/from16 v2, p6

    move v13, v2

    .line 14725
    .end local p6    # "type":I
    .local v13, "type":I
    :goto_0
    const/4 v0, -0x1

    if-ne v13, v0, :cond_1

    .line 14726
    :try_start_2
    monitor-exit v11
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    return-void

    .line 14728
    :cond_1
    :try_start_3
    iget-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mPendingTempAllowlist:Lcom/android/server/am/PendingTempAllowlists;

    new-instance v14, Lcom/android/server/am/ActivityManagerService$PendingTempAllowlist;

    move-object v2, v14

    move/from16 v3, p1

    move-wide/from16 v4, p2

    move/from16 v6, p4

    move-object/from16 v7, p5

    move v8, v13

    move/from16 v9, p7

    invoke-direct/range {v2 .. v9}, Lcom/android/server/am/ActivityManagerService$PendingTempAllowlist;-><init>(IJILjava/lang/String;II)V

    invoke-virtual {v0, v10, v14}, Lcom/android/server/am/PendingTempAllowlists;->put(ILcom/android/server/am/ActivityManagerService$PendingTempAllowlist;)V

    .line 14731
    const/4 v0, 0x1

    invoke-virtual {p0, v10, v0}, Lcom/android/server/am/ActivityManagerService;->setUidTempAllowlistStateLSP(IZ)V

    .line 14732
    iget-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mUiHandler:Landroid/os/Handler;

    const/16 v2, 0x44

    invoke-virtual {v0, v2}, Landroid/os/Handler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v0

    invoke-virtual {v0}, Landroid/os/Message;->sendToTarget()V

    .line 14734
    if-nez v13, :cond_2

    .line 14735
    iget-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mFgsStartTempAllowList:Lcom/android/server/am/FgsTempAllowList;

    new-instance v8, Lcom/android/server/am/ActivityManagerService$FgsTempAllowListItem;

    move-object v2, v8

    move-wide/from16 v3, p2

    move/from16 v5, p4

    move-object/from16 v6, p5

    move/from16 v7, p7

    invoke-direct/range {v2 .. v7}, Lcom/android/server/am/ActivityManagerService$FgsTempAllowListItem;-><init>(JILjava/lang/String;I)V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    move-wide/from16 v3, p2

    :try_start_4
    invoke-virtual {v0, v10, v3, v4, v8}, Lcom/android/server/am/FgsTempAllowList;->add(IJLjava/lang/Object;)V

    goto :goto_1

    .line 14734
    :cond_2
    move-wide/from16 v3, p2

    .line 14738
    :goto_1
    monitor-exit v11
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_3

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 14739
    return-void

    .line 14738
    :catchall_1
    move-exception v0

    move-wide/from16 v3, p2

    goto :goto_3

    .end local v13    # "type":I
    .restart local p6    # "type":I
    :catchall_2
    move-exception v0

    move-wide/from16 v3, p2

    move/from16 v12, p4

    move/from16 v2, p6

    :goto_2
    move v13, v2

    .end local p6    # "type":I
    .restart local v13    # "type":I
    :goto_3
    :try_start_5
    monitor-exit v11
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_3

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v0

    :catchall_3
    move-exception v0

    goto :goto_3
.end method

.method public unbindBackupAgent(Landroid/content/pm/ApplicationInfo;)V
    .locals 10
    .param p1, "appInfo"    # Landroid/content/pm/ApplicationInfo;

    .line 12217
    const-string v0, "android.permission.CONFIRM_FULL_BACKUP"

    const-string/jumbo v1, "unbindBackupAgent"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 12218
    if-nez p1, :cond_0

    .line 12219
    const-string v0, "ActivityManager"

    const-string/jumbo v1, "unbind backup agent for null app"

    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 12220
    return-void

    .line 12225
    :cond_0
    iget v0, p1, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-static {v0}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v0

    .line 12226
    .local v0, "userId":I
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 12227
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTargets:Landroid/util/SparseArray;

    invoke-virtual {v1, v0}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/BackupRecord;

    .line 12228
    .local v1, "backupTarget":Lcom/android/server/am/BackupRecord;
    if-nez v1, :cond_1

    const/4 v2, 0x0

    goto :goto_0

    :cond_1
    iget-object v2, v1, Lcom/android/server/am/BackupRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v2, v2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 12230
    .local v2, "backupAppName":Ljava/lang/String;
    :goto_0
    if-nez v2, :cond_2

    .line 12231
    :try_start_1
    const-string v3, "ActivityManager"

    const-string v4, "Unbinding backup agent with no active backup"

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 12259
    :try_start_2
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTargets:Landroid/util/SparseArray;

    invoke-virtual {v3, v0}, Landroid/util/SparseArray;->delete(I)V

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 12232
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 12235
    :cond_2
    :try_start_3
    iget-object v3, p1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v2, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_3

    .line 12236
    const-string v3, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Unbind of "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v5, " but is not the current backup target"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 12259
    :try_start_4
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTargets:Landroid/util/SparseArray;

    invoke-virtual {v3, v0}, Landroid/util/SparseArray;->delete(I)V

    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 12237
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 12241
    :cond_3
    :try_start_5
    iget-object v3, v1, Lcom/android/server/am/BackupRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 12242
    .local v3, "proc":Lcom/android/server/am/ProcessRecord;
    const-string/jumbo v4, "updateOomAdj_meh"

    invoke-virtual {p0, v3, v4}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;)Z

    .line 12243
    const/4 v4, 0x0

    invoke-virtual {v3, v4}, Lcom/android/server/am/ProcessRecord;->setInFullBackup(Z)V

    .line 12245
    const/4 v4, -0x1

    if-eqz v1, :cond_4

    iget-object v5, v1, Lcom/android/server/am/BackupRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    iget v5, v5, Landroid/content/pm/ApplicationInfo;->uid:I

    goto :goto_1

    :cond_4
    move v5, v4

    .line 12248
    .local v5, "oldBackupUid":I
    :goto_1
    invoke-virtual {v3}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v6
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    .line 12249
    .local v6, "thread":Landroid/app/IApplicationThread;
    if-eqz v6, :cond_5

    .line 12251
    nop

    .line 12252
    :try_start_6
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->compatibilityInfoForPackage(Landroid/content/pm/ApplicationInfo;)Landroid/content/res/CompatibilityInfo;

    move-result-object v7

    .line 12251
    invoke-interface {v6, p1, v7, v0}, Landroid/app/IApplicationThread;->scheduleDestroyBackupAgent(Landroid/content/pm/ApplicationInfo;Landroid/content/res/CompatibilityInfo;I)V
    :try_end_6
    .catch Ljava/lang/Exception; {:try_start_6 .. :try_end_6} :catch_0
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    .line 12256
    goto :goto_2

    .line 12253
    :catch_0
    move-exception v7

    .line 12254
    .local v7, "e":Ljava/lang/Exception;
    :try_start_7
    const-string v8, "ActivityManager"

    const-string v9, "Exception when unbinding backup agent:"

    invoke-static {v8, v9}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 12255
    invoke-virtual {v7}, Ljava/lang/Exception;->printStackTrace()V
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_0

    .line 12259
    .end local v3    # "proc":Lcom/android/server/am/ProcessRecord;
    .end local v6    # "thread":Landroid/app/IApplicationThread;
    .end local v7    # "e":Ljava/lang/Exception;
    :cond_5
    :goto_2
    :try_start_8
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTargets:Landroid/util/SparseArray;

    invoke-virtual {v3, v0}, Landroid/util/SparseArray;->delete(I)V

    .line 12260
    nop

    .line 12261
    .end local v1    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .end local v2    # "backupAppName":Ljava/lang/String;
    monitor-exit p0
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 12263
    if-eq v5, v4, :cond_6

    .line 12264
    const-class v1, Lcom/android/server/job/JobSchedulerInternal;

    invoke-static {v1}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/job/JobSchedulerInternal;

    .line 12265
    .local v1, "js":Lcom/android/server/job/JobSchedulerInternal;
    invoke-interface {v1, v5}, Lcom/android/server/job/JobSchedulerInternal;->removeBackingUpUid(I)V

    .line 12267
    .end local v1    # "js":Lcom/android/server/job/JobSchedulerInternal;
    :cond_6
    return-void

    .line 12259
    .end local v5    # "oldBackupUid":I
    .local v1, "backupTarget":Lcom/android/server/am/BackupRecord;
    .restart local v2    # "backupAppName":Ljava/lang/String;
    :catchall_0
    move-exception v3

    :try_start_9
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTargets:Landroid/util/SparseArray;

    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->delete(I)V

    .line 12260
    nop

    .end local v0    # "userId":I
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "appInfo":Landroid/content/pm/ApplicationInfo;
    throw v3

    .line 12261
    .end local v1    # "backupTarget":Lcom/android/server/am/BackupRecord;
    .end local v2    # "backupAppName":Ljava/lang/String;
    .restart local v0    # "userId":I
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "appInfo":Landroid/content/pm/ApplicationInfo;
    :catchall_1
    move-exception v1

    monitor-exit p0
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public unbindFinished(Landroid/os/IBinder;Landroid/content/Intent;Z)V
    .locals 2
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "intent"    # Landroid/content/Intent;
    .param p3, "doRebind"    # Z

    .line 12024
    if-eqz p2, :cond_1

    invoke-virtual {p2}, Landroid/content/Intent;->hasFileDescriptors()Z

    move-result v0

    const/4 v1, 0x1

    if-eq v0, v1, :cond_0

    goto :goto_0

    .line 12025
    :cond_0
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "File descriptors passed in Intent"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 12028
    :cond_1
    :goto_0
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 12029
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    move-object v1, p1

    check-cast v1, Lcom/android/server/am/ServiceRecord;

    invoke-virtual {v0, v1, p2, p3}, Lcom/android/server/am/ActiveServices;->unbindFinishedLocked(Lcom/android/server/am/ServiceRecord;Landroid/content/Intent;Z)V

    .line 12030
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 12031
    return-void

    .line 12030
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public unbindService(Landroid/app/IServiceConnection;)Z
    .locals 1
    .param p1, "connection"    # Landroid/app/IServiceConnection;

    .line 12003
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 12004
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v0, p1}, Lcom/android/server/am/ActiveServices;->unbindServiceLocked(Landroid/app/IServiceConnection;)Z

    move-result v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v0

    .line 12005
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public final unbroadcastIntent(Landroid/app/IApplicationThread;Landroid/content/Intent;I)V
    .locals 10
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .param p2, "intent"    # Landroid/content/Intent;
    .param p3, "userId"    # I

    .line 13624
    if-eqz p2, :cond_1

    invoke-virtual {p2}, Landroid/content/Intent;->hasFileDescriptors()Z

    move-result v0

    const/4 v1, 0x1

    if-eq v0, v1, :cond_0

    goto :goto_0

    .line 13625
    :cond_0
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "File descriptors passed in Intent"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 13628
    :cond_1
    :goto_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v3

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v4

    const/4 v6, 0x1

    const/4 v7, 0x0

    const-string/jumbo v8, "removeStickyBroadcast"

    const/4 v9, 0x0

    move v5, p3

    invoke-virtual/range {v2 .. v9}, Lcom/android/server/am/UserController;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p3

    .line 13631
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 13632
    const-string v0, "android.permission.BROADCAST_STICKY"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_6

    .line 13641
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    invoke-virtual {v0, p3}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/util/ArrayMap;

    .line 13642
    .local v0, "stickies":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Ljava/util/ArrayList<Landroid/content/Intent;>;>;"
    if-eqz v0, :cond_5

    .line 13643
    invoke-virtual {p2}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Ljava/util/ArrayList;

    .line 13644
    .local v1, "list":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    if-eqz v1, :cond_4

    .line 13645
    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v2

    .line 13647
    .local v2, "N":I
    const/4 v3, 0x0

    .local v3, "i":I
    :goto_1
    if-ge v3, v2, :cond_3

    .line 13648
    invoke-virtual {v1, v3}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Landroid/content/Intent;

    invoke-virtual {p2, v4}, Landroid/content/Intent;->filterEquals(Landroid/content/Intent;)Z

    move-result v4

    if-eqz v4, :cond_2

    .line 13649
    invoke-virtual {v1, v3}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    .line 13650
    goto :goto_2

    .line 13647
    :cond_2
    add-int/lit8 v3, v3, 0x1

    goto :goto_1

    .line 13653
    :cond_3
    :goto_2
    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v4

    if-gtz v4, :cond_4

    .line 13654
    invoke-virtual {p2}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v0, v4}, Landroid/util/ArrayMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 13657
    .end local v2    # "N":I
    .end local v3    # "i":I
    :cond_4
    invoke-virtual {v0}, Landroid/util/ArrayMap;->size()I

    move-result v2

    if-gtz v2, :cond_5

    .line 13658
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    invoke-virtual {v2, p3}, Landroid/util/SparseArray;->remove(I)V

    .line 13661
    .end local v0    # "stickies":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Ljava/util/ArrayList<Landroid/content/Intent;>;>;"
    .end local v1    # "list":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    :cond_5
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 13662
    return-void

    .line 13634
    :cond_6
    :try_start_1
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Permission Denial: unbroadcastIntent() from pid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 13635
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, ", uid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 13636
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, " requires "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "android.permission.BROADCAST_STICKY"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 13638
    .local v0, "msg":Ljava/lang/String;
    const-string v1, "ActivityManager"

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 13639
    new-instance v1, Ljava/lang/SecurityException;

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "caller":Landroid/app/IApplicationThread;
    .end local p2    # "intent":Landroid/content/Intent;
    .end local p3    # "userId":I
    throw v1

    .line 13661
    .end local v0    # "msg":Ljava/lang/String;
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "caller":Landroid/app/IApplicationThread;
    .restart local p2    # "intent":Landroid/content/Intent;
    .restart local p3    # "userId":I
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public unhandledBack()V
    .locals 1

    .line 6252
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {v0}, Lcom/android/server/wm/ActivityTaskManagerService;->unhandledBack()V

    .line 6253
    return-void
.end method

.method public unlockUser(I[B[BLandroid/os/IProgressListener;)Z
    .locals 1
    .param p1, "userId"    # I
    .param p2, "token"    # [B
    .param p3, "secret"    # [B
    .param p4, "listener"    # Landroid/os/IProgressListener;

    .line 15058
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {v0, p1, p2, p3, p4}, Lcom/android/server/am/UserController;->unlockUser(I[B[BLandroid/os/IProgressListener;)Z

    move-result v0

    return v0
.end method

.method public unregisterIntentSenderCancelListener(Landroid/content/IIntentSender;Lcom/android/internal/os/IResultReceiver;)V
    .locals 1
    .param p1, "sender"    # Landroid/content/IIntentSender;
    .param p2, "receiver"    # Lcom/android/internal/os/IResultReceiver;

    .line 4993
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPendingIntentController:Lcom/android/server/am/PendingIntentController;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/am/PendingIntentController;->unregisterIntentSenderCancelListener(Landroid/content/IIntentSender;Lcom/android/internal/os/IResultReceiver;)V

    .line 4994
    return-void
.end method

.method public unregisterProcessObserver(Landroid/app/IProcessObserver;)V
    .locals 1
    .param p1, "observer"    # Landroid/app/IProcessObserver;

    .line 6740
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v0, p1}, Lcom/android/server/am/ProcessList;->unregisterProcessObserver(Landroid/app/IProcessObserver;)V

    .line 6741
    return-void
.end method

.method public unregisterReceiver(Landroid/content/IIntentReceiver;)V
    .locals 13
    .param p1, "receiver"    # Landroid/content/IIntentReceiver;

    .line 12521
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 12523
    .local v0, "origId":J
    const/4 v2, 0x0

    .line 12525
    .local v2, "doTrim":Z
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 12526
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mRegisteredReceivers:Ljava/util/HashMap;

    invoke-interface {p1}, Landroid/content/IIntentReceiver;->asBinder()Landroid/os/IBinder;

    move-result-object v4

    invoke-virtual {v3, v4}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/ReceiverList;

    .line 12527
    .local v3, "rl":Lcom/android/server/am/ReceiverList;
    const/4 v4, 0x0

    if-eqz v3, :cond_2

    .line 12528
    iget-object v5, v3, Lcom/android/server/am/ReceiverList;->curBroadcast:Lcom/android/server/am/BroadcastRecord;

    .line 12529
    .local v5, "r":Lcom/android/server/am/BroadcastRecord;
    if-eqz v5, :cond_0

    iget-object v6, v5, Lcom/android/server/am/BroadcastRecord;->queue:Lcom/android/server/am/BroadcastQueue;

    invoke-virtual {v6, v5}, Lcom/android/server/am/BroadcastQueue;->getMatchingOrderedReceiver(Landroid/os/IBinder;)Lcom/android/server/am/BroadcastRecord;

    move-result-object v6

    if-ne v5, v6, :cond_0

    .line 12530
    iget-object v6, v5, Lcom/android/server/am/BroadcastRecord;->queue:Lcom/android/server/am/BroadcastQueue;

    iget v8, v5, Lcom/android/server/am/BroadcastRecord;->resultCode:I

    iget-object v9, v5, Lcom/android/server/am/BroadcastRecord;->resultData:Ljava/lang/String;

    iget-object v10, v5, Lcom/android/server/am/BroadcastRecord;->resultExtras:Landroid/os/Bundle;

    iget-boolean v11, v5, Lcom/android/server/am/BroadcastRecord;->resultAbort:Z

    const/4 v12, 0x0

    move-object v7, v5

    invoke-virtual/range {v6 .. v12}, Lcom/android/server/am/BroadcastQueue;->finishReceiverLocked(Lcom/android/server/am/BroadcastRecord;ILjava/lang/String;Landroid/os/Bundle;ZZ)Z

    move-result v6

    .line 12533
    .local v6, "doNext":Z
    if-eqz v6, :cond_0

    .line 12534
    const/4 v2, 0x1

    .line 12535
    iget-object v7, v5, Lcom/android/server/am/BroadcastRecord;->queue:Lcom/android/server/am/BroadcastQueue;

    const/4 v8, 0x1

    invoke-virtual {v7, v4, v8}, Lcom/android/server/am/BroadcastQueue;->processNextBroadcastLocked(ZZ)V

    .line 12540
    .end local v6    # "doNext":Z
    :cond_0
    iget-object v6, v3, Lcom/android/server/am/ReceiverList;->app:Lcom/android/server/am/ProcessRecord;

    if-eqz v6, :cond_1

    .line 12541
    iget-object v6, v3, Lcom/android/server/am/ReceiverList;->app:Lcom/android/server/am/ProcessRecord;

    iget-object v6, v6, Lcom/android/server/am/ProcessRecord;->mReceivers:Lcom/android/server/am/ProcessReceiverRecord;

    invoke-virtual {v6, v3}, Lcom/android/server/am/ProcessReceiverRecord;->removeReceiver(Lcom/android/server/am/ReceiverList;)V

    .line 12543
    :cond_1
    invoke-virtual {p0, v3}, Lcom/android/server/am/ActivityManagerService;->removeReceiverLocked(Lcom/android/server/am/ReceiverList;)V

    .line 12544
    iget-boolean v6, v3, Lcom/android/server/am/ReceiverList;->linkedToDeath:Z

    if-eqz v6, :cond_2

    .line 12545
    iput-boolean v4, v3, Lcom/android/server/am/ReceiverList;->linkedToDeath:Z

    .line 12546
    iget-object v6, v3, Lcom/android/server/am/ReceiverList;->receiver:Landroid/content/IIntentReceiver;

    invoke-interface {v6}, Landroid/content/IIntentReceiver;->asBinder()Landroid/os/IBinder;

    move-result-object v6

    invoke-interface {v6, v3, v4}, Landroid/os/IBinder;->unlinkToDeath(Landroid/os/IBinder$DeathRecipient;I)Z

    .line 12552
    .end local v5    # "r":Lcom/android/server/am/BroadcastRecord;
    :cond_2
    if-eqz v2, :cond_3

    .line 12553
    const-string/jumbo v5, "updateOomAdj_finishReceiver"

    invoke-direct {p0, v4, v5}, Lcom/android/server/am/ActivityManagerService;->trimApplicationsLocked(ZLjava/lang/String;)V

    .line 12554
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 12559
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 12554
    return-void

    .line 12556
    .end local v3    # "rl":Lcom/android/server/am/ReceiverList;
    :cond_3
    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 12559
    .end local v2    # "doTrim":Z
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 12560
    nop

    .line 12561
    return-void

    .line 12556
    .restart local v2    # "doTrim":Z
    :catchall_0
    move-exception v3

    :try_start_4
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    :try_start_5
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .end local v0    # "origId":J
    .end local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .end local p1    # "receiver":Landroid/content/IIntentReceiver;
    throw v3
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    .line 12559
    .end local v2    # "doTrim":Z
    .restart local v0    # "origId":J
    .restart local p0    # "this":Lcom/android/server/am/ActivityManagerService;
    .restart local p1    # "receiver":Landroid/content/IIntentReceiver;
    :catchall_1
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 12560
    throw v2
.end method

.method public unregisterTaskStackListener(Landroid/app/ITaskStackListener;)V
    .locals 1
    .param p1, "listener"    # Landroid/app/ITaskStackListener;

    .line 2625
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {v0, p1}, Lcom/android/server/wm/ActivityTaskManagerService;->unregisterTaskStackListener(Landroid/app/ITaskStackListener;)V

    .line 2626
    return-void
.end method

.method public unregisterUidObserver(Landroid/app/IUidObserver;)V
    .locals 1
    .param p1, "observer"    # Landroid/app/IUidObserver;

    .line 6780
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUidObserverController:Lcom/android/server/am/UidObserverController;

    invoke-virtual {v0, p1}, Lcom/android/server/am/UidObserverController;->unregister(Landroid/app/IUidObserver;)V

    .line 6781
    return-void
.end method

.method public unregisterUserSwitchObserver(Landroid/app/IUserSwitchObserver;)V
    .locals 1
    .param p1, "observer"    # Landroid/app/IUserSwitchObserver;

    .line 15156
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {v0, p1}, Lcom/android/server/am/UserController;->unregisterUserSwitchObserver(Landroid/app/IUserSwitchObserver;)V

    .line 15157
    return-void
.end method

.method public unstableProviderDied(Landroid/os/IBinder;)V
    .locals 1
    .param p1, "connection"    # Landroid/os/IBinder;

    .line 6090
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCpHelper:Lcom/android/server/am/ContentProviderHelper;

    invoke-virtual {v0, p1}, Lcom/android/server/am/ContentProviderHelper;->unstableProviderDied(Landroid/os/IBinder;)V

    .line 6091
    return-void
.end method

.method public updateActivityUsageStats(Landroid/content/ComponentName;IILandroid/os/IBinder;Landroid/content/ComponentName;)V
    .locals 8
    .param p1, "activity"    # Landroid/content/ComponentName;
    .param p2, "userId"    # I
    .param p3, "event"    # I
    .param p4, "appToken"    # Landroid/os/IBinder;
    .param p5, "taskRoot"    # Landroid/content/ComponentName;

    .line 2725
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    const/4 v1, 0x1

    if-eqz v0, :cond_0

    .line 2726
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    invoke-virtual {p4}, Ljava/lang/Object;->hashCode()I

    move-result v6

    move-object v3, p1

    move v4, p2

    move v5, p3

    move-object v7, p5

    invoke-virtual/range {v2 .. v7}, Landroid/app/usage/UsageStatsManagerInternal;->reportEvent(Landroid/content/ComponentName;IIILandroid/content/ComponentName;)V

    .line 2727
    if-ne p3, v1, :cond_0

    .line 2729
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    .line 2730
    invoke-virtual {p1}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v2

    const/16 v3, 0x1f

    .line 2729
    invoke-virtual {v0, v2, p2, v3}, Landroid/app/usage/UsageStatsManagerInternal;->reportEvent(Ljava/lang/String;II)V

    .line 2733
    :cond_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mContentCaptureService:Lcom/android/server/contentcapture/ContentCaptureManagerInternal;

    .line 2734
    .local v0, "contentCaptureService":Lcom/android/server/contentcapture/ContentCaptureManagerInternal;
    if-eqz v0, :cond_2

    const/4 v2, 0x2

    if-eq p3, v2, :cond_1

    if-eq p3, v1, :cond_1

    const/16 v1, 0x17

    if-eq p3, v1, :cond_1

    const/16 v1, 0x18

    if-ne p3, v1, :cond_2

    .line 2737
    :cond_1
    invoke-virtual {v0, p2, p1, p3}, Lcom/android/server/contentcapture/ContentCaptureManagerInternal;->notifyActivityEvent(ILandroid/content/ComponentName;I)V

    .line 2739
    :cond_2
    return-void
.end method

.method public updateActivityUsageStats(Ljava/lang/String;II)V
    .locals 1
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "userId"    # I
    .param p3, "event"    # I

    .line 2752
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    if-eqz v0, :cond_0

    .line 2753
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    invoke-virtual {v0, p1, p2, p3}, Landroid/app/usage/UsageStatsManagerInternal;->reportEvent(Ljava/lang/String;II)V

    .line 2755
    :cond_0
    return-void
.end method

.method updateBatteryStats(Landroid/content/ComponentName;IIZ)V
    .locals 6
    .param p1, "activity"    # Landroid/content/ComponentName;
    .param p2, "uid"    # I
    .param p3, "userId"    # I
    .param p4, "resumed"    # Z

    .line 2707
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {p1}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v1

    .line 2708
    invoke-virtual {p1}, Landroid/content/ComponentName;->getShortClassName()Ljava/lang/String;

    move-result-object v2

    .line 2707
    move v3, p2

    move v4, p3

    move v5, p4

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/BatteryStatsService;->updateBatteryStatsOnActivityUsage(Ljava/lang/String;Ljava/lang/String;IIZ)V

    .line 2709
    return-void
.end method

.method public updateConfiguration(Landroid/content/res/Configuration;)Z
    .locals 1
    .param p1, "values"    # Landroid/content/res/Configuration;

    .line 14066
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {v0, p1}, Lcom/android/server/wm/ActivityTaskManagerService;->updateConfiguration(Landroid/content/res/Configuration;)Z

    move-result v0

    return v0
.end method

.method updateCpuStats()V
    .locals 1

    .line 2514
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    invoke-virtual {v0}, Lcom/android/server/am/AppProfiler;->updateCpuStats()V

    .line 2515
    return-void
.end method

.method updateCpuStatsNow()V
    .locals 1

    .line 2518
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    invoke-virtual {v0}, Lcom/android/server/am/AppProfiler;->updateCpuStatsNow()V

    .line 2519
    return-void
.end method

.method public updateDeviceOwner(Ljava/lang/String;)V
    .locals 3
    .param p1, "packageName"    # Ljava/lang/String;

    .line 5887
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 5888
    .local v0, "callingUid":I
    if-eqz v0, :cond_1

    const/16 v1, 0x3e8

    if-ne v0, v1, :cond_0

    goto :goto_0

    .line 5889
    :cond_0
    new-instance v1, Ljava/lang/SecurityException;

    const-string/jumbo v2, "updateDeviceOwner called from non-system process"

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 5891
    :cond_1
    :goto_0
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 5892
    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mDeviceOwnerName:Ljava/lang/String;

    .line 5893
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 5894
    return-void

    .line 5893
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method updateForegroundServiceUsageStats(Landroid/content/ComponentName;IZ)V
    .locals 7
    .param p1, "service"    # Landroid/content/ComponentName;
    .param p2, "userId"    # I
    .param p3, "started"    # Z

    .line 2768
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    if-eqz v0, :cond_1

    .line 2769
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    .line 2770
    if-eqz p3, :cond_0

    const/16 v0, 0x13

    move v4, v0

    goto :goto_0

    .line 2771
    :cond_0
    const/16 v0, 0x14

    move v4, v0

    :goto_0
    const/4 v5, 0x0

    const/4 v6, 0x0

    .line 2769
    move-object v2, p1

    move v3, p2

    invoke-virtual/range {v1 .. v6}, Landroid/app/usage/UsageStatsManagerInternal;->reportEvent(Landroid/content/ComponentName;IIILandroid/content/ComponentName;)V

    .line 2773
    :cond_1
    return-void
.end method

.method public updateLockTaskPackages(I[Ljava/lang/String;)V
    .locals 1
    .param p1, "userId"    # I
    .param p2, "packages"    # [Ljava/lang/String;

    .line 5898
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/wm/ActivityTaskManagerService;->updateLockTaskPackages(I[Ljava/lang/String;)V

    .line 5899
    return-void
.end method

.method final updateLruProcessLocked(Lcom/android/server/am/ProcessRecord;ZLcom/android/server/am/ProcessRecord;)V
    .locals 1
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "activityChange"    # Z
    .param p3, "client"    # Lcom/android/server/am/ProcessRecord;

    .line 2631
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/server/am/ProcessList;->updateLruProcessLocked(Lcom/android/server/am/ProcessRecord;ZLcom/android/server/am/ProcessRecord;)V

    .line 2632
    return-void
.end method

.method public updateMccMncConfiguration(Ljava/lang/String;Ljava/lang/String;)Z
    .locals 4
    .param p1, "mcc"    # Ljava/lang/String;
    .param p2, "mnc"    # Ljava/lang/String;

    .line 14073
    :try_start_0
    invoke-static {p1}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v0

    .line 14074
    .local v0, "mccInt":I
    invoke-static {p2}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v1
    :try_end_0
    .catch Ljava/lang/NumberFormatException; {:try_start_0 .. :try_end_0} :catch_0
    .catch Ljava/lang/StringIndexOutOfBoundsException; {:try_start_0 .. :try_end_0} :catch_0

    .line 14078
    .local v1, "mncInt":I
    nop

    .line 14079
    new-instance v2, Landroid/content/res/Configuration;

    invoke-direct {v2}, Landroid/content/res/Configuration;-><init>()V

    .line 14080
    .local v2, "config":Landroid/content/res/Configuration;
    iput v0, v2, Landroid/content/res/Configuration;->mcc:I

    .line 14081
    if-nez v1, :cond_0

    const v3, 0xffff

    goto :goto_0

    :cond_0
    move v3, v1

    :goto_0
    iput v3, v2, Landroid/content/res/Configuration;->mnc:I

    .line 14082
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {v3, v2}, Lcom/android/server/wm/ActivityTaskManagerService;->updateConfiguration(Landroid/content/res/Configuration;)Z

    move-result v3

    return v3

    .line 14075
    .end local v0    # "mccInt":I
    .end local v1    # "mncInt":I
    .end local v2    # "config":Landroid/content/res/Configuration;
    :catch_0
    move-exception v0

    .line 14076
    .local v0, "ex":Ljava/lang/RuntimeException;
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Error parsing mcc: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, " mnc: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, ". ex="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    const-string v2, "ActivityManager"

    invoke-static {v2, v1}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 14077
    const/4 v1, 0x0

    return v1
.end method

.method final updateOomAdjLocked(Ljava/lang/String;)V
    .locals 1
    .param p1, "oomAdjReason"    # Ljava/lang/String;

    .line 14549
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mOomAdjuster:Lcom/android/server/am/OomAdjuster;

    invoke-virtual {v0, p1}, Lcom/android/server/am/OomAdjuster;->updateOomAdjLocked(Ljava/lang/String;)V

    .line 14550
    return-void
.end method

.method final updateOomAdjLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;)Z
    .locals 1
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "oomAdjReason"    # Ljava/lang/String;

    .line 14561
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mOomAdjuster:Lcom/android/server/am/OomAdjuster;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/am/OomAdjuster;->updateOomAdjLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;)Z

    move-result v0

    return v0
.end method

.method updateOomAdjPendingTargetsLocked(Ljava/lang/String;)V
    .locals 1
    .param p1, "oomAdjReason"    # Ljava/lang/String;

    .line 14530
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mOomAdjuster:Lcom/android/server/am/OomAdjuster;

    invoke-virtual {v0, p1}, Lcom/android/server/am/OomAdjuster;->updateOomAdjPendingTargetsLocked(Ljava/lang/String;)V

    .line 14531
    return-void
.end method

.method public updatePersistentConfiguration(Landroid/content/res/Configuration;)V
    .locals 2
    .param p1, "values"    # Landroid/content/res/Configuration;

    .line 14025
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    .line 14026
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    invoke-static {v0, v1}, Landroid/provider/Settings;->getPackageNameForUid(Landroid/content/Context;I)Ljava/lang/String;

    move-result-object v0

    .line 14025
    const/4 v1, 0x0

    invoke-virtual {p0, p1, v0, v1}, Lcom/android/server/am/ActivityManagerService;->updatePersistentConfigurationWithAttribution(Landroid/content/res/Configuration;Ljava/lang/String;Ljava/lang/String;)V

    .line 14027
    return-void
.end method

.method public updatePersistentConfigurationWithAttribution(Landroid/content/res/Configuration;Ljava/lang/String;Ljava/lang/String;)V
    .locals 2
    .param p1, "values"    # Landroid/content/res/Configuration;
    .param p2, "callingPackage"    # Ljava/lang/String;
    .param p3, "callingAttributionTag"    # Ljava/lang/String;

    .line 14032
    const-string v0, "android.permission.CHANGE_CONFIGURATION"

    const-string/jumbo v1, "updatePersistentConfiguration()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 14033
    invoke-direct {p0, v1, p2, p3}, Lcom/android/server/am/ActivityManagerService;->enforceWriteSettingsPermission(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    .line 14035
    if-eqz p1, :cond_0

    .line 14039
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v0

    .line 14041
    .local v0, "userId":I
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {v1, p1, v0}, Lcom/android/server/wm/ActivityTaskManagerService;->updatePersistentConfiguration(Landroid/content/res/Configuration;I)V

    .line 14042
    return-void

    .line 14036
    .end local v0    # "userId":I
    :cond_0
    new-instance v0, Ljava/lang/NullPointerException;

    const-string v1, "Configuration must not be null"

    invoke-direct {v0, v1}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method final updateProcessForegroundLocked(Lcom/android/server/am/ProcessRecord;ZIZ)V
    .locals 6
    .param p1, "proc"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "isForeground"    # Z
    .param p3, "fgServiceTypes"    # I
    .param p4, "oomAdj"    # Z

    .line 14428
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->mServices:Lcom/android/server/am/ProcessServiceRecord;

    .line 14429
    .local v0, "psr":Lcom/android/server/am/ProcessServiceRecord;
    invoke-virtual {v0}, Lcom/android/server/am/ProcessServiceRecord;->hasForegroundServices()Z

    move-result v1

    if-ne p2, v1, :cond_0

    .line 14430
    invoke-virtual {v0}, Lcom/android/server/am/ProcessServiceRecord;->getForegroundServiceTypes()I

    move-result v1

    if-eq v1, p3, :cond_4

    .line 14431
    :cond_0
    invoke-virtual {v0, p2, p3}, Lcom/android/server/am/ProcessServiceRecord;->setHasForegroundServices(ZI)V

    .line 14432
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mForegroundPackages:Lcom/android/internal/app/ProcessMap;

    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v2, v2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget-object v3, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v3, v3, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v1, v2, v3}, Lcom/android/internal/app/ProcessMap;->get(Ljava/lang/String;I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Ljava/util/ArrayList;

    .line 14434
    .local v1, "curProcs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    if-eqz p2, :cond_2

    .line 14435
    if-nez v1, :cond_1

    .line 14436
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    move-object v1, v2

    .line 14437
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mForegroundPackages:Lcom/android/internal/app/ProcessMap;

    iget-object v3, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v3, v3, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget-object v4, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v4, v4, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v2, v3, v4, v1}, Lcom/android/internal/app/ProcessMap;->put(Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/Object;

    .line 14439
    :cond_1
    invoke-virtual {v1, p1}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_3

    .line 14440
    invoke-virtual {v1, p1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 14441
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    const v3, 0x8002

    iget-object v4, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v4, v4, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget-object v5, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v5, v5, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v2, v3, v4, v5}, Lcom/android/server/am/BatteryStatsService;->noteEvent(ILjava/lang/String;I)V

    goto :goto_0

    .line 14445
    :cond_2
    if-eqz v1, :cond_3

    .line 14446
    invoke-virtual {v1, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_3

    .line 14447
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    const/16 v3, 0x4002

    iget-object v4, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v4, v4, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget-object v5, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v5, v5, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v2, v3, v4, v5}, Lcom/android/server/am/BatteryStatsService;->noteEvent(ILjava/lang/String;I)V

    .line 14450
    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v2

    if-gtz v2, :cond_3

    .line 14451
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mForegroundPackages:Lcom/android/internal/app/ProcessMap;

    iget-object v3, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v3, v3, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget-object v4, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v4, v4, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v2, v3, v4}, Lcom/android/internal/app/ProcessMap;->remove(Ljava/lang/String;I)Ljava/lang/Object;

    .line 14457
    :cond_3
    :goto_0
    invoke-virtual {v0, p3}, Lcom/android/server/am/ProcessServiceRecord;->setReportedForegroundServiceTypes(I)V

    .line 14458
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    .line 14459
    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->getPid()I

    move-result v3

    iget-object v4, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v4, v4, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 14458
    invoke-virtual {v2, v3, v4}, Lcom/android/server/am/ProcessList;->enqueueProcessChangeItemLocked(II)Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;

    move-result-object v2

    .line 14460
    .local v2, "item":Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;
    iget v3, v2, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->changes:I

    or-int/lit8 v3, v3, 0x2

    iput v3, v2, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->changes:I

    .line 14461
    iput p3, v2, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->foregroundServiceTypes:I

    .line 14463
    .end local v1    # "curProcs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    .end local v2    # "item":Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;
    :cond_4
    if-eqz p4, :cond_5

    .line 14464
    const-string/jumbo v1, "updateOomAdj_uiVisibility"

    invoke-virtual {p0, p1, v1}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;)Z

    .line 14466
    :cond_5
    return-void
.end method

.method public updateServiceGroup(Landroid/app/IServiceConnection;II)V
    .locals 1
    .param p1, "connection"    # Landroid/app/IServiceConnection;
    .param p2, "group"    # I
    .param p3, "importance"    # I

    .line 11997
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 11998
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/server/am/ActiveServices;->updateServiceGroupLocked(Landroid/app/IServiceConnection;II)V

    .line 11999
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 12000
    return-void

    .line 11999
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public updateSystemUiContext()V
    .locals 5

    .line 16587
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getPackageManagerInternal()Landroid/content/pm/PackageManagerInternal;

    move-result-object v0

    .line 16589
    .local v0, "packageManagerInternal":Landroid/content/pm/PackageManagerInternal;
    nop

    .line 16590
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    .line 16589
    const-string v2, "android"

    const/16 v3, 0x400

    const/4 v4, 0x0

    invoke-virtual {v0, v2, v3, v1, v4}, Landroid/content/pm/PackageManagerInternal;->getApplicationInfo(Ljava/lang/String;III)Landroid/content/pm/ApplicationInfo;

    move-result-object v1

    .line 16591
    .local v1, "ai":Landroid/content/pm/ApplicationInfo;
    invoke-static {}, Landroid/app/ActivityThread;->currentActivityThread()Landroid/app/ActivityThread;

    move-result-object v2

    invoke-virtual {v2, v1}, Landroid/app/ActivityThread;->handleSystemApplicationInfoChanged(Landroid/content/pm/ApplicationInfo;)V

    .line 16592
    return-void
.end method

.method validateAssociationAllowedLocked(Ljava/lang/String;ILjava/lang/String;I)Z
    .locals 4
    .param p1, "pkg1"    # Ljava/lang/String;
    .param p2, "uid1"    # I
    .param p3, "pkg2"    # Ljava/lang/String;
    .param p4, "uid2"    # I

    .line 2403
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->ensureAllowedAssociations()V

    .line 2407
    const/4 v0, 0x1

    if-eq p2, p4, :cond_3

    invoke-static {p2}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v1

    const/16 v2, 0x3e8

    if-eq v1, v2, :cond_3

    .line 2408
    invoke-static {p4}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v1

    if-ne v1, v2, :cond_0

    goto :goto_0

    .line 2413
    :cond_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mAllowedAssociations:Landroid/util/ArrayMap;

    invoke-virtual {v1, p1}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ActivityManagerService$PackageAssociationInfo;

    .line 2414
    .local v1, "pai":Lcom/android/server/am/ActivityManagerService$PackageAssociationInfo;
    const/4 v2, 0x0

    if-eqz v1, :cond_1

    invoke-virtual {v1, p3}, Lcom/android/server/am/ActivityManagerService$PackageAssociationInfo;->isPackageAssociationAllowed(Ljava/lang/String;)Z

    move-result v3

    if-nez v3, :cond_1

    .line 2415
    return v2

    .line 2417
    :cond_1
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mAllowedAssociations:Landroid/util/ArrayMap;

    invoke-virtual {v3, p3}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v3

    move-object v1, v3

    check-cast v1, Lcom/android/server/am/ActivityManagerService$PackageAssociationInfo;

    .line 2418
    if-eqz v1, :cond_2

    invoke-virtual {v1, p1}, Lcom/android/server/am/ActivityManagerService$PackageAssociationInfo;->isPackageAssociationAllowed(Ljava/lang/String;)Z

    move-result v3

    if-nez v3, :cond_2

    .line 2419
    return v2

    .line 2423
    :cond_2
    return v0

    .line 2409
    .end local v1    # "pai":Lcom/android/server/am/ActivityManagerService$PackageAssociationInfo;
    :cond_3
    :goto_0
    return v0
.end method

.method final verifyBroadcastLocked(Landroid/content/Intent;)Landroid/content/Intent;
    .locals 5
    .param p1, "intent"    # Landroid/content/Intent;

    .line 13518
    if-eqz p1, :cond_1

    invoke-virtual {p1}, Landroid/content/Intent;->hasFileDescriptors()Z

    move-result v0

    const/4 v1, 0x1

    if-eq v0, v1, :cond_0

    goto :goto_0

    .line 13519
    :cond_0
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "File descriptors passed in Intent"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 13522
    :cond_1
    :goto_0
    invoke-virtual {p1}, Landroid/content/Intent;->getFlags()I

    move-result v0

    .line 13524
    .local v0, "flags":I
    iget-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesReady:Z

    const-string v2, "ActivityManager"

    if-nez v1, :cond_4

    .line 13527
    const/high16 v1, 0x4000000

    and-int/2addr v1, v0

    if-eqz v1, :cond_2

    goto :goto_1

    .line 13529
    :cond_2
    const/high16 v1, 0x40000000    # 2.0f

    and-int/2addr v1, v0

    if-eqz v1, :cond_3

    goto :goto_1

    .line 13530
    :cond_3
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Attempt to launch receivers of broadcast intent "

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v3, " before boot completion"

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v2, v1}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 13532
    new-instance v1, Ljava/lang/IllegalStateException;

    const-string v2, "Cannot broadcast before boot completed"

    invoke-direct {v1, v2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 13536
    :cond_4
    :goto_1
    const/high16 v1, 0x2000000

    and-int/2addr v1, v0

    if-nez v1, :cond_6

    .line 13541
    const/high16 v1, 0x400000

    and-int v3, v0, v1

    if-eqz v3, :cond_5

    .line 13542
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v3

    sparse-switch v3, :sswitch_data_0

    .line 13547
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Removing FLAG_RECEIVER_FROM_SHELL because caller is UID "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 13548
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v4

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    .line 13547
    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 13549
    invoke-virtual {p1, v1}, Landroid/content/Intent;->removeFlags(I)V

    nop

    .line 13554
    :cond_5
    :sswitch_0
    return-object p1

    .line 13537
    :cond_6
    new-instance v1, Ljava/lang/IllegalArgumentException;

    const-string v2, "Can\'t use FLAG_RECEIVER_BOOT_UPGRADE here"

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    :sswitch_data_0
    .sparse-switch
        0x0 -> :sswitch_0
        0x7d0 -> :sswitch_0
    .end sparse-switch
.end method

.method public waitForBroadcastIdle()V
    .locals 1

    .line 16481
    const/4 v0, 0x0

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->waitForBroadcastIdle(Ljava/io/PrintWriter;)V

    .line 16482
    return-void
.end method

.method public waitForBroadcastIdle(Ljava/io/PrintWriter;)V
    .locals 7
    .param p1, "pw"    # Ljava/io/PrintWriter;

    .line 16485
    const-string v0, "android.permission.DUMP"

    const-string/jumbo v1, "waitForBroadcastIdle()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 16487
    :goto_0
    const/4 v0, 0x1

    .line 16488
    .local v0, "idle":Z
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 16489
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    array-length v2, v1

    const/4 v3, 0x0

    :goto_1
    if-ge v3, v2, :cond_2

    aget-object v4, v1, v3

    .line 16490
    .local v4, "queue":Lcom/android/server/am/BroadcastQueue;
    invoke-virtual {v4}, Lcom/android/server/am/BroadcastQueue;->isIdle()Z

    move-result v5

    if-nez v5, :cond_1

    .line 16491
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Waiting for queue "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v6, " to become idle..."

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    .line 16492
    .local v5, "msg":Ljava/lang/String;
    if-eqz p1, :cond_0

    .line 16493
    invoke-virtual {p1, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 16494
    invoke-virtual {v4}, Lcom/android/server/am/BroadcastQueue;->describeState()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {p1, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 16495
    invoke-virtual {p1}, Ljava/io/PrintWriter;->flush()V

    .line 16497
    :cond_0
    const-string v6, "ActivityManager"

    invoke-static {v6, v5}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 16498
    invoke-virtual {v4}, Lcom/android/server/am/BroadcastQueue;->cancelDeferrals()V

    .line 16499
    const/4 v0, 0x0

    .line 16489
    .end local v4    # "queue":Lcom/android/server/am/BroadcastQueue;
    .end local v5    # "msg":Ljava/lang/String;
    :cond_1
    add-int/lit8 v3, v3, 0x1

    goto :goto_1

    .line 16502
    :cond_2
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 16504
    if-eqz v0, :cond_4

    .line 16505
    const-string v1, "All broadcast queues are idle!"

    .line 16506
    .local v1, "msg":Ljava/lang/String;
    if-eqz p1, :cond_3

    .line 16507
    const-string v2, "All broadcast queues are idle!"

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 16508
    invoke-virtual {p1}, Ljava/io/PrintWriter;->flush()V

    .line 16510
    :cond_3
    const-string v2, "ActivityManager"

    const-string v3, "All broadcast queues are idle!"

    invoke-static {v2, v3}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 16511
    return-void

    .line 16513
    .end local v1    # "msg":Ljava/lang/String;
    :cond_4
    const-wide/16 v1, 0x3e8

    invoke-static {v1, v2}, Landroid/os/SystemClock;->sleep(J)V

    .line 16515
    .end local v0    # "idle":Z
    goto :goto_0

    .line 16502
    .restart local v0    # "idle":Z
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public waitForNetworkStateUpdate(J)V
    .locals 10
    .param p1, "procStateSeq"    # J

    .line 16418
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 16423
    .local v0, "callingUid":I
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    monitor-enter v1

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    .line 16424
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v2, v0}, Lcom/android/server/am/ProcessList;->getUidRecordLOSP(I)Lcom/android/server/am/UidRecord;

    move-result-object v2

    .line 16425
    .local v2, "record":Lcom/android/server/am/UidRecord;
    if-nez v2, :cond_0

    .line 16426
    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    return-void

    .line 16428
    :cond_0
    :try_start_1
    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 16429
    iget-object v3, v2, Lcom/android/server/am/UidRecord;->networkStateLock:Ljava/lang/Object;

    monitor-enter v3

    .line 16430
    :try_start_2
    iget-wide v4, v2, Lcom/android/server/am/UidRecord;->lastDispatchedProcStateSeq:J

    cmp-long v1, v4, p1

    if-gez v1, :cond_1

    .line 16437
    monitor-exit v3

    return-void

    .line 16439
    :cond_1
    iget-wide v4, v2, Lcom/android/server/am/UidRecord;->curProcStateSeq:J

    cmp-long v1, v4, p1

    if-lez v1, :cond_2

    .line 16445
    monitor-exit v3

    return-void

    .line 16447
    :cond_2
    iget-wide v4, v2, Lcom/android/server/am/UidRecord;->lastNetworkUpdatedProcStateSeq:J

    cmp-long v1, v4, p1

    if-ltz v1, :cond_3

    .line 16454
    monitor-exit v3
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    return-void

    .line 16461
    :cond_3
    :try_start_3
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v4

    .line 16462
    .local v4, "startTime":J
    const/4 v1, 0x1

    iput-boolean v1, v2, Lcom/android/server/am/UidRecord;->waitingForNetwork:Z

    .line 16463
    iget-object v1, v2, Lcom/android/server/am/UidRecord;->networkStateLock:Ljava/lang/Object;

    iget-wide v6, p0, Lcom/android/server/am/ActivityManagerService;->mWaitForNetworkTimeoutMs:J

    invoke-virtual {v1, v6, v7}, Ljava/lang/Object;->wait(J)V

    .line 16464
    const/4 v1, 0x0

    iput-boolean v1, v2, Lcom/android/server/am/UidRecord;->waitingForNetwork:Z

    .line 16465
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v6

    sub-long/2addr v6, v4

    .line 16466
    .local v6, "totalTime":J
    iget-wide v8, p0, Lcom/android/server/am/ActivityManagerService;->mWaitForNetworkTimeoutMs:J

    cmp-long v1, v6, v8

    if-gez v1, :cond_4

    goto :goto_0

    .line 16467
    :cond_4
    const-string v1, "ActivityManager_Network"

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "Total time waited for network rules to get updated: "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v8, v6, v7}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string v9, ". Uid: "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v8, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v9, " procStateSeq: "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v8, p1, p2}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string v9, " UidRec: "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v8, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v9, " validateUidRec: "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mUidObserverController:Lcom/android/server/am/UidObserverController;

    .line 16471
    invoke-virtual {v9, v0}, Lcom/android/server/am/UidObserverController;->getValidateUidRecord(I)Lcom/android/server/am/UidRecord;

    move-result-object v9

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    .line 16467
    invoke-static {v1, v8}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_3
    .catch Ljava/lang/InterruptedException; {:try_start_3 .. :try_end_3} :catch_0
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 16475
    .end local v4    # "startTime":J
    .end local v6    # "totalTime":J
    :goto_0
    goto :goto_1

    .line 16473
    :catch_0
    move-exception v1

    .line 16474
    .local v1, "e":Ljava/lang/InterruptedException;
    :try_start_4
    invoke-static {}, Ljava/lang/Thread;->currentThread()Ljava/lang/Thread;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/Thread;->interrupt()V

    .line 16476
    .end local v1    # "e":Ljava/lang/InterruptedException;
    :goto_1
    monitor-exit v3

    .line 16477
    return-void

    .line 16476
    :catchall_0
    move-exception v1

    monitor-exit v3
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    throw v1

    .line 16428
    .end local v2    # "record":Lcom/android/server/am/UidRecord;
    :catchall_1
    move-exception v2

    :try_start_5
    monitor-exit v1
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v2
.end method

.method writeBroadcastsToProtoLocked(Landroid/util/proto/ProtoOutputStream;)V
    .locals 23
    .param p1, "proto"    # Landroid/util/proto/ProtoOutputStream;

    .line 9800
    move-object/from16 v0, p0

    move-object/from16 v9, p1

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mRegisteredReceivers:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->size()I

    move-result v1

    if-lez v1, :cond_0

    .line 9801
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mRegisteredReceivers:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->values()Ljava/util/Collection;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v1

    .line 9802
    .local v1, "it":Ljava/util/Iterator;
    :goto_0
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_0

    .line 9803
    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ReceiverList;

    .line 9804
    .local v2, "r":Lcom/android/server/am/ReceiverList;
    const-wide v3, 0x20b00000001L

    invoke-virtual {v2, v9, v3, v4}, Lcom/android/server/am/ReceiverList;->dumpDebug(Landroid/util/proto/ProtoOutputStream;J)V

    .line 9805
    .end local v2    # "r":Lcom/android/server/am/ReceiverList;
    goto :goto_0

    .line 9807
    .end local v1    # "it":Ljava/util/Iterator;
    :cond_0
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mReceiverResolver:Lcom/android/server/IntentResolver;

    const-wide v10, 0x10b00000002L

    invoke-virtual {v1, v9, v10, v11}, Lcom/android/server/IntentResolver;->dumpDebug(Landroid/util/proto/ProtoOutputStream;J)V

    .line 9808
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    array-length v2, v1

    const/4 v3, 0x0

    :goto_1
    if-ge v3, v2, :cond_1

    aget-object v4, v1, v3

    .line 9809
    .local v4, "q":Lcom/android/server/am/BroadcastQueue;
    const-wide v5, 0x20b00000003L

    invoke-virtual {v4, v9, v5, v6}, Lcom/android/server/am/BroadcastQueue;->dumpDebug(Landroid/util/proto/ProtoOutputStream;J)V

    .line 9808
    .end local v4    # "q":Lcom/android/server/am/BroadcastQueue;
    add-int/lit8 v3, v3, 0x1

    goto :goto_1

    .line 9811
    :cond_1
    const/4 v1, 0x0

    move v12, v1

    .local v12, "user":I
    :goto_2
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    invoke-virtual {v1}, Landroid/util/SparseArray;->size()I

    move-result v1

    const-wide v13, 0x10900000001L

    if-ge v12, v1, :cond_4

    .line 9812
    const-wide v1, 0x20b00000004L

    invoke-virtual {v9, v1, v2}, Landroid/util/proto/ProtoOutputStream;->start(J)J

    move-result-wide v7

    .line 9813
    .local v7, "token":J
    const-wide v1, 0x10500000001L

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    invoke-virtual {v3, v12}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v3

    invoke-virtual {v9, v1, v2, v3}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 9815
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    invoke-virtual {v1, v12}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/util/ArrayMap;

    invoke-virtual {v1}, Landroid/util/ArrayMap;->entrySet()Ljava/util/Set;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v15

    :goto_3
    invoke-interface {v15}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_3

    invoke-interface {v15}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    move-object/from16 v16, v1

    check-cast v16, Ljava/util/Map$Entry;

    .line 9816
    .local v16, "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Ljava/util/ArrayList<Landroid/content/Intent;>;>;"
    const-wide v1, 0x20b00000002L

    invoke-virtual {v9, v1, v2}, Landroid/util/proto/ProtoOutputStream;->start(J)J

    move-result-wide v5

    .line 9817
    .local v5, "actionToken":J
    invoke-interface/range {v16 .. v16}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Ljava/lang/String;

    invoke-virtual {v9, v13, v14, v1}, Landroid/util/proto/ProtoOutputStream;->write(JLjava/lang/String;)V

    .line 9818
    invoke-interface/range {v16 .. v16}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v17

    :goto_4
    invoke-interface/range {v17 .. v17}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_2

    invoke-interface/range {v17 .. v17}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    move-object/from16 v18, v1

    check-cast v18, Landroid/content/Intent;

    .line 9819
    .local v18, "intent":Landroid/content/Intent;
    const-wide v3, 0x20b00000002L

    const/16 v19, 0x0

    const/16 v20, 0x1

    const/16 v21, 0x1

    const/16 v22, 0x0

    move-object/from16 v1, v18

    move-object/from16 v2, p1

    move-wide v10, v5

    .end local v5    # "actionToken":J
    .local v10, "actionToken":J
    move/from16 v5, v19

    move/from16 v6, v20

    move-wide v13, v7

    .end local v7    # "token":J
    .local v13, "token":J
    move/from16 v7, v21

    move/from16 v8, v22

    invoke-virtual/range {v1 .. v8}, Landroid/content/Intent;->dumpDebug(Landroid/util/proto/ProtoOutputStream;JZZZZ)V

    .line 9821
    .end local v18    # "intent":Landroid/content/Intent;
    move-wide v5, v10

    move-wide v7, v13

    const-wide v10, 0x10b00000002L

    const-wide v13, 0x10900000001L

    goto :goto_4

    .line 9822
    .end local v10    # "actionToken":J
    .end local v13    # "token":J
    .restart local v5    # "actionToken":J
    .restart local v7    # "token":J
    :cond_2
    move-wide v10, v5

    move-wide v13, v7

    .end local v5    # "actionToken":J
    .end local v7    # "token":J
    .restart local v10    # "actionToken":J
    .restart local v13    # "token":J
    invoke-virtual {v9, v10, v11}, Landroid/util/proto/ProtoOutputStream;->end(J)V

    .line 9823
    .end local v10    # "actionToken":J
    .end local v16    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Ljava/util/ArrayList<Landroid/content/Intent;>;>;"
    const-wide v10, 0x10b00000002L

    const-wide v13, 0x10900000001L

    goto :goto_3

    .line 9824
    .end local v13    # "token":J
    .restart local v7    # "token":J
    :cond_3
    move-wide v13, v7

    .end local v7    # "token":J
    .restart local v13    # "token":J
    invoke-virtual {v9, v13, v14}, Landroid/util/proto/ProtoOutputStream;->end(J)V

    .line 9811
    .end local v13    # "token":J
    add-int/lit8 v12, v12, 0x1

    const-wide v10, 0x10b00000002L

    goto/16 :goto_2

    .line 9827
    .end local v12    # "user":I
    :cond_4
    const-wide v1, 0x10b00000005L

    invoke-virtual {v9, v1, v2}, Landroid/util/proto/ProtoOutputStream;->start(J)J

    move-result-wide v1

    .line 9828
    .local v1, "handlerToken":J
    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v3}, Lcom/android/server/am/ActivityManagerService$MainHandler;->toString()Ljava/lang/String;

    move-result-object v3

    const-wide v4, 0x10900000001L

    invoke-virtual {v9, v4, v5, v3}, Landroid/util/proto/ProtoOutputStream;->write(JLjava/lang/String;)V

    .line 9829
    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v3}, Lcom/android/server/am/ActivityManagerService$MainHandler;->getLooper()Landroid/os/Looper;

    move-result-object v3

    const-wide v4, 0x10b00000002L

    invoke-virtual {v3, v9, v4, v5}, Landroid/os/Looper;->dumpDebug(Landroid/util/proto/ProtoOutputStream;J)V

    .line 9831
    invoke-virtual {v9, v1, v2}, Landroid/util/proto/ProtoOutputStream;->end(J)V

    .line 9832
    return-void
.end method

.method writeOtherProcessesInfoToProtoLSP(Landroid/util/proto/ProtoOutputStream;Ljava/lang/String;II)V
    .locals 10
    .param p1, "proto"    # Landroid/util/proto/ProtoOutputStream;
    .param p2, "dumpPackage"    # Ljava/lang/String;
    .param p3, "dumpAppId"    # I
    .param p4, "numPers"    # I

    .line 9539
    const/4 v0, 0x0

    .local v0, "i":I
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mActiveInstrumentation:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v1

    .local v1, "size":I
    :goto_0
    if-ge v0, v1, :cond_1

    .line 9540
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mActiveInstrumentation:Ljava/util/ArrayList;

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ActiveInstrumentation;

    .line 9541
    .local v2, "ai":Lcom/android/server/am/ActiveInstrumentation;
    if-eqz p2, :cond_0

    iget-object v3, v2, Lcom/android/server/am/ActiveInstrumentation;->mClass:Landroid/content/ComponentName;

    invoke-virtual {v3}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v3, p2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_0

    iget-object v3, v2, Lcom/android/server/am/ActiveInstrumentation;->mTargetInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v3, v3, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    .line 9542
    invoke-virtual {v3, p2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_0

    .line 9543
    goto :goto_1

    .line 9545
    :cond_0
    const-wide v3, 0x20b00000003L

    invoke-virtual {v2, p1, v3, v4}, Lcom/android/server/am/ActiveInstrumentation;->dumpDebug(Landroid/util/proto/ProtoOutputStream;J)V

    .line 9539
    .end local v2    # "ai":Lcom/android/server/am/ActiveInstrumentation;
    :goto_1
    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    .line 9549
    .end local v0    # "i":I
    .end local v1    # "size":I
    :cond_1
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mUidObserverController:Lcom/android/server/am/UidObserverController;

    const-wide v6, 0x20b00000005L

    move-object v3, p1

    move-object v4, p2

    move v5, p3

    invoke-virtual/range {v2 .. v7}, Lcom/android/server/am/UidObserverController;->dumpValidateUidsProto(Landroid/util/proto/ProtoOutputStream;Ljava/lang/String;IJ)V

    .line 9552
    if-eqz p2, :cond_4

    .line 9553
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    monitor-enter v0

    .line 9554
    const/4 v1, 0x0

    .local v1, "i":I
    :try_start_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-virtual {v2}, Lcom/android/server/am/ActivityManagerService$PidMap;->size()I

    move-result v2

    .local v2, "size":I
    :goto_2
    if-ge v1, v2, :cond_3

    .line 9555
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-virtual {v3, v1}, Lcom/android/server/am/ActivityManagerService$PidMap;->valueAt(I)Lcom/android/server/am/ProcessRecord;

    move-result-object v3

    .line 9556
    .local v3, "r":Lcom/android/server/am/ProcessRecord;
    invoke-virtual {v3}, Lcom/android/server/am/ProcessRecord;->getPkgList()Lcom/android/server/am/PackageList;

    move-result-object v4

    invoke-virtual {v4, p2}, Lcom/android/server/am/PackageList;->containsKey(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_2

    .line 9557
    goto :goto_3

    .line 9559
    :cond_2
    const-wide v4, 0x20b00000007L

    invoke-virtual {v3, p1, v4, v5}, Lcom/android/server/am/ProcessRecord;->dumpDebug(Landroid/util/proto/ProtoOutputStream;J)V

    .line 9554
    .end local v3    # "r":Lcom/android/server/am/ProcessRecord;
    :goto_3
    add-int/lit8 v1, v1, 0x1

    goto :goto_2

    .line 9562
    .end local v1    # "i":I
    .end local v2    # "size":I
    :cond_3
    monitor-exit v0

    goto :goto_4

    :catchall_0
    move-exception v1

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1

    .line 9565
    :cond_4
    :goto_4
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mImportantProcesses:Landroid/util/SparseArray;

    invoke-virtual {v0}, Landroid/util/SparseArray;->size()I

    move-result v0

    if-lez v0, :cond_8

    .line 9566
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    monitor-enter v0

    .line 9567
    const/4 v1, 0x0

    .restart local v1    # "i":I
    :try_start_1
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mImportantProcesses:Landroid/util/SparseArray;

    invoke-virtual {v2}, Landroid/util/SparseArray;->size()I

    move-result v2

    .restart local v2    # "size":I
    :goto_5
    if-ge v1, v2, :cond_7

    .line 9568
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mImportantProcesses:Landroid/util/SparseArray;

    invoke-virtual {v3, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/ActivityManagerService$ImportanceToken;

    .line 9569
    .local v3, "it":Lcom/android/server/am/ActivityManagerService$ImportanceToken;
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    iget v5, v3, Lcom/android/server/am/ActivityManagerService$ImportanceToken;->pid:I

    invoke-virtual {v4, v5}, Lcom/android/server/am/ActivityManagerService$PidMap;->get(I)Lcom/android/server/am/ProcessRecord;

    move-result-object v4

    .line 9570
    .local v4, "r":Lcom/android/server/am/ProcessRecord;
    if-eqz p2, :cond_5

    if-eqz v4, :cond_6

    .line 9571
    invoke-virtual {v4}, Lcom/android/server/am/ProcessRecord;->getPkgList()Lcom/android/server/am/PackageList;

    move-result-object v5

    invoke-virtual {v5, p2}, Lcom/android/server/am/PackageList;->containsKey(Ljava/lang/Object;)Z

    move-result v5

    if-nez v5, :cond_5

    .line 9572
    goto :goto_6

    .line 9574
    :cond_5
    const-wide v5, 0x20b00000008L

    invoke-virtual {v3, p1, v5, v6}, Lcom/android/server/am/ActivityManagerService$ImportanceToken;->dumpDebug(Landroid/util/proto/ProtoOutputStream;J)V

    .line 9567
    .end local v3    # "it":Lcom/android/server/am/ActivityManagerService$ImportanceToken;
    .end local v4    # "r":Lcom/android/server/am/ProcessRecord;
    :cond_6
    :goto_6
    add-int/lit8 v1, v1, 0x1

    goto :goto_5

    .line 9577
    .end local v1    # "i":I
    .end local v2    # "size":I
    :cond_7
    monitor-exit v0

    goto :goto_7

    :catchall_1
    move-exception v1

    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    throw v1

    .line 9580
    :cond_8
    :goto_7
    const/4 v0, 0x0

    .restart local v0    # "i":I
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPersistentStartingProcesses:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v1

    .local v1, "size":I
    :goto_8
    if-ge v0, v1, :cond_a

    .line 9581
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPersistentStartingProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ProcessRecord;

    .line 9582
    .local v2, "r":Lcom/android/server/am/ProcessRecord;
    if-eqz p2, :cond_9

    iget-object v3, v2, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v3, v3, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {p2, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_9

    .line 9583
    goto :goto_9

    .line 9585
    :cond_9
    const-wide v3, 0x20b00000009L

    invoke-virtual {v2, p1, v3, v4}, Lcom/android/server/am/ProcessRecord;->dumpDebug(Landroid/util/proto/ProtoOutputStream;J)V

    .line 9580
    .end local v2    # "r":Lcom/android/server/am/ProcessRecord;
    :goto_9
    add-int/lit8 v0, v0, 0x1

    goto :goto_8

    .line 9589
    .end local v0    # "i":I
    .end local v1    # "size":I
    :cond_a
    const/4 v0, 0x0

    .restart local v0    # "i":I
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    iget-object v1, v1, Lcom/android/server/am/ProcessList;->mRemovedProcesses:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v1

    .restart local v1    # "size":I
    :goto_a
    if-ge v0, v1, :cond_c

    .line 9590
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    iget-object v2, v2, Lcom/android/server/am/ProcessList;->mRemovedProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ProcessRecord;

    .line 9591
    .restart local v2    # "r":Lcom/android/server/am/ProcessRecord;
    if-eqz p2, :cond_b

    iget-object v3, v2, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v3, v3, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {p2, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_b

    .line 9592
    goto :goto_b

    .line 9594
    :cond_b
    const-wide v3, 0x20b0000000aL

    invoke-virtual {v2, p1, v3, v4}, Lcom/android/server/am/ProcessRecord;->dumpDebug(Landroid/util/proto/ProtoOutputStream;J)V

    .line 9589
    .end local v2    # "r":Lcom/android/server/am/ProcessRecord;
    :goto_b
    add-int/lit8 v0, v0, 0x1

    goto :goto_a

    .line 9597
    .end local v0    # "i":I
    .end local v1    # "size":I
    :cond_c
    const/4 v0, 0x0

    .restart local v0    # "i":I
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v1

    .restart local v1    # "size":I
    :goto_c
    if-ge v0, v1, :cond_e

    .line 9598
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ProcessRecord;

    .line 9599
    .restart local v2    # "r":Lcom/android/server/am/ProcessRecord;
    if-eqz p2, :cond_d

    iget-object v3, v2, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v3, v3, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {p2, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_d

    .line 9600
    goto :goto_d

    .line 9602
    :cond_d
    const-wide v3, 0x20b0000000bL

    invoke-virtual {v2, p1, v3, v4}, Lcom/android/server/am/ProcessRecord;->dumpDebug(Landroid/util/proto/ProtoOutputStream;J)V

    .line 9597
    .end local v2    # "r":Lcom/android/server/am/ProcessRecord;
    :goto_d
    add-int/lit8 v0, v0, 0x1

    goto :goto_c

    .line 9605
    .end local v0    # "i":I
    .end local v1    # "size":I
    :cond_e
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    iget-object v0, v0, Lcom/android/server/am/AppProfiler;->mProfilerLock:Ljava/lang/Object;

    monitor-enter v0

    .line 9606
    :try_start_2
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    const-wide v2, 0x20b0000000cL

    invoke-virtual {v1, p1, v2, v3, p2}, Lcom/android/server/am/AppProfiler;->writeProcessesToGcToProto(Landroid/util/proto/ProtoOutputStream;JLjava/lang/String;)V

    .line 9609
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_3

    .line 9610
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppErrors:Lcom/android/server/am/AppErrors;

    const-wide v1, 0x10b0000000dL

    invoke-virtual {v0, p1, v1, v2, p2}, Lcom/android/server/am/AppErrors;->dumpDebugLPr(Landroid/util/proto/ProtoOutputStream;JLjava/lang/String;)V

    .line 9612
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mWakefulness:Ljava/util/concurrent/atomic/AtomicInteger;

    invoke-virtual {v1}, Ljava/util/concurrent/atomic/AtomicInteger;->get()I

    move-result v1

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    .line 9613
    invoke-virtual {v2}, Lcom/android/server/am/AppProfiler;->getTestPssMode()Z

    move-result v2

    .line 9612
    invoke-virtual {v0, p1, p2, v1, v2}, Lcom/android/server/wm/ActivityTaskManagerInternal;->writeProcessesToProto(Landroid/util/proto/ProtoOutputStream;Ljava/lang/String;IZ)V

    .line 9615
    if-nez p2, :cond_f

    .line 9616
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    const-wide v1, 0x10b0000000eL

    invoke-virtual {v0, p1, v1, v2}, Lcom/android/server/am/UserController;->dumpDebug(Landroid/util/proto/ProtoOutputStream;J)V

    .line 9620
    :cond_f
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUidObserverController:Lcom/android/server/am/UidObserverController;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/am/UidObserverController;->dumpDebug(Landroid/util/proto/ProtoOutputStream;Ljava/lang/String;)V

    .line 9622
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mDeviceIdleAllowlist:[I

    array-length v1, v0

    const/4 v2, 0x0

    move v3, v2

    :goto_e
    if-ge v3, v1, :cond_10

    aget v4, v0, v3

    .line 9623
    .local v4, "v":I
    const-wide v5, 0x20500000018L

    invoke-virtual {p1, v5, v6, v4}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 9622
    .end local v4    # "v":I
    add-int/lit8 v3, v3, 0x1

    goto :goto_e

    .line 9626
    :cond_10
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mDeviceIdleTempAllowlist:[I

    array-length v1, v0

    :goto_f
    if-ge v2, v1, :cond_11

    aget v3, v0, v2

    .line 9627
    .local v3, "v":I
    const-wide v4, 0x20500000019L

    invoke-virtual {p1, v4, v5, v3}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 9626
    .end local v3    # "v":I
    add-int/lit8 v2, v2, 0x1

    goto :goto_f

    .line 9630
    :cond_11
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPendingTempAllowlist:Lcom/android/server/am/PendingTempAllowlists;

    invoke-virtual {v0}, Lcom/android/server/am/PendingTempAllowlists;->size()I

    move-result v0

    if-lez v0, :cond_12

    .line 9631
    const/4 v0, 0x0

    .restart local v0    # "i":I
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPendingTempAllowlist:Lcom/android/server/am/PendingTempAllowlists;

    invoke-virtual {v1}, Lcom/android/server/am/PendingTempAllowlists;->size()I

    move-result v1

    .restart local v1    # "size":I
    :goto_10
    if-ge v0, v1, :cond_12

    .line 9632
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPendingTempAllowlist:Lcom/android/server/am/PendingTempAllowlists;

    invoke-virtual {v2, v0}, Lcom/android/server/am/PendingTempAllowlists;->valueAt(I)Lcom/android/server/am/ActivityManagerService$PendingTempAllowlist;

    move-result-object v2

    const-wide v3, 0x20b0000001aL

    invoke-virtual {v2, p1, v3, v4}, Lcom/android/server/am/ActivityManagerService$PendingTempAllowlist;->dumpDebug(Landroid/util/proto/ProtoOutputStream;J)V

    .line 9631
    add-int/lit8 v0, v0, 0x1

    goto :goto_10

    .line 9637
    .end local v0    # "i":I
    .end local v1    # "size":I
    :cond_12
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;

    if-nez v0, :cond_13

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mOrigDebugApp:Ljava/lang/String;

    if-nez v1, :cond_13

    iget-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mDebugTransient:Z

    if-nez v1, :cond_13

    iget-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mOrigWaitForDebugger:Z

    if-eqz v1, :cond_15

    .line 9639
    :cond_13
    if-eqz p2, :cond_14

    invoke-virtual {p2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_14

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mOrigDebugApp:Ljava/lang/String;

    .line 9640
    invoke-virtual {p2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_15

    .line 9641
    :cond_14
    const-wide v0, 0x10b0000001eL

    invoke-virtual {p1, v0, v1}, Landroid/util/proto/ProtoOutputStream;->start(J)J

    move-result-wide v0

    .line 9642
    .local v0, "debugAppToken":J
    const-wide v2, 0x10900000001L

    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;

    invoke-virtual {p1, v2, v3, v4}, Landroid/util/proto/ProtoOutputStream;->write(JLjava/lang/String;)V

    .line 9643
    const-wide v2, 0x10900000002L

    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mOrigDebugApp:Ljava/lang/String;

    invoke-virtual {p1, v2, v3, v4}, Landroid/util/proto/ProtoOutputStream;->write(JLjava/lang/String;)V

    .line 9644
    const-wide v2, 0x10800000003L

    iget-boolean v4, p0, Lcom/android/server/am/ActivityManagerService;->mDebugTransient:Z

    invoke-virtual {p1, v2, v3, v4}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 9645
    const-wide v2, 0x10800000004L

    iget-boolean v4, p0, Lcom/android/server/am/ActivityManagerService;->mOrigWaitForDebugger:Z

    invoke-virtual {p1, v2, v3, v4}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 9646
    invoke-virtual {p1, v0, v1}, Landroid/util/proto/ProtoOutputStream;->end(J)V

    .line 9650
    .end local v0    # "debugAppToken":J
    :cond_15
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    iget-object v1, v0, Lcom/android/server/am/AppProfiler;->mProfilerLock:Ljava/lang/Object;

    monitor-enter v1

    .line 9651
    :try_start_3
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    invoke-virtual {v0, p1}, Lcom/android/server/am/AppProfiler;->writeMemWatchProcessToProtoLPf(Landroid/util/proto/ProtoOutputStream;)V

    .line 9652
    monitor-exit v1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_2

    .line 9654
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mTrackAllocationApp:Ljava/lang/String;

    if-eqz v0, :cond_17

    .line 9655
    if-eqz p2, :cond_16

    invoke-virtual {p2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_17

    .line 9656
    :cond_16
    const-wide v0, 0x10900000021L

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mTrackAllocationApp:Ljava/lang/String;

    invoke-virtual {p1, v0, v1, v2}, Landroid/util/proto/ProtoOutputStream;->write(JLjava/lang/String;)V

    .line 9661
    :cond_17
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/am/AppProfiler;->writeProfileDataToProtoLocked(Landroid/util/proto/ProtoOutputStream;Ljava/lang/String;)V

    .line 9663
    if-eqz p2, :cond_18

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mNativeDebuggingApp:Ljava/lang/String;

    invoke-virtual {p2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_19

    .line 9664
    :cond_18
    const-wide v0, 0x10900000023L

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mNativeDebuggingApp:Ljava/lang/String;

    invoke-virtual {p1, v0, v1, v2}, Landroid/util/proto/ProtoOutputStream;->write(JLjava/lang/String;)V

    .line 9667
    :cond_19
    if-nez p2, :cond_1a

    .line 9668
    const-wide v0, 0x10800000024L

    iget-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mAlwaysFinishActivities:Z

    invoke-virtual {p1, v0, v1, v2}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 9669
    const-wide v0, 0x10500000026L

    invoke-virtual {p1, v0, v1, p4}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 9670
    const-wide v0, 0x10800000027L

    iget-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesReady:Z

    invoke-virtual {p1, v0, v1, v2}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 9671
    const-wide v0, 0x10800000028L

    iget-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mSystemReady:Z

    invoke-virtual {p1, v0, v1, v2}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 9672
    const-wide v0, 0x10800000029L

    iget-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mBooted:Z

    invoke-virtual {p1, v0, v1, v2}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 9673
    const-wide v0, 0x1050000002aL

    iget v2, p0, Lcom/android/server/am/ActivityManagerService;->mFactoryTest:I

    invoke-virtual {p1, v0, v1, v2}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 9674
    const-wide v0, 0x1080000002bL

    iget-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mBooting:Z

    invoke-virtual {p1, v0, v1, v2}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 9675
    const-wide v0, 0x1080000002cL

    iget-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mCallFinishBooting:Z

    invoke-virtual {p1, v0, v1, v2}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 9676
    const-wide v0, 0x1080000002dL

    iget-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mBootAnimationComplete:Z

    invoke-virtual {p1, v0, v1, v2}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 9677
    const-wide v0, 0x1030000002eL

    iget-wide v2, p0, Lcom/android/server/am/ActivityManagerService;->mLastPowerCheckUptime:J

    invoke-virtual {p1, v0, v1, v2, v3}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 9678
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mOomAdjuster:Lcom/android/server/am/OomAdjuster;

    invoke-virtual {v0, p1}, Lcom/android/server/am/OomAdjuster;->dumpProcessListVariablesLocked(Landroid/util/proto/ProtoOutputStream;)V

    .line 9679
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    invoke-virtual {v0, p1}, Lcom/android/server/am/AppProfiler;->writeMemoryLevelsToProtoLocked(Landroid/util/proto/ProtoOutputStream;)V

    .line 9680
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v8

    .line 9681
    .local v8, "now":J
    const-wide v2, 0x10b0000003aL

    iget-wide v4, p0, Lcom/android/server/am/ActivityManagerService;->mLastIdleTime:J

    move-object v1, p1

    move-wide v6, v8

    invoke-static/range {v1 .. v7}, Landroid/util/proto/ProtoUtils;->toDuration(Landroid/util/proto/ProtoOutputStream;JJJ)V

    .line 9682
    const-wide v0, 0x1030000003bL

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    .line 9683
    invoke-virtual {v2, v8, v9}, Lcom/android/server/am/AppProfiler;->getLowRamTimeSinceIdleLPr(J)J

    move-result-wide v2

    .line 9682
    invoke-virtual {p1, v0, v1, v2, v3}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 9685
    .end local v8    # "now":J
    :cond_1a
    return-void

    .line 9652
    :catchall_2
    move-exception v0

    :try_start_4
    monitor-exit v1
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_2

    throw v0

    .line 9609
    :catchall_3
    move-exception v1

    :try_start_5
    monitor-exit v0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_3

    throw v1
.end method
