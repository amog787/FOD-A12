.class public Lcom/android/server/wm/WindowManagerService;
.super Landroid/view/IWindowManager$Stub;
.source "WindowManagerService.java"

# interfaces
.implements Lcom/android/server/Watchdog$Monitor;
.implements Lcom/android/server/policy/WindowManagerPolicy$WindowManagerFuncs;


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lcom/android/server/wm/WindowManagerService$LocalService;,
        Lcom/android/server/wm/WindowManagerService$MousePositionTracker;,
        Lcom/android/server/wm/WindowManagerService$H;,
        Lcom/android/server/wm/WindowManagerService$AppFreezeListener;,
        Lcom/android/server/wm/WindowManagerService$WindowChangeListener;,
        Lcom/android/server/wm/WindowManagerService$SettingsObserver;,
        Lcom/android/server/wm/WindowManagerService$RotationWatcher;,
        Lcom/android/server/wm/WindowManagerService$UpdateAnimationScaleMode;
    }
.end annotation


# static fields
.field private static final ALWAYS_KEEP_CURRENT:Z = true

.field private static final ANIMATION_COMPLETED_TIMEOUT_MS:I = 0x1388

.field private static final ANIMATION_DURATION_SCALE:I = 0x2

.field private static final BOOT_ANIMATION_POLL_INTERVAL:I = 0x32

.field private static final BOOT_ANIMATION_SERVICE:Ljava/lang/String; = "bootanim"

.field private static final DENSITY_OVERRIDE:Ljava/lang/String; = "ro.config.density_override"

.field private static final DISABLE_CUSTOM_TASK_ANIMATION_PROPERTY:Ljava/lang/String; = "persist.wm.disable_custom_task_animation"

.field static final ENABLE_FIXED_ROTATION_TRANSFORM:Z

.field private static final ENABLE_REMOTE_KEYGUARD_ANIMATION_PROPERTY:Ljava/lang/String; = "persist.wm.enable_remote_keyguard_animation"

.field public static final ENABLE_SHELL_TRANSITIONS:Ljava/lang/String; = "persist.debug.shell_transit"

.field private static final INPUT_DEVICES_READY_FOR_SAFE_MODE_DETECTION_TIMEOUT_MILLIS:I = 0x3e8

.field static final LAST_ANR_LIFETIME_DURATION_MSECS:I = 0x6ddd00

.field static final LAYER_OFFSET_THUMBNAIL:I = 0x4

.field static final LAYOUT_REPEAT_THRESHOLD:I = 0x4

.field static final LOGTAG_INPUT_FOCUS:I = 0xf231

.field static final MAX_ANIMATION_DURATION:I = 0x2710

.field static final PROFILE_ORIENTATION:Z = false

.field private static final PROPERTY_EMULATOR_CIRCULAR:Ljava/lang/String; = "ro.emulator.circular"

.field private static final SIZE_OVERRIDE:Ljava/lang/String; = "ro.config.size_override"

.field private static final SYSTEM_DEBUGGABLE:Ljava/lang/String; = "ro.debuggable"

.field private static final SYSTEM_SECURE:Ljava/lang/String; = "ro.secure"

.field private static final TAG:Ljava/lang/String; = "WindowManager"

.field private static final TRANSITION_ANIMATION_SCALE:I = 0x1

.field static final TYPE_LAYER_MULTIPLIER:I = 0x2710

.field static final TYPE_LAYER_OFFSET:I = 0x3e8

.field static final UPDATE_FOCUS_NORMAL:I = 0x0

.field static final UPDATE_FOCUS_PLACING_SURFACES:I = 0x2

.field static final UPDATE_FOCUS_REMOVING_FOCUS:I = 0x4

.field static final UPDATE_FOCUS_WILL_ASSIGN_LAYERS:I = 0x1

.field static final UPDATE_FOCUS_WILL_PLACE_SURFACES:I = 0x3

.field static final WINDOWS_FREEZING_SCREENS_ACTIVE:I = 0x1

.field static final WINDOWS_FREEZING_SCREENS_NONE:I = 0x0

.field static final WINDOWS_FREEZING_SCREENS_TIMEOUT:I = 0x2

.field private static final WINDOW_ANIMATION_SCALE:I = 0x0

.field static final WINDOW_FREEZE_TIMEOUT_DURATION:I = 0x7d0

.field static final WINDOW_LAYER_MULTIPLIER:I = 0x5

.field static final WINDOW_REPLACEMENT_TIMEOUT_DURATION:I = 0x7d0

.field private static final WM_USE_BLAST_ADAPTER_FLAG:Ljava/lang/String; = "wm_use_blast_adapter"

.field static sDisableCustomTaskAnimationProperty:Z

.field private static final sEnableRemoteKeyguardAnimation:I

.field public static final sEnableRemoteKeyguardGoingAwayAnimation:Z

.field public static final sEnableRemoteKeyguardOccludeAnimation:Z

.field public static final sEnableShellTransitions:Z

.field private static sInstance:Lcom/android/server/wm/WindowManagerService;

.field static sThreadPriorityBooster:Lcom/android/server/wm/WindowManagerThreadPriorityBooster;


# instance fields
.field mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

.field final mActivityManager:Landroid/app/IActivityManager;

.field final mActivityManagerAppTransitionNotifier:Lcom/android/server/wm/WindowManagerInternal$AppTransitionListener;

.field final mActivityTaskManager:Landroid/app/IActivityTaskManager;

.field final mAllowAnimationsInLowPowerMode:Z

.field final mAllowBootMessages:Z

.field mAllowTheaterModeWakeFromLayout:Z

.field final mAmInternal:Landroid/app/ActivityManagerInternal;

.field final mAnimationHandler:Landroid/os/Handler;

.field final mAnimationTransferMap:Landroid/util/ArrayMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/ArrayMap<",
            "Lcom/android/server/wm/AnimationAdapter;",
            "Lcom/android/server/wm/SurfaceAnimator;",
            ">;"
        }
    .end annotation
.end field

.field private mAnimationsDisabled:Z

.field final mAnimator:Lcom/android/server/wm/WindowAnimator;

.field private mAnimatorDurationScaleSetting:F

.field final mAnrController:Lcom/android/server/wm/AnrController;

.field final mAppFreezeListeners:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/server/wm/WindowManagerService$AppFreezeListener;",
            ">;"
        }
    .end annotation
.end field

.field final mAppOps:Landroid/app/AppOpsManager;

.field mAppsFreezingScreen:I

.field final mAssistantOnTopOfDream:Z

.field final mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

.field final mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

.field final mBlurController:Lcom/android/server/wm/BlurController;

.field mBootAnimationStopped:Z

.field mBootWaitForWindowsStartTime:J

.field private final mBroadcastReceiver:Landroid/content/BroadcastReceiver;

.field mClientFreezingScreen:Z

.field final mConstants:Lcom/android/server/wm/WindowManagerConstants;

.field final mContext:Landroid/content/Context;

.field mCurrentProfileIds:[I

.field mCurrentUserId:I

.field final mDestroySurface:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field mDisableTransitionAnimation:Z

.field private final mDisplayAreaPolicyProvider:Lcom/android/server/wm/DisplayAreaPolicy$Provider;

.field mDisplayEnabled:Z

.field mDisplayFreezeTime:J

.field mDisplayFrozen:Z

.field private final mDisplayHashController:Lcom/android/server/wm/DisplayHashController;

.field final mDisplayManager:Landroid/hardware/display/DisplayManager;

.field final mDisplayManagerInternal:Landroid/hardware/display/DisplayManagerInternal;

.field final mDisplayNotificationController:Lcom/android/server/wm/DisplayWindowListenerController;

.field mDisplayReady:Z

.field mDisplayRotationController:Landroid/view/IDisplayWindowRotationController;

.field private final mDisplayRotationControllerDeath:Landroid/os/IBinder$DeathRecipient;

.field final mDisplayWindowSettings:Lcom/android/server/wm/DisplayWindowSettings;

.field final mDisplayWindowSettingsProvider:Lcom/android/server/wm/DisplayWindowSettingsProvider;

.field final mDragDropController:Lcom/android/server/wm/DragDropController;

.field final mDrawLockTimeoutMillis:J

.field final mEmbeddedWindowController:Lcom/android/server/wm/EmbeddedWindowController;

.field mEmulatorDisplayOverlay:Lcom/android/server/wm/EmulatorDisplayOverlay;

.field private mEnterAnimId:I

.field private mEventDispatchingEnabled:Z

.field private mExitAnimId:I

.field mFocusMayChange:Z

.field mForceDesktopModeOnExternalDisplays:Z

.field mForceDisplayEnabled:Z

.field final mForceRemoves:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field private mFrozenDisplayId:I

.field final mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

.field final mH:Lcom/android/server/wm/WindowManagerService$H;

.field mHardKeyboardAvailable:Z

.field mHardKeyboardStatusChangeListener:Lcom/android/server/wm/WindowManagerInternal$OnHardKeyboardStatusChangeListener;

.field private mHasHdrSupport:Z

.field final mHasPermanentDpad:Z

.field private mHasWideColorGamutSupport:Z

.field private mHidingNonSystemOverlayWindows:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field final mHighRefreshRateDenylist:Lcom/android/server/wm/HighRefreshRateDenylist;

.field private mHoldingScreenOn:Lcom/android/server/wm/Session;

.field private mHoldingScreenWakeLock:Landroid/os/PowerManager$WakeLock;

.field private mInTouchMode:Z

.field final mInputManager:Lcom/android/server/input/InputManagerService;

.field final mInputManagerCallback:Lcom/android/server/wm/InputManagerCallback;

.field final mInputToWindowMap:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap<",
            "Landroid/os/IBinder;",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field mIsFakeTouchDevice:Z

.field mIsPc:Z

.field mIsTouchDevice:Z

.field final mKeyInterceptionInfoForToken:Ljava/util/Map;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/Map<",
            "Landroid/os/IBinder;",
            "Lcom/android/internal/policy/KeyInterceptionInfo;",
            ">;"
        }
    .end annotation
.end field

.field private final mKeyguardDisableHandler:Lcom/android/server/wm/KeyguardDisableHandler;

.field mLastANRState:Ljava/lang/String;

.field mLastDisplayFreezeDuration:I

.field mLastFinishedFreezeSource:Ljava/lang/Object;

.field mLastWakeLockHoldingWindow:Lcom/android/server/wm/WindowState;

.field mLastWakeLockObscuringWindow:Lcom/android/server/wm/WindowState;

.field final mLatencyTracker:Lcom/android/internal/util/LatencyTracker;

.field final mLetterboxConfiguration:Lcom/android/server/wm/LetterboxConfiguration;

.field final mLimitedAlphaCompositing:Z

.field final mMaxUiWidth:I

.field mMousePositionTracker:Lcom/android/server/wm/WindowManagerService$MousePositionTracker;

.field final mOnlyCore:Z

.field final mPendingRemove:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field mPendingRemoveTmp:[Lcom/android/server/wm/WindowState;

.field mPerDisplayFocusEnabled:Z

.field final mPmInternal:Landroid/content/pm/PackageManagerInternal;

.field mPointerLocationEnabled:Z

.field mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

.field mPowerManager:Landroid/os/PowerManager;

.field mPowerManagerInternal:Landroid/os/PowerManagerInternal;

.field private final mPriorityDumper:Lcom/android/server/utils/PriorityDump$PriorityDumper;

.field final mProcessConfigurations:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray<",
            "Landroid/content/res/Configuration;",
            ">;"
        }
    .end annotation
.end field

.field private mRecentsAnimationController:Lcom/android/server/wm/RecentsAnimationController;

.field mRenderShadowsInCompositor:Z

.field final mResizingWindows:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field mRoot:Lcom/android/server/wm/RootWindowContainer;

.field mRotationWatchers:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/server/wm/WindowManagerService$RotationWatcher;",
            ">;"
        }
    .end annotation
.end field

.field mSafeMode:Z

.field private final mScreenFrozenLock:Landroid/os/PowerManager$WakeLock;

.field final mSessions:Landroid/util/ArraySet;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/ArraySet<",
            "Lcom/android/server/wm/Session;",
            ">;"
        }
    .end annotation
.end field

.field mSettingsObserver:Lcom/android/server/wm/WindowManagerService$SettingsObserver;

.field mShowAlertWindowNotifications:Z

.field mShowingBootMessages:Z

.field final mStartingSurfaceController:Lcom/android/server/wm/StartingSurfaceController;

.field mStrictModeFlash:Lcom/android/server/wm/StrictModeFlash;

.field mSurfaceAnimationRunner:Lcom/android/server/wm/SurfaceAnimationRunner;

.field mSurfaceControlFactory:Ljava/util/function/Function;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/function/Function<",
            "Landroid/view/SurfaceSession;",
            "Landroid/view/SurfaceControl$Builder;",
            ">;"
        }
    .end annotation
.end field

.field final mSurfaceFactory:Ljava/util/function/Supplier;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/function/Supplier<",
            "Landroid/view/Surface;",
            ">;"
        }
    .end annotation
.end field

.field mSwitchingUser:Z

.field final mSyncEngine:Lcom/android/server/wm/BLASTSyncEngine;

.field mSystemBooted:Z

.field mSystemReady:Z

.field final mTaskPositioningController:Lcom/android/server/wm/TaskPositioningController;

.field final mTaskSnapshotController:Lcom/android/server/wm/TaskSnapshotController;

.field final mTempConfiguration:Landroid/content/res/Configuration;

.field private mTempWindowRenderStats:Landroid/view/WindowContentFrameStats;

.field private final mTestUtilityService:Landroid/content/pm/TestUtilityService;

.field final mTmpFloats:[F

.field final mTmpRect:Landroid/graphics/Rect;

.field final mTmpRect2:Landroid/graphics/Rect;

.field final mTmpRect3:Landroid/graphics/Rect;

.field final mTmpRectF:Landroid/graphics/RectF;

.field final mTmpTransform:Landroid/graphics/Matrix;

.field private final mTransaction:Landroid/view/SurfaceControl$Transaction;

.field mTransactionFactory:Ljava/util/function/Supplier;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/function/Supplier<",
            "Landroid/view/SurfaceControl$Transaction;",
            ">;"
        }
    .end annotation
.end field

.field mTransactionSequence:I

.field private mTransitionAnimationScaleSetting:F

.field final mUseBLAST:Z

.field final mUseBLASTSync:Z

.field private mViewServer:Lcom/android/server/wm/ViewServer;

.field mVr2dDisplayId:I

.field mVrModeEnabled:Z

.field private final mVrStateCallbacks:Landroid/service/vr/IVrStateCallbacks;

.field final mWaitingForDrawnCallbacks:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap<",
            "Lcom/android/server/wm/WindowContainer;",
            "Ljava/lang/Runnable;",
            ">;"
        }
    .end annotation
.end field

.field final mWallpaperVisibilityListeners:Lcom/android/server/wm/WallpaperVisibilityListeners;

.field mWatermark:Lcom/android/server/wm/Watermark;

.field private mWindowAnimationScaleSetting:F

.field final mWindowChangeListeners:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/server/wm/WindowManagerService$WindowChangeListener;",
            ">;"
        }
    .end annotation
.end field

.field final mWindowContextListenerController:Lcom/android/server/wm/WindowContextListenerController;

.field final mWindowMap:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap<",
            "Landroid/os/IBinder;",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field final mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

.field final mWindowReplacementTimeouts:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/server/wm/ActivityRecord;",
            ">;"
        }
    .end annotation
.end field

.field final mWindowTracing:Lcom/android/server/wm/WindowTracing;

.field mWindowsChanged:Z

.field mWindowsFreezingScreen:I


# direct methods
.method static constructor <clinit>()V
    .locals 5

    .line 422
    nop

    .line 423
    const-string v0, "persist.wm.disable_custom_task_animation"

    const/4 v1, 0x1

    invoke-static {v0, v1}, Landroid/os/SystemProperties;->getBoolean(Ljava/lang/String;Z)Z

    move-result v0

    sput-boolean v0, Lcom/android/server/wm/WindowManagerService;->sDisableCustomTaskAnimationProperty:Z

    .line 433
    nop

    .line 434
    const-string v0, "persist.debug.shell_transit"

    const/4 v2, 0x0

    invoke-static {v0, v2}, Landroid/os/SystemProperties;->getBoolean(Ljava/lang/String;Z)Z

    move-result v0

    sput-boolean v0, Lcom/android/server/wm/WindowManagerService;->sEnableShellTransitions:Z

    .line 447
    nop

    .line 448
    const-string v3, "persist.wm.enable_remote_keyguard_animation"

    invoke-static {v3, v2}, Landroid/os/SystemProperties;->getInt(Ljava/lang/String;I)I

    move-result v3

    sput v3, Lcom/android/server/wm/WindowManagerService;->sEnableRemoteKeyguardAnimation:I

    .line 453
    if-nez v0, :cond_0

    if-lt v3, v1, :cond_0

    move v4, v1

    goto :goto_0

    :cond_0
    move v4, v2

    :goto_0
    sput-boolean v4, Lcom/android/server/wm/WindowManagerService;->sEnableRemoteKeyguardGoingAwayAnimation:Z

    .line 459
    if-nez v0, :cond_1

    const/4 v0, 0x2

    if-lt v3, v0, :cond_1

    move v2, v1

    :cond_1
    sput-boolean v2, Lcom/android/server/wm/WindowManagerService;->sEnableRemoteKeyguardOccludeAnimation:Z

    .line 466
    nop

    .line 467
    const-string v0, "persist.wm.fixed_rotation_transform"

    invoke-static {v0, v1}, Landroid/os/SystemProperties;->getBoolean(Ljava/lang/String;Z)Z

    move-result v0

    sput-boolean v0, Lcom/android/server/wm/WindowManagerService;->ENABLE_FIXED_ROTATION_TRANSFORM:Z

    .line 1073
    new-instance v0, Lcom/android/server/wm/WindowManagerThreadPriorityBooster;

    invoke-direct {v0}, Lcom/android/server/wm/WindowManagerThreadPriorityBooster;-><init>()V

    sput-object v0, Lcom/android/server/wm/WindowManagerService;->sThreadPriorityBooster:Lcom/android/server/wm/WindowManagerThreadPriorityBooster;

    return-void
.end method

.method private constructor <init>(Landroid/content/Context;Lcom/android/server/input/InputManagerService;ZZLcom/android/server/policy/WindowManagerPolicy;Lcom/android/server/wm/ActivityTaskManagerService;Lcom/android/server/wm/DisplayWindowSettingsProvider;Ljava/util/function/Supplier;Ljava/util/function/Supplier;Ljava/util/function/Function;)V
    .locals 20
    .param p1, "context"    # Landroid/content/Context;
    .param p2, "inputManager"    # Lcom/android/server/input/InputManagerService;
    .param p3, "showBootMsgs"    # Z
    .param p4, "onlyCore"    # Z
    .param p5, "policy"    # Lcom/android/server/policy/WindowManagerPolicy;
    .param p6, "atm"    # Lcom/android/server/wm/ActivityTaskManagerService;
    .param p7, "displayWindowSettingsProvider"    # Lcom/android/server/wm/DisplayWindowSettingsProvider;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/Context;",
            "Lcom/android/server/input/InputManagerService;",
            "ZZ",
            "Lcom/android/server/policy/WindowManagerPolicy;",
            "Lcom/android/server/wm/ActivityTaskManagerService;",
            "Lcom/android/server/wm/DisplayWindowSettingsProvider;",
            "Ljava/util/function/Supplier<",
            "Landroid/view/SurfaceControl$Transaction;",
            ">;",
            "Ljava/util/function/Supplier<",
            "Landroid/view/Surface;",
            ">;",
            "Ljava/util/function/Function<",
            "Landroid/view/SurfaceSession;",
            "Landroid/view/SurfaceControl$Builder;",
            ">;)V"
        }
    .end annotation

    .line 1209
    .local p8, "transactionFactory":Ljava/util/function/Supplier;, "Ljava/util/function/Supplier<Landroid/view/SurfaceControl$Transaction;>;"
    .local p9, "surfaceFactory":Ljava/util/function/Supplier;, "Ljava/util/function/Supplier<Landroid/view/Surface;>;"
    .local p10, "surfaceControlFactory":Ljava/util/function/Function;, "Ljava/util/function/Function<Landroid/view/SurfaceSession;Landroid/view/SurfaceControl$Builder;>;"
    move-object/from16 v0, p0

    move-object/from16 v7, p1

    move-object/from16 v8, p2

    move-object/from16 v9, p6

    move-object/from16 v10, p7

    invoke-direct/range {p0 .. p0}, Landroid/view/IWindowManager$Stub;-><init>()V

    .line 488
    const/4 v1, -0x1

    iput v1, v0, Lcom/android/server/wm/WindowManagerService;->mVr2dDisplayId:I

    .line 489
    const/4 v11, 0x0

    iput-boolean v11, v0, Lcom/android/server/wm/WindowManagerService;->mVrModeEnabled:Z

    .line 494
    iput-boolean v11, v0, Lcom/android/server/wm/WindowManagerService;->mRenderShadowsInCompositor:Z

    .line 500
    new-instance v1, Landroid/util/ArrayMap;

    invoke-direct {v1}, Landroid/util/ArrayMap;-><init>()V

    .line 501
    invoke-static {v1}, Ljava/util/Collections;->synchronizedMap(Ljava/util/Map;)Ljava/util/Map;

    move-result-object v1

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mKeyInterceptionInfoForToken:Ljava/util/Map;

    .line 505
    new-instance v1, Lcom/android/server/wm/WindowManagerService$1;

    invoke-direct {v1, v0}, Lcom/android/server/wm/WindowManagerService$1;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mVrStateCallbacks:Landroid/service/vr/IVrStateCallbacks;

    .line 518
    new-instance v12, Lcom/android/server/wm/WindowManagerService$2;

    invoke-direct {v12, v0}, Lcom/android/server/wm/WindowManagerService$2;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    iput-object v12, v0, Lcom/android/server/wm/WindowManagerService;->mBroadcastReceiver:Landroid/content/BroadcastReceiver;

    .line 530
    new-instance v1, Lcom/android/server/wm/WindowManagerService$3;

    invoke-direct {v1, v0}, Lcom/android/server/wm/WindowManagerService$3;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mPriorityDumper:Lcom/android/server/utils/PriorityDump$PriorityDumper;

    .line 552
    new-array v1, v11, [I

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mCurrentProfileIds:[I

    .line 586
    const/4 v13, 0x1

    iput-boolean v13, v0, Lcom/android/server/wm/WindowManagerService;->mShowAlertWindowNotifications:Z

    .line 591
    new-instance v1, Landroid/util/ArraySet;

    invoke-direct {v1}, Landroid/util/ArraySet;-><init>()V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mSessions:Landroid/util/ArraySet;

    .line 594
    new-instance v1, Ljava/util/HashMap;

    invoke-direct {v1}, Ljava/util/HashMap;-><init>()V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    .line 597
    new-instance v1, Ljava/util/HashMap;

    invoke-direct {v1}, Ljava/util/HashMap;-><init>()V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mInputToWindowMap:Ljava/util/HashMap;

    .line 606
    new-instance v1, Ljava/util/ArrayList;

    invoke-direct {v1}, Ljava/util/ArrayList;-><init>()V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mWindowReplacementTimeouts:Ljava/util/ArrayList;

    .line 613
    new-instance v1, Ljava/util/ArrayList;

    invoke-direct {v1}, Ljava/util/ArrayList;-><init>()V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mResizingWindows:Ljava/util/ArrayList;

    .line 618
    new-instance v1, Ljava/util/ArrayList;

    invoke-direct {v1}, Ljava/util/ArrayList;-><init>()V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mPendingRemove:Ljava/util/ArrayList;

    .line 623
    const/16 v1, 0x14

    new-array v1, v1, [Lcom/android/server/wm/WindowState;

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mPendingRemoveTmp:[Lcom/android/server/wm/WindowState;

    .line 627
    new-instance v1, Landroid/util/SparseArray;

    invoke-direct {v1}, Landroid/util/SparseArray;-><init>()V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mProcessConfigurations:Landroid/util/SparseArray;

    .line 632
    new-instance v1, Ljava/util/ArrayList;

    invoke-direct {v1}, Ljava/util/ArrayList;-><init>()V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mDestroySurface:Ljava/util/ArrayList;

    .line 638
    new-instance v1, Ljava/util/ArrayList;

    invoke-direct {v1}, Ljava/util/ArrayList;-><init>()V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mForceRemoves:Ljava/util/ArrayList;

    .line 644
    new-instance v1, Ljava/util/HashMap;

    invoke-direct {v1}, Ljava/util/HashMap;-><init>()V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mWaitingForDrawnCallbacks:Ljava/util/HashMap;

    .line 647
    new-instance v1, Ljava/util/ArrayList;

    invoke-direct {v1}, Ljava/util/ArrayList;-><init>()V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mHidingNonSystemOverlayWindows:Ljava/util/ArrayList;

    .line 656
    const/16 v1, 0x9

    new-array v1, v1, [F

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mTmpFloats:[F

    .line 657
    new-instance v1, Landroid/graphics/Rect;

    invoke-direct {v1}, Landroid/graphics/Rect;-><init>()V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mTmpRect:Landroid/graphics/Rect;

    .line 658
    new-instance v1, Landroid/graphics/Rect;

    invoke-direct {v1}, Landroid/graphics/Rect;-><init>()V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mTmpRect2:Landroid/graphics/Rect;

    .line 659
    new-instance v1, Landroid/graphics/Rect;

    invoke-direct {v1}, Landroid/graphics/Rect;-><init>()V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mTmpRect3:Landroid/graphics/Rect;

    .line 660
    new-instance v1, Landroid/graphics/RectF;

    invoke-direct {v1}, Landroid/graphics/RectF;-><init>()V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mTmpRectF:Landroid/graphics/RectF;

    .line 662
    new-instance v1, Landroid/graphics/Matrix;

    invoke-direct {v1}, Landroid/graphics/Matrix;-><init>()V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mTmpTransform:Landroid/graphics/Matrix;

    .line 666
    iput-boolean v11, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayEnabled:Z

    .line 667
    iput-boolean v11, v0, Lcom/android/server/wm/WindowManagerService;->mSystemBooted:Z

    .line 668
    iput-boolean v11, v0, Lcom/android/server/wm/WindowManagerService;->mForceDisplayEnabled:Z

    .line 669
    iput-boolean v11, v0, Lcom/android/server/wm/WindowManagerService;->mShowingBootMessages:Z

    .line 670
    iput-boolean v11, v0, Lcom/android/server/wm/WindowManagerService;->mSystemReady:Z

    .line 671
    iput-boolean v11, v0, Lcom/android/server/wm/WindowManagerService;->mBootAnimationStopped:Z

    .line 672
    const-wide/16 v1, -0x1

    iput-wide v1, v0, Lcom/android/server/wm/WindowManagerService;->mBootWaitForWindowsStartTime:J

    .line 675
    const/4 v14, 0x0

    iput-object v14, v0, Lcom/android/server/wm/WindowManagerService;->mLastWakeLockHoldingWindow:Lcom/android/server/wm/WindowState;

    .line 676
    iput-object v14, v0, Lcom/android/server/wm/WindowManagerService;->mLastWakeLockObscuringWindow:Lcom/android/server/wm/WindowState;

    .line 688
    iput-boolean v13, v0, Lcom/android/server/wm/WindowManagerService;->mUseBLASTSync:Z

    .line 717
    new-instance v1, Ljava/util/ArrayList;

    invoke-direct {v1}, Ljava/util/ArrayList;-><init>()V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mRotationWatchers:Ljava/util/ArrayList;

    .line 718
    new-instance v1, Lcom/android/server/wm/WallpaperVisibilityListeners;

    invoke-direct {v1}, Lcom/android/server/wm/WallpaperVisibilityListeners;-><init>()V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperVisibilityListeners:Lcom/android/server/wm/WallpaperVisibilityListeners;

    .line 721
    iput-object v14, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayRotationController:Landroid/view/IDisplayWindowRotationController;

    .line 722
    new-instance v1, Lcom/android/server/wm/WindowManagerService$$ExternalSyntheticLambda0;

    invoke-direct {v1, v0}, Lcom/android/server/wm/WindowManagerService$$ExternalSyntheticLambda0;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayRotationControllerDeath:Landroid/os/IBinder$DeathRecipient;

    .line 727
    iput-boolean v11, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayFrozen:Z

    .line 728
    const-wide/16 v1, 0x0

    iput-wide v1, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayFreezeTime:J

    .line 729
    iput v11, v0, Lcom/android/server/wm/WindowManagerService;->mLastDisplayFreezeDuration:I

    .line 730
    iput-object v14, v0, Lcom/android/server/wm/WindowManagerService;->mLastFinishedFreezeSource:Ljava/lang/Object;

    .line 731
    iput-boolean v11, v0, Lcom/android/server/wm/WindowManagerService;->mSwitchingUser:Z

    .line 736
    iput v11, v0, Lcom/android/server/wm/WindowManagerService;->mWindowsFreezingScreen:I

    .line 738
    iput-boolean v11, v0, Lcom/android/server/wm/WindowManagerService;->mClientFreezingScreen:Z

    .line 739
    iput v11, v0, Lcom/android/server/wm/WindowManagerService;->mAppsFreezingScreen:I

    .line 759
    new-instance v15, Lcom/android/server/wm/WindowManagerService$H;

    invoke-direct {v15, v0}, Lcom/android/server/wm/WindowManagerService$H;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    iput-object v15, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    .line 766
    new-instance v1, Landroid/os/Handler;

    invoke-static {}, Lcom/android/server/AnimationThread;->getHandler()Landroid/os/Handler;

    move-result-object v2

    invoke-virtual {v2}, Landroid/os/Handler;->getLooper()Landroid/os/Looper;

    move-result-object v2

    invoke-direct {v1, v2}, Landroid/os/Handler;-><init>(Landroid/os/Looper;)V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mAnimationHandler:Landroid/os/Handler;

    .line 776
    new-instance v1, Lcom/android/server/wm/WindowContextListenerController;

    invoke-direct {v1}, Lcom/android/server/wm/WindowContextListenerController;-><init>()V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mWindowContextListenerController:Lcom/android/server/wm/WindowContextListenerController;

    .line 999
    const/high16 v1, 0x3f800000    # 1.0f

    iput v1, v0, Lcom/android/server/wm/WindowManagerService;->mWindowAnimationScaleSetting:F

    .line 1000
    iput v1, v0, Lcom/android/server/wm/WindowManagerService;->mTransitionAnimationScaleSetting:F

    .line 1001
    iput v1, v0, Lcom/android/server/wm/WindowManagerService;->mAnimatorDurationScaleSetting:F

    .line 1002
    iput-boolean v11, v0, Lcom/android/server/wm/WindowManagerService;->mAnimationsDisabled:Z

    .line 1003
    iput-boolean v11, v0, Lcom/android/server/wm/WindowManagerService;->mPointerLocationEnabled:Z

    .line 1043
    new-instance v1, Landroid/util/ArrayMap;

    invoke-direct {v1}, Landroid/util/ArrayMap;-><init>()V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mAnimationTransferMap:Landroid/util/ArrayMap;

    .line 1056
    new-instance v1, Ljava/util/ArrayList;

    invoke-direct {v1}, Ljava/util/ArrayList;-><init>()V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mWindowChangeListeners:Ljava/util/ArrayList;

    .line 1057
    iput-boolean v11, v0, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    .line 1064
    new-instance v1, Landroid/content/res/Configuration;

    invoke-direct {v1}, Landroid/content/res/Configuration;-><init>()V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mTempConfiguration:Landroid/content/res/Configuration;

    .line 1114
    new-instance v1, Lcom/android/server/wm/WindowManagerService$4;

    invoke-direct {v1, v0}, Lcom/android/server/wm/WindowManagerService$4;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mActivityManagerAppTransitionNotifier:Lcom/android/server/wm/WindowManagerInternal$AppTransitionListener;

    .line 1151
    new-instance v1, Ljava/util/ArrayList;

    invoke-direct {v1}, Ljava/util/ArrayList;-><init>()V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mAppFreezeListeners:Ljava/util/ArrayList;

    .line 4746
    new-instance v1, Lcom/android/server/wm/InputManagerCallback;

    invoke-direct {v1, v0}, Lcom/android/server/wm/InputManagerCallback;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mInputManagerCallback:Lcom/android/server/wm/InputManagerCallback;

    .line 6878
    new-instance v1, Lcom/android/server/wm/WindowManagerService$MousePositionTracker;

    invoke-direct {v1, v14}, Lcom/android/server/wm/WindowManagerService$MousePositionTracker;-><init>(Lcom/android/server/wm/WindowManagerService$1;)V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mMousePositionTracker:Lcom/android/server/wm/WindowManagerService$MousePositionTracker;

    .line 1210
    const/4 v1, 0x5

    invoke-static {v0, v1}, Lcom/android/server/LockGuard;->installLock(Ljava/lang/Object;I)Ljava/lang/Object;

    .line 1211
    invoke-virtual/range {p6 .. p6}, Lcom/android/server/wm/ActivityTaskManagerService;->getGlobalLock()Lcom/android/server/wm/WindowManagerGlobalLock;

    move-result-object v1

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    .line 1212
    iput-object v9, v0, Lcom/android/server/wm/WindowManagerService;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 1213
    iput-object v7, v0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    .line 1214
    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v1

    const-string v2, "android.hardware.type.pc"

    invoke-virtual {v1, v2}, Landroid/content/pm/PackageManager;->hasSystemFeature(Ljava/lang/String;)Z

    move-result v1

    iput-boolean v1, v0, Lcom/android/server/wm/WindowManagerService;->mIsPc:Z

    .line 1215
    move/from16 v6, p3

    iput-boolean v6, v0, Lcom/android/server/wm/WindowManagerService;->mAllowBootMessages:Z

    .line 1216
    move/from16 v5, p4

    iput-boolean v5, v0, Lcom/android/server/wm/WindowManagerService;->mOnlyCore:Z

    .line 1217
    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v1

    const v2, 0x1110128

    invoke-virtual {v1, v2}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v1

    iput-boolean v1, v0, Lcom/android/server/wm/WindowManagerService;->mLimitedAlphaCompositing:Z

    .line 1219
    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v1

    const v2, 0x11100f3

    invoke-virtual {v1, v2}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v1

    iput-boolean v1, v0, Lcom/android/server/wm/WindowManagerService;->mHasPermanentDpad:Z

    .line 1221
    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v1

    const v2, 0x11100a3

    invoke-virtual {v1, v2}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v1

    iput-boolean v1, v0, Lcom/android/server/wm/WindowManagerService;->mInTouchMode:Z

    .line 1223
    invoke-virtual {v8, v1}, Lcom/android/server/input/InputManagerService;->setInTouchMode(Z)V

    .line 1224
    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v1

    const v2, 0x10e0059

    invoke-virtual {v1, v2}, Landroid/content/res/Resources;->getInteger(I)I

    move-result v1

    int-to-long v1, v1

    iput-wide v1, v0, Lcom/android/server/wm/WindowManagerService;->mDrawLockTimeoutMillis:J

    .line 1226
    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v1

    const v2, 0x1110010

    invoke-virtual {v1, v2}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v1

    iput-boolean v1, v0, Lcom/android/server/wm/WindowManagerService;->mAllowAnimationsInLowPowerMode:Z

    .line 1228
    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v1

    const v2, 0x10e0082

    invoke-virtual {v1, v2}, Landroid/content/res/Resources;->getInteger(I)I

    move-result v1

    iput v1, v0, Lcom/android/server/wm/WindowManagerService;->mMaxUiWidth:I

    .line 1230
    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v1

    const v2, 0x11100ae

    invoke-virtual {v1, v2}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v1

    iput-boolean v1, v0, Lcom/android/server/wm/WindowManagerService;->mDisableTransitionAnimation:Z

    .line 1232
    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v1

    const v2, 0x1110004

    invoke-virtual {v1, v2}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v1

    iput-boolean v1, v0, Lcom/android/server/wm/WindowManagerService;->mPerDisplayFocusEnabled:Z

    .line 1234
    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v1

    const v2, 0x1110005

    invoke-virtual {v1, v2}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v1

    iput-boolean v1, v0, Lcom/android/server/wm/WindowManagerService;->mAssistantOnTopOfDream:Z

    .line 1237
    new-instance v1, Lcom/android/server/wm/LetterboxConfiguration;

    invoke-direct {v1, v7}, Lcom/android/server/wm/LetterboxConfiguration;-><init>(Landroid/content/Context;)V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mLetterboxConfiguration:Lcom/android/server/wm/LetterboxConfiguration;

    .line 1239
    iput-object v8, v0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    .line 1240
    const-class v1, Landroid/hardware/display/DisplayManagerInternal;

    invoke-static {v1}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/hardware/display/DisplayManagerInternal;

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayManagerInternal:Landroid/hardware/display/DisplayManagerInternal;

    .line 1242
    move-object/from16 v4, p10

    iput-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mSurfaceControlFactory:Ljava/util/function/Function;

    .line 1243
    move-object/from16 v3, p8

    iput-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mTransactionFactory:Ljava/util/function/Supplier;

    .line 1244
    move-object/from16 v2, p9

    iput-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mSurfaceFactory:Ljava/util/function/Supplier;

    .line 1245
    invoke-interface/range {p8 .. p8}, Ljava/util/function/Supplier;->get()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/view/SurfaceControl$Transaction;

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mTransaction:Landroid/view/SurfaceControl$Transaction;

    .line 1247
    move-object/from16 v1, p5

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    .line 1248
    new-instance v14, Lcom/android/server/wm/WindowAnimator;

    invoke-direct {v14, v0}, Lcom/android/server/wm/WindowAnimator;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    iput-object v14, v0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    .line 1249
    new-instance v14, Lcom/android/server/wm/RootWindowContainer;

    invoke-direct {v14, v0}, Lcom/android/server/wm/RootWindowContainer;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    iput-object v14, v0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    .line 1251
    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v14

    .line 1252
    .local v14, "resolver":Landroid/content/ContentResolver;
    const-string v11, "use_blast_adapter_vr"

    invoke-static {v14, v11, v13}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v11

    if-ne v11, v13, :cond_0

    move v11, v13

    goto :goto_0

    :cond_0
    const/4 v11, 0x0

    :goto_0
    iput-boolean v11, v0, Lcom/android/server/wm/WindowManagerService;->mUseBLAST:Z

    .line 1255
    new-instance v11, Lcom/android/server/wm/BLASTSyncEngine;

    invoke-direct {v11, v0}, Lcom/android/server/wm/BLASTSyncEngine;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    iput-object v11, v0, Lcom/android/server/wm/WindowManagerService;->mSyncEngine:Lcom/android/server/wm/BLASTSyncEngine;

    .line 1257
    new-instance v11, Lcom/android/server/wm/WindowSurfacePlacer;

    invoke-direct {v11, v0}, Lcom/android/server/wm/WindowSurfacePlacer;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    iput-object v11, v0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    .line 1258
    new-instance v11, Lcom/android/server/wm/TaskSnapshotController;

    invoke-direct {v11, v0}, Lcom/android/server/wm/TaskSnapshotController;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    iput-object v11, v0, Lcom/android/server/wm/WindowManagerService;->mTaskSnapshotController:Lcom/android/server/wm/TaskSnapshotController;

    .line 1260
    nop

    .line 1261
    invoke-static {}, Landroid/view/Choreographer;->getInstance()Landroid/view/Choreographer;

    move-result-object v11

    .line 1260
    invoke-static {v0, v11}, Lcom/android/server/wm/WindowTracing;->createDefaultAndStartLooper(Lcom/android/server/wm/WindowManagerService;Landroid/view/Choreographer;)Lcom/android/server/wm/WindowTracing;

    move-result-object v11

    iput-object v11, v0, Lcom/android/server/wm/WindowManagerService;->mWindowTracing:Lcom/android/server/wm/WindowTracing;

    .line 1263
    const-class v11, Lcom/android/server/policy/WindowManagerPolicy;

    iget-object v13, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    invoke-static {v11, v13}, Lcom/android/server/LocalServices;->addService(Ljava/lang/Class;Ljava/lang/Object;)V

    .line 1265
    const-string v11, "display"

    invoke-virtual {v7, v11}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v11

    check-cast v11, Landroid/hardware/display/DisplayManager;

    iput-object v11, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayManager:Landroid/hardware/display/DisplayManager;

    .line 1267
    iget-object v11, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    invoke-static {v7, v11, v15}, Lcom/android/server/wm/KeyguardDisableHandler;->create(Landroid/content/Context;Lcom/android/server/policy/WindowManagerPolicy;Landroid/os/Handler;)Lcom/android/server/wm/KeyguardDisableHandler;

    move-result-object v11

    iput-object v11, v0, Lcom/android/server/wm/WindowManagerService;->mKeyguardDisableHandler:Lcom/android/server/wm/KeyguardDisableHandler;

    .line 1269
    const-string v11, "power"

    invoke-virtual {v7, v11}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v11

    check-cast v11, Landroid/os/PowerManager;

    iput-object v11, v0, Lcom/android/server/wm/WindowManagerService;->mPowerManager:Landroid/os/PowerManager;

    .line 1270
    const-class v11, Landroid/os/PowerManagerInternal;

    invoke-static {v11}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v11

    check-cast v11, Landroid/os/PowerManagerInternal;

    iput-object v11, v0, Lcom/android/server/wm/WindowManagerService;->mPowerManagerInternal:Landroid/os/PowerManagerInternal;

    .line 1272
    if-eqz v11, :cond_1

    .line 1273
    new-instance v13, Lcom/android/server/wm/WindowManagerService$6;

    invoke-direct {v13, v0}, Lcom/android/server/wm/WindowManagerService$6;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    invoke-virtual {v11, v13}, Landroid/os/PowerManagerInternal;->registerLowPowerModeObserver(Landroid/os/PowerManagerInternal$LowPowerModeListener;)V

    .line 1291
    iget-object v11, v0, Lcom/android/server/wm/WindowManagerService;->mPowerManagerInternal:Landroid/os/PowerManagerInternal;

    const/4 v13, 0x3

    .line 1292
    invoke-virtual {v11, v13}, Landroid/os/PowerManagerInternal;->getLowPowerState(I)Landroid/os/PowerSaveState;

    move-result-object v11

    iget-boolean v11, v11, Landroid/os/PowerSaveState;->batterySaverEnabled:Z

    iput-boolean v11, v0, Lcom/android/server/wm/WindowManagerService;->mAnimationsDisabled:Z

    .line 1294
    :cond_1
    iget-object v11, v0, Lcom/android/server/wm/WindowManagerService;->mPowerManager:Landroid/os/PowerManager;

    const-string v13, "SCREEN_FROZEN"

    const/4 v6, 0x1

    invoke-virtual {v11, v6, v13}, Landroid/os/PowerManager;->newWakeLock(ILjava/lang/String;)Landroid/os/PowerManager$WakeLock;

    move-result-object v11

    iput-object v11, v0, Lcom/android/server/wm/WindowManagerService;->mScreenFrozenLock:Landroid/os/PowerManager$WakeLock;

    .line 1296
    const/4 v13, 0x0

    invoke-virtual {v11, v13}, Landroid/os/PowerManager$WakeLock;->setReferenceCounted(Z)V

    .line 1298
    new-instance v11, Lcom/android/server/wm/DisplayWindowListenerController;

    invoke-direct {v11, v0}, Lcom/android/server/wm/DisplayWindowListenerController;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    iput-object v11, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayNotificationController:Lcom/android/server/wm/DisplayWindowListenerController;

    .line 1300
    invoke-static {}, Landroid/app/ActivityManager;->getService()Landroid/app/IActivityManager;

    move-result-object v11

    iput-object v11, v0, Lcom/android/server/wm/WindowManagerService;->mActivityManager:Landroid/app/IActivityManager;

    .line 1301
    invoke-static {}, Landroid/app/ActivityTaskManager;->getService()Landroid/app/IActivityTaskManager;

    move-result-object v11

    iput-object v11, v0, Lcom/android/server/wm/WindowManagerService;->mActivityTaskManager:Landroid/app/IActivityTaskManager;

    .line 1302
    const-class v13, Landroid/app/ActivityManagerInternal;

    invoke-static {v13}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v13

    check-cast v13, Landroid/app/ActivityManagerInternal;

    iput-object v13, v0, Lcom/android/server/wm/WindowManagerService;->mAmInternal:Landroid/app/ActivityManagerInternal;

    .line 1303
    const-class v13, Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-static {v13}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v13

    check-cast v13, Lcom/android/server/wm/ActivityTaskManagerInternal;

    iput-object v13, v0, Lcom/android/server/wm/WindowManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    .line 1304
    const-string v13, "appops"

    invoke-virtual {v7, v13}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v13

    check-cast v13, Landroid/app/AppOpsManager;

    iput-object v13, v0, Lcom/android/server/wm/WindowManagerService;->mAppOps:Landroid/app/AppOpsManager;

    .line 1305
    new-instance v6, Lcom/android/server/wm/WindowManagerService$7;

    invoke-direct {v6, v0}, Lcom/android/server/wm/WindowManagerService$7;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    .line 1311
    .local v6, "opListener":Landroid/app/AppOpsManager$OnOpChangedInternalListener;
    const/16 v1, 0x18

    const/4 v2, 0x0

    invoke-virtual {v13, v1, v2, v6}, Landroid/app/AppOpsManager;->startWatchingMode(ILjava/lang/String;Landroid/app/AppOpsManager$OnOpChangedListener;)V

    .line 1312
    const/16 v1, 0x2d

    invoke-virtual {v13, v1, v2, v6}, Landroid/app/AppOpsManager;->startWatchingMode(ILjava/lang/String;Landroid/app/AppOpsManager$OnOpChangedListener;)V

    .line 1314
    const-class v1, Landroid/content/pm/PackageManagerInternal;

    invoke-static {v1}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/content/pm/PackageManagerInternal;

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mPmInternal:Landroid/content/pm/PackageManagerInternal;

    .line 1315
    const-class v1, Landroid/content/pm/TestUtilityService;

    invoke-static {v1}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/content/pm/TestUtilityService;

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mTestUtilityService:Landroid/content/pm/TestUtilityService;

    .line 1316
    new-instance v1, Landroid/content/IntentFilter;

    invoke-direct {v1}, Landroid/content/IntentFilter;-><init>()V

    move-object v13, v1

    .line 1317
    .local v13, "suspendPackagesFilter":Landroid/content/IntentFilter;
    const-string v1, "android.intent.action.PACKAGES_SUSPENDED"

    invoke-virtual {v13, v1}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 1318
    const-string v1, "android.intent.action.PACKAGES_UNSUSPENDED"

    invoke-virtual {v13, v1}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 1319
    new-instance v2, Lcom/android/server/wm/WindowManagerService$8;

    invoke-direct {v2, v0}, Lcom/android/server/wm/WindowManagerService$8;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    sget-object v17, Landroid/os/UserHandle;->ALL:Landroid/os/UserHandle;

    const/16 v18, 0x0

    const/16 v19, 0x0

    move-object/from16 v1, p1

    move-object/from16 v3, v17

    move-object v4, v13

    move-object/from16 v5, v18

    move-object/from16 v16, v6

    const/16 v17, 0x1

    .end local v6    # "opListener":Landroid/app/AppOpsManager$OnOpChangedInternalListener;
    .local v16, "opListener":Landroid/app/AppOpsManager$OnOpChangedInternalListener;
    move-object/from16 v6, v19

    invoke-virtual/range {v1 .. v6}, Landroid/content/Context;->registerReceiverAsUser(Landroid/content/BroadcastReceiver;Landroid/os/UserHandle;Landroid/content/IntentFilter;Ljava/lang/String;Landroid/os/Handler;)Landroid/content/Intent;

    .line 1332
    iget v1, v0, Lcom/android/server/wm/WindowManagerService;->mWindowAnimationScaleSetting:F

    const-string v2, "window_animation_scale"

    invoke-static {v14, v2, v1}, Landroid/provider/Settings$Global;->getFloat(Landroid/content/ContentResolver;Ljava/lang/String;F)F

    move-result v1

    iput v1, v0, Lcom/android/server/wm/WindowManagerService;->mWindowAnimationScaleSetting:F

    .line 1334
    nop

    .line 1336
    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v1

    const v2, 0x10500a4

    invoke-virtual {v1, v2}, Landroid/content/res/Resources;->getFloat(I)F

    move-result v1

    .line 1334
    const-string v2, "transition_animation_scale"

    invoke-static {v14, v2, v1}, Landroid/provider/Settings$Global;->getFloat(Landroid/content/ContentResolver;Ljava/lang/String;F)F

    move-result v1

    iput v1, v0, Lcom/android/server/wm/WindowManagerService;->mTransitionAnimationScaleSetting:F

    .line 1339
    iget v1, v0, Lcom/android/server/wm/WindowManagerService;->mAnimatorDurationScaleSetting:F

    const-string v2, "animator_duration_scale"

    invoke-static {v14, v2, v1}, Landroid/provider/Settings$Global;->getFloat(Landroid/content/ContentResolver;Ljava/lang/String;F)F

    move-result v1

    invoke-direct {v0, v1}, Lcom/android/server/wm/WindowManagerService;->setAnimatorDurationScale(F)V

    .line 1342
    const-string v1, "force_desktop_mode_on_external_displays"

    const/4 v2, 0x0

    invoke-static {v14, v1, v2}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v1

    if-eqz v1, :cond_2

    move/from16 v1, v17

    goto :goto_1

    :cond_2
    const/4 v1, 0x0

    :goto_1
    iput-boolean v1, v0, Lcom/android/server/wm/WindowManagerService;->mForceDesktopModeOnExternalDisplays:Z

    .line 1345
    const-string v1, "wm_display_settings_path"

    invoke-static {v14, v1}, Landroid/provider/Settings$Global;->getString(Landroid/content/ContentResolver;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v6

    .line 1347
    .local v6, "displaySettingsPath":Ljava/lang/String;
    iput-object v10, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayWindowSettingsProvider:Lcom/android/server/wm/DisplayWindowSettingsProvider;

    .line 1348
    if-eqz v6, :cond_3

    .line 1349
    invoke-virtual {v10, v6}, Lcom/android/server/wm/DisplayWindowSettingsProvider;->setBaseSettingsFilePath(Ljava/lang/String;)V

    .line 1351
    :cond_3
    new-instance v1, Lcom/android/server/wm/DisplayWindowSettings;

    invoke-direct {v1, v0, v10}, Lcom/android/server/wm/DisplayWindowSettings;-><init>(Lcom/android/server/wm/WindowManagerService;Lcom/android/server/wm/DisplayWindowSettings$SettingsProvider;)V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayWindowSettings:Lcom/android/server/wm/DisplayWindowSettings;

    .line 1353
    new-instance v1, Landroid/content/IntentFilter;

    invoke-direct {v1}, Landroid/content/IntentFilter;-><init>()V

    move-object v5, v1

    .line 1355
    .local v5, "filter":Landroid/content/IntentFilter;
    const-string v1, "android.app.action.DEVICE_POLICY_MANAGER_STATE_CHANGED"

    invoke-virtual {v5, v1}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 1356
    sget-object v3, Landroid/os/UserHandle;->ALL:Landroid/os/UserHandle;

    const/16 v17, 0x0

    const/16 v18, 0x0

    move-object/from16 v1, p1

    move-object v2, v12

    move-object v4, v5

    move-object v12, v5

    .end local v5    # "filter":Landroid/content/IntentFilter;
    .local v12, "filter":Landroid/content/IntentFilter;
    move-object/from16 v5, v17

    move-object/from16 v17, v6

    .end local v6    # "displaySettingsPath":Ljava/lang/String;
    .local v17, "displaySettingsPath":Ljava/lang/String;
    move-object/from16 v6, v18

    invoke-virtual/range {v1 .. v6}, Landroid/content/Context;->registerReceiverAsUser(Landroid/content/BroadcastReceiver;Landroid/os/UserHandle;Landroid/content/IntentFilter;Ljava/lang/String;Landroid/os/Handler;)Landroid/content/Intent;

    .line 1358
    invoke-static/range {p1 .. p1}, Lcom/android/internal/util/LatencyTracker;->getInstance(Landroid/content/Context;)Lcom/android/internal/util/LatencyTracker;

    move-result-object v1

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mLatencyTracker:Lcom/android/internal/util/LatencyTracker;

    .line 1360
    new-instance v1, Lcom/android/server/wm/WindowManagerService$SettingsObserver;

    invoke-direct {v1, v0}, Lcom/android/server/wm/WindowManagerService$SettingsObserver;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mSettingsObserver:Lcom/android/server/wm/WindowManagerService$SettingsObserver;

    .line 1362
    iget-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mPowerManager:Landroid/os/PowerManager;

    const v2, 0x2000000a

    const-string v3, "WindowManager"

    invoke-virtual {v1, v2, v3}, Landroid/os/PowerManager;->newWakeLock(ILjava/lang/String;)Landroid/os/PowerManager$WakeLock;

    move-result-object v1

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mHoldingScreenWakeLock:Landroid/os/PowerManager$WakeLock;

    .line 1364
    const/4 v2, 0x0

    invoke-virtual {v1, v2}, Landroid/os/PowerManager$WakeLock;->setReferenceCounted(Z)V

    .line 1366
    new-instance v1, Lcom/android/server/wm/SurfaceAnimationRunner;

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mTransactionFactory:Ljava/util/function/Supplier;

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mPowerManagerInternal:Landroid/os/PowerManagerInternal;

    invoke-direct {v1, v2, v3}, Lcom/android/server/wm/SurfaceAnimationRunner;-><init>(Ljava/util/function/Supplier;Landroid/os/PowerManagerInternal;)V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mSurfaceAnimationRunner:Lcom/android/server/wm/SurfaceAnimationRunner;

    .line 1369
    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v1

    const v2, 0x1110020

    invoke-virtual {v1, v2}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v1

    iput-boolean v1, v0, Lcom/android/server/wm/WindowManagerService;->mAllowTheaterModeWakeFromLayout:Z

    .line 1372
    new-instance v1, Lcom/android/server/wm/TaskPositioningController;

    .line 1373
    invoke-virtual {v15}, Lcom/android/server/wm/WindowManagerService$H;->getLooper()Landroid/os/Looper;

    move-result-object v2

    invoke-direct {v1, v0, v8, v11, v2}, Lcom/android/server/wm/TaskPositioningController;-><init>(Lcom/android/server/wm/WindowManagerService;Lcom/android/server/input/InputManagerService;Landroid/app/IActivityTaskManager;Landroid/os/Looper;)V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mTaskPositioningController:Lcom/android/server/wm/TaskPositioningController;

    .line 1374
    new-instance v1, Lcom/android/server/wm/DragDropController;

    invoke-virtual {v15}, Lcom/android/server/wm/WindowManagerService$H;->getLooper()Landroid/os/Looper;

    move-result-object v2

    invoke-direct {v1, v0, v2}, Lcom/android/server/wm/DragDropController;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/os/Looper;)V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mDragDropController:Lcom/android/server/wm/DragDropController;

    .line 1376
    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v1

    invoke-static {v1}, Lcom/android/server/wm/HighRefreshRateDenylist;->create(Landroid/content/res/Resources;)Lcom/android/server/wm/HighRefreshRateDenylist;

    move-result-object v1

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mHighRefreshRateDenylist:Lcom/android/server/wm/HighRefreshRateDenylist;

    .line 1378
    new-instance v1, Lcom/android/server/wm/WindowManagerConstants;

    sget-object v2, Lcom/android/server/utils/DeviceConfigInterface;->REAL:Lcom/android/server/utils/DeviceConfigInterface;

    invoke-direct {v1, v0, v2}, Lcom/android/server/wm/WindowManagerConstants;-><init>(Lcom/android/server/wm/WindowManagerService;Lcom/android/server/utils/DeviceConfigInterface;)V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mConstants:Lcom/android/server/wm/WindowManagerConstants;

    .line 1379
    new-instance v2, Landroid/os/HandlerExecutor;

    invoke-direct {v2, v15}, Landroid/os/HandlerExecutor;-><init>(Landroid/os/Handler;)V

    invoke-virtual {v1, v2}, Lcom/android/server/wm/WindowManagerConstants;->start(Ljava/util/concurrent/Executor;)V

    .line 1381
    const-class v1, Lcom/android/server/wm/WindowManagerInternal;

    new-instance v2, Lcom/android/server/wm/WindowManagerService$LocalService;

    const/4 v3, 0x0

    invoke-direct {v2, v0, v3}, Lcom/android/server/wm/WindowManagerService$LocalService;-><init>(Lcom/android/server/wm/WindowManagerService;Lcom/android/server/wm/WindowManagerService$1;)V

    invoke-static {v1, v2}, Lcom/android/server/LocalServices;->addService(Ljava/lang/Class;Ljava/lang/Object;)V

    .line 1382
    new-instance v1, Lcom/android/server/wm/EmbeddedWindowController;

    invoke-direct {v1, v9}, Lcom/android/server/wm/EmbeddedWindowController;-><init>(Lcom/android/server/wm/ActivityTaskManagerService;)V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mEmbeddedWindowController:Lcom/android/server/wm/EmbeddedWindowController;

    .line 1384
    nop

    .line 1385
    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v1

    .line 1384
    invoke-static {v1}, Lcom/android/server/wm/DisplayAreaPolicy$Provider;->fromResources(Landroid/content/res/Resources;)Lcom/android/server/wm/DisplayAreaPolicy$Provider;

    move-result-object v1

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayAreaPolicyProvider:Lcom/android/server/wm/DisplayAreaPolicy$Provider;

    .line 1387
    new-instance v1, Lcom/android/server/wm/DisplayHashController;

    invoke-direct {v1, v7}, Lcom/android/server/wm/DisplayHashController;-><init>(Landroid/content/Context;)V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayHashController:Lcom/android/server/wm/DisplayHashController;

    .line 1388
    invoke-direct/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->setGlobalShadowSettings()V

    .line 1389
    new-instance v1, Lcom/android/server/wm/AnrController;

    invoke-direct {v1, v0}, Lcom/android/server/wm/AnrController;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mAnrController:Lcom/android/server/wm/AnrController;

    .line 1390
    new-instance v1, Lcom/android/server/wm/StartingSurfaceController;

    invoke-direct {v1, v0}, Lcom/android/server/wm/StartingSurfaceController;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mStartingSurfaceController:Lcom/android/server/wm/StartingSurfaceController;

    .line 1392
    new-instance v1, Lcom/android/server/wm/BlurController;

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mPowerManager:Landroid/os/PowerManager;

    invoke-direct {v1, v7, v2}, Lcom/android/server/wm/BlurController;-><init>(Landroid/content/Context;Landroid/os/PowerManager;)V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mBlurController:Lcom/android/server/wm/BlurController;

    .line 1393
    return-void
.end method

.method static synthetic access$000(Lcom/android/server/wm/WindowManagerService;)Lcom/android/server/wm/KeyguardDisableHandler;
    .locals 1
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;

    .line 330
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mKeyguardDisableHandler:Lcom/android/server/wm/KeyguardDisableHandler;

    return-object v0
.end method

.method static synthetic access$100(Lcom/android/server/wm/WindowManagerService;Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;Z)V
    .locals 0
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;
    .param p1, "x1"    # Ljava/io/FileDescriptor;
    .param p2, "x2"    # Ljava/io/PrintWriter;
    .param p3, "x3"    # [Ljava/lang/String;
    .param p4, "x4"    # Z

    .line 330
    invoke-direct {p0, p1, p2, p3, p4}, Lcom/android/server/wm/WindowManagerService;->doDump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;Z)V

    return-void
.end method

.method static synthetic access$1000(Lcom/android/server/wm/WindowManagerService;)V
    .locals 0
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;

    .line 330
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->performEnableScreen()V

    return-void
.end method

.method static synthetic access$1100(Lcom/android/server/wm/WindowManagerService;)V
    .locals 0
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;

    .line 330
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->notifyWindowsChanged()V

    return-void
.end method

.method static synthetic access$1200(Lcom/android/server/wm/WindowManagerService;II)V
    .locals 0
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;
    .param p1, "x1"    # I
    .param p2, "x2"    # I

    .line 330
    invoke-direct {p0, p1, p2}, Lcom/android/server/wm/WindowManagerService;->showStrictModeViolation(II)V

    return-void
.end method

.method static synthetic access$1300(Lcom/android/server/wm/WindowManagerService;)Z
    .locals 1
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;

    .line 330
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->checkBootAnimationCompleteLocked()Z

    move-result v0

    return v0
.end method

.method static synthetic access$1400(Lcom/android/server/wm/WindowManagerService;)Lcom/android/server/wm/RecentsAnimationController;
    .locals 1
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;

    .line 330
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mRecentsAnimationController:Lcom/android/server/wm/RecentsAnimationController;

    return-object v0
.end method

.method static synthetic access$1500(Lcom/android/server/wm/WindowManagerService;Landroid/os/IBinder;)V
    .locals 0
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;
    .param p1, "x1"    # Landroid/os/IBinder;

    .line 330
    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->onPointerDownOutsideFocusLocked(Landroid/os/IBinder;)V

    return-void
.end method

.method static synthetic access$200(Lcom/android/server/wm/WindowManagerService;)V
    .locals 0
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;

    .line 330
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->setShadowRenderer()V

    return-void
.end method

.method static synthetic access$2000(Lcom/android/server/wm/WindowManagerService;)Lcom/android/server/wm/WindowState;
    .locals 1
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;

    .line 330
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->getFocusedWindowLocked()Lcom/android/server/wm/WindowState;

    move-result-object v0

    return-object v0
.end method

.method static synthetic access$2100(Lcom/android/server/wm/WindowManagerService;)Landroid/view/SurfaceControl$Transaction;
    .locals 1
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;

    .line 330
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mTransaction:Landroid/view/SurfaceControl$Transaction;

    return-object v0
.end method

.method static synthetic access$300(Lcom/android/server/wm/WindowManagerService;)Z
    .locals 1
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;

    .line 330
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mAnimationsDisabled:Z

    return v0
.end method

.method static synthetic access$302(Lcom/android/server/wm/WindowManagerService;Z)Z
    .locals 0
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;
    .param p1, "x1"    # Z

    .line 330
    iput-boolean p1, p0, Lcom/android/server/wm/WindowManagerService;->mAnimationsDisabled:Z

    return p1
.end method

.method static synthetic access$400(Lcom/android/server/wm/WindowManagerService;)V
    .locals 0
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;

    .line 330
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->updateAppOpsState()V

    return-void
.end method

.method static synthetic access$500(Lcom/android/server/wm/WindowManagerService;Landroid/util/ArraySet;Z)V
    .locals 0
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;
    .param p1, "x1"    # Landroid/util/ArraySet;
    .param p2, "x2"    # Z

    .line 330
    invoke-direct {p0, p1, p2}, Lcom/android/server/wm/WindowManagerService;->updateHiddenWhileSuspendedState(Landroid/util/ArraySet;Z)V

    return-void
.end method

.method static synthetic access$700(Lcom/android/server/wm/WindowManagerService;)F
    .locals 1
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;

    .line 330
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowAnimationScaleSetting:F

    return v0
.end method

.method static synthetic access$702(Lcom/android/server/wm/WindowManagerService;F)F
    .locals 0
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;
    .param p1, "x1"    # F

    .line 330
    iput p1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowAnimationScaleSetting:F

    return p1
.end method

.method static synthetic access$800(Lcom/android/server/wm/WindowManagerService;)F
    .locals 1
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;

    .line 330
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mTransitionAnimationScaleSetting:F

    return v0
.end method

.method static synthetic access$802(Lcom/android/server/wm/WindowManagerService;F)F
    .locals 0
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;
    .param p1, "x1"    # F

    .line 330
    iput p1, p0, Lcom/android/server/wm/WindowManagerService;->mTransitionAnimationScaleSetting:F

    return p1
.end method

.method static synthetic access$900(Lcom/android/server/wm/WindowManagerService;)F
    .locals 1
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;

    .line 330
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mAnimatorDurationScaleSetting:F

    return v0
.end method

.method static synthetic access$902(Lcom/android/server/wm/WindowManagerService;F)F
    .locals 0
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;
    .param p1, "x1"    # F

    .line 330
    iput p1, p0, Lcom/android/server/wm/WindowManagerService;->mAnimatorDurationScaleSetting:F

    return p1
.end method

.method private applyForcedPropertiesForDefaultDisplay()Z
    .locals 17

    .line 5395
    move-object/from16 v1, p0

    const/4 v2, 0x0

    .line 5396
    .local v2, "changed":Z
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    .line 5398
    .local v3, "displayContent":Lcom/android/server/wm/DisplayContent;
    iget-object v0, v1, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v0}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v0

    const-string v4, "display_size_forced"

    invoke-static {v0, v4}, Landroid/provider/Settings$Global;->getString(Landroid/content/ContentResolver;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    .line 5400
    .local v0, "sizeStr":Ljava/lang/String;
    const/4 v4, 0x0

    if-eqz v0, :cond_1

    invoke-virtual {v0}, Ljava/lang/String;->length()I

    move-result v5

    if-nez v5, :cond_0

    goto :goto_0

    :cond_0
    move-object v5, v0

    goto :goto_1

    .line 5401
    :cond_1
    :goto_0
    const-string v5, "ro.config.size_override"

    invoke-static {v5, v4}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    move-object v5, v0

    .line 5403
    .end local v0    # "sizeStr":Ljava/lang/String;
    .local v5, "sizeStr":Ljava/lang/String;
    :goto_1
    const/4 v6, 0x1

    const/4 v7, 0x0

    if-eqz v5, :cond_5

    invoke-virtual {v5}, Ljava/lang/String;->length()I

    move-result v0

    if-lez v0, :cond_5

    .line 5404
    const/16 v0, 0x2c

    invoke-virtual {v5, v0}, Ljava/lang/String;->indexOf(I)I

    move-result v8

    .line 5405
    .local v8, "pos":I
    if-lez v8, :cond_5

    invoke-virtual {v5, v0}, Ljava/lang/String;->lastIndexOf(I)I

    move-result v0

    if-ne v0, v8, :cond_5

    .line 5408
    :try_start_0
    invoke-virtual {v5, v7, v8}, Ljava/lang/String;->substring(II)Ljava/lang/String;

    move-result-object v0

    invoke-static {v0}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v0

    .line 5409
    .local v0, "width":I
    add-int/lit8 v9, v8, 0x1

    invoke-virtual {v5, v9}, Ljava/lang/String;->substring(I)Ljava/lang/String;

    move-result-object v9

    invoke-static {v9}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v9

    .line 5410
    .local v9, "height":I
    iget v10, v3, Lcom/android/server/wm/DisplayContent;->mBaseDisplayWidth:I

    if-ne v10, v0, :cond_2

    iget v10, v3, Lcom/android/server/wm/DisplayContent;->mBaseDisplayHeight:I

    if-eq v10, v9, :cond_4

    .line 5412
    :cond_2
    sget-boolean v10, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v10, :cond_3

    int-to-long v10, v0

    .local v10, "protoLogParam0":J
    int-to-long v12, v9

    .local v12, "protoLogParam1":J
    sget-object v14, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const-string v4, "FORCED DISPLAY SIZE: %dx%d"

    const/4 v15, 0x2

    new-array v15, v15, [Ljava/lang/Object;

    invoke-static {v10, v11}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v16

    aput-object v16, v15, v7

    invoke-static {v12, v13}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v16

    aput-object v16, v15, v6

    const v6, 0x427bed76

    const/4 v7, 0x5

    invoke-static {v14, v6, v7, v4, v15}, Lcom/android/internal/protolog/ProtoLogImpl;->i(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 5413
    .end local v10    # "protoLogParam0":J
    .end local v12    # "protoLogParam1":J
    :cond_3
    iget v4, v3, Lcom/android/server/wm/DisplayContent;->mBaseDisplayDensity:I

    invoke-virtual {v3, v0, v9, v4}, Lcom/android/server/wm/DisplayContent;->updateBaseDisplayMetrics(III)V
    :try_end_0
    .catch Ljava/lang/NumberFormatException; {:try_start_0 .. :try_end_0} :catch_0

    .line 5415
    const/4 v2, 0x1

    .line 5418
    :cond_4
    goto :goto_2

    .line 5417
    .end local v0    # "width":I
    .end local v9    # "height":I
    :catch_0
    move-exception v0

    .line 5423
    .end local v8    # "pos":I
    :cond_5
    :goto_2
    iget v0, v1, Lcom/android/server/wm/WindowManagerService;->mCurrentUserId:I

    invoke-direct {v1, v0}, Lcom/android/server/wm/WindowManagerService;->getForcedDisplayDensityForUserLocked(I)I

    move-result v0

    .line 5424
    .local v0, "density":I
    if-eqz v0, :cond_6

    iget v4, v3, Lcom/android/server/wm/DisplayContent;->mBaseDisplayDensity:I

    if-eq v0, v4, :cond_6

    .line 5425
    iput v0, v3, Lcom/android/server/wm/DisplayContent;->mBaseDisplayDensity:I

    .line 5426
    const/4 v2, 0x1

    .line 5430
    :cond_6
    iget-object v4, v1, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v4}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v4

    const-string v6, "display_scaling_force"

    const/4 v7, 0x0

    invoke-static {v4, v6, v7}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v4

    .line 5432
    .local v4, "mode":I
    iget-boolean v6, v3, Lcom/android/server/wm/DisplayContent;->mDisplayScalingDisabled:Z

    if-eqz v4, :cond_7

    const/4 v7, 0x1

    goto :goto_3

    :cond_7
    const/4 v7, 0x0

    :goto_3
    if-eq v6, v7, :cond_9

    .line 5433
    sget-boolean v6, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v6, :cond_8

    sget-object v6, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const v7, 0x38e40f0a

    const/4 v8, 0x0

    check-cast v8, [Ljava/lang/Object;

    const-string v9, "FORCED DISPLAY SCALING DISABLED"

    const/4 v10, 0x0

    invoke-static {v6, v7, v10, v9, v8}, Lcom/android/internal/protolog/ProtoLogImpl;->i(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 5434
    :cond_8
    const/4 v6, 0x1

    iput-boolean v6, v3, Lcom/android/server/wm/DisplayContent;->mDisplayScalingDisabled:Z

    .line 5435
    const/4 v2, 0x1

    .line 5437
    :cond_9
    return v2
.end method

.method static boostPriorityForLockedSection()V
    .locals 1

    .line 1083
    sget-object v0, Lcom/android/server/wm/WindowManagerService;->sThreadPriorityBooster:Lcom/android/server/wm/WindowManagerThreadPriorityBooster;

    invoke-virtual {v0}, Lcom/android/server/wm/WindowManagerThreadPriorityBooster;->boost()V

    .line 1084
    return-void
.end method

.method private checkBootAnimationCompleteLocked()Z
    .locals 6

    .line 3622
    const-string v0, "bootanim"

    invoke-static {v0}, Landroid/os/SystemService;->isRunning(Ljava/lang/String;)Z

    move-result v0

    const/4 v1, 0x0

    const/4 v2, 0x0

    if-eqz v0, :cond_1

    .line 3623
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v3, 0x25

    invoke-virtual {v0, v3}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    .line 3624
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const-wide/16 v4, 0x32

    invoke-virtual {v0, v3, v4, v5}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessageDelayed(IJ)Z

    .line 3626
    sget-boolean v0, Lcom/android/server/wm/ProtoLogCache;->WM_DEBUG_BOOT_enabled:Z

    if-eqz v0, :cond_0

    sget-object v0, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_BOOT:Lcom/android/internal/protolog/ProtoLogGroup;

    const v3, 0x23c56b81

    move-object v4, v2

    check-cast v4, [Ljava/lang/Object;

    invoke-static {v0, v3, v1, v2, v4}, Lcom/android/internal/protolog/ProtoLogImpl;->i(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 3627
    :cond_0
    return v1

    .line 3629
    :cond_1
    sget-boolean v0, Lcom/android/server/wm/ProtoLogCache;->WM_DEBUG_BOOT_enabled:Z

    if-eqz v0, :cond_2

    sget-object v0, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_BOOT:Lcom/android/internal/protolog/ProtoLogGroup;

    const v3, 0x48f97193

    move-object v4, v2

    check-cast v4, [Ljava/lang/Object;

    invoke-static {v0, v3, v1, v2, v4}, Lcom/android/internal/protolog/ProtoLogImpl;->i(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 3630
    :cond_2
    const/4 v0, 0x1

    return v0
.end method

.method private checkCallerOwnsDisplay(I)V
    .locals 5
    .param p1, "displayId"    # I

    .line 6965
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayManager:Landroid/hardware/display/DisplayManager;

    invoke-virtual {v0, p1}, Landroid/hardware/display/DisplayManager;->getDisplay(I)Landroid/view/Display;

    move-result-object v0

    .line 6966
    .local v0, "display":Landroid/view/Display;
    if-eqz v0, :cond_1

    .line 6971
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    .line 6972
    .local v1, "callingUid":I
    invoke-virtual {v0}, Landroid/view/Display;->getOwnerUid()I

    move-result v2

    .line 6973
    .local v2, "displayOwnerUid":I
    if-ne v1, v2, :cond_0

    .line 6976
    return-void

    .line 6974
    :cond_0
    new-instance v3, Ljava/lang/SecurityException;

    const-string v4, "The caller doesn\'t own the display."

    invoke-direct {v3, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 6967
    .end local v1    # "callingUid":I
    .end local v2    # "displayOwnerUid":I
    :cond_1
    new-instance v1, Ljava/lang/IllegalArgumentException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Cannot find display for non-existent displayId: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1
.end method

.method private computeNewConfigurationLocked(I)Landroid/content/res/Configuration;
    .locals 2
    .param p1, "displayId"    # I

    .line 4721
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayReady:Z

    if-nez v0, :cond_0

    .line 4722
    const/4 v0, 0x0

    return-object v0

    .line 4724
    :cond_0
    new-instance v0, Landroid/content/res/Configuration;

    invoke-direct {v0}, Landroid/content/res/Configuration;-><init>()V

    .line 4725
    .local v0, "config":Landroid/content/res/Configuration;
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 4726
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {v1, v0}, Lcom/android/server/wm/DisplayContent;->computeScreenConfiguration(Landroid/content/res/Configuration;)V

    .line 4727
    return-object v0
.end method

.method private createSurfaceControl(Landroid/view/SurfaceControl;ILcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowStateAnimator;)I
    .locals 7
    .param p1, "outSurfaceControl"    # Landroid/view/SurfaceControl;
    .param p2, "result"    # I
    .param p3, "win"    # Lcom/android/server/wm/WindowState;
    .param p4, "winAnimator"    # Lcom/android/server/wm/WindowStateAnimator;

    .line 2599
    iget-boolean v0, p3, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    if-nez v0, :cond_0

    .line 2600
    or-int/lit8 p2, p2, 0x4

    .line 2605
    :cond_0
    const-wide/16 v0, 0x20

    :try_start_0
    const-string v2, "createSurfaceControl"

    invoke-static {v0, v1, v2}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 2606
    iget-object v2, p3, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v2, v2, Landroid/view/WindowManager$LayoutParams;->type:I

    invoke-virtual {p4, v2}, Lcom/android/server/wm/WindowStateAnimator;->createSurfaceLocked(I)Lcom/android/server/wm/WindowSurfaceController;

    move-result-object v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 2608
    .local v2, "surfaceController":Lcom/android/server/wm/WindowSurfaceController;
    invoke-static {v0, v1}, Landroid/os/Trace;->traceEnd(J)V

    .line 2609
    nop

    .line 2610
    const/4 v0, 0x1

    const/4 v1, 0x0

    if-eqz v2, :cond_1

    .line 2611
    invoke-virtual {v2, p1}, Lcom/android/server/wm/WindowSurfaceController;->getSurfaceControl(Landroid/view/SurfaceControl;)V

    .line 2612
    sget-boolean v3, Lcom/android/server/wm/ProtoLogCache;->WM_SHOW_TRANSACTIONS_enabled:Z

    if-eqz v3, :cond_3

    invoke-static {p1}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v3

    .local v3, "protoLogParam0":Ljava/lang/String;
    sget-object v4, Lcom/android/internal/protolog/ProtoLogGroup;->WM_SHOW_TRANSACTIONS:Lcom/android/internal/protolog/ProtoLogGroup;

    const v5, -0x4af8d3ea

    const/4 v6, 0x0

    new-array v0, v0, [Ljava/lang/Object;

    aput-object v3, v0, v1

    invoke-static {v4, v5, v1, v6, v0}, Lcom/android/internal/protolog/ProtoLogImpl;->i(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .end local v3    # "protoLogParam0":Ljava/lang/String;
    goto :goto_0

    .line 2617
    :cond_1
    sget-boolean v3, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v3, :cond_2

    invoke-static {p3}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v3

    .restart local v3    # "protoLogParam0":Ljava/lang/String;
    sget-object v4, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const v5, 0x2a056ae5

    new-array v0, v0, [Ljava/lang/Object;

    aput-object v3, v0, v1

    const-string v6, "Failed to create surface control for %s"

    invoke-static {v4, v5, v1, v6, v0}, Lcom/android/internal/protolog/ProtoLogImpl;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 2618
    .end local v3    # "protoLogParam0":Ljava/lang/String;
    :cond_2
    invoke-virtual {p1}, Landroid/view/SurfaceControl;->release()V

    .line 2621
    :cond_3
    :goto_0
    return p2

    .line 2608
    .end local v2    # "surfaceController":Lcom/android/server/wm/WindowSurfaceController;
    :catchall_0
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Trace;->traceEnd(J)V

    .line 2609
    throw v2
.end method

.method static dipToPixel(ILandroid/util/DisplayMetrics;)I
    .locals 2
    .param p0, "dip"    # I
    .param p1, "displayMetrics"    # Landroid/util/DisplayMetrics;

    .line 6810
    int-to-float v0, p0

    const/4 v1, 0x1

    invoke-static {v1, v0, p1}, Landroid/util/TypedValue;->applyDimension(IFLandroid/util/DisplayMetrics;)F

    move-result v0

    float-to-int v0, v0

    return v0
.end method

.method private doDump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;Z)V
    .locals 10
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "args"    # [Ljava/lang/String;
    .param p4, "useProto"    # Z

    .line 6477
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string v1, "WindowManager"

    invoke-static {v0, v1, p2}, Lcom/android/internal/util/DumpUtils;->checkDumpPermission(Landroid/content/Context;Ljava/lang/String;Ljava/io/PrintWriter;)Z

    move-result v0

    if-nez v0, :cond_0

    return-void

    .line 6478
    :cond_0
    const/4 v0, 0x0

    .line 6480
    .local v0, "dumpAll":Z
    const/4 v1, 0x0

    .line 6481
    .local v1, "opti":I
    :goto_0
    array-length v2, p3

    const/4 v3, 0x0

    if-ge v1, v2, :cond_4

    .line 6482
    aget-object v2, p3, v1

    .line 6483
    .local v2, "opt":Ljava/lang/String;
    if-eqz v2, :cond_4

    invoke-virtual {v2}, Ljava/lang/String;->length()I

    move-result v4

    if-lez v4, :cond_4

    invoke-virtual {v2, v3}, Ljava/lang/String;->charAt(I)C

    move-result v4

    const/16 v5, 0x2d

    if-eq v4, v5, :cond_1

    .line 6484
    goto/16 :goto_2

    .line 6486
    :cond_1
    add-int/lit8 v1, v1, 0x1

    .line 6487
    const-string v3, "-a"

    invoke-virtual {v3, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_2

    .line 6488
    const/4 v0, 0x1

    goto/16 :goto_1

    .line 6489
    :cond_2
    const-string v3, "-h"

    invoke-virtual {v3, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_3

    .line 6490
    const-string v3, "Window manager dump options:"

    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 6491
    const-string v3, "  [-a] [-h] [cmd] ..."

    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 6492
    const-string v3, "  cmd may be one of:"

    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 6493
    const-string v3, "    l[astanr]: last ANR information"

    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 6494
    const-string v3, "    p[policy]: policy state"

    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 6495
    const-string v3, "    a[animator]: animator state"

    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 6496
    const-string v3, "    s[essions]: active sessions"

    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 6497
    const-string v3, "    surfaces: active surfaces (debugging enabled only)"

    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 6498
    const-string v3, "    d[isplays]: active display contents"

    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 6499
    const-string v3, "    t[okens]: token list"

    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 6500
    const-string v3, "    w[indows]: window list"

    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 6501
    const-string v3, "    trace: print trace status and write Winscope trace to file"

    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 6502
    const-string v3, "  cmd may also be a NAME to dump windows.  NAME may"

    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 6503
    const-string v3, "    be a partial substring in a window name, a"

    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 6504
    const-string v3, "    Window hex object identifier, or"

    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 6505
    const-string v3, "    \"all\" for all windows, or"

    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 6506
    const-string v3, "    \"visible\" for the visible windows."

    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 6507
    const-string v3, "    \"visible-apps\" for the visible app windows."

    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 6508
    const-string v3, "  -a: include all available server state."

    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 6509
    const-string v3, "  --proto: output dump in protocol buffer format."

    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 6510
    return-void

    .line 6512
    :cond_3
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Unknown argument: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v4, "; use -h for help"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 6514
    .end local v2    # "opt":Ljava/lang/String;
    :goto_1
    goto/16 :goto_0

    .line 6516
    :cond_4
    :goto_2
    if-eqz p4, :cond_5

    .line 6517
    new-instance v2, Landroid/util/proto/ProtoOutputStream;

    invoke-direct {v2, p1}, Landroid/util/proto/ProtoOutputStream;-><init>(Ljava/io/FileDescriptor;)V

    .line 6518
    .local v2, "proto":Landroid/util/proto/ProtoOutputStream;
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v4

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 6519
    invoke-virtual {p0, v2, v3}, Lcom/android/server/wm/WindowManagerService;->dumpDebugLocked(Landroid/util/proto/ProtoOutputStream;I)V

    .line 6520
    monitor-exit v4
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 6521
    invoke-virtual {v2}, Landroid/util/proto/ProtoOutputStream;->flush()V

    .line 6522
    return-void

    .line 6520
    :catchall_0
    move-exception v3

    :try_start_1
    monitor-exit v4
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v3

    .line 6525
    .end local v2    # "proto":Landroid/util/proto/ProtoOutputStream;
    :cond_5
    array-length v2, p3

    const/4 v3, 0x0

    if-ge v1, v2, :cond_1b

    .line 6526
    aget-object v8, p3, v1

    .line 6527
    .local v8, "cmd":Ljava/lang/String;
    const/4 v2, 0x1

    add-int/lit8 v9, v1, 0x1

    .line 6528
    .end local v1    # "opti":I
    .local v9, "opti":I
    const-string v1, "lastanr"

    invoke-virtual {v1, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_1a

    const-string v1, "l"

    invoke-virtual {v1, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_6

    goto/16 :goto_9

    .line 6533
    :cond_6
    const-string v1, "policy"

    invoke-virtual {v1, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_19

    const-string v1, "p"

    invoke-virtual {v1, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_7

    goto/16 :goto_8

    .line 6538
    :cond_7
    const-string v1, "animator"

    invoke-virtual {v1, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_18

    const-string v1, "a"

    invoke-virtual {v1, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_8

    goto/16 :goto_7

    .line 6543
    :cond_8
    const-string v1, "sessions"

    invoke-virtual {v1, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_17

    const-string v1, "s"

    invoke-virtual {v1, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_9

    goto/16 :goto_6

    .line 6548
    :cond_9
    const-string v1, "displays"

    invoke-virtual {v1, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_16

    const-string v1, "d"

    invoke-virtual {v1, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_a

    goto/16 :goto_5

    .line 6553
    :cond_a
    const-string v1, "tokens"

    invoke-virtual {v1, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_15

    const-string v1, "t"

    invoke-virtual {v1, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_b

    goto/16 :goto_4

    .line 6558
    :cond_b
    const-string v1, "windows"

    invoke-virtual {v1, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_14

    const-string v1, "w"

    invoke-virtual {v1, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_c

    goto/16 :goto_3

    .line 6563
    :cond_c
    const-string v1, "all"

    invoke-virtual {v1, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_d

    .line 6564
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v1

    :try_start_2
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 6565
    invoke-direct {p0, p2, v2, v3}, Lcom/android/server/wm/WindowManagerService;->dumpWindowsLocked(Ljava/io/PrintWriter;ZLjava/util/ArrayList;)V

    .line 6566
    monitor-exit v1
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 6567
    return-void

    .line 6566
    :catchall_1
    move-exception v2

    :try_start_3
    monitor-exit v1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v2

    .line 6568
    :cond_d
    const-string v1, "containers"

    invoke-virtual {v1, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_e

    .line 6569
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v1

    :try_start_4
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 6570
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    const-string v4, " "

    invoke-virtual {v3, p2, v4}, Lcom/android/server/wm/RootWindowContainer;->dumpChildrenNames(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 6571
    const-string v3, " "

    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 6572
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    new-instance v4, Lcom/android/server/wm/WindowManagerService$$ExternalSyntheticLambda12;

    invoke-direct {v4, p2}, Lcom/android/server/wm/WindowManagerService$$ExternalSyntheticLambda12;-><init>(Ljava/io/PrintWriter;)V

    invoke-virtual {v3, v4, v2}, Lcom/android/server/wm/RootWindowContainer;->forAllWindows(Ljava/util/function/Consumer;Z)V

    .line 6573
    monitor-exit v1
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_2

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 6574
    return-void

    .line 6573
    :catchall_2
    move-exception v2

    :try_start_5
    monitor-exit v1
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_2

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v2

    .line 6575
    :cond_e
    const-string v1, "trace"

    invoke-virtual {v1, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_f

    .line 6576
    invoke-direct {p0, p2}, Lcom/android/server/wm/WindowManagerService;->dumpTraceStatus(Ljava/io/PrintWriter;)V

    .line 6577
    return-void

    .line 6578
    :cond_f
    const-string v1, "logging"

    invoke-virtual {v1, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_10

    .line 6579
    invoke-direct {p0, p2}, Lcom/android/server/wm/WindowManagerService;->dumpLogStatus(Ljava/io/PrintWriter;)V

    .line 6580
    return-void

    .line 6581
    :cond_10
    const-string v1, "refresh"

    invoke-virtual {v1, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_11

    .line 6582
    invoke-direct {p0, p2}, Lcom/android/server/wm/WindowManagerService;->dumpHighRefreshRateBlacklist(Ljava/io/PrintWriter;)V

    .line 6583
    return-void

    .line 6584
    :cond_11
    const-string v1, "constants"

    invoke-virtual {v1, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_12

    .line 6585
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mConstants:Lcom/android/server/wm/WindowManagerConstants;

    invoke-virtual {v1, p2}, Lcom/android/server/wm/WindowManagerConstants;->dump(Ljava/io/PrintWriter;)V

    .line 6586
    return-void

    .line 6589
    :cond_12
    move-object v2, p0

    move-object v3, p2

    move-object v4, v8

    move-object v5, p3

    move v6, v9

    move v7, v0

    invoke-direct/range {v2 .. v7}, Lcom/android/server/wm/WindowManagerService;->dumpWindows(Ljava/io/PrintWriter;Ljava/lang/String;[Ljava/lang/String;IZ)Z

    move-result v1

    if-nez v1, :cond_13

    .line 6590
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Bad window command, or no windows match: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 6591
    const-string v1, "Use -h for help."

    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 6593
    :cond_13
    return-void

    .line 6559
    :cond_14
    :goto_3
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v1

    :try_start_6
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 6560
    invoke-direct {p0, p2, v2, v3}, Lcom/android/server/wm/WindowManagerService;->dumpWindowsLocked(Ljava/io/PrintWriter;ZLjava/util/ArrayList;)V

    .line 6561
    monitor-exit v1
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_3

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 6562
    return-void

    .line 6561
    :catchall_3
    move-exception v2

    :try_start_7
    monitor-exit v1
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_3

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v2

    .line 6554
    :cond_15
    :goto_4
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v1

    :try_start_8
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 6555
    invoke-direct {p0, p2, v2}, Lcom/android/server/wm/WindowManagerService;->dumpTokensLocked(Ljava/io/PrintWriter;Z)V

    .line 6556
    monitor-exit v1
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_4

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 6557
    return-void

    .line 6556
    :catchall_4
    move-exception v2

    :try_start_9
    monitor-exit v1
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_4

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v2

    .line 6549
    :cond_16
    :goto_5
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v1

    :try_start_a
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 6550
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v2, p2}, Lcom/android/server/wm/RootWindowContainer;->dumpDisplayContents(Ljava/io/PrintWriter;)V

    .line 6551
    monitor-exit v1
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_5

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 6552
    return-void

    .line 6551
    :catchall_5
    move-exception v2

    :try_start_b
    monitor-exit v1
    :try_end_b
    .catchall {:try_start_b .. :try_end_b} :catchall_5

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v2

    .line 6544
    :cond_17
    :goto_6
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v1

    :try_start_c
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 6545
    invoke-direct {p0, p2, v2}, Lcom/android/server/wm/WindowManagerService;->dumpSessionsLocked(Ljava/io/PrintWriter;Z)V

    .line 6546
    monitor-exit v1
    :try_end_c
    .catchall {:try_start_c .. :try_end_c} :catchall_6

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 6547
    return-void

    .line 6546
    :catchall_6
    move-exception v2

    :try_start_d
    monitor-exit v1
    :try_end_d
    .catchall {:try_start_d .. :try_end_d} :catchall_6

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v2

    .line 6539
    :cond_18
    :goto_7
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v1

    :try_start_e
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 6540
    invoke-direct {p0, p2, p3, v2}, Lcom/android/server/wm/WindowManagerService;->dumpAnimatorLocked(Ljava/io/PrintWriter;[Ljava/lang/String;Z)V

    .line 6541
    monitor-exit v1
    :try_end_e
    .catchall {:try_start_e .. :try_end_e} :catchall_7

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 6542
    return-void

    .line 6541
    :catchall_7
    move-exception v2

    :try_start_f
    monitor-exit v1
    :try_end_f
    .catchall {:try_start_f .. :try_end_f} :catchall_7

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v2

    .line 6534
    :cond_19
    :goto_8
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v1

    :try_start_10
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 6535
    invoke-direct {p0, p2, p3, v2}, Lcom/android/server/wm/WindowManagerService;->dumpPolicyLocked(Ljava/io/PrintWriter;[Ljava/lang/String;Z)V

    .line 6536
    monitor-exit v1
    :try_end_10
    .catchall {:try_start_10 .. :try_end_10} :catchall_8

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 6537
    return-void

    .line 6536
    :catchall_8
    move-exception v2

    :try_start_11
    monitor-exit v1
    :try_end_11
    .catchall {:try_start_11 .. :try_end_11} :catchall_8

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v2

    .line 6529
    :cond_1a
    :goto_9
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v2

    :try_start_12
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 6530
    invoke-direct {p0, p2}, Lcom/android/server/wm/WindowManagerService;->dumpLastANRLocked(Ljava/io/PrintWriter;)V

    .line 6531
    monitor-exit v2
    :try_end_12
    .catchall {:try_start_12 .. :try_end_12} :catchall_9

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 6532
    return-void

    .line 6531
    :catchall_9
    move-exception v1

    :try_start_13
    monitor-exit v2
    :try_end_13
    .catchall {:try_start_13 .. :try_end_13} :catchall_9

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1

    .line 6597
    .end local v8    # "cmd":Ljava/lang/String;
    .end local v9    # "opti":I
    .restart local v1    # "opti":I
    :cond_1b
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v2

    :try_start_14
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 6598
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    .line 6599
    const-string v4, "-------------------------------------------------------------------------------"

    .line 6601
    .local v4, "separator":Ljava/lang/String;
    if-eqz v0, :cond_1c

    .line 6602
    const-string v5, "-------------------------------------------------------------------------------"

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 6604
    :cond_1c
    invoke-direct {p0, p2}, Lcom/android/server/wm/WindowManagerService;->dumpLastANRLocked(Ljava/io/PrintWriter;)V

    .line 6605
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    .line 6606
    if-eqz v0, :cond_1d

    .line 6607
    const-string v5, "-------------------------------------------------------------------------------"

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 6609
    :cond_1d
    invoke-direct {p0, p2, p3, v0}, Lcom/android/server/wm/WindowManagerService;->dumpPolicyLocked(Ljava/io/PrintWriter;[Ljava/lang/String;Z)V

    .line 6610
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    .line 6611
    if-eqz v0, :cond_1e

    .line 6612
    const-string v5, "-------------------------------------------------------------------------------"

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 6614
    :cond_1e
    invoke-direct {p0, p2, p3, v0}, Lcom/android/server/wm/WindowManagerService;->dumpAnimatorLocked(Ljava/io/PrintWriter;[Ljava/lang/String;Z)V

    .line 6615
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    .line 6616
    if-eqz v0, :cond_1f

    .line 6617
    const-string v5, "-------------------------------------------------------------------------------"

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 6619
    :cond_1f
    invoke-direct {p0, p2, v0}, Lcom/android/server/wm/WindowManagerService;->dumpSessionsLocked(Ljava/io/PrintWriter;Z)V

    .line 6620
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    .line 6621
    if-eqz v0, :cond_20

    .line 6622
    const-string v5, "-------------------------------------------------------------------------------"

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 6624
    :cond_20
    if-eqz v0, :cond_21

    .line 6625
    const-string v5, "-------------------------------------------------------------------------------"

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 6627
    :cond_21
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v5, p2}, Lcom/android/server/wm/RootWindowContainer;->dumpDisplayContents(Ljava/io/PrintWriter;)V

    .line 6628
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    .line 6629
    if-eqz v0, :cond_22

    .line 6630
    const-string v5, "-------------------------------------------------------------------------------"

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 6632
    :cond_22
    invoke-direct {p0, p2, v0}, Lcom/android/server/wm/WindowManagerService;->dumpTokensLocked(Ljava/io/PrintWriter;Z)V

    .line 6633
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    .line 6634
    if-eqz v0, :cond_23

    .line 6635
    const-string v5, "-------------------------------------------------------------------------------"

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 6637
    :cond_23
    invoke-direct {p0, p2, v0, v3}, Lcom/android/server/wm/WindowManagerService;->dumpWindowsLocked(Ljava/io/PrintWriter;ZLjava/util/ArrayList;)V

    .line 6638
    if-eqz v0, :cond_24

    .line 6639
    const-string v3, "-------------------------------------------------------------------------------"

    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 6641
    :cond_24
    invoke-direct {p0, p2}, Lcom/android/server/wm/WindowManagerService;->dumpTraceStatus(Ljava/io/PrintWriter;)V

    .line 6642
    if-eqz v0, :cond_25

    .line 6643
    const-string v3, "-------------------------------------------------------------------------------"

    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 6645
    :cond_25
    invoke-direct {p0, p2}, Lcom/android/server/wm/WindowManagerService;->dumpLogStatus(Ljava/io/PrintWriter;)V

    .line 6646
    if-eqz v0, :cond_26

    .line 6647
    const-string v3, "-------------------------------------------------------------------------------"

    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 6649
    :cond_26
    invoke-direct {p0, p2}, Lcom/android/server/wm/WindowManagerService;->dumpHighRefreshRateBlacklist(Ljava/io/PrintWriter;)V

    .line 6650
    if-eqz v0, :cond_27

    .line 6651
    const-string v3, "-------------------------------------------------------------------------------"

    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 6653
    :cond_27
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mConstants:Lcom/android/server/wm/WindowManagerConstants;

    invoke-virtual {v3, p2}, Lcom/android/server/wm/WindowManagerConstants;->dump(Ljava/io/PrintWriter;)V

    .line 6654
    .end local v4    # "separator":Ljava/lang/String;
    monitor-exit v2
    :try_end_14
    .catchall {:try_start_14 .. :try_end_14} :catchall_a

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 6655
    return-void

    .line 6654
    :catchall_a
    move-exception v3

    :try_start_15
    monitor-exit v2
    :try_end_15
    .catchall {:try_start_15 .. :try_end_15} :catchall_a

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v3
.end method

.method private doesAddToastWindowRequireToken(Ljava/lang/String;ILcom/android/server/wm/WindowState;)Z
    .locals 5
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "callingUid"    # I
    .param p3, "attachedWindow"    # Lcom/android/server/wm/WindowState;

    .line 1944
    const/4 v0, 0x1

    const/16 v1, 0x1a

    const/4 v2, 0x0

    if-eqz p3, :cond_1

    .line 1945
    iget-object v3, p3, Lcom/android/server/wm/WindowState;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    if-eqz v3, :cond_0

    iget-object v3, p3, Lcom/android/server/wm/WindowState;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    iget v3, v3, Lcom/android/server/wm/ActivityRecord;->mTargetSdk:I

    if-lt v3, v1, :cond_0

    goto :goto_0

    :cond_0
    move v0, v2

    :goto_0
    return v0

    .line 1950
    :cond_1
    :try_start_0
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v3}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v3

    .line 1952
    invoke-static {p2}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v4

    .line 1951
    invoke-virtual {v3, p1, v2, v4}, Landroid/content/pm/PackageManager;->getApplicationInfoAsUser(Ljava/lang/String;II)Landroid/content/pm/ApplicationInfo;

    move-result-object v3

    .line 1953
    .local v3, "appInfo":Landroid/content/pm/ApplicationInfo;
    iget v4, v3, Landroid/content/pm/ApplicationInfo;->uid:I

    if-ne v4, p2, :cond_3

    .line 1957
    iget v4, v3, Landroid/content/pm/ApplicationInfo;->targetSdkVersion:I

    if-lt v4, v1, :cond_2

    .line 1958
    return v0

    .line 1962
    .end local v3    # "appInfo":Landroid/content/pm/ApplicationInfo;
    :cond_2
    goto :goto_1

    .line 1954
    .restart local v3    # "appInfo":Landroid/content/pm/ApplicationInfo;
    :cond_3
    new-instance v0, Ljava/lang/SecurityException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Package "

    invoke-virtual {v1, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v4, " not in UID "

    invoke-virtual {v1, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "packageName":Ljava/lang/String;
    .end local p2    # "callingUid":I
    .end local p3    # "attachedWindow":Lcom/android/server/wm/WindowState;
    throw v0
    :try_end_0
    .catch Landroid/content/pm/PackageManager$NameNotFoundException; {:try_start_0 .. :try_end_0} :catch_0

    .line 1960
    .end local v3    # "appInfo":Landroid/content/pm/ApplicationInfo;
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "packageName":Ljava/lang/String;
    .restart local p2    # "callingUid":I
    .restart local p3    # "attachedWindow":Lcom/android/server/wm/WindowState;
    :catch_0
    move-exception v0

    .line 1964
    :goto_1
    return v2
.end method

.method private dumpAnimatorLocked(Ljava/io/PrintWriter;[Ljava/lang/String;Z)V
    .locals 2
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "args"    # [Ljava/lang/String;
    .param p3, "dumpAll"    # Z

    .line 6142
    const-string v0, "WINDOW MANAGER ANIMATOR STATE (dumpsys window animator)"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 6143
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    const-string v1, "    "

    invoke-virtual {v0, p1, v1, p3}, Lcom/android/server/wm/WindowAnimator;->dumpLocked(Ljava/io/PrintWriter;Ljava/lang/String;Z)V

    .line 6144
    return-void
.end method

.method private dumpHighRefreshRateBlacklist(Ljava/io/PrintWriter;)V
    .locals 1
    .param p1, "pw"    # Ljava/io/PrintWriter;

    .line 6153
    const-string v0, "WINDOW MANAGER HIGH REFRESH RATE BLACKLIST (dumpsys window refresh)"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 6154
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mHighRefreshRateDenylist:Lcom/android/server/wm/HighRefreshRateDenylist;

    invoke-virtual {v0, p1}, Lcom/android/server/wm/HighRefreshRateDenylist;->dump(Ljava/io/PrintWriter;)V

    .line 6155
    return-void
.end method

.method private dumpLastANRLocked(Ljava/io/PrintWriter;)V
    .locals 1
    .param p1, "pw"    # Ljava/io/PrintWriter;

    .line 6417
    const-string v0, "WINDOW MANAGER LAST ANR (dumpsys window lastanr)"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 6418
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mLastANRState:Ljava/lang/String;

    if-nez v0, :cond_0

    .line 6419
    const-string v0, "  <no ANR has occurred since boot>"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto :goto_0

    .line 6421
    :cond_0
    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 6423
    :goto_0
    return-void
.end method

.method private dumpLogStatus(Ljava/io/PrintWriter;)V
    .locals 1
    .param p1, "pw"    # Ljava/io/PrintWriter;

    .line 6163
    const-string v0, "WINDOW MANAGER LOGGING (dumpsys window logging)"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 6164
    invoke-static {}, Lcom/android/internal/protolog/ProtoLogImpl;->getSingleInstance()Lcom/android/internal/protolog/ProtoLogImpl;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/internal/protolog/ProtoLogImpl;->getStatus()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 6165
    return-void
.end method

.method private dumpPolicyLocked(Ljava/io/PrintWriter;[Ljava/lang/String;Z)V
    .locals 2
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "args"    # [Ljava/lang/String;
    .param p3, "dumpAll"    # Z

    .line 6137
    const-string v0, "WINDOW MANAGER POLICY STATE (dumpsys window policy)"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 6138
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    const-string v1, "    "

    invoke-interface {v0, v1, p1, p2}, Lcom/android/server/policy/WindowManagerPolicy;->dump(Ljava/lang/String;Ljava/io/PrintWriter;[Ljava/lang/String;)V

    .line 6139
    return-void
.end method

.method private dumpSessionsLocked(Ljava/io/PrintWriter;Z)V
    .locals 3
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "dumpAll"    # Z

    .line 6168
    const-string v0, "WINDOW MANAGER SESSIONS (dumpsys window sessions)"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 6169
    const/4 v0, 0x0

    .local v0, "i":I
    :goto_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mSessions:Landroid/util/ArraySet;

    invoke-virtual {v1}, Landroid/util/ArraySet;->size()I

    move-result v1

    if-ge v0, v1, :cond_0

    .line 6170
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mSessions:Landroid/util/ArraySet;

    invoke-virtual {v1, v0}, Landroid/util/ArraySet;->valueAt(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/Session;

    .line 6171
    .local v1, "s":Lcom/android/server/wm/Session;
    const-string v2, "  Session "

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    const/16 v2, 0x3a

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->println(C)V

    .line 6172
    const-string v2, "    "

    invoke-virtual {v1, p1, v2}, Lcom/android/server/wm/Session;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 6169
    .end local v1    # "s":Lcom/android/server/wm/Session;
    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    .line 6174
    .end local v0    # "i":I
    :cond_0
    return-void
.end method

.method private dumpTokensLocked(Ljava/io/PrintWriter;Z)V
    .locals 1
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "dumpAll"    # Z

    .line 6147
    const-string v0, "WINDOW MANAGER TOKENS (dumpsys window tokens)"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 6148
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/wm/RootWindowContainer;->dumpTokens(Ljava/io/PrintWriter;Z)V

    .line 6149
    return-void
.end method

.method private dumpTraceStatus(Ljava/io/PrintWriter;)V
    .locals 2
    .param p1, "pw"    # Ljava/io/PrintWriter;

    .line 6158
    const-string v0, "WINDOW MANAGER TRACE (dumpsys window trace)"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 6159
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowTracing:Lcom/android/server/wm/WindowTracing;

    invoke-virtual {v1}, Lcom/android/server/wm/WindowTracing;->getStatus()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "\n"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 6160
    return-void
.end method

.method private dumpWindows(Ljava/io/PrintWriter;Ljava/lang/String;[Ljava/lang/String;IZ)Z
    .locals 7
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "name"    # Ljava/lang/String;
    .param p3, "args"    # [Ljava/lang/String;
    .param p4, "opti"    # I
    .param p5, "dumpAll"    # Z

    .line 6384
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    .line 6385
    .local v0, "windows":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/WindowState;>;"
    const-string v1, "apps"

    invoke-virtual {v1, p2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    const/4 v2, 0x1

    if-nez v1, :cond_1

    const-string v1, "visible"

    invoke-virtual {v1, p2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_1

    const-string v1, "visible-apps"

    invoke-virtual {v1, p2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_0

    goto :goto_0

    .line 6401
    :cond_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v1

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 6402
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v3, v0, p2}, Lcom/android/server/wm/RootWindowContainer;->getWindowsByName(Ljava/util/ArrayList;Ljava/lang/String;)V

    .line 6403
    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    goto :goto_1

    :catchall_0
    move-exception v2

    :try_start_1
    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v2

    .line 6386
    :cond_1
    :goto_0
    const-string v1, "apps"

    invoke-virtual {p2, v1}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    move-result v1

    .line 6387
    .local v1, "appsOnly":Z
    const-string v3, "visible"

    invoke-virtual {p2, v3}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    move-result v3

    .line 6388
    .local v3, "visibleOnly":Z
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v4

    :try_start_2
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 6389
    if-eqz v1, :cond_2

    .line 6390
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v5, p1}, Lcom/android/server/wm/RootWindowContainer;->dumpDisplayContents(Ljava/io/PrintWriter;)V

    .line 6393
    :cond_2
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    new-instance v6, Lcom/android/server/wm/WindowManagerService$$ExternalSyntheticLambda15;

    invoke-direct {v6, v3, v1, v0}, Lcom/android/server/wm/WindowManagerService$$ExternalSyntheticLambda15;-><init>(ZZLjava/util/ArrayList;)V

    invoke-virtual {v5, v6, v2}, Lcom/android/server/wm/RootWindowContainer;->forAllWindows(Ljava/util/function/Consumer;Z)V

    .line 6399
    monitor-exit v4
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_2

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 6400
    .end local v1    # "appsOnly":Z
    .end local v3    # "visibleOnly":Z
    nop

    .line 6406
    :goto_1
    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v1

    if-gtz v1, :cond_3

    .line 6407
    const/4 v1, 0x0

    return v1

    .line 6410
    :cond_3
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v5

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 6411
    invoke-direct {p0, p1, p5, v0}, Lcom/android/server/wm/WindowManagerService;->dumpWindowsLocked(Ljava/io/PrintWriter;ZLjava/util/ArrayList;)V

    .line 6412
    monitor-exit v5
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 6413
    return v2

    .line 6412
    :catchall_1
    move-exception v1

    :try_start_4
    monitor-exit v5
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1

    .line 6399
    .restart local v1    # "appsOnly":Z
    .restart local v3    # "visibleOnly":Z
    :catchall_2
    move-exception v2

    :try_start_5
    monitor-exit v4
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_2

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v2
.end method

.method private dumpWindowsLocked(Ljava/io/PrintWriter;ZLjava/util/ArrayList;)V
    .locals 1
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "dumpAll"    # Z
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/io/PrintWriter;",
            "Z",
            "Ljava/util/ArrayList<",
            "Lcom/android/server/wm/WindowState;",
            ">;)V"
        }
    .end annotation

    .line 6205
    .local p3, "windows":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/WindowState;>;"
    const-string v0, "WINDOW MANAGER WINDOWS (dumpsys window windows)"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 6206
    invoke-direct {p0, p1, p2, p3}, Lcom/android/server/wm/WindowManagerService;->dumpWindowsNoHeaderLocked(Ljava/io/PrintWriter;ZLjava/util/ArrayList;)V

    .line 6207
    return-void
.end method

.method private dumpWindowsNoHeaderLocked(Ljava/io/PrintWriter;ZLjava/util/ArrayList;)V
    .locals 7
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "dumpAll"    # Z
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/io/PrintWriter;",
            "Z",
            "Ljava/util/ArrayList<",
            "Lcom/android/server/wm/WindowState;",
            ">;)V"
        }
    .end annotation

    .line 6211
    .local p3, "windows":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/WindowState;>;"
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/server/wm/RootWindowContainer;->dumpWindowsNoHeader(Ljava/io/PrintWriter;ZLjava/util/ArrayList;)V

    .line 6213
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mHidingNonSystemOverlayWindows:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->isEmpty()Z

    move-result v0

    const-string v1, ":"

    const/16 v2, 0x20

    const-string v3, "    "

    const/4 v4, 0x1

    if-nez v0, :cond_1

    .line 6214
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 6215
    const-string v0, "  Hiding System Alert Windows:"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 6216
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mHidingNonSystemOverlayWindows:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    sub-int/2addr v0, v4

    .local v0, "i":I
    :goto_0
    if-ltz v0, :cond_1

    .line 6217
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mHidingNonSystemOverlayWindows:Ljava/util/ArrayList;

    invoke-virtual {v5, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/wm/WindowState;

    .line 6218
    .local v5, "w":Lcom/android/server/wm/WindowState;
    const-string v6, "  #"

    invoke-virtual {p1, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(I)V

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(C)V

    .line 6219
    invoke-virtual {p1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    .line 6220
    if-eqz p2, :cond_0

    .line 6221
    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 6222
    invoke-virtual {v5, p1, v3, v4}, Lcom/android/server/wm/WindowState;->dump(Ljava/io/PrintWriter;Ljava/lang/String;Z)V

    goto :goto_1

    .line 6224
    :cond_0
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 6216
    .end local v5    # "w":Lcom/android/server/wm/WindowState;
    :goto_1
    add-int/lit8 v0, v0, -0x1

    goto :goto_0

    .line 6228
    .end local v0    # "i":I
    :cond_1
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPendingRemove:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    if-lez v0, :cond_5

    .line 6229
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 6230
    const-string v0, "  Remove pending for:"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 6231
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPendingRemove:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    sub-int/2addr v0, v4

    .restart local v0    # "i":I
    :goto_2
    if-ltz v0, :cond_5

    .line 6232
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mPendingRemove:Ljava/util/ArrayList;

    invoke-virtual {v5, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/wm/WindowState;

    .line 6233
    .restart local v5    # "w":Lcom/android/server/wm/WindowState;
    if-eqz p3, :cond_2

    invoke-virtual {p3, v5}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_4

    .line 6234
    :cond_2
    const-string v6, "  Remove #"

    invoke-virtual {p1, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(I)V

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(C)V

    .line 6235
    invoke-virtual {p1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    .line 6236
    if-eqz p2, :cond_3

    .line 6237
    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 6238
    invoke-virtual {v5, p1, v3, v4}, Lcom/android/server/wm/WindowState;->dump(Ljava/io/PrintWriter;Ljava/lang/String;Z)V

    goto :goto_3

    .line 6240
    :cond_3
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 6231
    .end local v5    # "w":Lcom/android/server/wm/WindowState;
    :cond_4
    :goto_3
    add-int/lit8 v0, v0, -0x1

    goto :goto_2

    .line 6245
    .end local v0    # "i":I
    :cond_5
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mForceRemoves:Ljava/util/ArrayList;

    if-eqz v0, :cond_7

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    if-lez v0, :cond_7

    .line 6246
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 6247
    const-string v0, "  Windows force removing:"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 6248
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mForceRemoves:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    sub-int/2addr v0, v4

    .restart local v0    # "i":I
    :goto_4
    if-ltz v0, :cond_7

    .line 6249
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mForceRemoves:Ljava/util/ArrayList;

    invoke-virtual {v5, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/wm/WindowState;

    .line 6250
    .restart local v5    # "w":Lcom/android/server/wm/WindowState;
    const-string v6, "  Removing #"

    invoke-virtual {p1, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(I)V

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(C)V

    .line 6251
    invoke-virtual {p1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    .line 6252
    if-eqz p2, :cond_6

    .line 6253
    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 6254
    invoke-virtual {v5, p1, v3, v4}, Lcom/android/server/wm/WindowState;->dump(Ljava/io/PrintWriter;Ljava/lang/String;Z)V

    goto :goto_5

    .line 6256
    :cond_6
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 6248
    .end local v5    # "w":Lcom/android/server/wm/WindowState;
    :goto_5
    add-int/lit8 v0, v0, -0x1

    goto :goto_4

    .line 6260
    .end local v0    # "i":I
    :cond_7
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mDestroySurface:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    if-lez v0, :cond_b

    .line 6261
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 6262
    const-string v0, "  Windows waiting to destroy their surface:"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 6263
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mDestroySurface:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    sub-int/2addr v0, v4

    .restart local v0    # "i":I
    :goto_6
    if-ltz v0, :cond_b

    .line 6264
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mDestroySurface:Ljava/util/ArrayList;

    invoke-virtual {v5, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/wm/WindowState;

    .line 6265
    .restart local v5    # "w":Lcom/android/server/wm/WindowState;
    if-eqz p3, :cond_8

    invoke-virtual {p3, v5}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_a

    .line 6266
    :cond_8
    const-string v6, "  Destroy #"

    invoke-virtual {p1, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(I)V

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(C)V

    .line 6267
    invoke-virtual {p1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    .line 6268
    if-eqz p2, :cond_9

    .line 6269
    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 6270
    invoke-virtual {v5, p1, v3, v4}, Lcom/android/server/wm/WindowState;->dump(Ljava/io/PrintWriter;Ljava/lang/String;Z)V

    goto :goto_7

    .line 6272
    :cond_9
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 6263
    .end local v5    # "w":Lcom/android/server/wm/WindowState;
    :cond_a
    :goto_7
    add-int/lit8 v0, v0, -0x1

    goto :goto_6

    .line 6277
    .end local v0    # "i":I
    :cond_b
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mResizingWindows:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    if-lez v0, :cond_f

    .line 6278
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 6279
    const-string v0, "  Windows waiting to resize:"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 6280
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mResizingWindows:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    sub-int/2addr v0, v4

    .restart local v0    # "i":I
    :goto_8
    if-ltz v0, :cond_f

    .line 6281
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mResizingWindows:Ljava/util/ArrayList;

    invoke-virtual {v5, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/wm/WindowState;

    .line 6282
    .restart local v5    # "w":Lcom/android/server/wm/WindowState;
    if-eqz p3, :cond_c

    invoke-virtual {p3, v5}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_e

    .line 6283
    :cond_c
    const-string v6, "  Resizing #"

    invoke-virtual {p1, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(I)V

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(C)V

    .line 6284
    invoke-virtual {p1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    .line 6285
    if-eqz p2, :cond_d

    .line 6286
    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 6287
    invoke-virtual {v5, p1, v3, v4}, Lcom/android/server/wm/WindowState;->dump(Ljava/io/PrintWriter;Ljava/lang/String;Z)V

    goto :goto_9

    .line 6289
    :cond_d
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 6280
    .end local v5    # "w":Lcom/android/server/wm/WindowState;
    :cond_e
    :goto_9
    add-int/lit8 v0, v0, -0x1

    goto :goto_8

    .line 6294
    .end local v0    # "i":I
    :cond_f
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForDrawnCallbacks:Ljava/util/HashMap;

    invoke-virtual {v0}, Ljava/util/HashMap;->isEmpty()Z

    move-result v0

    if-nez v0, :cond_10

    .line 6295
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 6296
    const-string v0, "  Clients waiting for these windows to be drawn:"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 6297
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForDrawnCallbacks:Ljava/util/HashMap;

    new-instance v1, Lcom/android/server/wm/WindowManagerService$$ExternalSyntheticLambda5;

    invoke-direct {v1, p1}, Lcom/android/server/wm/WindowManagerService$$ExternalSyntheticLambda5;-><init>(Ljava/io/PrintWriter;)V

    invoke-virtual {v0, v1}, Ljava/util/HashMap;->forEach(Ljava/util/function/BiConsumer;)V

    .line 6307
    :cond_10
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 6308
    const-string v0, "  mGlobalConfiguration="

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v0}, Lcom/android/server/wm/RootWindowContainer;->getConfiguration()Landroid/content/res/Configuration;

    move-result-object v0

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 6309
    const-string v0, "  mHasPermanentDpad="

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mHasPermanentDpad:Z

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Z)V

    .line 6310
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v0, p1}, Lcom/android/server/wm/RootWindowContainer;->dumpTopFocusedDisplayId(Ljava/io/PrintWriter;)V

    .line 6311
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    new-instance v1, Lcom/android/server/wm/WindowManagerService$$ExternalSyntheticLambda11;

    invoke-direct {v1, p1}, Lcom/android/server/wm/WindowManagerService$$ExternalSyntheticLambda11;-><init>(Ljava/io/PrintWriter;)V

    invoke-virtual {v0, v1}, Lcom/android/server/wm/RootWindowContainer;->forAllDisplays(Ljava/util/function/Consumer;)V

    .line 6329
    const-string v0, "  mInTouchMode="

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mInTouchMode:Z

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Z)V

    .line 6330
    const-string v0, "  mBlurEnabled="

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mBlurController:Lcom/android/server/wm/BlurController;

    invoke-virtual {v0}, Lcom/android/server/wm/BlurController;->getBlurEnabled()Z

    move-result v0

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Z)V

    .line 6331
    const-string v0, "  mLastDisplayFreezeDuration="

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 6332
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mLastDisplayFreezeDuration:I

    int-to-long v0, v0

    invoke-static {v0, v1, p1}, Landroid/util/TimeUtils;->formatDuration(JLjava/io/PrintWriter;)V

    .line 6333
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mLastFinishedFreezeSource:Ljava/lang/Object;

    if-eqz v0, :cond_11

    .line 6334
    const-string v0, " due to "

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 6335
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mLastFinishedFreezeSource:Ljava/lang/Object;

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    .line 6337
    :cond_11
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 6338
    const-string v0, "  mLastWakeLockHoldingWindow="

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mLastWakeLockHoldingWindow:Lcom/android/server/wm/WindowState;

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    .line 6339
    const-string v0, " mLastWakeLockObscuringWindow="

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mLastWakeLockObscuringWindow:Lcom/android/server/wm/WindowState;

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    .line 6340
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 6342
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInputManagerCallback:Lcom/android/server/wm/InputManagerCallback;

    const-string v1, "  "

    invoke-virtual {v0, p1, v1}, Lcom/android/server/wm/InputManagerCallback;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 6343
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mTaskSnapshotController:Lcom/android/server/wm/TaskSnapshotController;

    invoke-virtual {v0, p1, v1}, Lcom/android/server/wm/TaskSnapshotController;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 6344
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    if-eqz v0, :cond_12

    .line 6345
    invoke-virtual {v0, p1, v1}, Lcom/android/server/wm/AccessibilityController;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 6348
    :cond_12
    if-eqz p2, :cond_14

    .line 6349
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v0}, Lcom/android/server/wm/RootWindowContainer;->getCurrentInputMethodWindow()Lcom/android/server/wm/WindowState;

    move-result-object v0

    .line 6350
    .local v0, "imeWindow":Lcom/android/server/wm/WindowState;
    if-eqz v0, :cond_13

    .line 6351
    const-string v2, "  mInputMethodWindow="

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 6353
    :cond_13
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    invoke-virtual {v2, p1, v1}, Lcom/android/server/wm/WindowSurfacePlacer;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 6354
    const-string v1, "  mSystemBooted="

    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mSystemBooted:Z

    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->print(Z)V

    .line 6355
    const-string v1, " mDisplayEnabled="

    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayEnabled:Z

    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->println(Z)V

    .line 6357
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p1}, Lcom/android/server/wm/RootWindowContainer;->dumpLayoutNeededDisplayIds(Ljava/io/PrintWriter;)V

    .line 6359
    const-string v1, "  mTransactionSequence="

    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v1, p0, Lcom/android/server/wm/WindowManagerService;->mTransactionSequence:I

    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->println(I)V

    .line 6360
    const-string v1, "  mDisplayFrozen="

    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayFrozen:Z

    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->print(Z)V

    .line 6361
    const-string v1, " windows="

    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsFreezingScreen:I

    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->print(I)V

    .line 6362
    const-string v1, " client="

    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mClientFreezingScreen:Z

    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->print(Z)V

    .line 6363
    const-string v1, " apps="

    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v1, p0, Lcom/android/server/wm/WindowManagerService;->mAppsFreezingScreen:I

    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->print(I)V

    .line 6364
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 6365
    .local v1, "defaultDisplayContent":Lcom/android/server/wm/DisplayContent;
    const-string v2, "  mRotation="

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->getRotation()I

    move-result v2

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(I)V

    .line 6366
    const-string v2, "  mLastOrientation="

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 6367
    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->getLastOrientation()I

    move-result v2

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->println(I)V

    .line 6368
    const-string v2, " waitingForConfig="

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 6369
    iget-boolean v2, v1, Lcom/android/server/wm/DisplayContent;->mWaitingForConfig:Z

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->println(Z)V

    .line 6371
    const-string v2, "  Animation settings: disabled="

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v2, p0, Lcom/android/server/wm/WindowManagerService;->mAnimationsDisabled:Z

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(Z)V

    .line 6372
    const-string v2, " window="

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowAnimationScaleSetting:F

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(F)V

    .line 6373
    const-string v2, " transition="

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v2, p0, Lcom/android/server/wm/WindowManagerService;->mTransitionAnimationScaleSetting:F

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(F)V

    .line 6374
    const-string v2, " animator="

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v2, p0, Lcom/android/server/wm/WindowManagerService;->mAnimatorDurationScaleSetting:F

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->println(F)V

    .line 6375
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mRecentsAnimationController:Lcom/android/server/wm/RecentsAnimationController;

    if-eqz v2, :cond_14

    .line 6376
    const-string v2, "  mRecentsAnimationController="

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mRecentsAnimationController:Lcom/android/server/wm/RecentsAnimationController;

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 6377
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mRecentsAnimationController:Lcom/android/server/wm/RecentsAnimationController;

    invoke-virtual {v2, p1, v3}, Lcom/android/server/wm/RecentsAnimationController;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 6380
    .end local v0    # "imeWindow":Lcom/android/server/wm/WindowState;
    .end local v1    # "defaultDisplayContent":Lcom/android/server/wm/DisplayContent;
    :cond_14
    return-void
.end method

.method static excludeWindowTypeFromTapOutTask(I)Z
    .locals 1
    .param p0, "windowType"    # I

    .line 1446
    sparse-switch p0, :sswitch_data_0

    .line 1454
    const/4 v0, 0x0

    return v0

    .line 1452
    :sswitch_0
    const/4 v0, 0x1

    return v0

    nop

    :sswitch_data_0
    .sparse-switch
        0x7d0 -> :sswitch_0
        0x7dc -> :sswitch_0
        0x7e3 -> :sswitch_0
        0x7e4 -> :sswitch_0
        0x7f8 -> :sswitch_0
    .end sparse-switch
.end method

.method private findWindow(I)Lcom/android/server/wm/WindowState;
    .locals 3
    .param p1, "hashCode"    # I

    .line 4704
    const/4 v0, -0x1

    if-ne p1, v0, :cond_0

    .line 4706
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->getFocusedWindow()Lcom/android/server/wm/WindowState;

    move-result-object v0

    return-object v0

    .line 4709
    :cond_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 4710
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    new-instance v2, Lcom/android/server/wm/WindowManagerService$$ExternalSyntheticLambda21;

    invoke-direct {v2, p1}, Lcom/android/server/wm/WindowManagerService$$ExternalSyntheticLambda21;-><init>(I)V

    invoke-virtual {v1, v2}, Lcom/android/server/wm/RootWindowContainer;->getWindow(Ljava/util/function/Predicate;)Lcom/android/server/wm/WindowState;

    move-result-object v1

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-object v1

    .line 4711
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method static fixScale(F)F
    .locals 1
    .param p0, "scale"    # F

    .line 3254
    const/4 v0, 0x0

    cmpg-float v0, p0, v0

    if-gez v0, :cond_0

    const/4 p0, 0x0

    goto :goto_0

    .line 3255
    :cond_0
    const/high16 v0, 0x41a00000    # 20.0f

    cmpl-float v0, p0, v0

    if-lez v0, :cond_1

    const/high16 p0, 0x41a00000    # 20.0f

    .line 3256
    :cond_1
    :goto_0
    invoke-static {p0}, Ljava/lang/Math;->abs(F)F

    move-result v0

    return v0
.end method

.method private getDisplayContentOrCreate(ILandroid/os/IBinder;)Lcom/android/server/wm/DisplayContent;
    .locals 2
    .param p1, "displayId"    # I
    .param p2, "token"    # Landroid/os/IBinder;

    .line 1931
    if-eqz p2, :cond_0

    .line 1932
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v0, p2}, Lcom/android/server/wm/RootWindowContainer;->getWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/WindowToken;

    move-result-object v0

    .line 1933
    .local v0, "wToken":Lcom/android/server/wm/WindowToken;
    if-eqz v0, :cond_0

    .line 1934
    invoke-virtual {v0}, Lcom/android/server/wm/WindowToken;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    return-object v1

    .line 1938
    .end local v0    # "wToken":Lcom/android/server/wm/WindowToken;
    :cond_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v0, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContentOrCreate(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    return-object v0
.end method

.method private getFocusedWindow()Lcom/android/server/wm/WindowState;
    .locals 2

    .line 4764
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 4765
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->getFocusedWindowLocked()Lcom/android/server/wm/WindowState;

    move-result-object v1

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-object v1

    .line 4766
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method private getFocusedWindowLocked()Lcom/android/server/wm/WindowState;
    .locals 1

    .line 4771
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v0}, Lcom/android/server/wm/RootWindowContainer;->getTopFocusedDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    iget-object v0, v0, Lcom/android/server/wm/DisplayContent;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    return-object v0
.end method

.method private getForcedDisplayDensityForUserLocked(I)I
    .locals 3
    .param p1, "userId"    # I

    .line 5536
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v0}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v0

    const-string v1, "display_density_forced"

    invoke-static {v0, v1, p1}, Landroid/provider/Settings$Secure;->getStringForUser(Landroid/content/ContentResolver;Ljava/lang/String;I)Ljava/lang/String;

    move-result-object v0

    .line 5538
    .local v0, "densityStr":Ljava/lang/String;
    if-eqz v0, :cond_0

    invoke-virtual {v0}, Ljava/lang/String;->length()I

    move-result v1

    if-nez v1, :cond_1

    .line 5539
    :cond_0
    const/4 v1, 0x0

    const-string v2, "ro.config.density_override"

    invoke-static {v2, v1}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    .line 5541
    :cond_1
    if-eqz v0, :cond_2

    invoke-virtual {v0}, Ljava/lang/String;->length()I

    move-result v1

    if-lez v1, :cond_2

    .line 5543
    :try_start_0
    invoke-static {v0}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v1
    :try_end_0
    .catch Ljava/lang/NumberFormatException; {:try_start_0 .. :try_end_0} :catch_0

    return v1

    .line 5544
    :catch_0
    move-exception v1

    .line 5547
    :cond_2
    const/4 v1, 0x0

    return v1
.end method

.method private getInsetsSourceControls(Lcom/android/server/wm/WindowState;[Landroid/view/InsetsSourceControl;)V
    .locals 5
    .param p1, "win"    # Lcom/android/server/wm/WindowState;
    .param p2, "outControls"    # [Landroid/view/InsetsSourceControl;

    .line 2538
    nop

    .line 2539
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getInsetsStateController()Lcom/android/server/wm/InsetsStateController;

    move-result-object v0

    invoke-virtual {v0, p1}, Lcom/android/server/wm/InsetsStateController;->getControlsForDispatch(Lcom/android/server/wm/InsetsControlTarget;)[Landroid/view/InsetsSourceControl;

    move-result-object v0

    .line 2540
    .local v0, "controls":[Landroid/view/InsetsSourceControl;
    if-eqz v0, :cond_1

    .line 2541
    array-length v1, v0

    array-length v2, p2

    invoke-static {v1, v2}, Ljava/lang/Math;->min(II)I

    move-result v1

    .line 2542
    .local v1, "length":I
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_0
    if-ge v2, v1, :cond_1

    .line 2546
    aget-object v3, v0, v2

    if-eqz v3, :cond_0

    .line 2550
    new-instance v3, Landroid/view/InsetsSourceControl;

    aget-object v4, v0, v2

    invoke-direct {v3, v4}, Landroid/view/InsetsSourceControl;-><init>(Landroid/view/InsetsSourceControl;)V

    aput-object v3, p2, v2

    .line 2551
    aget-object v3, p2, v2

    const/4 v4, 0x1

    invoke-virtual {v3, v4}, Landroid/view/InsetsSourceControl;->setParcelableFlags(I)V

    .line 2542
    :cond_0
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 2555
    .end local v1    # "length":I
    .end local v2    # "i":I
    :cond_1
    return-void
.end method

.method static getInstance()Lcom/android/server/wm/WindowManagerService;
    .locals 1

    .line 1159
    sget-object v0, Lcom/android/server/wm/WindowManagerService;->sInstance:Lcom/android/server/wm/WindowManagerService;

    return-object v0
.end method

.method static getPropertyInt([Ljava/lang/String;IIILandroid/util/DisplayMetrics;)I
    .locals 2
    .param p0, "tokens"    # [Ljava/lang/String;
    .param p1, "index"    # I
    .param p2, "defUnits"    # I
    .param p3, "defDps"    # I
    .param p4, "dm"    # Landroid/util/DisplayMetrics;

    .line 5879
    array-length v0, p0

    if-ge p1, v0, :cond_0

    .line 5880
    aget-object v0, p0, p1

    .line 5881
    .local v0, "str":Ljava/lang/String;
    if-eqz v0, :cond_0

    invoke-virtual {v0}, Ljava/lang/String;->length()I

    move-result v1

    if-lez v1, :cond_0

    .line 5883
    :try_start_0
    invoke-static {v0}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v1
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    .line 5884
    .local v1, "val":I
    return v1

    .line 5885
    .end local v1    # "val":I
    :catch_0
    move-exception v1

    .line 5889
    .end local v0    # "str":Ljava/lang/String;
    :cond_0
    if-nez p2, :cond_1

    .line 5890
    return p3

    .line 5892
    :cond_1
    int-to-float v0, p3

    invoke-static {p2, v0, p4}, Landroid/util/TypedValue;->applyDimension(IFLandroid/util/DisplayMetrics;)F

    move-result v0

    float-to-int v0, v0

    .line 5893
    .local v0, "val":I
    return v0
.end method

.method private hasStatusBarPermission(II)Z
    .locals 2
    .param p1, "pid"    # I
    .param p2, "uid"    # I

    .line 2206
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.STATUS_BAR"

    invoke-virtual {v0, v1, p1, p2}, Landroid/content/Context;->checkPermission(Ljava/lang/String;II)I

    move-result v0

    if-nez v0, :cond_0

    const/4 v0, 0x1

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    :goto_0
    return v0
.end method

.method private initPolicy()V
    .locals 4

    .line 1189
    invoke-static {}, Lcom/android/server/UiThread;->getHandler()Landroid/os/Handler;

    move-result-object v0

    new-instance v1, Lcom/android/server/wm/WindowManagerService$5;

    invoke-direct {v1, p0}, Lcom/android/server/wm/WindowManagerService$5;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    const-wide/16 v2, 0x0

    invoke-virtual {v0, v1, v2, v3}, Landroid/os/Handler;->runWithScissors(Ljava/lang/Runnable;J)Z

    .line 1196
    return-void
.end method

.method private isSystemSecure()Z
    .locals 2

    .line 4415
    const-string v0, "ro.secure"

    const-string v1, "1"

    invoke-static {v0, v1}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_0

    .line 4416
    const-string v0, "ro.debuggable"

    const-string v1, "0"

    invoke-static {v0, v1}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_0

    const/4 v0, 0x1

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    .line 4415
    :goto_0
    return v0
.end method

.method static synthetic lambda$doDump$11(Ljava/io/PrintWriter;Lcom/android/server/wm/WindowState;)V
    .locals 0
    .param p0, "pw"    # Ljava/io/PrintWriter;
    .param p1, "w"    # Lcom/android/server/wm/WindowState;

    .line 6572
    invoke-virtual {p0, p1}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    return-void
.end method

.method static synthetic lambda$dumpWindows$10(ZZLjava/util/ArrayList;Lcom/android/server/wm/WindowState;)V
    .locals 1
    .param p0, "visibleOnly"    # Z
    .param p1, "appsOnly"    # Z
    .param p2, "windows"    # Ljava/util/ArrayList;
    .param p3, "w"    # Lcom/android/server/wm/WindowState;

    .line 6394
    if-eqz p0, :cond_0

    invoke-virtual {p3}, Lcom/android/server/wm/WindowState;->isVisible()Z

    move-result v0

    if-eqz v0, :cond_2

    :cond_0
    if-eqz p1, :cond_1

    iget-object v0, p3, Lcom/android/server/wm/WindowState;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    if-eqz v0, :cond_2

    .line 6396
    :cond_1
    invoke-virtual {p2, p3}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 6398
    :cond_2
    return-void
.end method

.method static synthetic lambda$dumpWindowsNoHeaderLocked$8(Ljava/io/PrintWriter;Lcom/android/server/wm/WindowContainer;Ljava/lang/Runnable;)V
    .locals 3
    .param p0, "pw"    # Ljava/io/PrintWriter;
    .param p1, "wc"    # Lcom/android/server/wm/WindowContainer;
    .param p2, "callback"    # Ljava/lang/Runnable;

    .line 6298
    const-string v0, "  WindowContainer "

    invoke-virtual {p0, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 6299
    invoke-virtual {p1}, Lcom/android/server/wm/WindowContainer;->getName()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p0, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 6300
    iget-object v0, p1, Lcom/android/server/wm/WindowContainer;->mWaitingForDrawn:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    add-int/lit8 v0, v0, -0x1

    .local v0, "i":I
    :goto_0
    if-ltz v0, :cond_0

    .line 6301
    iget-object v1, p1, Lcom/android/server/wm/WindowContainer;->mWaitingForDrawn:Ljava/util/ArrayList;

    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/WindowState;

    .line 6302
    .local v1, "win":Lcom/android/server/wm/WindowState;
    const-string v2, "  Waiting #"

    invoke-virtual {p0, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p0, v0}, Ljava/io/PrintWriter;->print(I)V

    const/16 v2, 0x20

    invoke-virtual {p0, v2}, Ljava/io/PrintWriter;->print(C)V

    invoke-virtual {p0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    .line 6300
    .end local v1    # "win":Lcom/android/server/wm/WindowState;
    add-int/lit8 v0, v0, -0x1

    goto :goto_0

    .line 6304
    .end local v0    # "i":I
    :cond_0
    return-void
.end method

.method static synthetic lambda$dumpWindowsNoHeaderLocked$9(Ljava/io/PrintWriter;Lcom/android/server/wm/DisplayContent;)V
    .locals 6
    .param p0, "pw"    # Ljava/io/PrintWriter;
    .param p1, "dc"    # Lcom/android/server/wm/DisplayContent;

    .line 6312
    invoke-virtual {p1}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    move-result v0

    .line 6313
    .local v0, "displayId":I
    const/4 v1, 0x0

    invoke-virtual {p1, v1}, Lcom/android/server/wm/DisplayContent;->getImeTarget(I)Lcom/android/server/wm/InsetsControlTarget;

    move-result-object v1

    .line 6314
    .local v1, "imeLayeringTarget":Lcom/android/server/wm/InsetsControlTarget;
    const/4 v2, 0x1

    invoke-virtual {p1, v2}, Lcom/android/server/wm/DisplayContent;->getImeTarget(I)Lcom/android/server/wm/InsetsControlTarget;

    move-result-object v2

    .line 6315
    .local v2, "imeInputTarget":Lcom/android/server/wm/InsetsControlTarget;
    const/4 v3, 0x2

    invoke-virtual {p1, v3}, Lcom/android/server/wm/DisplayContent;->getImeTarget(I)Lcom/android/server/wm/InsetsControlTarget;

    move-result-object v3

    .line 6316
    .local v3, "imeControlTarget":Lcom/android/server/wm/InsetsControlTarget;
    const/16 v4, 0x20

    if-eqz v1, :cond_0

    .line 6317
    const-string v5, "  imeLayeringTarget in display# "

    invoke-virtual {p0, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p0, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 6318
    invoke-virtual {p0, v4}, Ljava/io/PrintWriter;->print(C)V

    invoke-virtual {p0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 6320
    :cond_0
    if-eqz v2, :cond_1

    .line 6321
    const-string v5, "  imeInputTarget in display# "

    invoke-virtual {p0, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p0, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 6322
    invoke-virtual {p0, v4}, Ljava/io/PrintWriter;->print(C)V

    invoke-virtual {p0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 6324
    :cond_1
    if-eqz v3, :cond_2

    .line 6325
    const-string v5, "  imeControlTarget in display# "

    invoke-virtual {p0, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p0, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 6326
    invoke-virtual {p0, v4}, Ljava/io/PrintWriter;->print(C)V

    invoke-virtual {p0, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 6328
    :cond_2
    return-void
.end method

.method static synthetic lambda$findWindow$5(ILcom/android/server/wm/WindowState;)Z
    .locals 1
    .param p0, "hashCode"    # I
    .param p1, "w"    # Lcom/android/server/wm/WindowState;

    .line 4710
    invoke-static {p1}, Ljava/lang/System;->identityHashCode(Ljava/lang/Object;)I

    move-result v0

    if-ne v0, p0, :cond_0

    const/4 v0, 0x1

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    :goto_0
    return v0
.end method

.method static synthetic lambda$main$1(Landroid/content/Context;Lcom/android/server/input/InputManagerService;ZZLcom/android/server/policy/WindowManagerPolicy;Lcom/android/server/wm/ActivityTaskManagerService;Lcom/android/server/wm/DisplayWindowSettingsProvider;Ljava/util/function/Supplier;Ljava/util/function/Supplier;Ljava/util/function/Function;)V
    .locals 12
    .param p0, "context"    # Landroid/content/Context;
    .param p1, "im"    # Lcom/android/server/input/InputManagerService;
    .param p2, "showBootMsgs"    # Z
    .param p3, "onlyCore"    # Z
    .param p4, "policy"    # Lcom/android/server/policy/WindowManagerPolicy;
    .param p5, "atm"    # Lcom/android/server/wm/ActivityTaskManagerService;
    .param p6, "displayWindowSettingsProvider"    # Lcom/android/server/wm/DisplayWindowSettingsProvider;
    .param p7, "transactionFactory"    # Ljava/util/function/Supplier;
    .param p8, "surfaceFactory"    # Ljava/util/function/Supplier;
    .param p9, "surfaceControlFactory"    # Ljava/util/function/Function;

    .line 1182
    new-instance v11, Lcom/android/server/wm/WindowManagerService;

    move-object v0, v11

    move-object v1, p0

    move-object v2, p1

    move v3, p2

    move v4, p3

    move-object/from16 v5, p4

    move-object/from16 v6, p5

    move-object/from16 v7, p6

    move-object/from16 v8, p7

    move-object/from16 v9, p8

    move-object/from16 v10, p9

    invoke-direct/range {v0 .. v10}, Lcom/android/server/wm/WindowManagerService;-><init>(Landroid/content/Context;Lcom/android/server/input/InputManagerService;ZZLcom/android/server/policy/WindowManagerPolicy;Lcom/android/server/wm/ActivityTaskManagerService;Lcom/android/server/wm/DisplayWindowSettingsProvider;Ljava/util/function/Supplier;Ljava/util/function/Supplier;Ljava/util/function/Function;)V

    sput-object v11, Lcom/android/server/wm/WindowManagerService;->sInstance:Lcom/android/server/wm/WindowManagerService;

    return-void
.end method

.method static synthetic lambda$onOverlayChanged$12(Lcom/android/server/wm/DisplayContent;)V
    .locals 1
    .param p0, "displayContent"    # Lcom/android/server/wm/DisplayContent;

    .line 6673
    invoke-virtual {p0}, Lcom/android/server/wm/DisplayContent;->getDisplayPolicy()Lcom/android/server/wm/DisplayPolicy;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/server/wm/DisplayPolicy;->onOverlayChangedLw()V

    .line 6674
    invoke-virtual {p0}, Lcom/android/server/wm/DisplayContent;->updateDisplayInfo()V

    .line 6675
    return-void
.end method

.method static synthetic lambda$requestAssistScreenshot$3(Landroid/app/IAssistDataReceiver;Landroid/graphics/Bitmap;)V
    .locals 1
    .param p0, "receiver"    # Landroid/app/IAssistDataReceiver;
    .param p1, "bm"    # Landroid/graphics/Bitmap;

    .line 3798
    :try_start_0
    invoke-interface {p0, p1}, Landroid/app/IAssistDataReceiver;->onHandleAssistScreenshot(Landroid/graphics/Bitmap;)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 3800
    goto :goto_0

    .line 3799
    :catch_0
    move-exception v0

    .line 3801
    :goto_0
    return-void
.end method

.method static synthetic lambda$setCurrentUser$2(ILcom/android/server/wm/DisplayContent;)V
    .locals 1
    .param p0, "newUserId"    # I
    .param p1, "dc"    # Lcom/android/server/wm/DisplayContent;

    .line 3451
    iget-object v0, p1, Lcom/android/server/wm/DisplayContent;->mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v0, p0}, Lcom/android/server/wm/AppTransition;->setCurrentUser(I)V

    return-void
.end method

.method static synthetic lambda$syncInputTransactions$14(Landroid/view/SurfaceControl$Transaction;Lcom/android/server/wm/DisplayContent;)V
    .locals 1
    .param p0, "t"    # Landroid/view/SurfaceControl$Transaction;
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;

    .line 8078
    invoke-virtual {p1}, Lcom/android/server/wm/DisplayContent;->getInputMonitor()Lcom/android/server/wm/InputMonitor;

    move-result-object v0

    invoke-virtual {v0, p0}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsImmediately(Landroid/view/SurfaceControl$Transaction;)V

    return-void
.end method

.method static synthetic lambda$updateNonSystemOverlayWindowsVisibilityIfNeeded$13(ZLcom/android/server/wm/WindowState;)V
    .locals 0
    .param p0, "hideSystemAlertWindows"    # Z
    .param p1, "w"    # Lcom/android/server/wm/WindowState;

    .line 7998
    invoke-virtual {p1, p0}, Lcom/android/server/wm/WindowState;->setForceHideNonSystemOverlayWindowIfNeeded(Z)V

    .line 7999
    return-void
.end method

.method static synthetic lambda$viewServerListWindows$4(Ljava/util/ArrayList;Lcom/android/server/wm/WindowState;)V
    .locals 0
    .param p0, "windows"    # Ljava/util/ArrayList;
    .param p1, "w"    # Lcom/android/server/wm/WindowState;

    .line 4481
    invoke-virtual {p0, p1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 4482
    return-void
.end method

.method static logSurface(Lcom/android/server/wm/WindowState;Ljava/lang/String;Z)V
    .locals 2
    .param p0, "w"    # Lcom/android/server/wm/WindowState;
    .param p1, "msg"    # Ljava/lang/String;
    .param p2, "withStackTrace"    # Z

    .line 2122
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "  SURFACE "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, ": "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 2123
    .local v0, "str":Ljava/lang/String;
    const-string v1, "WindowManager"

    if-eqz p2, :cond_0

    .line 2124
    invoke-static {v1, v0}, Lcom/android/server/wm/WindowManagerService;->logWithStack(Ljava/lang/String;Ljava/lang/String;)V

    goto :goto_0

    .line 2126
    :cond_0
    invoke-static {v1, v0}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 2128
    :goto_0
    return-void
.end method

.method static logWithStack(Ljava/lang/String;Ljava/lang/String;)V
    .locals 1
    .param p0, "tag"    # Ljava/lang/String;
    .param p1, "s"    # Ljava/lang/String;

    .line 2131
    const/4 v0, 0x0

    .line 2136
    .local v0, "e":Ljava/lang/RuntimeException;
    invoke-static {p0, p1, v0}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 2137
    return-void
.end method

.method public static main(Landroid/content/Context;Lcom/android/server/input/InputManagerService;ZZLcom/android/server/policy/WindowManagerPolicy;Lcom/android/server/wm/ActivityTaskManagerService;)Lcom/android/server/wm/WindowManagerService;
    .locals 10
    .param p0, "context"    # Landroid/content/Context;
    .param p1, "im"    # Lcom/android/server/input/InputManagerService;
    .param p2, "showBootMsgs"    # Z
    .param p3, "onlyCore"    # Z
    .param p4, "policy"    # Lcom/android/server/policy/WindowManagerPolicy;
    .param p5, "atm"    # Lcom/android/server/wm/ActivityTaskManagerService;

    .line 1165
    new-instance v6, Lcom/android/server/wm/DisplayWindowSettingsProvider;

    invoke-direct {v6}, Lcom/android/server/wm/DisplayWindowSettingsProvider;-><init>()V

    sget-object v7, Lcom/android/server/wm/WindowManagerService$$ExternalSyntheticLambda23;->INSTANCE:Lcom/android/server/wm/WindowManagerService$$ExternalSyntheticLambda23;

    sget-object v8, Lcom/android/server/wm/WindowManagerService$$ExternalSyntheticLambda22;->INSTANCE:Lcom/android/server/wm/WindowManagerService$$ExternalSyntheticLambda22;

    sget-object v9, Lcom/android/server/wm/WindowManagerService$$ExternalSyntheticLambda20;->INSTANCE:Lcom/android/server/wm/WindowManagerService$$ExternalSyntheticLambda20;

    move-object v0, p0

    move-object v1, p1

    move v2, p2

    move v3, p3

    move-object v4, p4

    move-object v5, p5

    invoke-static/range {v0 .. v9}, Lcom/android/server/wm/WindowManagerService;->main(Landroid/content/Context;Lcom/android/server/input/InputManagerService;ZZLcom/android/server/policy/WindowManagerPolicy;Lcom/android/server/wm/ActivityTaskManagerService;Lcom/android/server/wm/DisplayWindowSettingsProvider;Ljava/util/function/Supplier;Ljava/util/function/Supplier;Ljava/util/function/Function;)Lcom/android/server/wm/WindowManagerService;

    move-result-object v0

    return-object v0
.end method

.method public static main(Landroid/content/Context;Lcom/android/server/input/InputManagerService;ZZLcom/android/server/policy/WindowManagerPolicy;Lcom/android/server/wm/ActivityTaskManagerService;Lcom/android/server/wm/DisplayWindowSettingsProvider;Ljava/util/function/Supplier;Ljava/util/function/Supplier;Ljava/util/function/Function;)Lcom/android/server/wm/WindowManagerService;
    .locals 13
    .param p0, "context"    # Landroid/content/Context;
    .param p1, "im"    # Lcom/android/server/input/InputManagerService;
    .param p2, "showBootMsgs"    # Z
    .param p3, "onlyCore"    # Z
    .param p4, "policy"    # Lcom/android/server/policy/WindowManagerPolicy;
    .param p5, "atm"    # Lcom/android/server/wm/ActivityTaskManagerService;
    .param p6, "displayWindowSettingsProvider"    # Lcom/android/server/wm/DisplayWindowSettingsProvider;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/Context;",
            "Lcom/android/server/input/InputManagerService;",
            "ZZ",
            "Lcom/android/server/policy/WindowManagerPolicy;",
            "Lcom/android/server/wm/ActivityTaskManagerService;",
            "Lcom/android/server/wm/DisplayWindowSettingsProvider;",
            "Ljava/util/function/Supplier<",
            "Landroid/view/SurfaceControl$Transaction;",
            ">;",
            "Ljava/util/function/Supplier<",
            "Landroid/view/Surface;",
            ">;",
            "Ljava/util/function/Function<",
            "Landroid/view/SurfaceSession;",
            "Landroid/view/SurfaceControl$Builder;",
            ">;)",
            "Lcom/android/server/wm/WindowManagerService;"
        }
    .end annotation

    .line 1181
    .local p7, "transactionFactory":Ljava/util/function/Supplier;, "Ljava/util/function/Supplier<Landroid/view/SurfaceControl$Transaction;>;"
    .local p8, "surfaceFactory":Ljava/util/function/Supplier;, "Ljava/util/function/Supplier<Landroid/view/Surface;>;"
    .local p9, "surfaceControlFactory":Ljava/util/function/Function;, "Ljava/util/function/Function<Landroid/view/SurfaceSession;Landroid/view/SurfaceControl$Builder;>;"
    invoke-static {}, Lcom/android/server/DisplayThread;->getHandler()Landroid/os/Handler;

    move-result-object v0

    new-instance v12, Lcom/android/server/wm/WindowManagerService$$ExternalSyntheticLambda2;

    move-object v1, v12

    move-object v2, p0

    move-object v3, p1

    move v4, p2

    move/from16 v5, p3

    move-object/from16 v6, p4

    move-object/from16 v7, p5

    move-object/from16 v8, p6

    move-object/from16 v9, p7

    move-object/from16 v10, p8

    move-object/from16 v11, p9

    invoke-direct/range {v1 .. v11}, Lcom/android/server/wm/WindowManagerService$$ExternalSyntheticLambda2;-><init>(Landroid/content/Context;Lcom/android/server/input/InputManagerService;ZZLcom/android/server/policy/WindowManagerPolicy;Lcom/android/server/wm/ActivityTaskManagerService;Lcom/android/server/wm/DisplayWindowSettingsProvider;Ljava/util/function/Supplier;Ljava/util/function/Supplier;Ljava/util/function/Function;)V

    const-wide/16 v1, 0x0

    invoke-virtual {v0, v12, v1, v2}, Landroid/os/Handler;->runWithScissors(Ljava/lang/Runnable;J)Z

    .line 1185
    sget-object v0, Lcom/android/server/wm/WindowManagerService;->sInstance:Lcom/android/server/wm/WindowManagerService;

    return-object v0
.end method

.method private notifyFocusChanged()V
    .locals 4

    .line 4690
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 4691
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowChangeListeners:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->isEmpty()Z

    move-result v1

    if-eqz v1, :cond_0

    .line 4692
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 4694
    :cond_0
    :try_start_1
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowChangeListeners:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v1

    new-array v1, v1, [Lcom/android/server/wm/WindowManagerService$WindowChangeListener;

    .line 4695
    .local v1, "windowChangeListeners":[Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowChangeListeners:Ljava/util/ArrayList;

    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->toArray([Ljava/lang/Object;)[Ljava/lang/Object;

    move-result-object v2

    check-cast v2, [Lcom/android/server/wm/WindowManagerService$WindowChangeListener;

    move-object v1, v2

    .line 4696
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 4697
    array-length v0, v1

    .line 4698
    .local v0, "N":I
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_0
    if-ge v2, v0, :cond_1

    .line 4699
    aget-object v3, v1, v2

    invoke-interface {v3}, Lcom/android/server/wm/WindowManagerService$WindowChangeListener;->focusChanged()V

    .line 4698
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 4701
    .end local v2    # "i":I
    :cond_1
    return-void

    .line 4696
    .end local v0    # "N":I
    .end local v1    # "windowChangeListeners":[Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    :catchall_0
    move-exception v1

    :try_start_2
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method private notifyWindowsChanged()V
    .locals 4

    .line 4675
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 4676
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowChangeListeners:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->isEmpty()Z

    move-result v1

    if-eqz v1, :cond_0

    .line 4677
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 4679
    :cond_0
    :try_start_1
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowChangeListeners:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v1

    new-array v1, v1, [Lcom/android/server/wm/WindowManagerService$WindowChangeListener;

    .line 4680
    .local v1, "windowChangeListeners":[Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowChangeListeners:Ljava/util/ArrayList;

    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->toArray([Ljava/lang/Object;)[Ljava/lang/Object;

    move-result-object v2

    check-cast v2, [Lcom/android/server/wm/WindowManagerService$WindowChangeListener;

    move-object v1, v2

    .line 4681
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 4682
    array-length v0, v1

    .line 4683
    .local v0, "N":I
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_0
    if-ge v2, v0, :cond_1

    .line 4684
    aget-object v3, v1, v2

    invoke-interface {v3}, Lcom/android/server/wm/WindowManagerService$WindowChangeListener;->windowsChanged()V

    .line 4683
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 4686
    .end local v2    # "i":I
    :cond_1
    return-void

    .line 4681
    .end local v0    # "N":I
    .end local v1    # "windowChangeListeners":[Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    :catchall_0
    move-exception v1

    :try_start_2
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method private onPointerDownOutsideFocusLocked(Landroid/os/IBinder;)V
    .locals 8
    .param p1, "touchedToken"    # Landroid/os/IBinder;

    .line 8133
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInputToWindowMap:Ljava/util/HashMap;

    invoke-virtual {v0, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/WindowState;

    .line 8134
    .local v0, "touchedWindow":Lcom/android/server/wm/WindowState;
    if-nez v0, :cond_0

    .line 8137
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mEmbeddedWindowController:Lcom/android/server/wm/EmbeddedWindowController;

    invoke-virtual {v1, p1}, Lcom/android/server/wm/EmbeddedWindowController;->getHostWindow(Landroid/os/IBinder;)Lcom/android/server/wm/WindowState;

    move-result-object v0

    .line 8140
    :cond_0
    if-eqz v0, :cond_5

    const/4 v1, 0x1

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowState;->canReceiveKeys(Z)Z

    move-result v2

    if-nez v2, :cond_1

    goto :goto_0

    .line 8146
    :cond_1
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mRecentsAnimationController:Lcom/android/server/wm/RecentsAnimationController;

    if-eqz v2, :cond_2

    .line 8147
    invoke-virtual {v2}, Lcom/android/server/wm/RecentsAnimationController;->getTargetAppMainWindow()Lcom/android/server/wm/WindowState;

    move-result-object v2

    if-ne v2, v0, :cond_2

    .line 8153
    return-void

    .line 8156
    :cond_2
    sget-boolean v2, Lcom/android/server/wm/ProtoLogCache;->WM_DEBUG_FOCUS_LIGHT_enabled:Z

    if-eqz v2, :cond_3

    invoke-static {v0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v2

    .local v2, "protoLogParam0":Ljava/lang/String;
    sget-object v3, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_FOCUS_LIGHT:Lcom/android/internal/protolog/ProtoLogGroup;

    const v4, -0x2171970c

    const/4 v5, 0x0

    new-array v6, v1, [Ljava/lang/Object;

    const/4 v7, 0x0

    aput-object v2, v6, v7

    invoke-static {v3, v4, v7, v5, v6}, Lcom/android/internal/protolog/ProtoLogImpl;->i(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 8158
    .end local v2    # "protoLogParam0":Ljava/lang/String;
    :cond_3
    invoke-virtual {v0}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v2

    .line 8159
    .local v2, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {v2}, Lcom/android/server/wm/DisplayContent;->isOnTop()Z

    move-result v3

    if-nez v3, :cond_4

    .line 8160
    invoke-virtual {v2}, Lcom/android/server/wm/DisplayContent;->getParent()Lcom/android/server/wm/WindowContainer;

    move-result-object v3

    const v4, 0x7fffffff

    invoke-virtual {v3, v4, v2, v1}, Lcom/android/server/wm/WindowContainer;->positionChildAt(ILcom/android/server/wm/WindowContainer;Z)V

    .line 8163
    :cond_4
    invoke-virtual {v0}, Lcom/android/server/wm/WindowState;->getTask()Lcom/android/server/wm/Task;

    move-result-object v1

    invoke-virtual {p0, v1}, Lcom/android/server/wm/WindowManagerService;->handleTaskFocusChange(Lcom/android/server/wm/Task;)V

    .line 8164
    return-void

    .line 8143
    .end local v2    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_5
    :goto_0
    return-void
.end method

.method private performEnableScreen()V
    .locals 17

    .line 3536
    move-object/from16 v1, p0

    iget-object v2, v1, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v2

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 3537
    sget-boolean v0, Lcom/android/server/wm/ProtoLogCache;->WM_DEBUG_BOOT_enabled:Z

    const/4 v3, 0x1

    const/4 v4, 0x0

    const/4 v5, 0x0

    if-eqz v0, :cond_0

    iget-boolean v0, v1, Lcom/android/server/wm/WindowManagerService;->mDisplayEnabled:Z

    .local v0, "protoLogParam0":Z
    iget-boolean v6, v1, Lcom/android/server/wm/WindowManagerService;->mForceDisplayEnabled:Z

    .local v6, "protoLogParam1":Z
    iget-boolean v7, v1, Lcom/android/server/wm/WindowManagerService;->mShowingBootMessages:Z

    .local v7, "protoLogParam2":Z
    iget-boolean v8, v1, Lcom/android/server/wm/WindowManagerService;->mSystemBooted:Z

    .local v8, "protoLogParam3":Z
    iget-boolean v9, v1, Lcom/android/server/wm/WindowManagerService;->mOnlyCore:Z

    .local v9, "protoLogParam4":Z
    new-instance v10, Ljava/lang/RuntimeException;

    const-string v11, "here"

    invoke-direct {v10, v11}, Ljava/lang/RuntimeException;-><init>(Ljava/lang/String;)V

    invoke-virtual {v10}, Ljava/lang/RuntimeException;->fillInStackTrace()Ljava/lang/Throwable;

    move-result-object v10

    invoke-static {v10}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v10

    .local v10, "protoLogParam5":Ljava/lang/String;
    sget-object v11, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_BOOT:Lcom/android/internal/protolog/ProtoLogGroup;

    const v12, -0x24d62c64

    const/16 v13, 0x3ff

    const/4 v14, 0x6

    new-array v14, v14, [Ljava/lang/Object;

    invoke-static {v0}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v15

    aput-object v15, v14, v5

    invoke-static {v6}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v15

    aput-object v15, v14, v3

    const/4 v15, 0x2

    invoke-static {v7}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v16

    aput-object v16, v14, v15

    const/4 v15, 0x3

    invoke-static {v8}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v16

    aput-object v16, v14, v15

    const/4 v15, 0x4

    invoke-static {v9}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v16

    aput-object v16, v14, v15

    const/4 v15, 0x5

    aput-object v10, v14, v15

    invoke-static {v11, v12, v13, v4, v14}, Lcom/android/internal/protolog/ProtoLogImpl;->i(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 3542
    .end local v0    # "protoLogParam0":Z
    .end local v6    # "protoLogParam1":Z
    .end local v7    # "protoLogParam2":Z
    .end local v8    # "protoLogParam3":Z
    .end local v9    # "protoLogParam4":Z
    .end local v10    # "protoLogParam5":Ljava/lang/String;
    :cond_0
    iget-boolean v0, v1, Lcom/android/server/wm/WindowManagerService;->mDisplayEnabled:Z

    if-eqz v0, :cond_1

    .line 3543
    monitor-exit v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 3545
    :cond_1
    :try_start_1
    iget-boolean v0, v1, Lcom/android/server/wm/WindowManagerService;->mSystemBooted:Z

    if-nez v0, :cond_2

    iget-boolean v0, v1, Lcom/android/server/wm/WindowManagerService;->mShowingBootMessages:Z

    if-nez v0, :cond_2

    .line 3546
    monitor-exit v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 3549
    :cond_2
    :try_start_2
    iget-boolean v0, v1, Lcom/android/server/wm/WindowManagerService;->mShowingBootMessages:Z

    if-nez v0, :cond_3

    iget-object v0, v1, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    invoke-interface {v0}, Lcom/android/server/policy/WindowManagerPolicy;->canDismissBootAnimation()Z

    move-result v0

    if-nez v0, :cond_3

    .line 3550
    monitor-exit v2
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 3554
    :cond_3
    :try_start_3
    iget-boolean v0, v1, Lcom/android/server/wm/WindowManagerService;->mForceDisplayEnabled:Z

    if-nez v0, :cond_7

    .line 3555
    iget-wide v6, v1, Lcom/android/server/wm/WindowManagerService;->mBootWaitForWindowsStartTime:J

    const-wide/16 v8, 0x0

    cmp-long v0, v6, v8

    if-gez v0, :cond_4

    .line 3557
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v6

    iput-wide v6, v1, Lcom/android/server/wm/WindowManagerService;->mBootWaitForWindowsStartTime:J

    .line 3559
    :cond_4
    iget-object v0, v1, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v0}, Lcom/android/server/wm/RootWindowContainer;->getChildCount()I

    move-result v0

    sub-int/2addr v0, v3

    .local v0, "i":I
    :goto_0
    if-ltz v0, :cond_6

    .line 3560
    iget-object v6, v1, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v6, v0}, Lcom/android/server/wm/RootWindowContainer;->getChildAt(I)Lcom/android/server/wm/WindowContainer;

    move-result-object v6

    check-cast v6, Lcom/android/server/wm/DisplayContent;

    invoke-virtual {v6}, Lcom/android/server/wm/DisplayContent;->shouldWaitForSystemDecorWindowsOnBoot()Z

    move-result v6

    if-eqz v6, :cond_5

    .line 3561
    monitor-exit v2
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 3559
    :cond_5
    add-int/lit8 v0, v0, -0x1

    goto :goto_0

    .line 3564
    .end local v0    # "i":I
    :cond_6
    :try_start_4
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v6

    iget-wide v8, v1, Lcom/android/server/wm/WindowManagerService;->mBootWaitForWindowsStartTime:J

    sub-long/2addr v6, v8

    .line 3565
    .local v6, "waitTime":J
    const-wide/16 v8, -0x1

    iput-wide v8, v1, Lcom/android/server/wm/WindowManagerService;->mBootWaitForWindowsStartTime:J

    .line 3566
    const-wide/16 v8, 0xa

    cmp-long v0, v6, v8

    if-lez v0, :cond_7

    .line 3567
    sget-boolean v0, Lcom/android/server/wm/ProtoLogCache;->WM_DEBUG_BOOT_enabled:Z

    if-eqz v0, :cond_7

    move-wide v8, v6

    .local v8, "protoLogParam0":J
    sget-object v0, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_BOOT:Lcom/android/internal/protolog/ProtoLogGroup;

    const v10, 0x206e53c2

    new-array v11, v3, [Ljava/lang/Object;

    invoke-static {v8, v9}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v12

    aput-object v12, v11, v5

    invoke-static {v0, v10, v3, v4, v11}, Lcom/android/internal/protolog/ProtoLogImpl;->i(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 3573
    .end local v6    # "waitTime":J
    .end local v8    # "protoLogParam0":J
    :cond_7
    iget-boolean v0, v1, Lcom/android/server/wm/WindowManagerService;->mBootAnimationStopped:Z

    const-wide/16 v6, 0x20

    if-nez v0, :cond_8

    .line 3574
    const-string v0, "Stop bootanim"

    invoke-static {v6, v7, v0, v5}, Landroid/os/Trace;->asyncTraceBegin(JLjava/lang/String;I)V

    .line 3578
    const-string v0, "service.bootanim.exit"

    const-string v8, "1"

    invoke-static {v0, v8}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V

    .line 3579
    iput-boolean v3, v1, Lcom/android/server/wm/WindowManagerService;->mBootAnimationStopped:Z

    .line 3582
    :cond_8
    iget-boolean v0, v1, Lcom/android/server/wm/WindowManagerService;->mForceDisplayEnabled:Z

    if-nez v0, :cond_a

    invoke-direct/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->checkBootAnimationCompleteLocked()Z

    move-result v0

    if-nez v0, :cond_a

    .line 3583
    sget-boolean v0, Lcom/android/server/wm/ProtoLogCache;->WM_DEBUG_BOOT_enabled:Z

    if-eqz v0, :cond_9

    sget-object v0, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_BOOT:Lcom/android/internal/protolog/ProtoLogGroup;

    const v3, 0x1659a014

    move-object v6, v4

    check-cast v6, [Ljava/lang/Object;

    invoke-static {v0, v3, v5, v4, v6}, Lcom/android/internal/protolog/ProtoLogImpl;->i(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 3584
    :cond_9
    monitor-exit v2
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 3588
    :cond_a
    :try_start_5
    const-string v0, "SurfaceFlinger"

    invoke-static {v0}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v0

    .line 3589
    .local v0, "surfaceFlinger":Landroid/os/IBinder;
    if-eqz v0, :cond_c

    .line 3590
    sget-boolean v8, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v8, :cond_b

    sget-object v8, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const v9, 0x24fa122b

    const-string v10, "******* TELLING SURFACE FLINGER WE ARE BOOTED!"

    move-object v11, v4

    check-cast v11, [Ljava/lang/Object;

    invoke-static {v8, v9, v5, v10, v11}, Lcom/android/internal/protolog/ProtoLogImpl;->i(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 3591
    :cond_b
    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;

    move-result-object v8

    .line 3592
    .local v8, "data":Landroid/os/Parcel;
    const-string v9, "android.ui.ISurfaceComposer"

    invoke-virtual {v8, v9}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V

    .line 3593
    invoke-interface {v0, v3, v8, v4, v5}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z

    .line 3595
    invoke-virtual {v8}, Landroid/os/Parcel;->recycle()V
    :try_end_5
    .catch Landroid/os/RemoteException; {:try_start_5 .. :try_end_5} :catch_0
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    .line 3599
    .end local v0    # "surfaceFlinger":Landroid/os/IBinder;
    .end local v8    # "data":Landroid/os/Parcel;
    :cond_c
    goto :goto_1

    .line 3597
    :catch_0
    move-exception v0

    .line 3598
    .local v0, "ex":Landroid/os/RemoteException;
    :try_start_6
    sget-boolean v8, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v8, :cond_d

    sget-object v8, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const v9, -0x53a3e04

    const-string v10, "Boot completed: SurfaceFlinger is dead!"

    move-object v11, v4

    check-cast v11, [Ljava/lang/Object;

    invoke-static {v8, v9, v5, v10, v11}, Lcom/android/internal/protolog/ProtoLogImpl;->e(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 3601
    .end local v0    # "ex":Landroid/os/RemoteException;
    :cond_d
    :goto_1
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v8

    invoke-static {v8, v9}, Lcom/android/server/wm/EventLogTags;->writeWmBootAnimationDone(J)V

    .line 3602
    const-string v0, "Stop bootanim"

    invoke-static {v6, v7, v0, v5}, Landroid/os/Trace;->asyncTraceEnd(JLjava/lang/String;I)V

    .line 3603
    iput-boolean v3, v1, Lcom/android/server/wm/WindowManagerService;->mDisplayEnabled:Z

    .line 3604
    sget-boolean v0, Lcom/android/server/wm/ProtoLogCache;->WM_DEBUG_SCREEN_ON_enabled:Z

    if-eqz v0, :cond_e

    sget-object v0, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_SCREEN_ON:Lcom/android/internal/protolog/ProtoLogGroup;

    const v3, -0x6eb565d

    move-object v6, v4

    check-cast v6, [Ljava/lang/Object;

    invoke-static {v0, v3, v5, v4, v6}, Lcom/android/internal/protolog/ProtoLogImpl;->i(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 3607
    :cond_e
    iget-object v0, v1, Lcom/android/server/wm/WindowManagerService;->mInputManagerCallback:Lcom/android/server/wm/InputManagerCallback;

    iget-boolean v3, v1, Lcom/android/server/wm/WindowManagerService;->mEventDispatchingEnabled:Z

    invoke-virtual {v0, v3}, Lcom/android/server/wm/InputManagerCallback;->setEventDispatchingLw(Z)V

    .line 3608
    monitor-exit v2
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 3611
    :try_start_7
    iget-object v0, v1, Lcom/android/server/wm/WindowManagerService;->mActivityManager:Landroid/app/IActivityManager;

    invoke-interface {v0}, Landroid/app/IActivityManager;->bootAnimationComplete()V
    :try_end_7
    .catch Landroid/os/RemoteException; {:try_start_7 .. :try_end_7} :catch_1

    .line 3613
    goto :goto_2

    .line 3612
    :catch_1
    move-exception v0

    .line 3615
    :goto_2
    iget-object v0, v1, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    invoke-interface {v0}, Lcom/android/server/policy/WindowManagerPolicy;->enableScreenAfterBoot()V

    .line 3618
    invoke-direct {v1, v5, v5}, Lcom/android/server/wm/WindowManagerService;->updateRotationUnchecked(ZZ)V

    .line 3619
    return-void

    .line 3608
    :catchall_0
    move-exception v0

    :try_start_8
    monitor-exit v2
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method private prepareNoneTransitionForRelaunching(Lcom/android/server/wm/ActivityRecord;)V
    .locals 2
    .param p1, "activity"    # Lcom/android/server/wm/ActivityRecord;

    .line 1999
    invoke-virtual {p1}, Lcom/android/server/wm/ActivityRecord;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 2000
    .local v0, "dc":Lcom/android/server/wm/DisplayContent;
    iget-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayFrozen:Z

    if-eqz v1, :cond_0

    iget-object v1, v0, Lcom/android/server/wm/DisplayContent;->mOpeningApps:Landroid/util/ArraySet;

    invoke-virtual {v1, p1}, Landroid/util/ArraySet;->contains(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_0

    invoke-virtual {p1}, Lcom/android/server/wm/ActivityRecord;->isRelaunching()Z

    move-result v1

    if-eqz v1, :cond_0

    .line 2001
    iget-object v1, v0, Lcom/android/server/wm/DisplayContent;->mOpeningApps:Landroid/util/ArraySet;

    invoke-virtual {v1, p1}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z

    .line 2002
    const/4 v1, 0x0

    invoke-virtual {v0, v1}, Lcom/android/server/wm/DisplayContent;->prepareAppTransition(I)V

    .line 2003
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->executeAppTransition()V

    .line 2005
    :cond_0
    return-void
.end method

.method private prepareWindowReplacementTransition(Lcom/android/server/wm/ActivityRecord;)Z
    .locals 8
    .param p1, "activity"    # Lcom/android/server/wm/ActivityRecord;

    .line 1971
    invoke-virtual {p1}, Lcom/android/server/wm/ActivityRecord;->clearAllDrawn()V

    .line 1972
    invoke-virtual {p1}, Lcom/android/server/wm/ActivityRecord;->getReplacingWindow()Lcom/android/server/wm/WindowState;

    move-result-object v0

    .line 1973
    .local v0, "replacedWindow":Lcom/android/server/wm/WindowState;
    if-nez v0, :cond_0

    .line 1976
    const/4 v1, 0x0

    return v1

    .line 1980
    :cond_0
    new-instance v1, Landroid/graphics/Rect;

    invoke-virtual {v0}, Lcom/android/server/wm/WindowState;->getFrame()Landroid/graphics/Rect;

    move-result-object v2

    invoke-direct {v1, v2}, Landroid/graphics/Rect;-><init>(Landroid/graphics/Rect;)V

    .line 1981
    .local v1, "frame":Landroid/graphics/Rect;
    invoke-virtual {v0}, Lcom/android/server/wm/WindowState;->getInsetsStateWithVisibilityOverride()Landroid/view/InsetsState;

    move-result-object v2

    iget-object v3, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v3, v3, Landroid/view/WindowManager$LayoutParams;->softInputMode:I

    invoke-virtual {v2, v1, v3}, Landroid/view/InsetsState;->calculateVisibleInsets(Landroid/graphics/Rect;I)Landroid/graphics/Rect;

    move-result-object v2

    invoke-virtual {v1, v2}, Landroid/graphics/Rect;->inset(Landroid/graphics/Rect;)V

    .line 1985
    invoke-virtual {p1}, Lcom/android/server/wm/ActivityRecord;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v2

    .line 1986
    .local v2, "dc":Lcom/android/server/wm/DisplayContent;
    iget-object v3, v2, Lcom/android/server/wm/DisplayContent;->mOpeningApps:Landroid/util/ArraySet;

    invoke-virtual {v3, p1}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z

    .line 1987
    const/4 v3, 0x5

    invoke-virtual {v2, v3}, Lcom/android/server/wm/DisplayContent;->prepareAppTransition(I)V

    .line 1988
    iget-object v3, v2, Lcom/android/server/wm/DisplayContent;->mAppTransition:Lcom/android/server/wm/AppTransition;

    iget v4, v1, Landroid/graphics/Rect;->left:I

    iget v5, v1, Landroid/graphics/Rect;->top:I

    .line 1989
    invoke-virtual {v1}, Landroid/graphics/Rect;->width()I

    move-result v6

    invoke-virtual {v1}, Landroid/graphics/Rect;->height()I

    move-result v7

    .line 1988
    invoke-virtual {v3, v4, v5, v6, v7}, Lcom/android/server/wm/AppTransition;->overridePendingAppTransitionClipReveal(IIII)V

    .line 1990
    invoke-virtual {v2}, Lcom/android/server/wm/DisplayContent;->executeAppTransition()V

    .line 1991
    const/4 v3, 0x1

    return v3
.end method

.method private static queryHdrSupport()Z
    .locals 5

    .line 4902
    const/4 v0, 0x0

    .line 4903
    .local v0, "defaultValue":Z
    invoke-static {}, Landroid/sysprop/SurfaceFlingerProperties;->has_HDR_display()Ljava/util/Optional;

    move-result-object v1

    .line 4904
    .local v1, "hasHdrProp":Ljava/util/Optional;, "Ljava/util/Optional<Ljava/lang/Boolean;>;"
    invoke-virtual {v1}, Ljava/util/Optional;->isPresent()Z

    move-result v2

    if-eqz v2, :cond_0

    .line 4905
    invoke-virtual {v1}, Ljava/util/Optional;->get()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/lang/Boolean;

    invoke-virtual {v2}, Ljava/lang/Boolean;->booleanValue()Z

    move-result v2

    return v2

    .line 4908
    :cond_0
    :try_start_0
    invoke-static {}, Landroid/hardware/configstore/V1_0/ISurfaceFlingerConfigs;->getService()Landroid/hardware/configstore/V1_0/ISurfaceFlingerConfigs;

    move-result-object v2

    .line 4909
    .local v2, "surfaceFlinger":Landroid/hardware/configstore/V1_0/ISurfaceFlingerConfigs;
    invoke-interface {v2}, Landroid/hardware/configstore/V1_0/ISurfaceFlingerConfigs;->hasHDRDisplay()Landroid/hardware/configstore/V1_0/OptionalBool;

    move-result-object v3

    .line 4910
    .local v3, "hasHdr":Landroid/hardware/configstore/V1_0/OptionalBool;
    if-eqz v3, :cond_1

    .line 4911
    iget-boolean v4, v3, Landroid/hardware/configstore/V1_0/OptionalBool;->value:Z
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_1
    .catch Ljava/util/NoSuchElementException; {:try_start_0 .. :try_end_0} :catch_0

    return v4

    .line 4910
    .end local v2    # "surfaceFlinger":Landroid/hardware/configstore/V1_0/ISurfaceFlingerConfigs;
    .end local v3    # "hasHdr":Landroid/hardware/configstore/V1_0/OptionalBool;
    :cond_1
    goto :goto_0

    .line 4915
    :catch_0
    move-exception v2

    .line 4916
    .local v2, "e":Ljava/util/NoSuchElementException;
    return v0

    .line 4913
    .end local v2    # "e":Ljava/util/NoSuchElementException;
    :catch_1
    move-exception v2

    .line 4917
    :goto_0
    nop

    .line 4918
    const/4 v2, 0x0

    return v2
.end method

.method private static queryWideColorGamutSupport()Z
    .locals 5

    .line 4882
    const/4 v0, 0x0

    .line 4883
    .local v0, "defaultValue":Z
    invoke-static {}, Landroid/sysprop/SurfaceFlingerProperties;->has_wide_color_display()Ljava/util/Optional;

    move-result-object v1

    .line 4884
    .local v1, "hasWideColorProp":Ljava/util/Optional;, "Ljava/util/Optional<Ljava/lang/Boolean;>;"
    invoke-virtual {v1}, Ljava/util/Optional;->isPresent()Z

    move-result v2

    if-eqz v2, :cond_0

    .line 4885
    invoke-virtual {v1}, Ljava/util/Optional;->get()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/lang/Boolean;

    invoke-virtual {v2}, Ljava/lang/Boolean;->booleanValue()Z

    move-result v2

    return v2

    .line 4888
    :cond_0
    :try_start_0
    invoke-static {}, Landroid/hardware/configstore/V1_0/ISurfaceFlingerConfigs;->getService()Landroid/hardware/configstore/V1_0/ISurfaceFlingerConfigs;

    move-result-object v2

    .line 4889
    .local v2, "surfaceFlinger":Landroid/hardware/configstore/V1_0/ISurfaceFlingerConfigs;
    invoke-interface {v2}, Landroid/hardware/configstore/V1_0/ISurfaceFlingerConfigs;->hasWideColorDisplay()Landroid/hardware/configstore/V1_0/OptionalBool;

    move-result-object v3

    .line 4890
    .local v3, "hasWideColor":Landroid/hardware/configstore/V1_0/OptionalBool;
    if-eqz v3, :cond_1

    .line 4891
    iget-boolean v4, v3, Landroid/hardware/configstore/V1_0/OptionalBool;->value:Z
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_1
    .catch Ljava/util/NoSuchElementException; {:try_start_0 .. :try_end_0} :catch_0

    return v4

    .line 4890
    .end local v2    # "surfaceFlinger":Landroid/hardware/configstore/V1_0/ISurfaceFlingerConfigs;
    .end local v3    # "hasWideColor":Landroid/hardware/configstore/V1_0/OptionalBool;
    :cond_1
    goto :goto_0

    .line 4895
    :catch_0
    move-exception v2

    .line 4896
    .local v2, "e":Ljava/util/NoSuchElementException;
    return v0

    .line 4893
    .end local v2    # "e":Ljava/util/NoSuchElementException;
    :catch_1
    move-exception v2

    .line 4897
    :goto_0
    nop

    .line 4898
    const/4 v2, 0x0

    return v2
.end method

.method static resetPriorityAfterLockedSection()V
    .locals 1

    .line 1087
    sget-object v0, Lcom/android/server/wm/WindowManagerService;->sThreadPriorityBooster:Lcom/android/server/wm/WindowManagerThreadPriorityBooster;

    invoke-virtual {v0}, Lcom/android/server/wm/WindowManagerThreadPriorityBooster;->reset()V

    .line 1088
    return-void
.end method

.method private setAnimatorDurationScale(F)V
    .locals 0
    .param p1, "scale"    # F

    .line 3302
    iput p1, p0, Lcom/android/server/wm/WindowManagerService;->mAnimatorDurationScaleSetting:F

    .line 3303
    invoke-static {p1}, Landroid/animation/ValueAnimator;->setDurationScale(F)V

    .line 3304
    return-void
.end method

.method private setGlobalShadowSettings()V
    .locals 13

    .line 1400
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    sget-object v1, Lcom/android/internal/R$styleable;->Lighting:[I

    const/4 v2, 0x0

    const/4 v3, 0x0

    invoke-virtual {v0, v2, v1, v3, v3}, Landroid/content/Context;->obtainStyledAttributes(Landroid/util/AttributeSet;[III)Landroid/content/res/TypedArray;

    move-result-object v0

    .line 1401
    .local v0, "a":Landroid/content/res/TypedArray;
    const/4 v1, 0x3

    const/4 v2, 0x0

    invoke-virtual {v0, v1, v2}, Landroid/content/res/TypedArray;->getDimension(IF)F

    move-result v4

    .line 1402
    .local v4, "lightY":F
    const/4 v5, 0x4

    invoke-virtual {v0, v5, v2}, Landroid/content/res/TypedArray;->getDimension(IF)F

    move-result v6

    .line 1403
    .local v6, "lightZ":F
    const/4 v7, 0x2

    invoke-virtual {v0, v7, v2}, Landroid/content/res/TypedArray;->getDimension(IF)F

    move-result v8

    .line 1404
    .local v8, "lightRadius":F
    invoke-virtual {v0, v3, v2}, Landroid/content/res/TypedArray;->getFloat(IF)F

    move-result v9

    .line 1405
    .local v9, "ambientShadowAlpha":F
    const/4 v10, 0x1

    invoke-virtual {v0, v10, v2}, Landroid/content/res/TypedArray;->getFloat(IF)F

    move-result v11

    .line 1406
    .local v11, "spotShadowAlpha":F
    new-array v12, v5, [F

    aput v2, v12, v3

    aput v2, v12, v10

    aput v2, v12, v7

    aput v9, v12, v1

    .line 1407
    .local v12, "ambientColor":[F
    new-array v5, v5, [F

    aput v2, v5, v3

    aput v2, v5, v10

    aput v2, v5, v7

    aput v11, v5, v1

    move-object v1, v5

    .line 1408
    .local v1, "spotColor":[F
    invoke-static {v12, v1, v4, v6, v8}, Landroid/view/SurfaceControl;->setGlobalShadowSettings([F[FFFF)V

    .line 1410
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->setShadowRenderer()V

    .line 1411
    return-void
.end method

.method private setShadowRenderer()V
    .locals 3

    .line 992
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v0}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v0

    const-string v1, "render_shadows_in_compositor"

    const/4 v2, 0x1

    invoke-static {v0, v1, v2}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v0

    if-eqz v0, :cond_0

    goto :goto_0

    :cond_0
    const/4 v2, 0x0

    :goto_0
    iput-boolean v2, p0, Lcom/android/server/wm/WindowManagerService;->mRenderShadowsInCompositor:Z

    .line 994
    return-void
.end method

.method private showStrictModeViolation(II)V
    .locals 5
    .param p1, "arg"    # I
    .param p2, "pid"    # I

    .line 3728
    if-eqz p1, :cond_0

    const/4 v0, 0x1

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    .line 3729
    .local v0, "on":Z
    :goto_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v1

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 3732
    if-eqz v0, :cond_1

    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v2, p2}, Lcom/android/server/wm/RootWindowContainer;->canShowStrictModeViolation(I)Z

    move-result v2

    if-nez v2, :cond_1

    .line 3733
    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 3740
    :cond_1
    :try_start_1
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mStrictModeFlash:Lcom/android/server/wm/StrictModeFlash;

    if-nez v2, :cond_2

    .line 3741
    new-instance v2, Lcom/android/server/wm/StrictModeFlash;

    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mTransaction:Landroid/view/SurfaceControl$Transaction;

    invoke-direct {v2, v3, v4}, Lcom/android/server/wm/StrictModeFlash;-><init>(Lcom/android/server/wm/DisplayContent;Landroid/view/SurfaceControl$Transaction;)V

    iput-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mStrictModeFlash:Lcom/android/server/wm/StrictModeFlash;

    .line 3744
    :cond_2
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mStrictModeFlash:Lcom/android/server/wm/StrictModeFlash;

    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTransaction:Landroid/view/SurfaceControl$Transaction;

    invoke-virtual {v2, v0, v3}, Lcom/android/server/wm/StrictModeFlash;->setVisibility(ZLandroid/view/SurfaceControl$Transaction;)V

    .line 3745
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mTransaction:Landroid/view/SurfaceControl$Transaction;

    invoke-virtual {v2}, Landroid/view/SurfaceControl$Transaction;->apply()V

    .line 3746
    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 3747
    return-void

    .line 3746
    :catchall_0
    move-exception v2

    :try_start_2
    monitor-exit v1
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v2
.end method

.method private tryStartExitingAnimation(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowStateAnimator;Z)Z
    .locals 5
    .param p1, "win"    # Lcom/android/server/wm/WindowState;
    .param p2, "winAnimator"    # Lcom/android/server/wm/WindowStateAnimator;
    .param p3, "focusMayChange"    # Z

    .line 2561
    const/4 v0, 0x2

    .line 2562
    .local v0, "transit":I
    iget-object v1, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v1, v1, Landroid/view/WindowManager$LayoutParams;->type:I

    const/4 v2, 0x3

    if-ne v1, v2, :cond_0

    .line 2563
    const/4 v0, 0x5

    .line 2565
    :cond_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {v1}, Lcom/android/server/wm/ActivityTaskManagerService;->getTransitionController()Lcom/android/server/wm/TransitionController;

    move-result-object v1

    invoke-virtual {v1, p1}, Lcom/android/server/wm/TransitionController;->inTransition(Lcom/android/server/wm/WindowContainer;)Z

    move-result v1

    const/4 v3, 0x1

    if-eqz v1, :cond_1

    .line 2566
    const/4 p3, 0x1

    .line 2567
    iput-boolean v3, p1, Lcom/android/server/wm/WindowState;->mAnimatingExit:Z

    goto :goto_1

    .line 2568
    :cond_1
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->isWinVisibleLw()Z

    move-result v1

    const/4 v4, 0x0

    if-eqz v1, :cond_2

    invoke-virtual {p2, v0, v4}, Lcom/android/server/wm/WindowStateAnimator;->applyAnimationLocked(IZ)Z

    move-result v1

    if-eqz v1, :cond_2

    .line 2569
    const/4 p3, 0x1

    .line 2570
    iput-boolean v3, p1, Lcom/android/server/wm/WindowState;->mAnimatingExit:Z

    goto :goto_1

    .line 2571
    :cond_2
    iget-object v1, p1, Lcom/android/server/wm/WindowState;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->okToAnimate()Z

    move-result v1

    if-eqz v1, :cond_3

    const/16 v1, 0x19

    invoke-virtual {p1, v2, v1}, Lcom/android/server/wm/WindowState;->isAnimating(II)Z

    move-result v1

    if-eqz v1, :cond_3

    .line 2575
    iput-boolean v3, p1, Lcom/android/server/wm/WindowState;->mAnimatingExit:Z

    goto :goto_1

    .line 2576
    :cond_3
    iget-object v1, p1, Lcom/android/server/wm/WindowState;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->okToAnimate()Z

    move-result v1

    if-eqz v1, :cond_4

    iget-object v1, p1, Lcom/android/server/wm/WindowState;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    iget-object v1, v1, Lcom/android/server/wm/DisplayContent;->mWallpaperController:Lcom/android/server/wm/WallpaperController;

    .line 2577
    invoke-virtual {v1, p1}, Lcom/android/server/wm/WallpaperController;->isWallpaperTarget(Lcom/android/server/wm/WindowState;)Z

    move-result v1

    if-eqz v1, :cond_4

    .line 2581
    iput-boolean v3, p1, Lcom/android/server/wm/WindowState;->mAnimatingExit:Z

    goto :goto_1

    .line 2583
    :cond_4
    iget-object v1, p1, Lcom/android/server/wm/WindowState;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    if-eqz v1, :cond_5

    iget-object v1, p1, Lcom/android/server/wm/WindowState;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    iget-boolean v1, v1, Lcom/android/server/wm/ActivityRecord;->mAppStopped:Z

    goto :goto_0

    :cond_5
    move v1, v3

    .line 2587
    .local v1, "stopped":Z
    :goto_0
    iput-boolean v3, p1, Lcom/android/server/wm/WindowState;->mDestroying:Z

    .line 2588
    invoke-virtual {p1, v4, v1}, Lcom/android/server/wm/WindowState;->destroySurface(ZZ)Z

    .line 2590
    .end local v1    # "stopped":Z
    :goto_1
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    if-eqz v1, :cond_6

    .line 2591
    invoke-virtual {v1, p1, v0}, Lcom/android/server/wm/AccessibilityController;->onWindowTransition(Lcom/android/server/wm/WindowState;I)V

    .line 2594
    :cond_6
    return p3
.end method

.method private unprivilegedAppCanCreateTokenWith(Lcom/android/server/wm/WindowState;IIILandroid/os/IBinder;Ljava/lang/String;)Z
    .locals 6
    .param p1, "parentWindow"    # Lcom/android/server/wm/WindowState;
    .param p2, "callingUid"    # I
    .param p3, "type"    # I
    .param p4, "rootType"    # I
    .param p5, "tokenForLog"    # Landroid/os/IBinder;
    .param p6, "packageName"    # Ljava/lang/String;

    .line 1873
    const/4 v0, 0x1

    const/4 v1, 0x0

    if-lt p4, v0, :cond_1

    const/16 v2, 0x63

    if-gt p4, v2, :cond_1

    .line 1874
    sget-boolean v2, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v2, :cond_0

    invoke-static {p5}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v2

    .local v2, "protoLogParam0":Ljava/lang/String;
    sget-object v3, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const v4, -0x42591795

    new-array v0, v0, [Ljava/lang/Object;

    aput-object v2, v0, v1

    const-string v5, "Attempted to add application window with unknown token %s.  Aborting."

    invoke-static {v3, v4, v1, v5, v0}, Lcom/android/internal/protolog/ProtoLogImpl;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 1876
    .end local v2    # "protoLogParam0":Ljava/lang/String;
    :cond_0
    return v1

    .line 1878
    :cond_1
    const/16 v2, 0x7db

    if-ne p4, v2, :cond_3

    .line 1879
    sget-boolean v2, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v2, :cond_2

    invoke-static {p5}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v2

    .restart local v2    # "protoLogParam0":Ljava/lang/String;
    sget-object v3, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const v4, -0x799186e2

    new-array v0, v0, [Ljava/lang/Object;

    aput-object v2, v0, v1

    const-string v5, "Attempted to add input method window with unknown token %s.  Aborting."

    invoke-static {v3, v4, v1, v5, v0}, Lcom/android/internal/protolog/ProtoLogImpl;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 1881
    .end local v2    # "protoLogParam0":Ljava/lang/String;
    :cond_2
    return v1

    .line 1883
    :cond_3
    const/16 v2, 0x7ef

    if-ne p4, v2, :cond_5

    .line 1884
    sget-boolean v2, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v2, :cond_4

    invoke-static {p5}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v2

    .restart local v2    # "protoLogParam0":Ljava/lang/String;
    sget-object v3, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const v4, -0x367e6829

    new-array v0, v0, [Ljava/lang/Object;

    aput-object v2, v0, v1

    const-string v5, "Attempted to add voice interaction window with unknown token %s.  Aborting."

    invoke-static {v3, v4, v1, v5, v0}, Lcom/android/internal/protolog/ProtoLogImpl;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 1887
    .end local v2    # "protoLogParam0":Ljava/lang/String;
    :cond_4
    return v1

    .line 1889
    :cond_5
    const/16 v2, 0x7dd

    if-ne p4, v2, :cond_7

    .line 1890
    sget-boolean v2, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v2, :cond_6

    invoke-static {p5}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v2

    .restart local v2    # "protoLogParam0":Ljava/lang/String;
    sget-object v3, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const v4, 0x194dbbb9

    new-array v0, v0, [Ljava/lang/Object;

    aput-object v2, v0, v1

    const-string v5, "Attempted to add wallpaper window with unknown token %s.  Aborting."

    invoke-static {v3, v4, v1, v5, v0}, Lcom/android/internal/protolog/ProtoLogImpl;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 1892
    .end local v2    # "protoLogParam0":Ljava/lang/String;
    :cond_6
    return v1

    .line 1894
    :cond_7
    const/16 v2, 0x7f3

    if-ne p4, v2, :cond_9

    .line 1895
    sget-boolean v2, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v2, :cond_8

    invoke-static {p5}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v2

    .restart local v2    # "protoLogParam0":Ljava/lang/String;
    sget-object v3, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const v4, 0x35939335

    new-array v0, v0, [Ljava/lang/Object;

    aput-object v2, v0, v1

    const-string v5, "Attempted to add QS dialog window with unknown token %s.  Aborting."

    invoke-static {v3, v4, v1, v5, v0}, Lcom/android/internal/protolog/ProtoLogImpl;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 1897
    .end local v2    # "protoLogParam0":Ljava/lang/String;
    :cond_8
    return v1

    .line 1899
    :cond_9
    const/16 v2, 0x7f0

    if-ne p4, v2, :cond_b

    .line 1900
    sget-boolean v2, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v2, :cond_a

    invoke-static {p5}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v2

    .restart local v2    # "protoLogParam0":Ljava/lang/String;
    sget-object v3, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const v4, -0x3e246ca3

    new-array v0, v0, [Ljava/lang/Object;

    aput-object v2, v0, v1

    const-string v5, "Attempted to add Accessibility overlay window with unknown token %s.  Aborting."

    invoke-static {v3, v4, v1, v5, v0}, Lcom/android/internal/protolog/ProtoLogImpl;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 1903
    .end local v2    # "protoLogParam0":Ljava/lang/String;
    :cond_a
    return v1

    .line 1905
    :cond_b
    const/16 v2, 0x7d5

    if-ne p3, v2, :cond_d

    .line 1907
    invoke-direct {p0, p6, p2, p1}, Lcom/android/server/wm/WindowManagerService;->doesAddToastWindowRequireToken(Ljava/lang/String;ILcom/android/server/wm/WindowState;)Z

    move-result v2

    if-eqz v2, :cond_d

    .line 1908
    sget-boolean v2, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v2, :cond_c

    invoke-static {p5}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v2

    .restart local v2    # "protoLogParam0":Ljava/lang/String;
    sget-object v3, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const v4, 0x4f582893

    new-array v0, v0, [Ljava/lang/Object;

    aput-object v2, v0, v1

    const-string v5, "Attempted to add a toast window with unknown token %s.  Aborting."

    invoke-static {v3, v4, v1, v5, v0}, Lcom/android/internal/protolog/ProtoLogImpl;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 1910
    .end local v2    # "protoLogParam0":Ljava/lang/String;
    :cond_c
    return v1

    .line 1913
    :cond_d
    return v0
.end method

.method private updateAppOpsState()V
    .locals 2

    .line 2116
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 2117
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1}, Lcom/android/server/wm/RootWindowContainer;->updateAppOpsState()V

    .line 2118
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 2119
    return-void

    .line 2118
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method private updateHiddenWhileSuspendedState(Landroid/util/ArraySet;Z)V
    .locals 2
    .param p2, "suspended"    # Z
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/util/ArraySet<",
            "Ljava/lang/String;",
            ">;Z)V"
        }
    .end annotation

    .line 2110
    .local p1, "packages":Landroid/util/ArraySet;, "Landroid/util/ArraySet<Ljava/lang/String;>;"
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 2111
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p1, p2}, Lcom/android/server/wm/RootWindowContainer;->updateHiddenWhileSuspendedState(Landroid/util/ArraySet;Z)V

    .line 2112
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 2113
    return-void

    .line 2112
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method private updateInputChannel(Landroid/os/IBinder;IIILandroid/view/SurfaceControl;Ljava/lang/String;Landroid/view/InputApplicationHandle;IIILandroid/graphics/Region;)V
    .locals 14
    .param p1, "channelToken"    # Landroid/os/IBinder;
    .param p2, "callingUid"    # I
    .param p3, "callingPid"    # I
    .param p4, "displayId"    # I
    .param p5, "surface"    # Landroid/view/SurfaceControl;
    .param p6, "name"    # Ljava/lang/String;
    .param p7, "applicationHandle"    # Landroid/view/InputApplicationHandle;
    .param p8, "flags"    # I
    .param p9, "privateFlags"    # I
    .param p10, "type"    # I
    .param p11, "region"    # Landroid/graphics/Region;

    .line 8223
    move-object/from16 v0, p5

    move-object/from16 v1, p11

    new-instance v2, Landroid/view/InputWindowHandle;

    move/from16 v3, p4

    move-object/from16 v4, p7

    invoke-direct {v2, v4, v3}, Landroid/view/InputWindowHandle;-><init>(Landroid/view/InputApplicationHandle;I)V

    .line 8224
    .local v2, "h":Landroid/view/InputWindowHandle;
    move-object v5, p1

    iput-object v5, v2, Landroid/view/InputWindowHandle;->token:Landroid/os/IBinder;

    .line 8225
    move-object/from16 v6, p6

    iput-object v6, v2, Landroid/view/InputWindowHandle;->name:Ljava/lang/String;

    .line 8227
    const v7, 0x20000018

    and-int v7, p8, v7

    .line 8229
    .local v7, "sanitizedFlags":I
    or-int/lit8 v8, v7, 0x20

    iput v8, v2, Landroid/view/InputWindowHandle;->layoutParamsFlags:I

    .line 8230
    move/from16 v8, p10

    iput v8, v2, Landroid/view/InputWindowHandle;->layoutParamsType:I

    .line 8231
    sget v9, Landroid/os/InputConstants;->DEFAULT_DISPATCHING_TIMEOUT_MILLIS:I

    int-to-long v9, v9

    iput-wide v9, v2, Landroid/view/InputWindowHandle;->dispatchingTimeoutMillis:J

    .line 8232
    and-int/lit8 v9, p8, 0x8

    const/4 v10, 0x1

    const/4 v11, 0x0

    if-nez v9, :cond_0

    move v9, v10

    goto :goto_0

    :cond_0
    move v9, v11

    :goto_0
    iput-boolean v9, v2, Landroid/view/InputWindowHandle;->focusable:Z

    .line 8233
    iput-boolean v11, v2, Landroid/view/InputWindowHandle;->hasWallpaper:Z

    .line 8234
    iput-boolean v11, v2, Landroid/view/InputWindowHandle;->paused:Z

    .line 8236
    move/from16 v9, p2

    iput v9, v2, Landroid/view/InputWindowHandle;->ownerUid:I

    .line 8237
    move/from16 v12, p3

    iput v12, v2, Landroid/view/InputWindowHandle;->ownerPid:I

    .line 8239
    iput v11, v2, Landroid/view/InputWindowHandle;->inputFeatures:I

    .line 8241
    if-nez v1, :cond_1

    .line 8242
    const/4 v13, 0x0

    invoke-virtual {v2, v13}, Landroid/view/InputWindowHandle;->replaceTouchableRegionWithCrop(Landroid/view/SurfaceControl;)V

    goto :goto_1

    .line 8244
    :cond_1
    iget-object v13, v2, Landroid/view/InputWindowHandle;->touchableRegion:Landroid/graphics/Region;

    invoke-virtual {v13, v1}, Landroid/graphics/Region;->set(Landroid/graphics/Region;)Z

    .line 8245
    iput-boolean v11, v2, Landroid/view/InputWindowHandle;->replaceTouchableRegionWithCrop:Z

    .line 8246
    invoke-virtual {v2, v0}, Landroid/view/InputWindowHandle;->setTouchableRegionCrop(Landroid/view/SurfaceControl;)V

    .line 8250
    :goto_1
    const/high16 v13, 0x20000000

    and-int v13, p9, v13

    if-eqz v13, :cond_2

    goto :goto_2

    :cond_2
    move v10, v11

    :goto_2
    iput-boolean v10, v2, Landroid/view/InputWindowHandle;->trustedOverlay:Z

    .line 8252
    move-object v10, p0

    iget-object v11, v10, Lcom/android/server/wm/WindowManagerService;->mTransactionFactory:Ljava/util/function/Supplier;

    invoke-interface {v11}, Ljava/util/function/Supplier;->get()Ljava/lang/Object;

    move-result-object v11

    check-cast v11, Landroid/view/SurfaceControl$Transaction;

    .line 8253
    .local v11, "t":Landroid/view/SurfaceControl$Transaction;
    invoke-virtual {v11, v0, v2}, Landroid/view/SurfaceControl$Transaction;->setInputWindowInfo(Landroid/view/SurfaceControl;Landroid/view/InputWindowHandle;)Landroid/view/SurfaceControl$Transaction;

    .line 8254
    invoke-virtual {v11}, Landroid/view/SurfaceControl$Transaction;->apply()V

    .line 8255
    invoke-virtual {v11}, Landroid/view/SurfaceControl$Transaction;->close()V

    .line 8256
    invoke-virtual/range {p5 .. p5}, Landroid/view/SurfaceControl;->release()V

    .line 8257
    return-void
.end method

.method private updateRotationUnchecked(ZZ)V
    .locals 15
    .param p1, "alwaysSendConfiguration"    # Z
    .param p2, "forceRelayout"    # Z

    .line 4011
    move-object v1, p0

    sget-boolean v0, Lcom/android/server/wm/ProtoLogCache;->WM_DEBUG_ORIENTATION_enabled:Z

    const/4 v2, 0x0

    const/4 v3, 0x1

    if-eqz v0, :cond_0

    move/from16 v0, p1

    .local v0, "protoLogParam0":Z
    move/from16 v4, p2

    .local v4, "protoLogParam1":Z
    sget-object v5, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_ORIENTATION:Lcom/android/internal/protolog/ProtoLogGroup;

    const v6, -0xbd451ea

    const/16 v7, 0xf

    const/4 v8, 0x0

    const/4 v9, 0x2

    new-array v9, v9, [Ljava/lang/Object;

    invoke-static {v0}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v10

    aput-object v10, v9, v2

    invoke-static {v4}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v10

    aput-object v10, v9, v3

    invoke-static {v5, v6, v7, v8, v9}, Lcom/android/internal/protolog/ProtoLogImpl;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 4015
    .end local v0    # "protoLogParam0":Z
    .end local v4    # "protoLogParam1":Z
    :cond_0
    const-string v0, "updateRotation"

    const-wide/16 v4, 0x20

    invoke-static {v4, v5, v0}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 4017
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v6

    .line 4020
    .local v6, "origId":J
    :try_start_0
    iget-object v8, v1, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v8
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 4021
    const/4 v0, 0x0

    .line 4022
    .local v0, "layoutNeeded":Z
    iget-object v9, v1, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    iget-object v9, v9, Lcom/android/server/wm/RootWindowContainer;->mChildren:Lcom/android/server/wm/WindowList;

    invoke-virtual {v9}, Lcom/android/server/wm/WindowList;->size()I

    move-result v9

    .line 4023
    .local v9, "displayCount":I
    const/4 v10, 0x0

    .local v10, "i":I
    :goto_0
    if-ge v10, v9, :cond_8

    .line 4024
    iget-object v11, v1, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    iget-object v11, v11, Lcom/android/server/wm/RootWindowContainer;->mChildren:Lcom/android/server/wm/WindowList;

    invoke-virtual {v11, v10}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v11

    check-cast v11, Lcom/android/server/wm/DisplayContent;

    .line 4025
    .local v11, "displayContent":Lcom/android/server/wm/DisplayContent;
    const-string v12, "updateRotation: display"

    invoke-static {v4, v5, v12}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 4026
    invoke-virtual {v11}, Lcom/android/server/wm/DisplayContent;->updateRotationUnchecked()Z

    move-result v12

    .line 4027
    .local v12, "rotationChanged":Z
    invoke-static {v4, v5}, Landroid/os/Trace;->traceEnd(J)V

    .line 4029
    if-eqz v12, :cond_1

    .line 4030
    iget-object v13, v1, Lcom/android/server/wm/WindowManagerService;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {v13}, Lcom/android/server/wm/ActivityTaskManagerService;->getTaskChangeNotificationController()Lcom/android/server/wm/TaskChangeNotificationController;

    move-result-object v13

    iget v14, v11, Lcom/android/server/wm/DisplayContent;->mDisplayId:I

    .line 4031
    invoke-virtual {v13, v14}, Lcom/android/server/wm/TaskChangeNotificationController;->notifyOnActivityRotation(I)V

    .line 4034
    :cond_1
    if-eqz v12, :cond_3

    .line 4035
    invoke-virtual {v11}, Lcom/android/server/wm/DisplayContent;->getDisplayRotation()Lcom/android/server/wm/DisplayRotation;

    move-result-object v13

    invoke-virtual {v13}, Lcom/android/server/wm/DisplayRotation;->isWaitingForRemoteRotation()Z

    move-result v13

    if-nez v13, :cond_2

    iget-object v13, v1, Lcom/android/server/wm/WindowManagerService;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 4036
    invoke-virtual {v13}, Lcom/android/server/wm/ActivityTaskManagerService;->getTransitionController()Lcom/android/server/wm/TransitionController;

    move-result-object v13

    invoke-virtual {v13}, Lcom/android/server/wm/TransitionController;->isCollecting()Z

    move-result v13

    if-eqz v13, :cond_3

    :cond_2
    move v13, v3

    goto :goto_1

    :cond_3
    move v13, v2

    .line 4039
    .local v13, "pendingRemoteRotation":Z
    :goto_1
    if-nez v13, :cond_7

    .line 4040
    if-eqz v12, :cond_4

    if-eqz p2, :cond_5

    .line 4041
    :cond_4
    invoke-virtual {v11}, Lcom/android/server/wm/DisplayContent;->setLayoutNeeded()V

    .line 4042
    const/4 v0, 0x1

    .line 4044
    :cond_5
    if-nez v12, :cond_6

    if-eqz p1, :cond_7

    .line 4045
    :cond_6
    invoke-virtual {v11}, Lcom/android/server/wm/DisplayContent;->sendNewConfiguration()V

    .line 4023
    .end local v11    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v12    # "rotationChanged":Z
    .end local v13    # "pendingRemoteRotation":Z
    :cond_7
    add-int/lit8 v10, v10, 0x1

    goto :goto_0

    .line 4050
    .end local v10    # "i":I
    :cond_8
    if-eqz v0, :cond_9

    .line 4051
    const-string v2, "updateRotation: performSurfacePlacement"

    invoke-static {v4, v5, v2}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 4053
    iget-object v2, v1, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    invoke-virtual {v2}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement()V

    .line 4054
    invoke-static {v4, v5}, Landroid/os/Trace;->traceEnd(J)V

    .line 4056
    .end local v0    # "layoutNeeded":Z
    .end local v9    # "displayCount":I
    :cond_9
    monitor-exit v8
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 4058
    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4059
    invoke-static {v4, v5}, Landroid/os/Trace;->traceEnd(J)V

    .line 4060
    nop

    .line 4061
    return-void

    .line 4056
    :catchall_0
    move-exception v0

    :try_start_3
    monitor-exit v8
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .end local v6    # "origId":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "alwaysSendConfiguration":Z
    .end local p2    # "forceRelayout":Z
    throw v0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 4058
    .restart local v6    # "origId":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "alwaysSendConfiguration":Z
    .restart local p2    # "forceRelayout":Z
    :catchall_1
    move-exception v0

    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4059
    invoke-static {v4, v5}, Landroid/os/Trace;->traceEnd(J)V

    .line 4060
    throw v0
.end method

.method private waitForAnimationsToComplete()V
    .locals 9

    .line 8092
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 8093
    const-wide/16 v1, 0x1388

    .line 8096
    .local v1, "timeoutRemaining":J
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    const/4 v4, 0x1

    iput-boolean v4, v3, Lcom/android/server/wm/WindowAnimator;->mNotifyWhenNoAnimation:Z

    .line 8097
    :goto_0
    const-wide/16 v5, 0x0

    cmp-long v3, v1, v5

    const/4 v5, -0x1

    const/4 v6, 0x5

    const/4 v7, 0x0

    if-lez v3, :cond_3

    .line 8098
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    invoke-virtual {v3}, Lcom/android/server/wm/WindowAnimator;->isAnimationScheduled()Z

    move-result v3

    if-nez v3, :cond_1

    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    .line 8099
    invoke-virtual {v3, v6, v5}, Lcom/android/server/wm/RootWindowContainer;->isAnimating(II)Z

    move-result v3

    if-eqz v3, :cond_0

    goto :goto_1

    :cond_0
    move v3, v7

    goto :goto_2

    :cond_1
    :goto_1
    move v3, v4

    .line 8100
    .local v3, "isAnimating":Z
    :goto_2
    if-nez v3, :cond_2

    .line 8101
    goto :goto_4

    .line 8103
    :cond_2
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v5
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 8105
    .local v5, "startTime":J
    :try_start_1
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    invoke-virtual {v7, v1, v2}, Ljava/lang/Object;->wait(J)V
    :try_end_1
    .catch Ljava/lang/InterruptedException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 8107
    goto :goto_3

    .line 8106
    :catch_0
    move-exception v7

    .line 8108
    :goto_3
    :try_start_2
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v7

    sub-long/2addr v7, v5

    sub-long/2addr v1, v7

    .line 8109
    .end local v3    # "isAnimating":Z
    .end local v5    # "startTime":J
    goto :goto_0

    .line 8110
    :cond_3
    :goto_4
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    iput-boolean v7, v3, Lcom/android/server/wm/WindowAnimator;->mNotifyWhenNoAnimation:Z

    .line 8113
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v3, v6, v5}, Lcom/android/server/wm/RootWindowContainer;->getAnimatingContainer(II)Lcom/android/server/wm/WindowContainer;

    move-result-object v3

    .line 8115
    .local v3, "animatingContainer":Lcom/android/server/wm/WindowContainer;
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    invoke-virtual {v4}, Lcom/android/server/wm/WindowAnimator;->isAnimationScheduled()Z

    move-result v4

    if-nez v4, :cond_4

    if-eqz v3, :cond_6

    .line 8116
    :cond_4
    const-string v4, "WindowManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Timed out waiting for animations to complete, animatingContainer="

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v6, " animationType="

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 8119
    if-eqz v3, :cond_5

    .line 8120
    iget-object v6, v3, Lcom/android/server/wm/WindowContainer;->mSurfaceAnimator:Lcom/android/server/wm/SurfaceAnimator;

    invoke-virtual {v6}, Lcom/android/server/wm/SurfaceAnimator;->getAnimationType()I

    move-result v7

    goto :goto_5

    .line 8121
    :cond_5
    nop

    .line 8118
    :goto_5
    invoke-static {v7}, Lcom/android/server/wm/SurfaceAnimator;->animationTypeToString(I)Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    .line 8116
    invoke-static {v4, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 8123
    .end local v1    # "timeoutRemaining":J
    .end local v3    # "animatingContainer":Lcom/android/server/wm/WindowContainer;
    :cond_6
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 8124
    return-void

    .line 8123
    :catchall_0
    move-exception v1

    :try_start_3
    monitor-exit v0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method


# virtual methods
.method public addShellRoot(ILandroid/view/IWindow;I)Landroid/view/SurfaceControl;
    .locals 5
    .param p1, "displayId"    # I
    .param p2, "client"    # Landroid/view/IWindow;
    .param p3, "shellRootLayer"    # I

    .line 4091
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.MANAGE_APP_TOKENS"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_1

    .line 4095
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 4097
    .local v0, "origId":J
    :try_start_0
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 4098
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v3, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    .line 4099
    .local v3, "dc":Lcom/android/server/wm/DisplayContent;
    if-nez v3, :cond_0

    .line 4100
    const/4 v4, 0x0

    monitor-exit v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 4105
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4100
    return-object v4

    .line 4102
    :cond_0
    :try_start_2
    invoke-virtual {v3, p2, p3}, Lcom/android/server/wm/DisplayContent;->addShellRoot(Landroid/view/IWindow;I)Landroid/view/SurfaceControl;

    move-result-object v4

    monitor-exit v2
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 4105
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4102
    return-object v4

    .line 4103
    .end local v3    # "dc":Lcom/android/server/wm/DisplayContent;
    :catchall_0
    move-exception v3

    :try_start_3
    monitor-exit v2
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .end local v0    # "origId":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "displayId":I
    .end local p2    # "client":Landroid/view/IWindow;
    .end local p3    # "shellRootLayer":I
    throw v3
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 4105
    .restart local v0    # "origId":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "displayId":I
    .restart local p2    # "client":Landroid/view/IWindow;
    .restart local p3    # "shellRootLayer":I
    :catchall_1
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4106
    throw v2

    .line 4093
    .end local v0    # "origId":J
    :cond_1
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Must hold permission android.permission.MANAGE_APP_TOKENS"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public addWindow(Lcom/android/server/wm/Session;Landroid/view/IWindow;Landroid/view/WindowManager$LayoutParams;IIILandroid/view/InsetsState;Landroid/view/InputChannel;Landroid/view/InsetsState;[Landroid/view/InsetsSourceControl;)I
    .locals 44
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;
    .param p3, "attrs"    # Landroid/view/WindowManager$LayoutParams;
    .param p4, "viewVisibility"    # I
    .param p5, "displayId"    # I
    .param p6, "requestUserId"    # I
    .param p7, "requestedVisibility"    # Landroid/view/InsetsState;
    .param p8, "outInputChannel"    # Landroid/view/InputChannel;
    .param p9, "outInsetsState"    # Landroid/view/InsetsState;
    .param p10, "outActiveControls"    # [Landroid/view/InsetsSourceControl;

    .line 1461
    move-object/from16 v13, p0

    move-object/from16 v14, p1

    move-object/from16 v15, p3

    move/from16 v12, p5

    move/from16 v11, p6

    move-object/from16 v10, p8

    move-object/from16 v9, p10

    const/4 v0, 0x0

    invoke-static {v9, v0}, Ljava/util/Arrays;->fill([Ljava/lang/Object;Ljava/lang/Object;)V

    .line 1462
    const/4 v8, 0x1

    new-array v7, v8, [I

    .line 1463
    .local v7, "appOp":[I
    iget v1, v15, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    const/high16 v2, 0x100000

    and-int/2addr v1, v2

    if-eqz v1, :cond_0

    move v1, v8

    goto :goto_0

    :cond_0
    const/4 v1, 0x0

    :goto_0
    move v5, v1

    .line 1465
    .local v5, "isRoundedCornerOverlay":Z
    iget-object v1, v13, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    iget v2, v15, Landroid/view/WindowManager$LayoutParams;->type:I

    iget-object v3, v15, Landroid/view/WindowManager$LayoutParams;->packageName:Ljava/lang/String;

    invoke-interface {v1, v2, v5, v3, v7}, Lcom/android/server/policy/WindowManagerPolicy;->checkAddPermission(IZLjava/lang/String;[I)I

    move-result v16

    .line 1467
    .local v16, "res":I
    if-eqz v16, :cond_1

    .line 1468
    return v16

    .line 1471
    :cond_1
    const/4 v1, 0x0

    .line 1472
    .local v1, "parentWindow":Lcom/android/server/wm/WindowState;
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v4

    .line 1473
    .local v4, "callingUid":I
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v3

    .line 1474
    .local v3, "callingPid":I
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v23

    .line 1475
    .local v23, "origId":J
    iget v2, v15, Landroid/view/WindowManager$LayoutParams;->type:I

    .line 1477
    .local v2, "type":I
    move-object/from16 v17, v7

    .end local v7    # "appOp":[I
    .local v17, "appOp":[I
    iget-object v7, v13, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v7

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 1478
    iget-boolean v0, v13, Lcom/android/server/wm/WindowManagerService;->mDisplayReady:Z

    if-eqz v0, :cond_5f

    .line 1482
    iget-object v0, v15, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    invoke-direct {v13, v12, v0}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentOrCreate(ILandroid/os/IBinder;)Lcom/android/server/wm/DisplayContent;

    move-result-object v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1c

    move-object/from16 v26, v0

    .line 1484
    .local v26, "displayContent":Lcom/android/server/wm/DisplayContent;
    move/from16 v18, v5

    move-object/from16 v5, v26

    .end local v26    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .local v5, "displayContent":Lcom/android/server/wm/DisplayContent;
    .local v18, "isRoundedCornerOverlay":Z
    if-nez v5, :cond_3

    .line 1485
    :try_start_1
    sget-boolean v19, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    if-eqz v19, :cond_2

    move-object/from16 v19, v1

    .end local v1    # "parentWindow":Lcom/android/server/wm/WindowState;
    .local v19, "parentWindow":Lcom/android/server/wm/WindowState;
    int-to-long v0, v12

    .local v0, "protoLogParam0":J
    :try_start_2
    sget-object v6, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const-string v8, "Attempted to add window to a display that does not exist: %d. Aborting."

    const/4 v9, 0x1

    new-array v10, v9, [Ljava/lang/Object;

    invoke-static {v0, v1}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v22

    const/16 v21, 0x0

    aput-object v22, v10, v21

    move-wide/from16 v21, v0

    const v0, -0x335ef04d    # -8.444252E7f

    .end local v0    # "protoLogParam0":J
    .local v21, "protoLogParam0":J
    invoke-static {v6, v0, v9, v8, v10}, Lcom/android/internal/protolog/ProtoLogImpl;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    goto :goto_1

    .end local v19    # "parentWindow":Lcom/android/server/wm/WindowState;
    .end local v21    # "protoLogParam0":J
    .restart local v1    # "parentWindow":Lcom/android/server/wm/WindowState;
    :cond_2
    move-object/from16 v19, v1

    .line 1487
    .end local v1    # "parentWindow":Lcom/android/server/wm/WindowState;
    .restart local v19    # "parentWindow":Lcom/android/server/wm/WindowState;
    :goto_1
    monitor-exit v7
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    const/16 v0, -0x9

    return v0

    .line 1864
    .end local v5    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_0
    move-exception v0

    move-object/from16 v12, p9

    move v8, v2

    move/from16 v40, v3

    move v14, v4

    move-object/from16 v34, v7

    move-object v10, v13

    move-object/from16 v33, v17

    move/from16 v30, v18

    move-object/from16 v1, v19

    move-object/from16 v2, p10

    goto/16 :goto_1b

    .end local v19    # "parentWindow":Lcom/android/server/wm/WindowState;
    .restart local v1    # "parentWindow":Lcom/android/server/wm/WindowState;
    :catchall_1
    move-exception v0

    move-object/from16 v19, v1

    move-object/from16 v12, p9

    move v8, v2

    move/from16 v40, v3

    move v14, v4

    move-object/from16 v34, v7

    move-object v10, v13

    move-object/from16 v33, v17

    move/from16 v30, v18

    move-object/from16 v2, p10

    .end local v1    # "parentWindow":Lcom/android/server/wm/WindowState;
    .restart local v19    # "parentWindow":Lcom/android/server/wm/WindowState;
    goto/16 :goto_1b

    .line 1489
    .end local v19    # "parentWindow":Lcom/android/server/wm/WindowState;
    .restart local v1    # "parentWindow":Lcom/android/server/wm/WindowState;
    .restart local v5    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_3
    move-object/from16 v19, v1

    .end local v1    # "parentWindow":Lcom/android/server/wm/WindowState;
    .restart local v19    # "parentWindow":Lcom/android/server/wm/WindowState;
    :try_start_3
    iget v0, v14, Lcom/android/server/wm/Session;->mUid:I

    invoke-virtual {v5, v0}, Lcom/android/server/wm/DisplayContent;->hasAccess(I)Z

    move-result v0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1a

    if-nez v0, :cond_5

    .line 1490
    :try_start_4
    sget-boolean v0, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v0, :cond_4

    invoke-virtual {v5}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    move-result v0

    int-to-long v0, v0

    .restart local v0    # "protoLogParam0":J
    sget-object v6, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const-string v9, "Attempted to add window to a display for which the application does not have access: %d.  Aborting."

    const/4 v10, 0x1

    new-array v8, v10, [Ljava/lang/Object;

    invoke-static {v0, v1}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v25

    const/16 v21, 0x0

    aput-object v25, v8, v21

    move-wide/from16 v25, v0

    const v0, 0x19f51c9e

    .end local v0    # "protoLogParam0":J
    .local v25, "protoLogParam0":J
    invoke-static {v6, v0, v10, v9, v8}, Lcom/android/internal/protolog/ProtoLogImpl;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 1494
    .end local v25    # "protoLogParam0":J
    :cond_4
    monitor-exit v7
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    const/16 v0, -0x9

    return v0

    .line 1497
    :cond_5
    :try_start_5
    iget-object v0, v13, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    invoke-interface/range {p2 .. p2}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/util/HashMap;->containsKey(Ljava/lang/Object;)Z

    move-result v0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1a

    const/16 v26, -0x5

    if-eqz v0, :cond_7

    .line 1498
    :try_start_6
    sget-boolean v0, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v0, :cond_6

    invoke-static/range {p2 .. p2}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v0

    .local v0, "protoLogParam0":Ljava/lang/String;
    sget-object v1, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const v6, -0x1e423e5a

    const-string v8, "Window %s is already added"

    const/4 v9, 0x1

    new-array v9, v9, [Ljava/lang/Object;

    const/4 v10, 0x0

    aput-object v0, v9, v10

    invoke-static {v1, v6, v10, v8, v9}, Lcom/android/internal/protolog/ProtoLogImpl;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 1499
    .end local v0    # "protoLogParam0":Ljava/lang/String;
    :cond_6
    monitor-exit v7
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v26

    .line 1502
    :cond_7
    const/16 v0, 0x3e8

    if-lt v2, v0, :cond_c

    const/16 v1, 0x7cf

    if-gt v2, v1, :cond_c

    .line 1503
    :try_start_7
    iget-object v6, v15, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    const/4 v8, 0x0

    const/4 v9, 0x0

    invoke-virtual {v13, v8, v6, v9}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/os/IBinder;Z)Lcom/android/server/wm/WindowState;

    move-result-object v6
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_0

    .line 1504
    .end local v19    # "parentWindow":Lcom/android/server/wm/WindowState;
    .local v6, "parentWindow":Lcom/android/server/wm/WindowState;
    if-nez v6, :cond_9

    .line 1505
    :try_start_8
    sget-boolean v0, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v0, :cond_8

    iget-object v0, v15, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    invoke-static {v0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v0

    .restart local v0    # "protoLogParam0":Ljava/lang/String;
    sget-object v1, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const-string v10, "Attempted to add window with token that is not a window: %s.  Aborting."

    const/4 v8, 0x1

    new-array v8, v8, [Ljava/lang/Object;

    const/4 v9, 0x0

    aput-object v0, v8, v9

    move-object/from16 v21, v0

    const v0, 0x25a86324

    .end local v0    # "protoLogParam0":Ljava/lang/String;
    .local v21, "protoLogParam0":Ljava/lang/String;
    invoke-static {v1, v0, v9, v10, v8}, Lcom/android/internal/protolog/ProtoLogImpl;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 1507
    .end local v21    # "protoLogParam0":Ljava/lang/String;
    :cond_8
    monitor-exit v7
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_2

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    const/4 v0, -0x2

    return v0

    .line 1509
    :cond_9
    :try_start_9
    iget-object v8, v6, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v8, v8, Landroid/view/WindowManager$LayoutParams;->type:I

    if-lt v8, v0, :cond_b

    iget-object v0, v6, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    if-gt v0, v1, :cond_b

    .line 1511
    sget-boolean v0, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v0, :cond_a

    iget-object v0, v15, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    invoke-static {v0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v0

    .restart local v0    # "protoLogParam0":Ljava/lang/String;
    sget-object v1, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const-string v9, "Attempted to add window with token that is a sub-window: %s.  Aborting."

    const/4 v10, 0x1

    new-array v10, v10, [Ljava/lang/Object;

    const/4 v8, 0x0

    aput-object v0, v10, v8

    move-object/from16 v21, v0

    const v0, -0x7b8192dc

    .end local v0    # "protoLogParam0":Ljava/lang/String;
    .restart local v21    # "protoLogParam0":Ljava/lang/String;
    invoke-static {v1, v0, v8, v9, v10}, Lcom/android/internal/protolog/ProtoLogImpl;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 1513
    .end local v21    # "protoLogParam0":Ljava/lang/String;
    :cond_a
    monitor-exit v7
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_2

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    const/4 v0, -0x2

    return v0

    .line 1509
    :cond_b
    const/4 v10, 0x1

    .line 1517
    move-object v9, v6

    goto :goto_2

    .line 1864
    .end local v5    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_2
    move-exception v0

    move-object/from16 v12, p9

    move v8, v2

    move/from16 v40, v3

    move v14, v4

    move-object v1, v6

    move-object/from16 v34, v7

    move-object v10, v13

    move-object/from16 v33, v17

    move/from16 v30, v18

    move-object/from16 v2, p10

    goto/16 :goto_1b

    .line 1502
    .end local v6    # "parentWindow":Lcom/android/server/wm/WindowState;
    .restart local v5    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v19    # "parentWindow":Lcom/android/server/wm/WindowState;
    :cond_c
    const/4 v10, 0x1

    .line 1517
    move-object/from16 v9, v19

    .end local v19    # "parentWindow":Lcom/android/server/wm/WindowState;
    .local v9, "parentWindow":Lcom/android/server/wm/WindowState;
    :goto_2
    const/16 v0, 0x7ee

    if-ne v2, v0, :cond_e

    :try_start_a
    invoke-virtual {v5}, Lcom/android/server/wm/DisplayContent;->isPrivate()Z

    move-result v0

    if-nez v0, :cond_e

    .line 1518
    sget-boolean v0, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v0, :cond_d

    sget-object v0, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const v1, -0x2ec986b2

    const-string v6, "Attempted to add private presentation window to a non-private display.  Aborting."

    const/4 v8, 0x0

    check-cast v8, [Ljava/lang/Object;

    const/4 v10, 0x0

    invoke-static {v0, v1, v10, v6, v8}, Lcom/android/internal/protolog/ProtoLogImpl;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 1521
    :cond_d
    const/4 v0, -0x8

    monitor-exit v7
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_3

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v0

    .line 1864
    .end local v5    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_3
    move-exception v0

    move-object/from16 v12, p9

    move v8, v2

    move/from16 v40, v3

    move v14, v4

    move-object/from16 v34, v7

    move-object v1, v9

    move-object v10, v13

    move-object/from16 v33, v17

    move/from16 v30, v18

    move-object/from16 v2, p10

    goto/16 :goto_1b

    .line 1524
    .restart local v5    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_e
    const/16 v0, 0x7f5

    if-ne v2, v0, :cond_10

    :try_start_b
    invoke-virtual {v5}, Lcom/android/server/wm/DisplayContent;->getDisplay()Landroid/view/Display;

    move-result-object v0

    invoke-virtual {v0}, Landroid/view/Display;->isPublicPresentation()Z

    move-result v0

    if-nez v0, :cond_10

    .line 1525
    sget-boolean v0, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v0, :cond_f

    sget-object v0, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const v1, -0x6394c91d

    const-string v6, "Attempted to add presentation window to a non-suitable display.  Aborting."

    const/4 v8, 0x0

    check-cast v8, [Ljava/lang/Object;

    const/4 v10, 0x0

    invoke-static {v0, v1, v10, v6, v8}, Lcom/android/internal/protolog/ProtoLogImpl;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 1528
    :cond_f
    monitor-exit v7
    :try_end_b
    .catchall {:try_start_b .. :try_end_b} :catchall_3

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    const/16 v0, -0x9

    return v0

    .line 1524
    :cond_10
    const/4 v6, 0x0

    .line 1531
    :try_start_c
    iget v0, v14, Lcom/android/server/wm/Session;->mUid:I

    invoke-static {v0}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v0
    :try_end_c
    .catchall {:try_start_c .. :try_end_c} :catchall_19

    move v8, v0

    .line 1532
    .local v8, "userId":I
    if-eq v11, v8, :cond_12

    .line 1534
    :try_start_d
    iget-object v1, v13, Lcom/android/server/wm/WindowManagerService;->mAmInternal:Landroid/app/ActivityManagerInternal;
    :try_end_d
    .catch Ljava/lang/Exception; {:try_start_d .. :try_end_d} :catch_1
    .catchall {:try_start_d .. :try_end_d} :catchall_5

    const/4 v0, 0x0

    const/16 v19, 0x0

    const/16 v21, 0x0

    const/16 v22, 0x0

    move/from16 v27, v2

    .end local v2    # "type":I
    .local v27, "type":I
    move v2, v3

    move/from16 v28, v3

    .end local v3    # "callingPid":I
    .local v28, "callingPid":I
    move v3, v4

    move/from16 v29, v4

    .end local v4    # "callingUid":I
    .local v29, "callingUid":I
    move/from16 v4, p6

    move-object/from16 v31, v5

    move/from16 v30, v18

    .end local v5    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v18    # "isRoundedCornerOverlay":Z
    .local v30, "isRoundedCornerOverlay":Z
    .local v31, "displayContent":Lcom/android/server/wm/DisplayContent;
    move v5, v0

    move/from16 v6, v19

    move-object/from16 v34, v7

    move-object/from16 v33, v17

    .end local v17    # "appOp":[I
    .local v33, "appOp":[I
    move-object/from16 v7, v21

    move v12, v10

    move v10, v8

    .end local v8    # "userId":I
    .local v10, "userId":I
    move-object/from16 v8, v22

    :try_start_e
    invoke-virtual/range {v1 .. v8}, Landroid/app/ActivityManagerInternal;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I
    :try_end_e
    .catch Ljava/lang/Exception; {:try_start_e .. :try_end_e} :catch_0
    .catchall {:try_start_e .. :try_end_e} :catchall_4

    .line 1540
    nop

    .line 1542
    move/from16 v8, p6

    move v0, v8

    const/4 v8, 0x0

    .end local v10    # "userId":I
    .restart local v8    # "userId":I
    goto/16 :goto_4

    .line 1864
    .end local v8    # "userId":I
    .end local v31    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_4
    move-exception v0

    move-object/from16 v12, p9

    move-object/from16 v2, p10

    move-object v1, v9

    move-object v10, v13

    move/from16 v8, v27

    move/from16 v40, v28

    move/from16 v14, v29

    goto/16 :goto_1b

    .line 1536
    .restart local v10    # "userId":I
    .restart local v31    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catch_0
    move-exception v0

    goto :goto_3

    .line 1864
    .end local v10    # "userId":I
    .end local v27    # "type":I
    .end local v28    # "callingPid":I
    .end local v29    # "callingUid":I
    .end local v30    # "isRoundedCornerOverlay":Z
    .end local v31    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v33    # "appOp":[I
    .restart local v2    # "type":I
    .restart local v3    # "callingPid":I
    .restart local v4    # "callingUid":I
    .restart local v17    # "appOp":[I
    .restart local v18    # "isRoundedCornerOverlay":Z
    :catchall_5
    move-exception v0

    move-object/from16 v34, v7

    move-object/from16 v33, v17

    move-object/from16 v12, p9

    move v8, v2

    move/from16 v40, v3

    move v14, v4

    move-object v1, v9

    move-object v10, v13

    move/from16 v30, v18

    move-object/from16 v2, p10

    .end local v2    # "type":I
    .end local v3    # "callingPid":I
    .end local v4    # "callingUid":I
    .end local v17    # "appOp":[I
    .end local v18    # "isRoundedCornerOverlay":Z
    .restart local v27    # "type":I
    .restart local v28    # "callingPid":I
    .restart local v29    # "callingUid":I
    .restart local v30    # "isRoundedCornerOverlay":Z
    .restart local v33    # "appOp":[I
    goto/16 :goto_1b

    .line 1536
    .end local v27    # "type":I
    .end local v28    # "callingPid":I
    .end local v29    # "callingUid":I
    .end local v30    # "isRoundedCornerOverlay":Z
    .end local v33    # "appOp":[I
    .restart local v2    # "type":I
    .restart local v3    # "callingPid":I
    .restart local v4    # "callingUid":I
    .restart local v5    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v8    # "userId":I
    .restart local v17    # "appOp":[I
    .restart local v18    # "isRoundedCornerOverlay":Z
    :catch_1
    move-exception v0

    move/from16 v27, v2

    move/from16 v28, v3

    move/from16 v29, v4

    move-object/from16 v31, v5

    move-object/from16 v34, v7

    move v12, v10

    move-object/from16 v33, v17

    move/from16 v30, v18

    move v10, v8

    .line 1537
    .end local v2    # "type":I
    .end local v3    # "callingPid":I
    .end local v4    # "callingUid":I
    .end local v5    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v8    # "userId":I
    .end local v17    # "appOp":[I
    .end local v18    # "isRoundedCornerOverlay":Z
    .local v0, "exp":Ljava/lang/Exception;
    .restart local v10    # "userId":I
    .restart local v27    # "type":I
    .restart local v28    # "callingPid":I
    .restart local v29    # "callingUid":I
    .restart local v30    # "isRoundedCornerOverlay":Z
    .restart local v31    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v33    # "appOp":[I
    :goto_3
    :try_start_f
    sget-boolean v1, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v1, :cond_11

    int-to-long v1, v11

    .local v1, "protoLogParam0":J
    sget-object v3, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const v4, 0x12cc8efb

    const-string v5, "Trying to add window with invalid user=%d"

    new-array v6, v12, [Ljava/lang/Object;

    invoke-static {v1, v2}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v7

    const/4 v8, 0x0

    aput-object v7, v6, v8

    invoke-static {v3, v4, v12, v5, v6}, Lcom/android/internal/protolog/ProtoLogImpl;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 1539
    .end local v1    # "protoLogParam0":J
    :cond_11
    const/16 v1, -0xb

    monitor-exit v34
    :try_end_f
    .catchall {:try_start_f .. :try_end_f} :catchall_4

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v1

    .line 1532
    .end local v0    # "exp":Ljava/lang/Exception;
    .end local v10    # "userId":I
    .end local v27    # "type":I
    .end local v28    # "callingPid":I
    .end local v29    # "callingUid":I
    .end local v30    # "isRoundedCornerOverlay":Z
    .end local v31    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v33    # "appOp":[I
    .restart local v2    # "type":I
    .restart local v3    # "callingPid":I
    .restart local v4    # "callingUid":I
    .restart local v5    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v8    # "userId":I
    .restart local v17    # "appOp":[I
    .restart local v18    # "isRoundedCornerOverlay":Z
    :cond_12
    move/from16 v27, v2

    move/from16 v28, v3

    move/from16 v29, v4

    move-object/from16 v31, v5

    move-object/from16 v34, v7

    move v12, v10

    move-object/from16 v33, v17

    move/from16 v30, v18

    move v10, v8

    move v8, v6

    .end local v2    # "type":I
    .end local v3    # "callingPid":I
    .end local v4    # "callingUid":I
    .end local v5    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v8    # "userId":I
    .end local v17    # "appOp":[I
    .end local v18    # "isRoundedCornerOverlay":Z
    .restart local v10    # "userId":I
    .restart local v27    # "type":I
    .restart local v28    # "callingPid":I
    .restart local v29    # "callingUid":I
    .restart local v30    # "isRoundedCornerOverlay":Z
    .restart local v31    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v33    # "appOp":[I
    move v0, v10

    .line 1545
    .end local v10    # "userId":I
    .local v0, "userId":I
    :goto_4
    const/4 v10, 0x0

    .line 1546
    .local v10, "activity":Lcom/android/server/wm/ActivityRecord;
    if-eqz v9, :cond_13

    move v1, v12

    goto :goto_5

    :cond_13
    move v1, v8

    :goto_5
    move/from16 v32, v1

    .line 1549
    .local v32, "hasParent":Z
    nop

    .line 1550
    if-eqz v32, :cond_14

    :try_start_10
    iget-object v1, v9, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget-object v1, v1, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;
    :try_end_10
    .catchall {:try_start_10 .. :try_end_10} :catchall_4

    goto :goto_6

    :cond_14
    :try_start_11
    iget-object v1, v15, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    .line 1549
    :goto_6
    move-object/from16 v7, v31

    .end local v31    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .local v7, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {v7, v1}, Lcom/android/server/wm/DisplayContent;->getWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/WindowToken;

    move-result-object v1
    :try_end_11
    .catchall {:try_start_11 .. :try_end_11} :catchall_18

    move-object v6, v1

    .line 1553
    .local v6, "token":Lcom/android/server/wm/WindowToken;
    if-eqz v32, :cond_15

    :try_start_12
    iget-object v1, v9, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v2, v1, Landroid/view/WindowManager$LayoutParams;->type:I
    :try_end_12
    .catchall {:try_start_12 .. :try_end_12} :catchall_4

    goto :goto_7

    :cond_15
    move/from16 v2, v27

    :goto_7
    move v5, v2

    .line 1555
    .local v5, "rootType":I
    const/16 v17, 0x0

    .line 1557
    .local v17, "addToastWindowRequiresToken":Z
    :try_start_13
    iget-object v1, v15, Landroid/view/WindowManager$LayoutParams;->mWindowContextToken:Landroid/os/IBinder;
    :try_end_13
    .catchall {:try_start_13 .. :try_end_13} :catchall_18

    move-object v4, v1

    .line 1559
    .local v4, "windowContextToken":Landroid/os/IBinder;
    const/16 v18, -0x4

    const/4 v3, 0x3

    const/16 v2, 0x7d5

    const/16 v1, 0x7dd

    const/16 v19, -0x1

    if-nez v6, :cond_1b

    .line 1560
    :try_start_14
    iget-object v8, v15, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    iget-object v12, v15, Landroid/view/WindowManager$LayoutParams;->packageName:Ljava/lang/String;

    move/from16 v35, v0

    move v0, v1

    .end local v0    # "userId":I
    .local v35, "userId":I
    move-object/from16 v1, p0

    move-object v2, v9

    move v0, v3

    move/from16 v3, v29

    move-object v0, v4

    .end local v4    # "windowContextToken":Landroid/os/IBinder;
    .local v0, "windowContextToken":Landroid/os/IBinder;
    move/from16 v4, v27

    move/from16 v37, v5

    .end local v5    # "rootType":I
    .local v37, "rootType":I
    move-object/from16 v38, v6

    .end local v6    # "token":Lcom/android/server/wm/WindowToken;
    .local v38, "token":Lcom/android/server/wm/WindowToken;
    move-object v6, v8

    move-object v8, v7

    .end local v7    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .local v8, "displayContent":Lcom/android/server/wm/DisplayContent;
    move-object v7, v12

    invoke-direct/range {v1 .. v7}, Lcom/android/server/wm/WindowManagerService;->unprivilegedAppCanCreateTokenWith(Lcom/android/server/wm/WindowState;IIILandroid/os/IBinder;Ljava/lang/String;)Z

    move-result v1
    :try_end_14
    .catchall {:try_start_14 .. :try_end_14} :catchall_7

    if-nez v1, :cond_16

    .line 1562
    :try_start_15
    monitor-exit v34
    :try_end_15
    .catchall {:try_start_15 .. :try_end_15} :catchall_4

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v19

    .line 1564
    :cond_16
    if-eqz v32, :cond_17

    .line 1566
    :try_start_16
    iget-object v1, v9, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;
    :try_end_16
    .catchall {:try_start_16 .. :try_end_16} :catchall_4

    move-object v6, v1

    move-object v7, v10

    move/from16 v12, v27

    const/4 v5, 0x1

    move-object v10, v6

    move/from16 v27, v17

    move/from16 v6, v37

    .end local v38    # "token":Lcom/android/server/wm/WindowToken;
    .restart local v6    # "token":Lcom/android/server/wm/WindowToken;
    goto/16 :goto_e

    .line 1567
    .end local v6    # "token":Lcom/android/server/wm/WindowToken;
    .restart local v38    # "token":Lcom/android/server/wm/WindowToken;
    :cond_17
    :try_start_17
    iget-object v1, v13, Lcom/android/server/wm/WindowManagerService;->mWindowContextListenerController:Lcom/android/server/wm/WindowContextListenerController;

    invoke-virtual {v1, v0}, Lcom/android/server/wm/WindowContextListenerController;->hasListener(Landroid/os/IBinder;)Z

    move-result v1

    if-eqz v1, :cond_19

    .line 1569
    iget-object v1, v15, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;
    :try_end_17
    .catchall {:try_start_17 .. :try_end_17} :catchall_7

    if-eqz v1, :cond_18

    :try_start_18
    iget-object v4, v15, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;
    :try_end_18
    .catchall {:try_start_18 .. :try_end_18} :catchall_4

    goto :goto_8

    :cond_18
    move-object v4, v0

    :goto_8
    move-object v1, v4

    .line 1570
    .local v1, "binder":Landroid/os/IBinder;
    :try_start_19
    iget-object v2, v13, Lcom/android/server/wm/WindowManagerService;->mWindowContextListenerController:Lcom/android/server/wm/WindowContextListenerController;

    .line 1571
    invoke-virtual {v2, v0}, Lcom/android/server/wm/WindowContextListenerController;->getOptions(Landroid/os/IBinder;)Landroid/os/Bundle;

    move-result-object v2

    .line 1572
    .local v2, "options":Landroid/os/Bundle;
    new-instance v3, Lcom/android/server/wm/WindowToken$Builder;
    :try_end_19
    .catchall {:try_start_19 .. :try_end_19} :catchall_7

    move/from16 v12, v27

    .end local v27    # "type":I
    .local v12, "type":I
    :try_start_1a
    invoke-direct {v3, v13, v1, v12}, Lcom/android/server/wm/WindowToken$Builder;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/os/IBinder;I)V

    .line 1573
    invoke-virtual {v3, v8}, Lcom/android/server/wm/WindowToken$Builder;->setDisplayContent(Lcom/android/server/wm/DisplayContent;)Lcom/android/server/wm/WindowToken$Builder;

    move-result-object v3

    iget-boolean v4, v14, Lcom/android/server/wm/Session;->mCanAddInternalSystemWindow:Z

    .line 1574
    invoke-virtual {v3, v4}, Lcom/android/server/wm/WindowToken$Builder;->setOwnerCanManageAppTokens(Z)Lcom/android/server/wm/WindowToken$Builder;

    move-result-object v3
    :try_end_1a
    .catchall {:try_start_1a .. :try_end_1a} :catchall_6

    .line 1575
    move/from16 v7, v30

    .end local v30    # "isRoundedCornerOverlay":Z
    .local v7, "isRoundedCornerOverlay":Z
    :try_start_1b
    invoke-virtual {v3, v7}, Lcom/android/server/wm/WindowToken$Builder;->setRoundedCornerOverlay(Z)Lcom/android/server/wm/WindowToken$Builder;

    move-result-object v3

    .line 1576
    const/4 v4, 0x1

    invoke-virtual {v3, v4}, Lcom/android/server/wm/WindowToken$Builder;->setFromClientToken(Z)Lcom/android/server/wm/WindowToken$Builder;

    move-result-object v3

    .line 1577
    invoke-virtual {v3, v2}, Lcom/android/server/wm/WindowToken$Builder;->setOptions(Landroid/os/Bundle;)Lcom/android/server/wm/WindowToken$Builder;

    move-result-object v3

    .line 1578
    invoke-virtual {v3}, Lcom/android/server/wm/WindowToken$Builder;->build()Lcom/android/server/wm/WindowToken;

    move-result-object v3

    move-object v6, v3

    .line 1579
    .end local v1    # "binder":Landroid/os/IBinder;
    .end local v2    # "options":Landroid/os/Bundle;
    .end local v38    # "token":Lcom/android/server/wm/WindowToken;
    .restart local v6    # "token":Lcom/android/server/wm/WindowToken;
    move/from16 v30, v7

    move-object v7, v10

    move/from16 v27, v17

    const/4 v5, 0x1

    move-object v10, v6

    move/from16 v6, v37

    goto/16 :goto_e

    .line 1864
    .end local v0    # "windowContextToken":Landroid/os/IBinder;
    .end local v6    # "token":Lcom/android/server/wm/WindowToken;
    .end local v7    # "isRoundedCornerOverlay":Z
    .end local v8    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v10    # "activity":Lcom/android/server/wm/ActivityRecord;
    .end local v17    # "addToastWindowRequiresToken":Z
    .end local v32    # "hasParent":Z
    .end local v35    # "userId":I
    .end local v37    # "rootType":I
    .restart local v30    # "isRoundedCornerOverlay":Z
    :catchall_6
    move-exception v0

    move-object/from16 v2, p10

    move-object v1, v9

    move v8, v12

    move-object v10, v13

    move/from16 v40, v28

    move/from16 v14, v29

    move-object/from16 v12, p9

    .end local v30    # "isRoundedCornerOverlay":Z
    .restart local v7    # "isRoundedCornerOverlay":Z
    goto/16 :goto_1b

    .line 1580
    .end local v7    # "isRoundedCornerOverlay":Z
    .end local v12    # "type":I
    .restart local v0    # "windowContextToken":Landroid/os/IBinder;
    .restart local v8    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v10    # "activity":Lcom/android/server/wm/ActivityRecord;
    .restart local v17    # "addToastWindowRequiresToken":Z
    .restart local v27    # "type":I
    .restart local v30    # "isRoundedCornerOverlay":Z
    .restart local v32    # "hasParent":Z
    .restart local v35    # "userId":I
    .restart local v37    # "rootType":I
    .restart local v38    # "token":Lcom/android/server/wm/WindowToken;
    :cond_19
    move/from16 v12, v27

    move/from16 v7, v30

    .end local v27    # "type":I
    .end local v30    # "isRoundedCornerOverlay":Z
    .restart local v7    # "isRoundedCornerOverlay":Z
    .restart local v12    # "type":I
    iget-object v1, v15, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    if-eqz v1, :cond_1a

    iget-object v1, v15, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    goto :goto_9

    :cond_1a
    invoke-interface/range {p2 .. p2}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    move-result-object v1

    .line 1581
    .restart local v1    # "binder":Landroid/os/IBinder;
    :goto_9
    new-instance v2, Lcom/android/server/wm/WindowToken$Builder;

    invoke-direct {v2, v13, v1, v12}, Lcom/android/server/wm/WindowToken$Builder;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/os/IBinder;I)V

    .line 1582
    invoke-virtual {v2, v8}, Lcom/android/server/wm/WindowToken$Builder;->setDisplayContent(Lcom/android/server/wm/DisplayContent;)Lcom/android/server/wm/WindowToken$Builder;

    move-result-object v2

    iget-boolean v3, v14, Lcom/android/server/wm/Session;->mCanAddInternalSystemWindow:Z

    .line 1583
    invoke-virtual {v2, v3}, Lcom/android/server/wm/WindowToken$Builder;->setOwnerCanManageAppTokens(Z)Lcom/android/server/wm/WindowToken$Builder;

    move-result-object v2

    .line 1584
    invoke-virtual {v2, v7}, Lcom/android/server/wm/WindowToken$Builder;->setRoundedCornerOverlay(Z)Lcom/android/server/wm/WindowToken$Builder;

    move-result-object v2

    .line 1585
    invoke-virtual {v2}, Lcom/android/server/wm/WindowToken$Builder;->build()Lcom/android/server/wm/WindowToken;

    move-result-object v2

    move-object v6, v2

    .line 1586
    .end local v1    # "binder":Landroid/os/IBinder;
    .end local v38    # "token":Lcom/android/server/wm/WindowToken;
    .restart local v6    # "token":Lcom/android/server/wm/WindowToken;
    move/from16 v30, v7

    move-object v7, v10

    move/from16 v27, v17

    const/4 v5, 0x1

    move-object v10, v6

    move/from16 v6, v37

    goto/16 :goto_e

    .line 1864
    .end local v0    # "windowContextToken":Landroid/os/IBinder;
    .end local v6    # "token":Lcom/android/server/wm/WindowToken;
    .end local v7    # "isRoundedCornerOverlay":Z
    .end local v8    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v10    # "activity":Lcom/android/server/wm/ActivityRecord;
    .end local v12    # "type":I
    .end local v17    # "addToastWindowRequiresToken":Z
    .end local v32    # "hasParent":Z
    .end local v35    # "userId":I
    .end local v37    # "rootType":I
    .restart local v27    # "type":I
    .restart local v30    # "isRoundedCornerOverlay":Z
    :catchall_7
    move-exception v0

    move-object/from16 v12, p9

    move-object/from16 v2, p10

    move-object v1, v9

    move-object v10, v13

    move/from16 v8, v27

    move/from16 v40, v28

    move/from16 v14, v29

    .end local v27    # "type":I
    .end local v30    # "isRoundedCornerOverlay":Z
    .restart local v7    # "isRoundedCornerOverlay":Z
    .restart local v12    # "type":I
    goto/16 :goto_1b

    .line 1587
    .end local v12    # "type":I
    .local v0, "userId":I
    .restart local v4    # "windowContextToken":Landroid/os/IBinder;
    .restart local v5    # "rootType":I
    .restart local v6    # "token":Lcom/android/server/wm/WindowToken;
    .local v7, "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v10    # "activity":Lcom/android/server/wm/ActivityRecord;
    .restart local v17    # "addToastWindowRequiresToken":Z
    .restart local v27    # "type":I
    .restart local v30    # "isRoundedCornerOverlay":Z
    .restart local v32    # "hasParent":Z
    :cond_1b
    move/from16 v35, v0

    move-object v0, v4

    move/from16 v37, v5

    move-object/from16 v38, v6

    move-object v8, v7

    move/from16 v12, v27

    move/from16 v7, v30

    .end local v4    # "windowContextToken":Landroid/os/IBinder;
    .end local v5    # "rootType":I
    .end local v6    # "token":Lcom/android/server/wm/WindowToken;
    .end local v27    # "type":I
    .end local v30    # "isRoundedCornerOverlay":Z
    .local v0, "windowContextToken":Landroid/os/IBinder;
    .local v7, "isRoundedCornerOverlay":Z
    .restart local v8    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v12    # "type":I
    .restart local v35    # "userId":I
    .restart local v37    # "rootType":I
    .restart local v38    # "token":Lcom/android/server/wm/WindowToken;
    move/from16 v6, v37

    const/4 v1, 0x1

    .end local v37    # "rootType":I
    .local v6, "rootType":I
    if-lt v6, v1, :cond_24

    const/16 v1, 0x63

    if-gt v6, v1, :cond_24

    .line 1589
    invoke-virtual/range {v38 .. v38}, Lcom/android/server/wm/WindowToken;->asActivityRecord()Lcom/android/server/wm/ActivityRecord;

    move-result-object v1

    move-object v10, v1

    .line 1590
    if-nez v10, :cond_1d

    .line 1591
    sget-boolean v1, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v1, :cond_1c

    invoke-static/range {v38 .. v38}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v1

    .local v1, "protoLogParam0":Ljava/lang/String;
    sget-object v2, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const-string v4, "Attempted to add window with non-application token .%s Aborting."

    const/4 v5, 0x1

    new-array v5, v5, [Ljava/lang/Object;

    const/4 v3, 0x0

    aput-object v1, v5, v3

    move-object/from16 v19, v1

    const v1, 0xeb3fde9

    .end local v1    # "protoLogParam0":Ljava/lang/String;
    .local v19, "protoLogParam0":Ljava/lang/String;
    invoke-static {v2, v1, v3, v4, v5}, Lcom/android/internal/protolog/ProtoLogImpl;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 1593
    .end local v19    # "protoLogParam0":Ljava/lang/String;
    :cond_1c
    const/4 v1, -0x3

    monitor-exit v34
    :try_end_1b
    .catchall {:try_start_1b .. :try_end_1b} :catchall_8

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v1

    .line 1594
    :cond_1d
    :try_start_1c
    invoke-virtual {v10}, Lcom/android/server/wm/ActivityRecord;->getParent()Lcom/android/server/wm/WindowContainer;

    move-result-object v1

    if-nez v1, :cond_1f

    .line 1595
    sget-boolean v1, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v1, :cond_1e

    invoke-static/range {v38 .. v38}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v1

    .restart local v1    # "protoLogParam0":Ljava/lang/String;
    sget-object v2, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const-string v4, "Attempted to add window with exiting application token .%s Aborting."

    const/4 v5, 0x1

    new-array v5, v5, [Ljava/lang/Object;

    const/4 v3, 0x0

    aput-object v1, v5, v3

    move-object/from16 v20, v1

    const v1, -0x32db34b3

    .end local v1    # "protoLogParam0":Ljava/lang/String;
    .local v20, "protoLogParam0":Ljava/lang/String;
    invoke-static {v2, v1, v3, v4, v5}, Lcom/android/internal/protolog/ProtoLogImpl;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 1597
    .end local v20    # "protoLogParam0":Ljava/lang/String;
    :cond_1e
    monitor-exit v34
    :try_end_1c
    .catchall {:try_start_1c .. :try_end_1c} :catchall_8

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v18

    .line 1598
    :cond_1f
    const/4 v1, 0x3

    if-ne v12, v1, :cond_23

    .line 1599
    :try_start_1d
    iget-object v1, v10, Lcom/android/server/wm/ActivityRecord;->mStartingWindow:Lcom/android/server/wm/WindowState;

    if-eqz v1, :cond_21

    .line 1600
    sget-boolean v1, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v1, :cond_20

    sget-object v1, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const v2, -0xa00c667

    const-string v3, "Attempted to add starting window to token with already existing starting window"

    const/4 v4, 0x0

    check-cast v4, [Ljava/lang/Object;

    const/4 v5, 0x0

    invoke-static {v1, v2, v5, v3, v4}, Lcom/android/internal/protolog/ProtoLogImpl;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 1602
    :cond_20
    monitor-exit v34
    :try_end_1d
    .catchall {:try_start_1d .. :try_end_1d} :catchall_8

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v26

    .line 1604
    :cond_21
    :try_start_1e
    iget-object v1, v10, Lcom/android/server/wm/ActivityRecord;->mStartingData:Lcom/android/server/wm/StartingData;

    if-nez v1, :cond_23

    .line 1605
    sget-boolean v1, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v1, :cond_22

    sget-object v1, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const v2, 0x6b8a9a7d

    const-string v3, "Attempted to add starting window to token but already cleaned"

    const/4 v4, 0x0

    check-cast v4, [Ljava/lang/Object;

    const/4 v5, 0x0

    invoke-static {v1, v2, v5, v3, v4}, Lcom/android/internal/protolog/ProtoLogImpl;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 1607
    :cond_22
    monitor-exit v34
    :try_end_1e
    .catchall {:try_start_1e .. :try_end_1e} :catchall_8

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v26

    .line 1662
    :cond_23
    move/from16 v30, v7

    move-object v7, v10

    move/from16 v27, v17

    move-object/from16 v10, v38

    const/4 v5, 0x1

    goto/16 :goto_e

    .line 1864
    .end local v0    # "windowContextToken":Landroid/os/IBinder;
    .end local v6    # "rootType":I
    .end local v8    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v10    # "activity":Lcom/android/server/wm/ActivityRecord;
    .end local v17    # "addToastWindowRequiresToken":Z
    .end local v32    # "hasParent":Z
    .end local v35    # "userId":I
    .end local v38    # "token":Lcom/android/server/wm/WindowToken;
    :catchall_8
    move-exception v0

    move-object/from16 v2, p10

    move/from16 v30, v7

    move-object v1, v9

    move v8, v12

    move-object v10, v13

    move/from16 v40, v28

    move/from16 v14, v29

    move-object/from16 v12, p9

    goto/16 :goto_1b

    .line 1610
    .restart local v0    # "windowContextToken":Landroid/os/IBinder;
    .restart local v6    # "rootType":I
    .restart local v8    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v10    # "activity":Lcom/android/server/wm/ActivityRecord;
    .restart local v17    # "addToastWindowRequiresToken":Z
    .restart local v32    # "hasParent":Z
    .restart local v35    # "userId":I
    .restart local v38    # "token":Lcom/android/server/wm/WindowToken;
    :cond_24
    const/16 v5, 0x7db

    if-ne v6, v5, :cond_27

    .line 1611
    move-object/from16 v1, v38

    .end local v38    # "token":Lcom/android/server/wm/WindowToken;
    .local v1, "token":Lcom/android/server/wm/WindowToken;
    :try_start_1f
    iget v2, v1, Lcom/android/server/wm/WindowToken;->windowType:I

    if-eq v2, v5, :cond_26

    .line 1612
    sget-boolean v2, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v2, :cond_25

    iget-object v2, v15, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    invoke-static {v2}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v2

    .local v2, "protoLogParam0":Ljava/lang/String;
    sget-object v3, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const-string v5, "Attempted to add input method window with bad token %s.  Aborting."

    const/4 v4, 0x1

    new-array v4, v4, [Ljava/lang/Object;
    :try_end_1f
    .catchall {:try_start_1f .. :try_end_1f} :catchall_9

    move/from16 v30, v7

    const/4 v7, 0x0

    .end local v7    # "isRoundedCornerOverlay":Z
    .restart local v30    # "isRoundedCornerOverlay":Z
    :try_start_20
    aput-object v2, v4, v7

    move-object/from16 v20, v2

    const v2, -0x742fa33d

    .end local v2    # "protoLogParam0":Ljava/lang/String;
    .restart local v20    # "protoLogParam0":Ljava/lang/String;
    invoke-static {v3, v2, v7, v5, v4}, Lcom/android/internal/protolog/ProtoLogImpl;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    goto :goto_a

    .end local v20    # "protoLogParam0":Ljava/lang/String;
    .end local v30    # "isRoundedCornerOverlay":Z
    .restart local v7    # "isRoundedCornerOverlay":Z
    :cond_25
    move/from16 v30, v7

    .line 1614
    .end local v7    # "isRoundedCornerOverlay":Z
    .restart local v30    # "isRoundedCornerOverlay":Z
    :goto_a
    monitor-exit v34
    :try_end_20
    .catchall {:try_start_20 .. :try_end_20} :catchall_a

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v19

    .line 1611
    .end local v30    # "isRoundedCornerOverlay":Z
    .restart local v7    # "isRoundedCornerOverlay":Z
    :cond_26
    move/from16 v30, v7

    .end local v7    # "isRoundedCornerOverlay":Z
    .restart local v30    # "isRoundedCornerOverlay":Z
    move-object/from16 v38, v1

    const/4 v5, 0x1

    goto/16 :goto_d

    .line 1864
    .end local v0    # "windowContextToken":Landroid/os/IBinder;
    .end local v1    # "token":Lcom/android/server/wm/WindowToken;
    .end local v6    # "rootType":I
    .end local v8    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v10    # "activity":Lcom/android/server/wm/ActivityRecord;
    .end local v17    # "addToastWindowRequiresToken":Z
    .end local v30    # "isRoundedCornerOverlay":Z
    .end local v32    # "hasParent":Z
    .end local v35    # "userId":I
    .restart local v7    # "isRoundedCornerOverlay":Z
    :catchall_9
    move-exception v0

    move-object/from16 v2, p10

    move/from16 v30, v7

    move-object v1, v9

    move v8, v12

    move-object v10, v13

    move/from16 v40, v28

    move/from16 v14, v29

    move-object/from16 v12, p9

    .end local v7    # "isRoundedCornerOverlay":Z
    .restart local v30    # "isRoundedCornerOverlay":Z
    goto/16 :goto_1b

    .line 1616
    .end local v30    # "isRoundedCornerOverlay":Z
    .restart local v0    # "windowContextToken":Landroid/os/IBinder;
    .restart local v6    # "rootType":I
    .restart local v7    # "isRoundedCornerOverlay":Z
    .restart local v8    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v10    # "activity":Lcom/android/server/wm/ActivityRecord;
    .restart local v17    # "addToastWindowRequiresToken":Z
    .restart local v32    # "hasParent":Z
    .restart local v35    # "userId":I
    .restart local v38    # "token":Lcom/android/server/wm/WindowToken;
    :cond_27
    move/from16 v30, v7

    move-object/from16 v1, v38

    .end local v7    # "isRoundedCornerOverlay":Z
    .end local v38    # "token":Lcom/android/server/wm/WindowToken;
    .restart local v1    # "token":Lcom/android/server/wm/WindowToken;
    .restart local v30    # "isRoundedCornerOverlay":Z
    const/16 v2, 0x7ef

    if-ne v6, v2, :cond_2a

    .line 1617
    :try_start_21
    iget v3, v1, Lcom/android/server/wm/WindowToken;->windowType:I

    if-eq v3, v2, :cond_29

    .line 1618
    sget-boolean v2, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v2, :cond_28

    iget-object v2, v15, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    invoke-static {v2}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v2

    .restart local v2    # "protoLogParam0":Ljava/lang/String;
    sget-object v3, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const-string v5, "Attempted to add voice interaction window with bad token %s.  Aborting."

    const/4 v7, 0x1

    new-array v7, v7, [Ljava/lang/Object;

    const/4 v4, 0x0

    aput-object v2, v7, v4

    move-object/from16 v20, v2

    const v2, -0x52d64004

    .end local v2    # "protoLogParam0":Ljava/lang/String;
    .restart local v20    # "protoLogParam0":Ljava/lang/String;
    invoke-static {v3, v2, v4, v5, v7}, Lcom/android/internal/protolog/ProtoLogImpl;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 1620
    .end local v20    # "protoLogParam0":Ljava/lang/String;
    :cond_28
    monitor-exit v34
    :try_end_21
    .catchall {:try_start_21 .. :try_end_21} :catchall_a

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v19

    .line 1617
    :cond_29
    move-object/from16 v38, v1

    const/4 v5, 0x1

    goto/16 :goto_d

    .line 1864
    .end local v0    # "windowContextToken":Landroid/os/IBinder;
    .end local v1    # "token":Lcom/android/server/wm/WindowToken;
    .end local v6    # "rootType":I
    .end local v8    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v10    # "activity":Lcom/android/server/wm/ActivityRecord;
    .end local v17    # "addToastWindowRequiresToken":Z
    .end local v32    # "hasParent":Z
    .end local v35    # "userId":I
    :catchall_a
    move-exception v0

    move-object/from16 v2, p10

    move-object v1, v9

    move v8, v12

    move-object v10, v13

    move/from16 v40, v28

    move/from16 v14, v29

    move-object/from16 v12, p9

    goto/16 :goto_1b

    .line 1622
    .restart local v0    # "windowContextToken":Landroid/os/IBinder;
    .restart local v1    # "token":Lcom/android/server/wm/WindowToken;
    .restart local v6    # "rootType":I
    .restart local v8    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v10    # "activity":Lcom/android/server/wm/ActivityRecord;
    .restart local v17    # "addToastWindowRequiresToken":Z
    .restart local v32    # "hasParent":Z
    .restart local v35    # "userId":I
    :cond_2a
    const/16 v2, 0x7dd

    if-ne v6, v2, :cond_2d

    .line 1623
    :try_start_22
    iget v3, v1, Lcom/android/server/wm/WindowToken;->windowType:I

    if-eq v3, v2, :cond_2c

    .line 1624
    sget-boolean v2, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v2, :cond_2b

    iget-object v2, v15, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    invoke-static {v2}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v2

    .restart local v2    # "protoLogParam0":Ljava/lang/String;
    sget-object v3, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const-string v5, "Attempted to add wallpaper window with bad token %s.  Aborting."

    const/4 v7, 0x1

    new-array v7, v7, [Ljava/lang/Object;

    const/4 v4, 0x0

    aput-object v2, v7, v4

    move-object/from16 v20, v2

    const v2, -0x7228db22

    .end local v2    # "protoLogParam0":Ljava/lang/String;
    .restart local v20    # "protoLogParam0":Ljava/lang/String;
    invoke-static {v3, v2, v4, v5, v7}, Lcom/android/internal/protolog/ProtoLogImpl;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 1626
    .end local v20    # "protoLogParam0":Ljava/lang/String;
    :cond_2b
    monitor-exit v34
    :try_end_22
    .catchall {:try_start_22 .. :try_end_22} :catchall_a

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v19

    .line 1623
    :cond_2c
    move-object/from16 v38, v1

    const/4 v5, 0x1

    goto/16 :goto_d

    .line 1628
    :cond_2d
    const/16 v2, 0x7f0

    if-ne v6, v2, :cond_30

    .line 1629
    :try_start_23
    iget v3, v1, Lcom/android/server/wm/WindowToken;->windowType:I

    if-eq v3, v2, :cond_2f

    .line 1630
    sget-boolean v2, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v2, :cond_2e

    iget-object v2, v15, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    invoke-static {v2}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v2

    .restart local v2    # "protoLogParam0":Ljava/lang/String;
    sget-object v3, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const-string v5, "Attempted to add Accessibility overlay window with bad token %s.  Aborting."

    const/4 v7, 0x1

    new-array v7, v7, [Ljava/lang/Object;

    const/4 v4, 0x0

    aput-object v2, v7, v4

    move-object/from16 v20, v2

    const v2, -0x75d5917e

    .end local v2    # "protoLogParam0":Ljava/lang/String;
    .restart local v20    # "protoLogParam0":Ljava/lang/String;
    invoke-static {v3, v2, v4, v5, v7}, Lcom/android/internal/protolog/ProtoLogImpl;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 1633
    .end local v20    # "protoLogParam0":Ljava/lang/String;
    :cond_2e
    monitor-exit v34
    :try_end_23
    .catchall {:try_start_23 .. :try_end_23} :catchall_a

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v19

    .line 1629
    :cond_2f
    move-object/from16 v38, v1

    const/4 v5, 0x1

    goto/16 :goto_d

    .line 1635
    :cond_30
    const/16 v7, 0x7d5

    if-ne v12, v7, :cond_33

    .line 1637
    :try_start_24
    iget-object v2, v15, Landroid/view/WindowManager$LayoutParams;->packageName:Ljava/lang/String;
    :try_end_24
    .catchall {:try_start_24 .. :try_end_24} :catchall_a

    move/from16 v4, v29

    .end local v29    # "callingUid":I
    .local v4, "callingUid":I
    :try_start_25
    invoke-direct {v13, v2, v4, v9}, Lcom/android/server/wm/WindowManagerService;->doesAddToastWindowRequireToken(Ljava/lang/String;ILcom/android/server/wm/WindowState;)Z

    move-result v2

    move/from16 v17, v2

    .line 1639
    if-eqz v17, :cond_32

    iget v2, v1, Lcom/android/server/wm/WindowToken;->windowType:I

    if-eq v2, v7, :cond_32

    .line 1640
    sget-boolean v2, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v2, :cond_31

    iget-object v2, v15, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    invoke-static {v2}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v2

    .restart local v2    # "protoLogParam0":Ljava/lang/String;
    sget-object v3, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const-string v7, "Attempted to add a toast window with bad token %s.  Aborting."

    const/4 v5, 0x1

    new-array v5, v5, [Ljava/lang/Object;
    :try_end_25
    .catchall {:try_start_25 .. :try_end_25} :catchall_b

    move/from16 v29, v4

    const/4 v4, 0x0

    .end local v4    # "callingUid":I
    .restart local v29    # "callingUid":I
    :try_start_26
    aput-object v2, v5, v4

    move-object/from16 v20, v2

    const v2, 0x277e0eb8

    .end local v2    # "protoLogParam0":Ljava/lang/String;
    .restart local v20    # "protoLogParam0":Ljava/lang/String;
    invoke-static {v3, v2, v4, v7, v5}, Lcom/android/internal/protolog/ProtoLogImpl;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    goto :goto_b

    .end local v20    # "protoLogParam0":Ljava/lang/String;
    .end local v29    # "callingUid":I
    .restart local v4    # "callingUid":I
    :cond_31
    move/from16 v29, v4

    .line 1642
    .end local v4    # "callingUid":I
    .restart local v29    # "callingUid":I
    :goto_b
    monitor-exit v34
    :try_end_26
    .catchall {:try_start_26 .. :try_end_26} :catchall_a

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v19

    .line 1639
    .end local v29    # "callingUid":I
    .restart local v4    # "callingUid":I
    :cond_32
    move/from16 v29, v4

    .line 1662
    .end local v4    # "callingUid":I
    .restart local v29    # "callingUid":I
    move-object v7, v10

    move/from16 v27, v17

    const/4 v5, 0x1

    move-object v10, v1

    goto/16 :goto_e

    .line 1864
    .end local v0    # "windowContextToken":Landroid/os/IBinder;
    .end local v1    # "token":Lcom/android/server/wm/WindowToken;
    .end local v6    # "rootType":I
    .end local v8    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v10    # "activity":Lcom/android/server/wm/ActivityRecord;
    .end local v17    # "addToastWindowRequiresToken":Z
    .end local v29    # "callingUid":I
    .end local v32    # "hasParent":Z
    .end local v35    # "userId":I
    .restart local v4    # "callingUid":I
    :catchall_b
    move-exception v0

    move-object/from16 v2, p10

    move v14, v4

    move-object v1, v9

    move v8, v12

    move-object v10, v13

    move/from16 v40, v28

    move-object/from16 v12, p9

    .end local v4    # "callingUid":I
    .restart local v29    # "callingUid":I
    goto/16 :goto_1b

    .line 1644
    .restart local v0    # "windowContextToken":Landroid/os/IBinder;
    .restart local v1    # "token":Lcom/android/server/wm/WindowToken;
    .restart local v6    # "rootType":I
    .restart local v8    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v10    # "activity":Lcom/android/server/wm/ActivityRecord;
    .restart local v17    # "addToastWindowRequiresToken":Z
    .restart local v32    # "hasParent":Z
    .restart local v35    # "userId":I
    :cond_33
    const/16 v2, 0x7f3

    if-ne v12, v2, :cond_36

    .line 1645
    :try_start_27
    iget v3, v1, Lcom/android/server/wm/WindowToken;->windowType:I

    if-eq v3, v2, :cond_35

    .line 1646
    sget-boolean v2, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v2, :cond_34

    iget-object v2, v15, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    invoke-static {v2}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v2

    .restart local v2    # "protoLogParam0":Ljava/lang/String;
    sget-object v3, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const-string v5, "Attempted to add QS dialog window with bad token %s.  Aborting."

    const/4 v7, 0x1

    new-array v7, v7, [Ljava/lang/Object;

    const/4 v4, 0x0

    aput-object v2, v7, v4

    move-object/from16 v20, v2

    const v2, -0x3f33e5a6

    .end local v2    # "protoLogParam0":Ljava/lang/String;
    .restart local v20    # "protoLogParam0":Ljava/lang/String;
    invoke-static {v3, v2, v4, v5, v7}, Lcom/android/internal/protolog/ProtoLogImpl;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 1648
    .end local v20    # "protoLogParam0":Ljava/lang/String;
    :cond_34
    monitor-exit v34
    :try_end_27
    .catchall {:try_start_27 .. :try_end_27} :catchall_a

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v19

    .line 1645
    :cond_35
    move-object/from16 v38, v1

    const/4 v5, 0x1

    goto :goto_d

    .line 1650
    :cond_36
    :try_start_28
    invoke-virtual {v1}, Lcom/android/server/wm/WindowToken;->asActivityRecord()Lcom/android/server/wm/ActivityRecord;

    move-result-object v2
    :try_end_28
    .catchall {:try_start_28 .. :try_end_28} :catchall_17

    if-eqz v2, :cond_38

    .line 1651
    :try_start_29
    sget-boolean v2, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v2, :cond_37

    int-to-long v2, v6

    .local v2, "protoLogParam0":J
    sget-object v4, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const-string v7, "Non-null activity for system window of rootType=%d"

    move-object/from16 v38, v1

    const/4 v5, 0x1

    .end local v1    # "token":Lcom/android/server/wm/WindowToken;
    .restart local v38    # "token":Lcom/android/server/wm/WindowToken;
    new-array v1, v5, [Ljava/lang/Object;

    invoke-static {v2, v3}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v27

    const/16 v21, 0x0

    aput-object v27, v1, v21

    move-wide/from16 v39, v2

    const v2, 0x16385b87

    .end local v2    # "protoLogParam0":J
    .local v39, "protoLogParam0":J
    invoke-static {v4, v2, v5, v7, v1}, Lcom/android/internal/protolog/ProtoLogImpl;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    goto :goto_c

    .end local v38    # "token":Lcom/android/server/wm/WindowToken;
    .end local v39    # "protoLogParam0":J
    .restart local v1    # "token":Lcom/android/server/wm/WindowToken;
    :cond_37
    move-object/from16 v38, v1

    const/4 v5, 0x1

    .line 1655
    .end local v1    # "token":Lcom/android/server/wm/WindowToken;
    .restart local v38    # "token":Lcom/android/server/wm/WindowToken;
    :goto_c
    const/4 v1, 0x0

    iput-object v1, v15, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    .line 1656
    new-instance v1, Lcom/android/server/wm/WindowToken$Builder;

    invoke-interface/range {p2 .. p2}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    move-result-object v2

    invoke-direct {v1, v13, v2, v12}, Lcom/android/server/wm/WindowToken$Builder;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/os/IBinder;I)V

    .line 1657
    invoke-virtual {v1, v8}, Lcom/android/server/wm/WindowToken$Builder;->setDisplayContent(Lcom/android/server/wm/DisplayContent;)Lcom/android/server/wm/WindowToken$Builder;

    move-result-object v1

    iget-boolean v2, v14, Lcom/android/server/wm/Session;->mCanAddInternalSystemWindow:Z

    .line 1658
    invoke-virtual {v1, v2}, Lcom/android/server/wm/WindowToken$Builder;->setOwnerCanManageAppTokens(Z)Lcom/android/server/wm/WindowToken$Builder;

    move-result-object v1

    .line 1659
    invoke-virtual {v1}, Lcom/android/server/wm/WindowToken$Builder;->build()Lcom/android/server/wm/WindowToken;

    move-result-object v1
    :try_end_29
    .catchall {:try_start_29 .. :try_end_29} :catchall_a

    move-object v7, v10

    move/from16 v27, v17

    move-object v10, v1

    .end local v38    # "token":Lcom/android/server/wm/WindowToken;
    .restart local v1    # "token":Lcom/android/server/wm/WindowToken;
    goto :goto_e

    .line 1650
    :cond_38
    move-object/from16 v38, v1

    const/4 v5, 0x1

    .line 1662
    :goto_d
    move-object v7, v10

    move/from16 v27, v17

    move-object/from16 v10, v38

    .end local v1    # "token":Lcom/android/server/wm/WindowToken;
    .end local v17    # "addToastWindowRequiresToken":Z
    .local v7, "activity":Lcom/android/server/wm/ActivityRecord;
    .local v10, "token":Lcom/android/server/wm/WindowToken;
    .local v27, "addToastWindowRequiresToken":Z
    :goto_e
    :try_start_2a
    new-instance v17, Lcom/android/server/wm/WindowState;

    const/16 v19, 0x0

    aget v21, v33, v19

    iget v4, v14, Lcom/android/server/wm/Session;->mUid:I

    iget-boolean v3, v14, Lcom/android/server/wm/Session;->mCanAddInternalSystemWindow:Z
    :try_end_2a
    .catchall {:try_start_2a .. :try_end_2a} :catchall_17

    move-object/from16 v1, v17

    move-object/from16 v2, p0

    move/from16 v31, v3

    move-object/from16 v3, p1

    move/from16 v14, v29

    move/from16 v29, v4

    .end local v29    # "callingUid":I
    .local v14, "callingUid":I
    move-object/from16 v4, p2

    move/from16 v37, v5

    const/16 v22, 0x7db

    move-object v5, v10

    move/from16 v38, v6

    .end local v6    # "rootType":I
    .local v38, "rootType":I
    move-object v6, v9

    move-object/from16 v39, v0

    move-object/from16 v36, v7

    const/16 v0, 0x7d5

    .end local v0    # "windowContextToken":Landroid/os/IBinder;
    .end local v7    # "activity":Lcom/android/server/wm/ActivityRecord;
    .local v36, "activity":Lcom/android/server/wm/ActivityRecord;
    .local v39, "windowContextToken":Landroid/os/IBinder;
    move/from16 v7, v21

    move-object/from16 v40, v8

    move/from16 v13, v19

    .end local v8    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .local v40, "displayContent":Lcom/android/server/wm/DisplayContent;
    move-object/from16 v8, p3

    move-object/from16 v41, v9

    .end local v9    # "parentWindow":Lcom/android/server/wm/WindowState;
    .local v41, "parentWindow":Lcom/android/server/wm/WindowState;
    move/from16 v9, p4

    move-object/from16 v42, v10

    .end local v10    # "token":Lcom/android/server/wm/WindowToken;
    .local v42, "token":Lcom/android/server/wm/WindowToken;
    move/from16 v10, v29

    move/from16 v11, v35

    move/from16 v43, v12

    move/from16 v13, v37

    .end local v12    # "type":I
    .local v43, "type":I
    move/from16 v12, v31

    :try_start_2b
    invoke-direct/range {v1 .. v12}, Lcom/android/server/wm/WindowState;-><init>(Lcom/android/server/wm/WindowManagerService;Lcom/android/server/wm/Session;Landroid/view/IWindow;Lcom/android/server/wm/WindowToken;Lcom/android/server/wm/WindowState;ILandroid/view/WindowManager$LayoutParams;IIIZ)V

    move-object/from16 v1, v17

    .line 1665
    .local v1, "win":Lcom/android/server/wm/WindowState;
    iget-object v2, v1, Lcom/android/server/wm/WindowState;->mDeathRecipient:Lcom/android/server/wm/WindowState$DeathRecipient;
    :try_end_2b
    .catchall {:try_start_2b .. :try_end_2b} :catchall_16

    if-nez v2, :cond_3a

    .line 1668
    :try_start_2c
    sget-boolean v0, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v0, :cond_39

    invoke-interface/range {p2 .. p2}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    move-result-object v0

    invoke-static {v0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v0

    .local v0, "protoLogParam0":Ljava/lang/String;
    sget-object v2, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const v3, -0x6981363f

    const-string v4, "Adding window client %s that is dead, aborting."

    new-array v5, v13, [Ljava/lang/Object;

    const/4 v6, 0x0

    aput-object v0, v5, v6

    invoke-static {v2, v3, v6, v4, v5}, Lcom/android/internal/protolog/ProtoLogImpl;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 1670
    .end local v0    # "protoLogParam0":Ljava/lang/String;
    :cond_39
    monitor-exit v34
    :try_end_2c
    .catchall {:try_start_2c .. :try_end_2c} :catchall_c

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v18

    .line 1864
    .end local v1    # "win":Lcom/android/server/wm/WindowState;
    .end local v27    # "addToastWindowRequiresToken":Z
    .end local v32    # "hasParent":Z
    .end local v35    # "userId":I
    .end local v36    # "activity":Lcom/android/server/wm/ActivityRecord;
    .end local v38    # "rootType":I
    .end local v39    # "windowContextToken":Landroid/os/IBinder;
    .end local v40    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v42    # "token":Lcom/android/server/wm/WindowToken;
    :catchall_c
    move-exception v0

    move-object/from16 v10, p0

    move-object/from16 v12, p9

    move-object/from16 v2, p10

    move/from16 v40, v28

    move-object/from16 v1, v41

    move/from16 v8, v43

    goto/16 :goto_1b

    .line 1673
    .restart local v1    # "win":Lcom/android/server/wm/WindowState;
    .restart local v27    # "addToastWindowRequiresToken":Z
    .restart local v32    # "hasParent":Z
    .restart local v35    # "userId":I
    .restart local v36    # "activity":Lcom/android/server/wm/ActivityRecord;
    .restart local v38    # "rootType":I
    .restart local v39    # "windowContextToken":Landroid/os/IBinder;
    .restart local v40    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v42    # "token":Lcom/android/server/wm/WindowToken;
    :cond_3a
    :try_start_2d
    invoke-virtual {v1}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v2
    :try_end_2d
    .catchall {:try_start_2d .. :try_end_2d} :catchall_16

    if-nez v2, :cond_3c

    .line 1674
    :try_start_2e
    sget-boolean v0, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v0, :cond_3b

    sget-object v0, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const v2, 0x668fbcfd

    const-string v3, "Adding window to Display that has been removed."

    const/4 v4, 0x0

    check-cast v4, [Ljava/lang/Object;

    const/4 v5, 0x0

    invoke-static {v0, v2, v5, v3, v4}, Lcom/android/internal/protolog/ProtoLogImpl;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 1675
    :cond_3b
    monitor-exit v34
    :try_end_2e
    .catchall {:try_start_2e .. :try_end_2e} :catchall_c

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    const/16 v0, -0x9

    return v0

    .line 1678
    :cond_3c
    :try_start_2f
    invoke-virtual/range {v40 .. v40}, Lcom/android/server/wm/DisplayContent;->getDisplayPolicy()Lcom/android/server/wm/DisplayPolicy;

    move-result-object v2

    .line 1679
    .local v2, "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    iget-object v3, v1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    invoke-virtual {v2, v1, v3}, Lcom/android/server/wm/DisplayPolicy;->adjustWindowParamsLw(Lcom/android/server/wm/WindowState;Landroid/view/WindowManager$LayoutParams;)V

    .line 1680
    move-object/from16 v3, p7

    invoke-virtual {v1, v3}, Lcom/android/server/wm/WindowState;->updateRequestedVisibility(Landroid/view/InsetsState;)V
    :try_end_2f
    .catchall {:try_start_2f .. :try_end_2f} :catchall_16

    .line 1682
    move/from16 v4, v28

    .end local v28    # "callingPid":I
    .local v4, "callingPid":I
    :try_start_30
    invoke-virtual {v2, v15, v4, v14}, Lcom/android/server/wm/DisplayPolicy;->validateAddingWindowLw(Landroid/view/WindowManager$LayoutParams;II)I

    move-result v5
    :try_end_30
    .catchall {:try_start_30 .. :try_end_30} :catchall_15

    move/from16 v16, v5

    .line 1683
    if-eqz v16, :cond_3d

    .line 1684
    :try_start_31
    monitor-exit v34
    :try_end_31
    .catchall {:try_start_31 .. :try_end_31} :catchall_d

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v16

    .line 1864
    .end local v1    # "win":Lcom/android/server/wm/WindowState;
    .end local v2    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .end local v27    # "addToastWindowRequiresToken":Z
    .end local v32    # "hasParent":Z
    .end local v35    # "userId":I
    .end local v36    # "activity":Lcom/android/server/wm/ActivityRecord;
    .end local v38    # "rootType":I
    .end local v39    # "windowContextToken":Landroid/os/IBinder;
    .end local v40    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v42    # "token":Lcom/android/server/wm/WindowToken;
    :catchall_d
    move-exception v0

    move-object/from16 v10, p0

    move-object/from16 v12, p9

    move-object/from16 v2, p10

    move/from16 v40, v4

    move-object/from16 v1, v41

    move/from16 v8, v43

    goto/16 :goto_1b

    .line 1687
    .restart local v1    # "win":Lcom/android/server/wm/WindowState;
    .restart local v2    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .restart local v27    # "addToastWindowRequiresToken":Z
    .restart local v32    # "hasParent":Z
    .restart local v35    # "userId":I
    .restart local v36    # "activity":Lcom/android/server/wm/ActivityRecord;
    .restart local v38    # "rootType":I
    .restart local v39    # "windowContextToken":Landroid/os/IBinder;
    .restart local v40    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v42    # "token":Lcom/android/server/wm/WindowToken;
    :cond_3d
    const/4 v5, 0x2

    move-object/from16 v6, p8

    if-eqz v6, :cond_3e

    :try_start_32
    iget v7, v15, Landroid/view/WindowManager$LayoutParams;->inputFeatures:I

    and-int/2addr v7, v5

    if-nez v7, :cond_3e

    move v8, v13

    goto :goto_f

    :cond_3e
    const/4 v8, 0x0

    :goto_f
    move v7, v8

    .line 1689
    .local v7, "openInputChannels":Z
    if-eqz v7, :cond_3f

    .line 1690
    invoke-virtual {v1, v6}, Lcom/android/server/wm/WindowState;->openInputChannel(Landroid/view/InputChannel;)V
    :try_end_32
    .catchall {:try_start_32 .. :try_end_32} :catchall_d

    .line 1703
    :cond_3f
    move/from16 v8, v43

    .end local v43    # "type":I
    .local v8, "type":I
    if-ne v8, v0, :cond_44

    .line 1704
    move-object/from16 v9, v40

    .end local v40    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .local v9, "displayContent":Lcom/android/server/wm/DisplayContent;
    :try_start_33
    invoke-virtual {v9, v14}, Lcom/android/server/wm/DisplayContent;->canAddToastWindowForUid(I)Z

    move-result v0

    if-nez v0, :cond_41

    .line 1705
    sget-boolean v0, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v0, :cond_40

    sget-object v0, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const v5, -0x34acc678    # -1.3842824E7f

    const-string v10, "Adding more than one toast window for UID at a time."

    const/4 v11, 0x0

    check-cast v11, [Ljava/lang/Object;

    const/4 v12, 0x0

    invoke-static {v0, v5, v12, v10, v11}, Lcom/android/internal/protolog/ProtoLogImpl;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 1706
    :cond_40
    monitor-exit v34
    :try_end_33
    .catchall {:try_start_33 .. :try_end_33} :catchall_f

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v26

    .line 1713
    :cond_41
    const/4 v12, 0x0

    if-nez v27, :cond_43

    :try_start_34
    iget v0, v15, Landroid/view/WindowManager$LayoutParams;->flags:I

    and-int/lit8 v0, v0, 0x8

    if-eqz v0, :cond_43

    iget-object v0, v9, Lcom/android/server/wm/DisplayContent;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    if-eqz v0, :cond_43

    iget-object v0, v9, Lcom/android/server/wm/DisplayContent;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    iget v0, v0, Lcom/android/server/wm/WindowState;->mOwnerUid:I
    :try_end_34
    .catchall {:try_start_34 .. :try_end_34} :catchall_f

    if-eq v0, v14, :cond_42

    goto :goto_10

    :cond_42
    move-object/from16 v10, p0

    move v11, v12

    goto :goto_11

    .line 1717
    :cond_43
    :goto_10
    move-object/from16 v10, p0

    move v11, v12

    :try_start_35
    iget-object v0, v10, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v12, 0x34

    .line 1718
    invoke-virtual {v0, v12, v1}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    move-result-object v12

    iget-object v13, v1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget-wide v5, v13, Landroid/view/WindowManager$LayoutParams;->hideTimeoutMilliseconds:J

    .line 1717
    invoke-virtual {v0, v12, v5, v6}, Lcom/android/server/wm/WindowManagerService$H;->sendMessageDelayed(Landroid/os/Message;J)Z
    :try_end_35
    .catchall {:try_start_35 .. :try_end_35} :catchall_e

    goto :goto_11

    .line 1864
    .end local v1    # "win":Lcom/android/server/wm/WindowState;
    .end local v2    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .end local v7    # "openInputChannels":Z
    .end local v9    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v27    # "addToastWindowRequiresToken":Z
    .end local v32    # "hasParent":Z
    .end local v35    # "userId":I
    .end local v36    # "activity":Lcom/android/server/wm/ActivityRecord;
    .end local v38    # "rootType":I
    .end local v39    # "windowContextToken":Landroid/os/IBinder;
    .end local v42    # "token":Lcom/android/server/wm/WindowToken;
    :catchall_e
    move-exception v0

    move-object/from16 v12, p9

    move-object/from16 v2, p10

    move/from16 v40, v4

    move-object/from16 v1, v41

    goto/16 :goto_1b

    :catchall_f
    move-exception v0

    move-object/from16 v10, p0

    move-object/from16 v12, p9

    move-object/from16 v2, p10

    move/from16 v40, v4

    move-object/from16 v1, v41

    goto/16 :goto_1b

    .line 1703
    .restart local v1    # "win":Lcom/android/server/wm/WindowState;
    .restart local v2    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .restart local v7    # "openInputChannels":Z
    .restart local v27    # "addToastWindowRequiresToken":Z
    .restart local v32    # "hasParent":Z
    .restart local v35    # "userId":I
    .restart local v36    # "activity":Lcom/android/server/wm/ActivityRecord;
    .restart local v38    # "rootType":I
    .restart local v39    # "windowContextToken":Landroid/os/IBinder;
    .restart local v40    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v42    # "token":Lcom/android/server/wm/WindowToken;
    :cond_44
    const/4 v11, 0x0

    move-object/from16 v10, p0

    move-object/from16 v9, v40

    .line 1727
    .end local v40    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v9    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :goto_11
    :try_start_36
    invoke-virtual {v1}, Lcom/android/server/wm/WindowState;->isChildWindow()Z

    move-result v0
    :try_end_36
    .catchall {:try_start_36 .. :try_end_36} :catchall_14

    if-nez v0, :cond_48

    :try_start_37
    iget-object v0, v10, Lcom/android/server/wm/WindowManagerService;->mWindowContextListenerController:Lcom/android/server/wm/WindowContextListenerController;

    .line 1728
    move-object/from16 v6, v39

    .end local v39    # "windowContextToken":Landroid/os/IBinder;
    .local v6, "windowContextToken":Landroid/os/IBinder;
    invoke-virtual {v0, v6}, Lcom/android/server/wm/WindowContextListenerController;->hasListener(Landroid/os/IBinder;)Z

    move-result v0

    if-eqz v0, :cond_47

    .line 1729
    iget-object v0, v10, Lcom/android/server/wm/WindowManagerService;->mWindowContextListenerController:Lcom/android/server/wm/WindowContextListenerController;

    .line 1730
    invoke-virtual {v0, v6}, Lcom/android/server/wm/WindowContextListenerController;->getWindowType(Landroid/os/IBinder;)I

    move-result v0

    .line 1731
    .local v0, "windowContextType":I
    if-eq v8, v0, :cond_46

    .line 1732
    sget-boolean v12, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v12, :cond_45

    int-to-long v12, v8

    move-object/from16 v39, v6

    .end local v6    # "windowContextToken":Landroid/os/IBinder;
    .local v12, "protoLogParam0":J
    .restart local v39    # "windowContextToken":Landroid/os/IBinder;
    int-to-long v5, v0

    .local v5, "protoLogParam1":J
    sget-object v11, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    move/from16 v37, v0

    .end local v0    # "windowContextType":I
    .local v37, "windowContextType":I
    const-string v0, "Window types in WindowContext and LayoutParams.type should match! Type from LayoutParams is %d, but type from WindowContext is %d"

    const/4 v3, 0x2

    new-array v3, v3, [Ljava/lang/Object;

    invoke-static {v12, v13}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v18

    const/16 v19, 0x0

    aput-object v18, v3, v19

    invoke-static {v5, v6}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v18

    const/16 v19, 0x1

    aput-object v18, v3, v19
    :try_end_37
    .catchall {:try_start_37 .. :try_end_37} :catchall_10

    move/from16 v40, v4

    move-wide/from16 v17, v5

    const v4, 0x4aa91377    # 5540283.5f

    const/4 v5, 0x5

    .end local v4    # "callingPid":I
    .end local v5    # "protoLogParam1":J
    .local v17, "protoLogParam1":J
    .local v40, "callingPid":I
    :try_start_38
    invoke-static {v11, v4, v5, v0, v3}, Lcom/android/internal/protolog/ProtoLogImpl;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    goto :goto_12

    .end local v12    # "protoLogParam0":J
    .end local v17    # "protoLogParam1":J
    .end local v37    # "windowContextType":I
    .end local v39    # "windowContextToken":Landroid/os/IBinder;
    .end local v40    # "callingPid":I
    .restart local v0    # "windowContextType":I
    .restart local v4    # "callingPid":I
    .restart local v6    # "windowContextToken":Landroid/os/IBinder;
    :cond_45
    move/from16 v37, v0

    move/from16 v40, v4

    move-object/from16 v39, v6

    .line 1735
    .end local v0    # "windowContextType":I
    .end local v4    # "callingPid":I
    .end local v6    # "windowContextToken":Landroid/os/IBinder;
    .restart local v37    # "windowContextType":I
    .restart local v39    # "windowContextToken":Landroid/os/IBinder;
    .restart local v40    # "callingPid":I
    :goto_12
    const/16 v0, -0xa

    monitor-exit v34
    :try_end_38
    .catchall {:try_start_38 .. :try_end_38} :catchall_13

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v0

    .line 1737
    .end local v37    # "windowContextType":I
    .end local v39    # "windowContextToken":Landroid/os/IBinder;
    .end local v40    # "callingPid":I
    .restart local v0    # "windowContextType":I
    .restart local v4    # "callingPid":I
    .restart local v6    # "windowContextToken":Landroid/os/IBinder;
    :cond_46
    move/from16 v37, v0

    move/from16 v40, v4

    move-object/from16 v39, v6

    .end local v0    # "windowContextType":I
    .end local v4    # "callingPid":I
    .end local v6    # "windowContextToken":Landroid/os/IBinder;
    .restart local v37    # "windowContextType":I
    .restart local v39    # "windowContextToken":Landroid/os/IBinder;
    .restart local v40    # "callingPid":I
    :try_start_39
    iget-object v0, v10, Lcom/android/server/wm/WindowManagerService;->mWindowContextListenerController:Lcom/android/server/wm/WindowContextListenerController;

    .line 1738
    move-object/from16 v3, v39

    .end local v39    # "windowContextToken":Landroid/os/IBinder;
    .local v3, "windowContextToken":Landroid/os/IBinder;
    invoke-virtual {v0, v3}, Lcom/android/server/wm/WindowContextListenerController;->getOptions(Landroid/os/IBinder;)Landroid/os/Bundle;

    move-result-object v22

    .line 1739
    .local v22, "options":Landroid/os/Bundle;
    iget-object v0, v10, Lcom/android/server/wm/WindowManagerService;->mWindowContextListenerController:Lcom/android/server/wm/WindowContextListenerController;

    move-object/from16 v17, v0

    move-object/from16 v18, v3

    move-object/from16 v19, v42

    move/from16 v20, v14

    move/from16 v21, v8

    invoke-virtual/range {v17 .. v22}, Lcom/android/server/wm/WindowContextListenerController;->registerWindowContainerListener(Landroid/os/IBinder;Lcom/android/server/wm/WindowContainer;IILandroid/os/Bundle;)V

    goto :goto_13

    .line 1728
    .end local v3    # "windowContextToken":Landroid/os/IBinder;
    .end local v22    # "options":Landroid/os/Bundle;
    .end local v37    # "windowContextType":I
    .end local v40    # "callingPid":I
    .restart local v4    # "callingPid":I
    .restart local v6    # "windowContextToken":Landroid/os/IBinder;
    :cond_47
    move/from16 v40, v4

    move-object v3, v6

    .end local v4    # "callingPid":I
    .end local v6    # "windowContextToken":Landroid/os/IBinder;
    .restart local v3    # "windowContextToken":Landroid/os/IBinder;
    .restart local v40    # "callingPid":I
    goto :goto_13

    .line 1864
    .end local v1    # "win":Lcom/android/server/wm/WindowState;
    .end local v2    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .end local v3    # "windowContextToken":Landroid/os/IBinder;
    .end local v7    # "openInputChannels":Z
    .end local v9    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v27    # "addToastWindowRequiresToken":Z
    .end local v32    # "hasParent":Z
    .end local v35    # "userId":I
    .end local v36    # "activity":Lcom/android/server/wm/ActivityRecord;
    .end local v38    # "rootType":I
    .end local v40    # "callingPid":I
    .end local v42    # "token":Lcom/android/server/wm/WindowToken;
    .restart local v4    # "callingPid":I
    :catchall_10
    move-exception v0

    move/from16 v40, v4

    move-object/from16 v12, p9

    move-object/from16 v2, p10

    goto/16 :goto_1a

    .line 1727
    .restart local v1    # "win":Lcom/android/server/wm/WindowState;
    .restart local v2    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .restart local v7    # "openInputChannels":Z
    .restart local v9    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v27    # "addToastWindowRequiresToken":Z
    .restart local v32    # "hasParent":Z
    .restart local v35    # "userId":I
    .restart local v36    # "activity":Lcom/android/server/wm/ActivityRecord;
    .restart local v38    # "rootType":I
    .restart local v39    # "windowContextToken":Landroid/os/IBinder;
    .restart local v42    # "token":Lcom/android/server/wm/WindowToken;
    :cond_48
    move/from16 v40, v4

    move-object/from16 v3, v39

    .line 1745
    .end local v4    # "callingPid":I
    .end local v39    # "windowContextToken":Landroid/os/IBinder;
    .restart local v3    # "windowContextToken":Landroid/os/IBinder;
    .restart local v40    # "callingPid":I
    :goto_13
    const/16 v16, 0x0

    .line 1747
    iget-boolean v0, v10, Lcom/android/server/wm/WindowManagerService;->mUseBLAST:Z

    if-eqz v0, :cond_49

    .line 1748
    or-int/lit8 v0, v16, 0x8

    move/from16 v16, v0

    .line 1751
    :cond_49
    iget-object v0, v9, Lcom/android/server/wm/DisplayContent;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    if-nez v0, :cond_4a

    .line 1752
    iget-object v0, v9, Lcom/android/server/wm/DisplayContent;->mWinAddedSinceNullFocus:Ljava/util/ArrayList;

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 1755
    :cond_4a
    invoke-static {v8}, Lcom/android/server/wm/WindowManagerService;->excludeWindowTypeFromTapOutTask(I)Z

    move-result v0

    if-eqz v0, :cond_4b

    .line 1756
    iget-object v0, v9, Lcom/android/server/wm/DisplayContent;->mTapExcludedWindows:Ljava/util/ArrayList;

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 1759
    :cond_4b
    invoke-virtual {v1}, Lcom/android/server/wm/WindowState;->attach()V

    .line 1760
    iget-object v0, v10, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    invoke-interface/range {p2 .. p2}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    move-result-object v4

    invoke-virtual {v0, v4, v1}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 1761
    invoke-virtual {v1}, Lcom/android/server/wm/WindowState;->initAppOpsState()V

    .line 1763
    iget-object v0, v10, Lcom/android/server/wm/WindowManagerService;->mPmInternal:Landroid/content/pm/PackageManagerInternal;

    invoke-virtual {v1}, Lcom/android/server/wm/WindowState;->getOwningPackage()Ljava/lang/String;

    move-result-object v4

    .line 1764
    invoke-virtual {v1}, Lcom/android/server/wm/WindowState;->getOwningUid()I

    move-result v5

    invoke-static {v5}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v5

    .line 1763
    invoke-virtual {v0, v4, v5}, Landroid/content/pm/PackageManagerInternal;->isPackageSuspended(Ljava/lang/String;I)Z

    move-result v0

    .line 1765
    .local v0, "suspended":Z
    invoke-virtual {v1, v0}, Lcom/android/server/wm/WindowState;->setHiddenWhileSuspended(Z)V

    .line 1767
    iget-object v4, v10, Lcom/android/server/wm/WindowManagerService;->mHidingNonSystemOverlayWindows:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->isEmpty()Z

    move-result v4

    if-nez v4, :cond_4c

    const/4 v4, 0x1

    goto :goto_14

    :cond_4c
    const/4 v4, 0x0

    .line 1768
    .local v4, "hideSystemAlertWindows":Z
    :goto_14
    invoke-virtual {v1, v4}, Lcom/android/server/wm/WindowState;->setForceHideNonSystemOverlayWindowIfNeeded(Z)V

    .line 1770
    invoke-virtual/range {v42 .. v42}, Lcom/android/server/wm/WindowToken;->asActivityRecord()Lcom/android/server/wm/ActivityRecord;

    move-result-object v5

    .line 1771
    .local v5, "tokenActivity":Lcom/android/server/wm/ActivityRecord;
    const/4 v6, 0x3

    if-ne v8, v6, :cond_4e

    if-eqz v5, :cond_4e

    .line 1772
    iput-object v1, v5, Lcom/android/server/wm/ActivityRecord;->mStartingWindow:Lcom/android/server/wm/WindowState;

    .line 1773
    sget-boolean v6, Lcom/android/server/wm/ProtoLogCache;->WM_DEBUG_STARTING_WINDOW_enabled:Z

    if-eqz v6, :cond_4d

    invoke-static/range {v36 .. v36}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v6

    .local v6, "protoLogParam0":Ljava/lang/String;
    invoke-static {v1}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v11

    .local v11, "protoLogParam1":Ljava/lang/String;
    sget-object v12, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_STARTING_WINDOW:Lcom/android/internal/protolog/ProtoLogGroup;

    move/from16 v18, v0

    const/4 v13, 0x2

    .end local v0    # "suspended":Z
    .local v18, "suspended":Z
    new-array v0, v13, [Ljava/lang/Object;

    const/4 v13, 0x0

    aput-object v6, v0, v13

    const/16 v19, 0x1

    aput-object v11, v0, v19

    move-object/from16 v39, v3

    move/from16 v17, v4

    const v3, 0x8f63079

    const/4 v4, 0x0

    .end local v3    # "windowContextToken":Landroid/os/IBinder;
    .end local v4    # "hideSystemAlertWindows":Z
    .local v17, "hideSystemAlertWindows":Z
    .restart local v39    # "windowContextToken":Landroid/os/IBinder;
    invoke-static {v12, v3, v13, v4, v0}, Lcom/android/internal/protolog/ProtoLogImpl;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    goto :goto_15

    .end local v6    # "protoLogParam0":Ljava/lang/String;
    .end local v11    # "protoLogParam1":Ljava/lang/String;
    .end local v17    # "hideSystemAlertWindows":Z
    .end local v18    # "suspended":Z
    .end local v39    # "windowContextToken":Landroid/os/IBinder;
    .restart local v0    # "suspended":Z
    .restart local v3    # "windowContextToken":Landroid/os/IBinder;
    .restart local v4    # "hideSystemAlertWindows":Z
    :cond_4d
    move/from16 v18, v0

    move-object/from16 v39, v3

    move/from16 v17, v4

    .end local v0    # "suspended":Z
    .end local v3    # "windowContextToken":Landroid/os/IBinder;
    .end local v4    # "hideSystemAlertWindows":Z
    .restart local v17    # "hideSystemAlertWindows":Z
    .restart local v18    # "suspended":Z
    .restart local v39    # "windowContextToken":Landroid/os/IBinder;
    goto :goto_15

    .line 1771
    .end local v17    # "hideSystemAlertWindows":Z
    .end local v18    # "suspended":Z
    .end local v39    # "windowContextToken":Landroid/os/IBinder;
    .restart local v0    # "suspended":Z
    .restart local v3    # "windowContextToken":Landroid/os/IBinder;
    .restart local v4    # "hideSystemAlertWindows":Z
    :cond_4e
    move/from16 v18, v0

    move-object/from16 v39, v3

    move/from16 v17, v4

    .line 1777
    .end local v0    # "suspended":Z
    .end local v3    # "windowContextToken":Landroid/os/IBinder;
    .end local v4    # "hideSystemAlertWindows":Z
    .restart local v17    # "hideSystemAlertWindows":Z
    .restart local v18    # "suspended":Z
    .restart local v39    # "windowContextToken":Landroid/os/IBinder;
    :goto_15
    const/4 v0, 0x1

    .line 1779
    .local v0, "imMayMove":Z
    iget-object v3, v1, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    invoke-virtual {v3, v1}, Lcom/android/server/wm/WindowToken;->addWindow(Lcom/android/server/wm/WindowState;)V

    .line 1780
    invoke-virtual {v2, v1, v15}, Lcom/android/server/wm/DisplayPolicy;->addWindowLw(Lcom/android/server/wm/WindowState;Landroid/view/WindowManager$LayoutParams;)V

    .line 1781
    const/16 v3, 0x7db

    if-ne v8, v3, :cond_4f

    .line 1782
    invoke-virtual {v9, v1}, Lcom/android/server/wm/DisplayContent;->setInputMethodWindowLocked(Lcom/android/server/wm/WindowState;)V

    .line 1783
    const/4 v0, 0x0

    goto :goto_16

    .line 1784
    :cond_4f
    const/16 v3, 0x7dc

    if-ne v8, v3, :cond_50

    .line 1785
    const/4 v3, 0x1

    invoke-virtual {v9, v3}, Lcom/android/server/wm/DisplayContent;->computeImeTarget(Z)Lcom/android/server/wm/WindowState;

    .line 1786
    const/4 v0, 0x0

    goto :goto_16

    .line 1788
    :cond_50
    const/16 v3, 0x7dd

    if-ne v8, v3, :cond_51

    .line 1789
    iget-object v3, v9, Lcom/android/server/wm/DisplayContent;->mWallpaperController:Lcom/android/server/wm/WallpaperController;

    invoke-virtual {v3}, Lcom/android/server/wm/WallpaperController;->clearLastWallpaperTimeoutTime()V

    .line 1790
    iget v3, v9, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    or-int/lit8 v3, v3, 0x4

    iput v3, v9, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    goto :goto_16

    .line 1791
    :cond_51
    invoke-virtual {v1}, Lcom/android/server/wm/WindowState;->hasWallpaper()Z

    move-result v3

    if-eqz v3, :cond_52

    .line 1792
    iget v3, v9, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    or-int/lit8 v3, v3, 0x4

    iput v3, v9, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    goto :goto_16

    .line 1793
    :cond_52
    iget-object v3, v9, Lcom/android/server/wm/DisplayContent;->mWallpaperController:Lcom/android/server/wm/WallpaperController;

    invoke-virtual {v3, v1}, Lcom/android/server/wm/WallpaperController;->isBelowWallpaperTarget(Lcom/android/server/wm/WindowState;)Z

    move-result v3

    if-eqz v3, :cond_53

    .line 1799
    iget v3, v9, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    or-int/lit8 v3, v3, 0x4

    iput v3, v9, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    .line 1803
    :cond_53
    :goto_16
    iget-object v3, v1, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    .line 1804
    .local v3, "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    const/4 v4, 0x1

    iput-boolean v4, v3, Lcom/android/server/wm/WindowStateAnimator;->mEnterAnimationPending:Z

    .line 1805
    iput-boolean v4, v3, Lcom/android/server/wm/WindowStateAnimator;->mEnteringAnimation:Z

    .line 1807
    move-object/from16 v4, v36

    .end local v36    # "activity":Lcom/android/server/wm/ActivityRecord;
    .local v4, "activity":Lcom/android/server/wm/ActivityRecord;
    if-eqz v4, :cond_54

    invoke-virtual {v4}, Lcom/android/server/wm/ActivityRecord;->isVisible()Z

    move-result v6

    if-eqz v6, :cond_54

    .line 1808
    invoke-direct {v10, v4}, Lcom/android/server/wm/WindowManagerService;->prepareWindowReplacementTransition(Lcom/android/server/wm/ActivityRecord;)Z

    move-result v6

    if-nez v6, :cond_54

    .line 1812
    invoke-direct {v10, v4}, Lcom/android/server/wm/WindowManagerService;->prepareNoneTransitionForRelaunching(Lcom/android/server/wm/ActivityRecord;)V

    .line 1815
    :cond_54
    iget-object v6, v1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    .line 1816
    invoke-virtual {v1}, Lcom/android/server/wm/WindowState;->isClientLocal()Z

    move-result v11
    :try_end_39
    .catchall {:try_start_39 .. :try_end_39} :catchall_13

    .line 1815
    move-object/from16 v12, p9

    move-object/from16 v13, v42

    .end local v42    # "token":Lcom/android/server/wm/WindowToken;
    .local v13, "token":Lcom/android/server/wm/WindowToken;
    :try_start_3a
    invoke-virtual {v2, v6, v13, v12, v11}, Lcom/android/server/wm/DisplayPolicy;->getLayoutHint(Landroid/view/WindowManager$LayoutParams;Lcom/android/server/wm/WindowToken;Landroid/view/InsetsState;Z)Z

    move-result v6

    if-eqz v6, :cond_55

    .line 1817
    or-int/lit8 v6, v16, 0x4

    move/from16 v16, v6

    .line 1820
    :cond_55
    iget-boolean v6, v10, Lcom/android/server/wm/WindowManagerService;->mInTouchMode:Z

    if-eqz v6, :cond_56

    .line 1821
    or-int/lit8 v6, v16, 0x1

    move/from16 v16, v6

    .line 1823
    :cond_56
    iget-object v6, v1, Lcom/android/server/wm/WindowState;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    if-eqz v6, :cond_57

    iget-object v6, v1, Lcom/android/server/wm/WindowState;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    invoke-virtual {v6}, Lcom/android/server/wm/ActivityRecord;->isClientVisible()Z

    move-result v6

    if-eqz v6, :cond_58

    .line 1824
    :cond_57
    or-int/lit8 v6, v16, 0x2

    .end local v16    # "res":I
    .local v6, "res":I
    move/from16 v16, v6

    .line 1827
    .end local v6    # "res":I
    .restart local v16    # "res":I
    :cond_58
    invoke-virtual {v9}, Lcom/android/server/wm/DisplayContent;->getInputMonitor()Lcom/android/server/wm/InputMonitor;

    move-result-object v6

    invoke-virtual {v6}, Lcom/android/server/wm/InputMonitor;->setUpdateInputWindowsNeededLw()V

    .line 1829
    const/4 v6, 0x0

    .line 1830
    .local v6, "focusChanged":Z
    invoke-virtual {v1}, Lcom/android/server/wm/WindowState;->canReceiveKeys()Z

    move-result v11

    if-eqz v11, :cond_59

    .line 1831
    move-object/from16 v19, v2

    const/4 v2, 0x0

    const/4 v11, 0x1

    .end local v2    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .local v19, "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    invoke-virtual {v10, v11, v2}, Lcom/android/server/wm/WindowManagerService;->updateFocusedWindowLocked(IZ)Z

    move-result v20

    move/from16 v6, v20

    .line 1833
    if-eqz v6, :cond_5a

    .line 1834
    const/4 v0, 0x0

    goto :goto_17

    .line 1830
    .end local v19    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .restart local v2    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    :cond_59
    move-object/from16 v19, v2

    .line 1838
    .end local v2    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .restart local v19    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    :cond_5a
    :goto_17
    if-eqz v0, :cond_5b

    .line 1839
    const/4 v2, 0x1

    invoke-virtual {v9, v2}, Lcom/android/server/wm/DisplayContent;->computeImeTarget(Z)Lcom/android/server/wm/WindowState;

    .line 1844
    :cond_5b
    invoke-virtual {v1}, Lcom/android/server/wm/WindowState;->getParent()Lcom/android/server/wm/WindowContainer;

    move-result-object v2

    invoke-virtual {v2}, Lcom/android/server/wm/WindowContainer;->assignChildLayers()V

    .line 1846
    if-eqz v6, :cond_5c

    .line 1847
    invoke-virtual {v9}, Lcom/android/server/wm/DisplayContent;->getInputMonitor()Lcom/android/server/wm/InputMonitor;

    move-result-object v2

    iget-object v11, v9, Lcom/android/server/wm/DisplayContent;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    move-object/from16 v20, v3

    const/4 v3, 0x0

    .end local v3    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .local v20, "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    invoke-virtual {v2, v11, v3}, Lcom/android/server/wm/InputMonitor;->setInputFocusLw(Lcom/android/server/wm/WindowState;Z)V

    goto :goto_18

    .line 1846
    .end local v20    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .restart local v3    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    :cond_5c
    move-object/from16 v20, v3

    .line 1850
    .end local v3    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .restart local v20    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    :goto_18
    invoke-virtual {v9}, Lcom/android/server/wm/DisplayContent;->getInputMonitor()Lcom/android/server/wm/InputMonitor;

    move-result-object v2

    const/4 v3, 0x0

    invoke-virtual {v2, v3}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    .line 1852
    sget-boolean v2, Lcom/android/server/wm/ProtoLogCache;->WM_DEBUG_ADD_REMOVE_enabled:Z

    if-eqz v2, :cond_5d

    invoke-interface/range {p2 .. p2}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    move-result-object v2

    invoke-static {v2}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v2

    .local v2, "protoLogParam0":Ljava/lang/String;
    invoke-static {v1}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v3

    const/4 v11, 0x5

    .local v3, "protoLogParam1":Ljava/lang/String;
    invoke-static {v11}, Landroid/os/Debug;->getCallers(I)Ljava/lang/String;

    move-result-object v11

    invoke-static {v11}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v11

    move/from16 v21, v0

    .end local v0    # "imMayMove":Z
    .local v11, "protoLogParam2":Ljava/lang/String;
    .local v21, "imMayMove":Z
    sget-object v0, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_ADD_REMOVE:Lcom/android/internal/protolog/ProtoLogGroup;

    move-object/from16 v36, v4

    .end local v4    # "activity":Lcom/android/server/wm/ActivityRecord;
    .restart local v36    # "activity":Lcom/android/server/wm/ActivityRecord;
    const/4 v4, 0x3

    new-array v4, v4, [Ljava/lang/Object;

    move-object/from16 v28, v5

    const/4 v5, 0x0

    .end local v5    # "tokenActivity":Lcom/android/server/wm/ActivityRecord;
    .local v28, "tokenActivity":Lcom/android/server/wm/ActivityRecord;
    aput-object v2, v4, v5

    const/16 v29, 0x1

    aput-object v3, v4, v29

    const/16 v26, 0x2

    aput-object v11, v4, v26

    move-object/from16 v26, v2

    move-object/from16 v22, v3

    const v2, -0x551119d4

    const/4 v3, 0x0

    .end local v2    # "protoLogParam0":Ljava/lang/String;
    .end local v3    # "protoLogParam1":Ljava/lang/String;
    .local v22, "protoLogParam1":Ljava/lang/String;
    .local v26, "protoLogParam0":Ljava/lang/String;
    invoke-static {v0, v2, v5, v3, v4}, Lcom/android/internal/protolog/ProtoLogImpl;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    goto :goto_19

    .end local v11    # "protoLogParam2":Ljava/lang/String;
    .end local v21    # "imMayMove":Z
    .end local v22    # "protoLogParam1":Ljava/lang/String;
    .end local v26    # "protoLogParam0":Ljava/lang/String;
    .end local v28    # "tokenActivity":Lcom/android/server/wm/ActivityRecord;
    .end local v36    # "activity":Lcom/android/server/wm/ActivityRecord;
    .restart local v0    # "imMayMove":Z
    .restart local v4    # "activity":Lcom/android/server/wm/ActivityRecord;
    .restart local v5    # "tokenActivity":Lcom/android/server/wm/ActivityRecord;
    :cond_5d
    move/from16 v21, v0

    move-object/from16 v36, v4

    move-object/from16 v28, v5

    .line 1855
    .end local v0    # "imMayMove":Z
    .end local v4    # "activity":Lcom/android/server/wm/ActivityRecord;
    .end local v5    # "tokenActivity":Lcom/android/server/wm/ActivityRecord;
    .restart local v21    # "imMayMove":Z
    .restart local v28    # "tokenActivity":Lcom/android/server/wm/ActivityRecord;
    .restart local v36    # "activity":Lcom/android/server/wm/ActivityRecord;
    :goto_19
    invoke-virtual {v1}, Lcom/android/server/wm/WindowState;->isVisibleOrAdding()Z

    move-result v0

    if-eqz v0, :cond_5e

    invoke-virtual {v9}, Lcom/android/server/wm/DisplayContent;->updateOrientation()Z

    move-result v0

    if-eqz v0, :cond_5e

    .line 1856
    invoke-virtual {v9}, Lcom/android/server/wm/DisplayContent;->sendNewConfiguration()V

    .line 1860
    :cond_5e
    invoke-virtual {v9}, Lcom/android/server/wm/DisplayContent;->getInsetsStateController()Lcom/android/server/wm/InsetsStateController;

    move-result-object v0

    const/4 v2, 0x0

    invoke-virtual {v0, v1, v2}, Lcom/android/server/wm/InsetsStateController;->updateAboveInsetsState(Lcom/android/server/wm/WindowState;Z)V
    :try_end_3a
    .catchall {:try_start_3a .. :try_end_3a} :catchall_12

    .line 1863
    move-object/from16 v2, p10

    :try_start_3b
    invoke-direct {v10, v1, v2}, Lcom/android/server/wm/WindowManagerService;->getInsetsSourceControls(Lcom/android/server/wm/WindowState;[Landroid/view/InsetsSourceControl;)V

    .line 1864
    .end local v1    # "win":Lcom/android/server/wm/WindowState;
    .end local v6    # "focusChanged":Z
    .end local v7    # "openInputChannels":Z
    .end local v9    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v13    # "token":Lcom/android/server/wm/WindowToken;
    .end local v17    # "hideSystemAlertWindows":Z
    .end local v18    # "suspended":Z
    .end local v19    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .end local v20    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .end local v21    # "imMayMove":Z
    .end local v27    # "addToastWindowRequiresToken":Z
    .end local v28    # "tokenActivity":Lcom/android/server/wm/ActivityRecord;
    .end local v32    # "hasParent":Z
    .end local v35    # "userId":I
    .end local v36    # "activity":Lcom/android/server/wm/ActivityRecord;
    .end local v38    # "rootType":I
    .end local v39    # "windowContextToken":Landroid/os/IBinder;
    monitor-exit v34
    :try_end_3b
    .catchall {:try_start_3b .. :try_end_3b} :catchall_11

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 1866
    invoke-static/range {v23 .. v24}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 1868
    return v16

    .line 1864
    :catchall_11
    move-exception v0

    move-object/from16 v1, v41

    goto/16 :goto_1b

    :catchall_12
    move-exception v0

    move-object/from16 v2, p10

    move-object/from16 v1, v41

    goto/16 :goto_1b

    :catchall_13
    move-exception v0

    move-object/from16 v12, p9

    move-object/from16 v2, p10

    move-object/from16 v1, v41

    goto/16 :goto_1b

    .end local v40    # "callingPid":I
    .local v4, "callingPid":I
    :catchall_14
    move-exception v0

    move-object/from16 v12, p9

    move-object/from16 v2, p10

    move/from16 v40, v4

    :goto_1a
    move-object/from16 v1, v41

    .end local v4    # "callingPid":I
    .restart local v40    # "callingPid":I
    goto/16 :goto_1b

    .end local v8    # "type":I
    .end local v40    # "callingPid":I
    .restart local v4    # "callingPid":I
    .restart local v43    # "type":I
    :catchall_15
    move-exception v0

    move-object/from16 v10, p0

    move-object/from16 v12, p9

    move-object/from16 v2, p10

    move/from16 v40, v4

    move/from16 v8, v43

    move-object/from16 v1, v41

    .end local v4    # "callingPid":I
    .end local v43    # "type":I
    .restart local v8    # "type":I
    .restart local v40    # "callingPid":I
    goto/16 :goto_1b

    .end local v8    # "type":I
    .end local v40    # "callingPid":I
    .local v28, "callingPid":I
    .restart local v43    # "type":I
    :catchall_16
    move-exception v0

    move-object/from16 v10, p0

    move-object/from16 v12, p9

    move-object/from16 v2, p10

    move/from16 v40, v28

    move/from16 v8, v43

    move-object/from16 v1, v41

    .end local v28    # "callingPid":I
    .end local v43    # "type":I
    .restart local v8    # "type":I
    .restart local v40    # "callingPid":I
    goto/16 :goto_1b

    .end local v8    # "type":I
    .end local v14    # "callingUid":I
    .end local v40    # "callingPid":I
    .end local v41    # "parentWindow":Lcom/android/server/wm/WindowState;
    .local v9, "parentWindow":Lcom/android/server/wm/WindowState;
    .local v12, "type":I
    .restart local v28    # "callingPid":I
    .restart local v29    # "callingUid":I
    :catchall_17
    move-exception v0

    move-object/from16 v2, p10

    move-object/from16 v41, v9

    move v8, v12

    move-object v10, v13

    move/from16 v40, v28

    move/from16 v14, v29

    move-object/from16 v12, p9

    move-object/from16 v1, v41

    .end local v9    # "parentWindow":Lcom/android/server/wm/WindowState;
    .end local v12    # "type":I
    .end local v28    # "callingPid":I
    .end local v29    # "callingUid":I
    .restart local v8    # "type":I
    .restart local v14    # "callingUid":I
    .restart local v40    # "callingPid":I
    .restart local v41    # "parentWindow":Lcom/android/server/wm/WindowState;
    goto/16 :goto_1b

    .end local v8    # "type":I
    .end local v14    # "callingUid":I
    .end local v40    # "callingPid":I
    .end local v41    # "parentWindow":Lcom/android/server/wm/WindowState;
    .restart local v9    # "parentWindow":Lcom/android/server/wm/WindowState;
    .local v27, "type":I
    .restart local v28    # "callingPid":I
    .restart local v29    # "callingUid":I
    :catchall_18
    move-exception v0

    move-object/from16 v12, p9

    move-object/from16 v2, p10

    move-object/from16 v41, v9

    move-object v10, v13

    move/from16 v8, v27

    move/from16 v40, v28

    move/from16 v14, v29

    move-object/from16 v1, v41

    .end local v9    # "parentWindow":Lcom/android/server/wm/WindowState;
    .end local v27    # "type":I
    .end local v28    # "callingPid":I
    .end local v29    # "callingUid":I
    .restart local v8    # "type":I
    .restart local v14    # "callingUid":I
    .restart local v40    # "callingPid":I
    .restart local v41    # "parentWindow":Lcom/android/server/wm/WindowState;
    goto/16 :goto_1b

    .end local v8    # "type":I
    .end local v14    # "callingUid":I
    .end local v30    # "isRoundedCornerOverlay":Z
    .end local v33    # "appOp":[I
    .end local v40    # "callingPid":I
    .end local v41    # "parentWindow":Lcom/android/server/wm/WindowState;
    .local v2, "type":I
    .local v3, "callingPid":I
    .local v4, "callingUid":I
    .restart local v9    # "parentWindow":Lcom/android/server/wm/WindowState;
    .local v17, "appOp":[I
    .local v18, "isRoundedCornerOverlay":Z
    :catchall_19
    move-exception v0

    move-object/from16 v12, p9

    move v8, v2

    move/from16 v40, v3

    move v14, v4

    move-object/from16 v34, v7

    move-object/from16 v41, v9

    move-object v10, v13

    move-object/from16 v33, v17

    move/from16 v30, v18

    move-object/from16 v2, p10

    move-object/from16 v1, v41

    .end local v2    # "type":I
    .end local v3    # "callingPid":I
    .end local v4    # "callingUid":I
    .end local v9    # "parentWindow":Lcom/android/server/wm/WindowState;
    .end local v17    # "appOp":[I
    .end local v18    # "isRoundedCornerOverlay":Z
    .restart local v8    # "type":I
    .restart local v14    # "callingUid":I
    .restart local v30    # "isRoundedCornerOverlay":Z
    .restart local v33    # "appOp":[I
    .restart local v40    # "callingPid":I
    .restart local v41    # "parentWindow":Lcom/android/server/wm/WindowState;
    goto :goto_1b

    .end local v8    # "type":I
    .end local v14    # "callingUid":I
    .end local v30    # "isRoundedCornerOverlay":Z
    .end local v33    # "appOp":[I
    .end local v40    # "callingPid":I
    .end local v41    # "parentWindow":Lcom/android/server/wm/WindowState;
    .restart local v2    # "type":I
    .restart local v3    # "callingPid":I
    .restart local v4    # "callingUid":I
    .restart local v17    # "appOp":[I
    .restart local v18    # "isRoundedCornerOverlay":Z
    .local v19, "parentWindow":Lcom/android/server/wm/WindowState;
    :catchall_1a
    move-exception v0

    move-object/from16 v12, p9

    move v8, v2

    move/from16 v40, v3

    move v14, v4

    move-object/from16 v34, v7

    move-object v10, v13

    move-object/from16 v33, v17

    move/from16 v30, v18

    move-object/from16 v2, p10

    move-object/from16 v1, v19

    .end local v2    # "type":I
    .end local v3    # "callingPid":I
    .end local v4    # "callingUid":I
    .end local v17    # "appOp":[I
    .end local v18    # "isRoundedCornerOverlay":Z
    .restart local v8    # "type":I
    .restart local v14    # "callingUid":I
    .restart local v30    # "isRoundedCornerOverlay":Z
    .restart local v33    # "appOp":[I
    .restart local v40    # "callingPid":I
    goto :goto_1b

    .line 1479
    .end local v8    # "type":I
    .end local v14    # "callingUid":I
    .end local v19    # "parentWindow":Lcom/android/server/wm/WindowState;
    .end local v30    # "isRoundedCornerOverlay":Z
    .end local v33    # "appOp":[I
    .end local v40    # "callingPid":I
    .local v1, "parentWindow":Lcom/android/server/wm/WindowState;
    .restart local v2    # "type":I
    .restart local v3    # "callingPid":I
    .restart local v4    # "callingUid":I
    .local v5, "isRoundedCornerOverlay":Z
    .restart local v17    # "appOp":[I
    :cond_5f
    move-object/from16 v12, p9

    move-object/from16 v19, v1

    move v8, v2

    move/from16 v40, v3

    move v14, v4

    move/from16 v30, v5

    move-object/from16 v34, v7

    move-object v2, v9

    move-object v10, v13

    move-object/from16 v33, v17

    .end local v1    # "parentWindow":Lcom/android/server/wm/WindowState;
    .end local v2    # "type":I
    .end local v3    # "callingPid":I
    .end local v4    # "callingUid":I
    .end local v5    # "isRoundedCornerOverlay":Z
    .end local v17    # "appOp":[I
    .restart local v8    # "type":I
    .restart local v14    # "callingUid":I
    .restart local v19    # "parentWindow":Lcom/android/server/wm/WindowState;
    .restart local v30    # "isRoundedCornerOverlay":Z
    .restart local v33    # "appOp":[I
    .restart local v40    # "callingPid":I
    :try_start_3c
    new-instance v0, Ljava/lang/IllegalStateException;

    const-string v1, "Display has not been initialialized"

    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    .end local v8    # "type":I
    .end local v14    # "callingUid":I
    .end local v16    # "res":I
    .end local v19    # "parentWindow":Lcom/android/server/wm/WindowState;
    .end local v23    # "origId":J
    .end local v30    # "isRoundedCornerOverlay":Z
    .end local v33    # "appOp":[I
    .end local v40    # "callingPid":I
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "session":Lcom/android/server/wm/Session;
    .end local p2    # "client":Landroid/view/IWindow;
    .end local p3    # "attrs":Landroid/view/WindowManager$LayoutParams;
    .end local p4    # "viewVisibility":I
    .end local p5    # "displayId":I
    .end local p6    # "requestUserId":I
    .end local p7    # "requestedVisibility":Landroid/view/InsetsState;
    .end local p8    # "outInputChannel":Landroid/view/InputChannel;
    .end local p9    # "outInsetsState":Landroid/view/InsetsState;
    .end local p10    # "outActiveControls":[Landroid/view/InsetsSourceControl;
    throw v0
    :try_end_3c
    .catchall {:try_start_3c .. :try_end_3c} :catchall_1b

    .line 1864
    .restart local v8    # "type":I
    .restart local v14    # "callingUid":I
    .restart local v16    # "res":I
    .restart local v19    # "parentWindow":Lcom/android/server/wm/WindowState;
    .restart local v23    # "origId":J
    .restart local v30    # "isRoundedCornerOverlay":Z
    .restart local v33    # "appOp":[I
    .restart local v40    # "callingPid":I
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "session":Lcom/android/server/wm/Session;
    .restart local p2    # "client":Landroid/view/IWindow;
    .restart local p3    # "attrs":Landroid/view/WindowManager$LayoutParams;
    .restart local p4    # "viewVisibility":I
    .restart local p5    # "displayId":I
    .restart local p6    # "requestUserId":I
    .restart local p7    # "requestedVisibility":Landroid/view/InsetsState;
    .restart local p8    # "outInputChannel":Landroid/view/InputChannel;
    .restart local p9    # "outInsetsState":Landroid/view/InsetsState;
    .restart local p10    # "outActiveControls":[Landroid/view/InsetsSourceControl;
    :catchall_1b
    move-exception v0

    move-object/from16 v1, v19

    goto :goto_1b

    .end local v8    # "type":I
    .end local v14    # "callingUid":I
    .end local v19    # "parentWindow":Lcom/android/server/wm/WindowState;
    .end local v30    # "isRoundedCornerOverlay":Z
    .end local v33    # "appOp":[I
    .end local v40    # "callingPid":I
    .restart local v1    # "parentWindow":Lcom/android/server/wm/WindowState;
    .restart local v2    # "type":I
    .restart local v3    # "callingPid":I
    .restart local v4    # "callingUid":I
    .restart local v5    # "isRoundedCornerOverlay":Z
    .restart local v17    # "appOp":[I
    :catchall_1c
    move-exception v0

    move-object/from16 v12, p9

    move-object/from16 v19, v1

    move v8, v2

    move/from16 v40, v3

    move v14, v4

    move/from16 v30, v5

    move-object/from16 v34, v7

    move-object v2, v9

    move-object v10, v13

    move-object/from16 v33, v17

    .end local v2    # "type":I
    .end local v3    # "callingPid":I
    .end local v4    # "callingUid":I
    .end local v5    # "isRoundedCornerOverlay":Z
    .end local v17    # "appOp":[I
    .restart local v8    # "type":I
    .restart local v14    # "callingUid":I
    .restart local v30    # "isRoundedCornerOverlay":Z
    .restart local v33    # "appOp":[I
    .restart local v40    # "callingPid":I
    :goto_1b
    :try_start_3d
    monitor-exit v34
    :try_end_3d
    .catchall {:try_start_3d .. :try_end_3d} :catchall_1d

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    :catchall_1d
    move-exception v0

    goto :goto_1b
.end method

.method public addWindowChangeListener(Lcom/android/server/wm/WindowManagerService$WindowChangeListener;)V
    .locals 2
    .param p1, "listener"    # Lcom/android/server/wm/WindowManagerService$WindowChangeListener;

    .line 4662
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 4663
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowChangeListeners:Ljava/util/ArrayList;

    invoke-virtual {v1, p1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 4664
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 4665
    return-void

    .line 4664
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public addWindowToken(Landroid/os/IBinder;IILandroid/os/Bundle;)V
    .locals 16
    .param p1, "binder"    # Landroid/os/IBinder;
    .param p2, "type"    # I
    .param p3, "displayId"    # I
    .param p4, "options"    # Landroid/os/Bundle;

    .line 2686
    move-object/from16 v8, p0

    move-object/from16 v9, p1

    move/from16 v10, p2

    move/from16 v11, p3

    const-string v0, "android.permission.MANAGE_APP_TOKENS"

    const-string v1, "addWindowToken()"

    invoke-virtual {v8, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_5

    .line 2690
    iget-object v12, v8, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v12

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 2691
    const/4 v0, 0x0

    invoke-direct {v8, v11, v0}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentOrCreate(ILandroid/os/IBinder;)Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 2692
    .local v0, "dc":Lcom/android/server/wm/DisplayContent;
    const/4 v1, 0x0

    const/4 v2, 0x2

    const/4 v3, 0x1

    if-nez v0, :cond_1

    .line 2693
    sget-boolean v4, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v4, :cond_0

    invoke-static/range {p1 .. p1}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v4

    .local v4, "protoLogParam0":Ljava/lang/String;
    int-to-long v5, v11

    .local v5, "protoLogParam1":J
    sget-object v7, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const v13, 0x4805664f

    const/4 v14, 0x4

    const-string v15, "addWindowToken: Attempted to add token: %s for non-exiting displayId=%d"

    new-array v2, v2, [Ljava/lang/Object;

    aput-object v4, v2, v1

    invoke-static {v5, v6}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v1

    aput-object v1, v2, v3

    invoke-static {v7, v13, v14, v15, v2}, Lcom/android/internal/protolog/ProtoLogImpl;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 2695
    .end local v4    # "protoLogParam0":Ljava/lang/String;
    .end local v5    # "protoLogParam1":J
    :cond_0
    monitor-exit v12
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 2698
    :cond_1
    :try_start_1
    invoke-virtual {v0, v9}, Lcom/android/server/wm/DisplayContent;->getWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/WindowToken;

    move-result-object v4

    move-object v13, v4

    .line 2699
    .local v13, "token":Lcom/android/server/wm/WindowToken;
    if-eqz v13, :cond_3

    .line 2700
    sget-boolean v4, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v4, :cond_2

    invoke-static/range {p1 .. p1}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v4

    .restart local v4    # "protoLogParam0":Ljava/lang/String;
    invoke-static {v13}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v5

    .local v5, "protoLogParam1":Ljava/lang/String;
    int-to-long v6, v11

    .local v6, "protoLogParam2":J
    sget-object v14, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const-string v15, "addWindowToken: Attempted to add binder token: %s for already created window token: %s displayId=%d"

    const/4 v2, 0x3

    new-array v2, v2, [Ljava/lang/Object;

    aput-object v4, v2, v1

    aput-object v5, v2, v3

    invoke-static {v6, v7}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v1

    const/4 v3, 0x2

    aput-object v1, v2, v3

    const v1, 0xf31378c

    const/16 v3, 0x10

    invoke-static {v14, v1, v3, v15, v2}, Lcom/android/internal/protolog/ProtoLogImpl;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 2703
    .end local v4    # "protoLogParam0":Ljava/lang/String;
    .end local v5    # "protoLogParam1":Ljava/lang/String;
    .end local v6    # "protoLogParam2":J
    :cond_2
    monitor-exit v12
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 2705
    :cond_3
    const/16 v1, 0x7dd

    if-ne v10, v1, :cond_4

    .line 2706
    :try_start_2
    new-instance v1, Lcom/android/server/wm/WallpaperWindowToken;

    const/4 v4, 0x1

    const/4 v6, 0x1

    move-object/from16 v2, p0

    move-object/from16 v3, p1

    move-object v5, v0

    move-object/from16 v7, p4

    invoke-direct/range {v1 .. v7}, Lcom/android/server/wm/WallpaperWindowToken;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/os/IBinder;ZLcom/android/server/wm/DisplayContent;ZLandroid/os/Bundle;)V

    move-object/from16 v2, p4

    goto :goto_0

    .line 2709
    :cond_4
    new-instance v1, Lcom/android/server/wm/WindowToken$Builder;

    invoke-direct {v1, v8, v9, v10}, Lcom/android/server/wm/WindowToken$Builder;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/os/IBinder;I)V

    .line 2710
    invoke-virtual {v1, v0}, Lcom/android/server/wm/WindowToken$Builder;->setDisplayContent(Lcom/android/server/wm/DisplayContent;)Lcom/android/server/wm/WindowToken$Builder;

    move-result-object v1

    .line 2711
    invoke-virtual {v1, v3}, Lcom/android/server/wm/WindowToken$Builder;->setPersistOnEmpty(Z)Lcom/android/server/wm/WindowToken$Builder;

    move-result-object v1

    .line 2712
    invoke-virtual {v1, v3}, Lcom/android/server/wm/WindowToken$Builder;->setOwnerCanManageAppTokens(Z)Lcom/android/server/wm/WindowToken$Builder;

    move-result-object v1
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 2713
    move-object/from16 v2, p4

    :try_start_3
    invoke-virtual {v1, v2}, Lcom/android/server/wm/WindowToken$Builder;->setOptions(Landroid/os/Bundle;)Lcom/android/server/wm/WindowToken$Builder;

    move-result-object v1

    .line 2714
    invoke-virtual {v1}, Lcom/android/server/wm/WindowToken$Builder;->build()Lcom/android/server/wm/WindowToken;

    .line 2716
    .end local v0    # "dc":Lcom/android/server/wm/DisplayContent;
    .end local v13    # "token":Lcom/android/server/wm/WindowToken;
    :goto_0
    monitor-exit v12
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 2717
    return-void

    .line 2716
    :catchall_0
    move-exception v0

    move-object/from16 v2, p4

    :goto_1
    :try_start_4
    monitor-exit v12
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    :catchall_1
    move-exception v0

    goto :goto_1

    .line 2687
    :cond_5
    move-object/from16 v2, p4

    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires MANAGE_APP_TOKENS permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public applyMagnificationSpecLocked(ILandroid/view/MagnificationSpec;)V
    .locals 1
    .param p1, "displayId"    # I
    .param p2, "spec"    # Landroid/view/MagnificationSpec;

    .line 8004
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v0, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 8005
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_0

    .line 8006
    invoke-virtual {v0, p2}, Lcom/android/server/wm/DisplayContent;->applyMagnificationSpec(Landroid/view/MagnificationSpec;)V

    .line 8008
    :cond_0
    return-void
.end method

.method public attachWindowContextToDisplayArea(Landroid/os/IBinder;IILandroid/os/Bundle;)Z
    .locals 17
    .param p1, "clientToken"    # Landroid/os/IBinder;
    .param p2, "type"    # I
    .param p3, "displayId"    # I
    .param p4, "options"    # Landroid/os/Bundle;

    .line 2722
    move-object/from16 v1, p0

    move/from16 v2, p3

    const-string v0, "android.permission.MANAGE_APP_TOKENS"

    const-string v3, "attachWindowContextToDisplayArea"

    const/4 v4, 0x0

    invoke-virtual {v1, v0, v3, v4}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;Z)Z

    move-result v3

    .line 2724
    .local v3, "callerCanManageAppTokens":Z
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v11

    .line 2725
    .local v11, "callingUid":I
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v12

    .line 2727
    .local v12, "origId":J
    :try_start_0
    iget-object v14, v1, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v14
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 2728
    iget-object v0, v1, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v0, v2}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContentOrCreate(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 2729
    .local v0, "dc":Lcom/android/server/wm/DisplayContent;
    const/4 v15, 0x1

    if-nez v0, :cond_1

    .line 2730
    sget-boolean v5, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v5, :cond_0

    int-to-long v5, v2

    .local v5, "protoLogParam0":J
    sget-object v7, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const v8, 0x27c0a8bf

    const-string v9, "attachWindowContextToDisplayArea: trying to attach to a non-existing display:%d"

    new-array v10, v15, [Ljava/lang/Object;

    invoke-static {v5, v6}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v16

    aput-object v16, v10, v4

    invoke-static {v7, v8, v15, v9, v10}, Lcom/android/internal/protolog/ProtoLogImpl;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 2732
    .end local v5    # "protoLogParam0":J
    :cond_0
    monitor-exit v14
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 2743
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v12, v13}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 2732
    return v4

    .line 2736
    :cond_1
    move/from16 v10, p2

    move-object/from16 v9, p4

    :try_start_2
    invoke-virtual {v0, v10, v9, v3, v4}, Lcom/android/server/wm/DisplayContent;->findAreaForWindowType(ILandroid/os/Bundle;ZZ)Lcom/android/server/wm/DisplayArea;

    move-result-object v7

    .line 2738
    .local v7, "da":Lcom/android/server/wm/DisplayArea;
    iget-object v5, v1, Lcom/android/server/wm/WindowManagerService;->mWindowContextListenerController:Lcom/android/server/wm/WindowContextListenerController;

    move-object/from16 v6, p1

    move v8, v11

    move/from16 v9, p2

    move-object/from16 v10, p4

    invoke-virtual/range {v5 .. v10}, Lcom/android/server/wm/WindowContextListenerController;->registerWindowContainerListener(Landroid/os/IBinder;Lcom/android/server/wm/WindowContainer;IILandroid/os/Bundle;)V

    .line 2740
    monitor-exit v14
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 2743
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v12, v13}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 2740
    return v15

    .line 2741
    .end local v0    # "dc":Lcom/android/server/wm/DisplayContent;
    .end local v7    # "da":Lcom/android/server/wm/DisplayArea;
    :catchall_0
    move-exception v0

    :try_start_3
    monitor-exit v14
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .end local v3    # "callerCanManageAppTokens":Z
    .end local v11    # "callingUid":I
    .end local v12    # "origId":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "clientToken":Landroid/os/IBinder;
    .end local p2    # "type":I
    .end local p3    # "displayId":I
    .end local p4    # "options":Landroid/os/Bundle;
    throw v0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 2743
    .restart local v3    # "callerCanManageAppTokens":Z
    .restart local v11    # "callingUid":I
    .restart local v12    # "origId":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "clientToken":Landroid/os/IBinder;
    .restart local p2    # "type":I
    .restart local p3    # "displayId":I
    .restart local p4    # "options":Landroid/os/Bundle;
    :catchall_1
    move-exception v0

    invoke-static {v12, v13}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 2744
    throw v0
.end method

.method public attachWindowContextToWindowToken(Landroid/os/IBinder;Landroid/os/IBinder;)V
    .locals 13
    .param p1, "clientToken"    # Landroid/os/IBinder;
    .param p2, "token"    # Landroid/os/IBinder;

    .line 2749
    const-string v0, "android.permission.MANAGE_APP_TOKENS"

    const-string v1, "attachWindowContextToWindowToken"

    const/4 v2, 0x0

    invoke-virtual {p0, v0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;Z)Z

    move-result v0

    .line 2751
    .local v0, "callerCanManageAppTokens":Z
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    .line 2752
    .local v1, "callingUid":I
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v9

    .line 2754
    .local v9, "origId":J
    :try_start_0
    iget-object v11, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v11
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 2755
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v3, p2}, Lcom/android/server/wm/RootWindowContainer;->getWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/WindowToken;

    move-result-object v3

    move-object v12, v3

    .line 2756
    .local v12, "windowToken":Lcom/android/server/wm/WindowToken;
    if-nez v12, :cond_1

    .line 2757
    sget-boolean v3, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v3, :cond_0

    invoke-static {p2}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v3

    .local v3, "protoLogParam0":Ljava/lang/String;
    sget-object v4, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const v5, 0x6aa6e268

    const-string v6, "Then token:%s is invalid. It might be removed"

    const/4 v7, 0x1

    new-array v7, v7, [Ljava/lang/Object;

    aput-object v3, v7, v2

    invoke-static {v4, v5, v2, v6, v7}, Lcom/android/internal/protolog/ProtoLogImpl;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 2759
    .end local v3    # "protoLogParam0":Ljava/lang/String;
    :cond_0
    monitor-exit v11
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 2779
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v9, v10}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 2759
    return-void

    .line 2761
    :cond_1
    :try_start_2
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowContextListenerController:Lcom/android/server/wm/WindowContextListenerController;

    invoke-virtual {v2, p1}, Lcom/android/server/wm/WindowContextListenerController;->getWindowType(Landroid/os/IBinder;)I

    move-result v2

    .line 2762
    .local v2, "type":I
    const/4 v3, -0x1

    if-eq v2, v3, :cond_4

    .line 2766
    iget v3, v12, Lcom/android/server/wm/WindowToken;->windowType:I

    if-ne v2, v3, :cond_3

    .line 2771
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowContextListenerController:Lcom/android/server/wm/WindowContextListenerController;

    invoke-virtual {v3, p1, v0, v1}, Lcom/android/server/wm/WindowContextListenerController;->assertCallerCanModifyListener(Landroid/os/IBinder;ZI)Z

    move-result v3

    if-nez v3, :cond_2

    .line 2773
    monitor-exit v11
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 2779
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v9, v10}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 2773
    return-void

    .line 2775
    :cond_2
    :try_start_3
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowContextListenerController:Lcom/android/server/wm/WindowContextListenerController;

    iget v7, v12, Lcom/android/server/wm/WindowToken;->windowType:I

    iget-object v8, v12, Lcom/android/server/wm/WindowToken;->mOptions:Landroid/os/Bundle;

    move-object v4, p1

    move-object v5, v12

    move v6, v1

    invoke-virtual/range {v3 .. v8}, Lcom/android/server/wm/WindowContextListenerController;->registerWindowContainerListener(Landroid/os/IBinder;Lcom/android/server/wm/WindowContainer;IILandroid/os/Bundle;)V

    .line 2777
    .end local v2    # "type":I
    .end local v12    # "windowToken":Lcom/android/server/wm/WindowToken;
    monitor-exit v11
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 2779
    invoke-static {v9, v10}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 2780
    nop

    .line 2781
    return-void

    .line 2767
    .restart local v2    # "type":I
    .restart local v12    # "windowToken":Lcom/android/server/wm/WindowToken;
    :cond_3
    :try_start_5
    new-instance v3, Ljava/lang/IllegalArgumentException;

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "The WindowToken\'s type should match the created WindowContext\'s type. WindowToken\'s type is "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v5, v12, Lcom/android/server/wm/WindowToken;->windowType:I

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v5, ", while WindowContext\'s is "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-direct {v3, v4}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .end local v0    # "callerCanManageAppTokens":Z
    .end local v1    # "callingUid":I
    .end local v9    # "origId":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "clientToken":Landroid/os/IBinder;
    .end local p2    # "token":Landroid/os/IBinder;
    throw v3

    .line 2763
    .restart local v0    # "callerCanManageAppTokens":Z
    .restart local v1    # "callingUid":I
    .restart local v9    # "origId":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "clientToken":Landroid/os/IBinder;
    .restart local p2    # "token":Landroid/os/IBinder;
    :cond_4
    new-instance v3, Ljava/lang/IllegalArgumentException;

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "The clientToken:"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v5, " should have been attached."

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-direct {v3, v4}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .end local v0    # "callerCanManageAppTokens":Z
    .end local v1    # "callingUid":I
    .end local v9    # "origId":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "clientToken":Landroid/os/IBinder;
    .end local p2    # "token":Landroid/os/IBinder;
    throw v3

    .line 2777
    .end local v2    # "type":I
    .end local v12    # "windowToken":Lcom/android/server/wm/WindowToken;
    .restart local v0    # "callerCanManageAppTokens":Z
    .restart local v1    # "callingUid":I
    .restart local v9    # "origId":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "clientToken":Landroid/os/IBinder;
    .restart local p2    # "token":Landroid/os/IBinder;
    :catchall_0
    move-exception v2

    monitor-exit v11
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    :try_start_6
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .end local v0    # "callerCanManageAppTokens":Z
    .end local v1    # "callingUid":I
    .end local v9    # "origId":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "clientToken":Landroid/os/IBinder;
    .end local p2    # "token":Landroid/os/IBinder;
    throw v2
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    .line 2779
    .restart local v0    # "callerCanManageAppTokens":Z
    .restart local v1    # "callingUid":I
    .restart local v9    # "origId":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "clientToken":Landroid/os/IBinder;
    .restart local p2    # "token":Landroid/os/IBinder;
    :catchall_1
    move-exception v2

    invoke-static {v9, v10}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 2780
    throw v2
.end method

.method cancelRecentsAnimation(ILjava/lang/String;)V
    .locals 1
    .param p1, "reorderMode"    # I
    .param p2, "reason"    # Ljava/lang/String;

    .line 2964
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mRecentsAnimationController:Lcom/android/server/wm/RecentsAnimationController;

    if-eqz v0, :cond_0

    .line 2967
    invoke-virtual {v0, p1, p2}, Lcom/android/server/wm/RecentsAnimationController;->cancelAnimation(ILjava/lang/String;)V

    .line 2969
    :cond_0
    return-void
.end method

.method checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z
    .locals 1
    .param p1, "permission"    # Ljava/lang/String;
    .param p2, "func"    # Ljava/lang/String;

    .line 2663
    const/4 v0, 0x1

    invoke-virtual {p0, p1, p2, v0}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;Z)Z

    move-result v0

    return v0
.end method

.method checkCallingPermission(Ljava/lang/String;Ljava/lang/String;Z)Z
    .locals 15
    .param p1, "permission"    # Ljava/lang/String;
    .param p2, "func"    # Ljava/lang/String;
    .param p3, "printLog"    # Z

    .line 2668
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v0

    invoke-static {}, Landroid/os/Process;->myPid()I

    move-result v1

    const/4 v2, 0x1

    if-ne v0, v1, :cond_0

    .line 2669
    return v2

    .line 2672
    :cond_0
    move-object v0, p0

    iget-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    move-object/from16 v3, p1

    invoke-virtual {v1, v3}, Landroid/content/Context;->checkCallingPermission(Ljava/lang/String;)I

    move-result v1

    if-nez v1, :cond_1

    .line 2674
    return v2

    .line 2676
    :cond_1
    const/4 v1, 0x0

    if-eqz p3, :cond_2

    .line 2677
    sget-boolean v4, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v4, :cond_2

    invoke-static/range {p2 .. p2}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v4

    .local v4, "protoLogParam0":Ljava/lang/String;
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v5

    int-to-long v5, v5

    .local v5, "protoLogParam1":J
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v7

    int-to-long v7, v7

    .local v7, "protoLogParam2":J
    invoke-static/range {p1 .. p1}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v9

    .local v9, "protoLogParam3":Ljava/lang/String;
    sget-object v10, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const v11, 0x5d35029b

    const/16 v12, 0x14

    const/4 v13, 0x4

    new-array v13, v13, [Ljava/lang/Object;

    aput-object v4, v13, v1

    invoke-static {v5, v6}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v14

    aput-object v14, v13, v2

    const/4 v2, 0x2

    invoke-static {v7, v8}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v14

    aput-object v14, v13, v2

    const/4 v2, 0x3

    aput-object v9, v13, v2

    const-string v2, "Permission Denial: %s from pid=%d, uid=%d requires %s"

    invoke-static {v10, v11, v12, v2, v13}, Lcom/android/internal/protolog/ProtoLogImpl;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 2680
    .end local v4    # "protoLogParam0":Ljava/lang/String;
    .end local v5    # "protoLogParam1":J
    .end local v7    # "protoLogParam2":J
    .end local v9    # "protoLogParam3":Ljava/lang/String;
    :cond_2
    return v1
.end method

.method checkDrawnWindowsLocked()V
    .locals 2

    .line 5628
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForDrawnCallbacks:Ljava/util/HashMap;

    invoke-virtual {v0}, Ljava/util/HashMap;->isEmpty()Z

    move-result v0

    if-eqz v0, :cond_0

    .line 5629
    return-void

    .line 5631
    :cond_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForDrawnCallbacks:Ljava/util/HashMap;

    new-instance v1, Lcom/android/server/wm/WindowManagerService$$ExternalSyntheticLambda4;

    invoke-direct {v1, p0}, Lcom/android/server/wm/WindowManagerService$$ExternalSyntheticLambda4;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    invoke-virtual {v0, v1}, Ljava/util/HashMap;->forEach(Ljava/util/function/BiConsumer;)V

    .line 5654
    return-void
.end method

.method cleanupRecentsAnimation(I)V
    .locals 2
    .param p1, "reorderMode"    # I

    .line 2972
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mRecentsAnimationController:Lcom/android/server/wm/RecentsAnimationController;

    if-eqz v0, :cond_0

    .line 2973
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mRecentsAnimationController:Lcom/android/server/wm/RecentsAnimationController;

    .line 2974
    .local v0, "controller":Lcom/android/server/wm/RecentsAnimationController;
    const/4 v1, 0x0

    iput-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRecentsAnimationController:Lcom/android/server/wm/RecentsAnimationController;

    .line 2975
    invoke-virtual {v0, p1}, Lcom/android/server/wm/RecentsAnimationController;->cleanupAnimation(I)V

    .line 2977
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    iget-object v1, v1, Lcom/android/server/wm/DisplayContent;->mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v1}, Lcom/android/server/wm/AppTransition;->updateBooster()V

    .line 2979
    .end local v0    # "controller":Lcom/android/server/wm/RecentsAnimationController;
    :cond_0
    return-void
.end method

.method public clearForcedDisplayDensityForUser(II)V
    .locals 8
    .param p1, "displayId"    # I
    .param p2, "userId"    # I

    .line 5508
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.WRITE_SECURE_SETTINGS"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_1

    .line 5513
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    .line 5514
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    const/4 v4, 0x0

    const/4 v5, 0x1

    const-string v6, "clearForcedDisplayDensityForUser"

    const/4 v7, 0x0

    .line 5513
    move v3, p2

    invoke-static/range {v1 .. v7}, Landroid/app/ActivityManager;->handleIncomingUser(IIIZZLjava/lang/String;Ljava/lang/String;)I

    move-result v0

    .line 5516
    .local v0, "callingUserId":I
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v1

    .line 5518
    .local v1, "ident":J
    :try_start_0
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 5519
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v4, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v4

    .line 5520
    .local v4, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v4, :cond_0

    .line 5521
    iget v5, v4, Lcom/android/server/wm/DisplayContent;->mInitialDisplayDensity:I

    invoke-virtual {v4, v5, v0}, Lcom/android/server/wm/DisplayContent;->setForcedDensity(II)V

    .line 5524
    .end local v4    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_0
    monitor-exit v3
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 5526
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5527
    nop

    .line 5528
    return-void

    .line 5524
    :catchall_0
    move-exception v4

    :try_start_3
    monitor-exit v3
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .end local v0    # "callingUserId":I
    .end local v1    # "ident":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "displayId":I
    .end local p2    # "userId":I
    throw v4
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 5526
    .restart local v0    # "callingUserId":I
    .restart local v1    # "ident":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "displayId":I
    .restart local p2    # "userId":I
    :catchall_1
    move-exception v3

    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5527
    throw v3

    .line 5510
    .end local v0    # "callingUserId":I
    .end local v1    # "ident":J
    :cond_1
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Must hold permission android.permission.WRITE_SECURE_SETTINGS"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public clearForcedDisplaySize(I)V
    .locals 6
    .param p1, "displayId"    # I

    .line 5442
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.WRITE_SECURE_SETTINGS"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_1

    .line 5447
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 5449
    .local v0, "ident":J
    :try_start_0
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 5450
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v3, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    .line 5451
    .local v3, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v3, :cond_0

    .line 5452
    iget v4, v3, Lcom/android/server/wm/DisplayContent;->mInitialDisplayWidth:I

    iget v5, v3, Lcom/android/server/wm/DisplayContent;->mInitialDisplayHeight:I

    invoke-virtual {v3, v4, v5}, Lcom/android/server/wm/DisplayContent;->setForcedSize(II)V

    .line 5455
    .end local v3    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_0
    monitor-exit v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 5457
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5458
    nop

    .line 5459
    return-void

    .line 5455
    :catchall_0
    move-exception v3

    :try_start_3
    monitor-exit v2
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .end local v0    # "ident":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "displayId":I
    throw v3
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 5457
    .restart local v0    # "ident":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "displayId":I
    :catchall_1
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5458
    throw v2

    .line 5444
    .end local v0    # "ident":J
    :cond_1
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Must hold permission android.permission.WRITE_SECURE_SETTINGS"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public clearWindowContentFrameStats(Landroid/os/IBinder;)Z
    .locals 4
    .param p1, "token"    # Landroid/os/IBinder;

    .line 6093
    const-string v0, "android.permission.FRAME_STATS"

    const-string v1, "clearWindowContentFrameStats()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_2

    .line 6097
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 6098
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    invoke-virtual {v1, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/WindowState;

    .line 6099
    .local v1, "windowState":Lcom/android/server/wm/WindowState;
    const/4 v2, 0x0

    if-nez v1, :cond_0

    .line 6100
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v2

    .line 6102
    :cond_0
    :try_start_1
    iget-object v3, v1, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    iget-object v3, v3, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceController:Lcom/android/server/wm/WindowSurfaceController;

    .line 6103
    .local v3, "surfaceController":Lcom/android/server/wm/WindowSurfaceController;
    if-nez v3, :cond_1

    .line 6104
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v2

    .line 6106
    :cond_1
    :try_start_2
    invoke-virtual {v3}, Lcom/android/server/wm/WindowSurfaceController;->clearWindowContentFrameStats()Z

    move-result v2

    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v2

    .line 6107
    .end local v1    # "windowState":Lcom/android/server/wm/WindowState;
    .end local v3    # "surfaceController":Lcom/android/server/wm/WindowSurfaceController;
    :catchall_0
    move-exception v1

    :try_start_3
    monitor-exit v0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1

    .line 6095
    :cond_2
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires FRAME_STATS permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method closeSurfaceTransaction(Ljava/lang/String;)V
    .locals 3
    .param p1, "where"    # Ljava/lang/String;

    .line 1105
    const-wide/16 v0, 0x20

    :try_start_0
    const-string v2, "closeSurfaceTransaction"

    invoke-static {v0, v1, v2}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 1106
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    .line 1107
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowTracing:Lcom/android/server/wm/WindowTracing;

    invoke-virtual {v2, p1}, Lcom/android/server/wm/WindowTracing;->logState(Ljava/lang/String;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 1109
    invoke-static {v0, v1}, Landroid/os/Trace;->traceEnd(J)V

    .line 1110
    nop

    .line 1111
    return-void

    .line 1109
    :catchall_0
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Trace;->traceEnd(J)V

    .line 1110
    throw v2
.end method

.method public closeSystemDialogs(Ljava/lang/String;)V
    .locals 4
    .param p1, "reason"    # Ljava/lang/String;

    .line 3243
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v0

    .line 3244
    .local v0, "callingPid":I
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    .line 3245
    .local v1, "callingUid":I
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    const/4 v3, 0x0

    invoke-virtual {v2, v0, v1, v3}, Lcom/android/server/wm/ActivityTaskManagerInternal;->checkCanCloseSystemDialogs(IILjava/lang/String;)Z

    move-result v2

    if-nez v2, :cond_0

    .line 3246
    return-void

    .line 3248
    :cond_0
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v2

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 3249
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v3, p1}, Lcom/android/server/wm/RootWindowContainer;->closeSystemDialogs(Ljava/lang/String;)V

    .line 3250
    monitor-exit v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 3251
    return-void

    .line 3250
    :catchall_0
    move-exception v3

    :try_start_1
    monitor-exit v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v3
.end method

.method public computeNewConfiguration(I)Landroid/content/res/Configuration;
    .locals 2
    .param p1, "displayId"    # I

    .line 4715
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 4716
    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->computeNewConfigurationLocked(I)Landroid/content/res/Configuration;

    move-result-object v1

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-object v1

    .line 4717
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public createInputConsumer(Landroid/os/IBinder;Ljava/lang/String;ILandroid/view/InputChannel;)V
    .locals 8
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "name"    # Ljava/lang/String;
    .param p3, "displayId"    # I
    .param p4, "inputChannel"    # Landroid/view/InputChannel;

    .line 6015
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    invoke-virtual {v0, v1}, Lcom/android/server/wm/ActivityTaskManagerInternal;->isCallerRecents(I)Z

    move-result v0

    if-nez v0, :cond_1

    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.INPUT_CONSUMER"

    .line 6016
    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_0

    goto :goto_0

    .line 6017
    :cond_0
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "createInputConsumer requires INPUT_CONSUMER permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 6020
    :cond_1
    :goto_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 6021
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p3}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 6022
    .local v1, "display":Lcom/android/server/wm/DisplayContent;
    if-eqz v1, :cond_2

    .line 6023
    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->getInputMonitor()Lcom/android/server/wm/InputMonitor;

    move-result-object v2

    .line 6024
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v6

    invoke-static {}, Landroid/os/Binder;->getCallingUserHandle()Landroid/os/UserHandle;

    move-result-object v7

    .line 6023
    move-object v3, p1

    move-object v4, p2

    move-object v5, p4

    invoke-virtual/range {v2 .. v7}, Lcom/android/server/wm/InputMonitor;->createInputConsumer(Landroid/os/IBinder;Ljava/lang/String;Landroid/view/InputChannel;ILandroid/os/UserHandle;)V

    .line 6026
    .end local v1    # "display":Lcom/android/server/wm/DisplayContent;
    :cond_2
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 6027
    return-void

    .line 6026
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method createWatermark()V
    .locals 9

    .line 5897
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWatermark:Lcom/android/server/wm/Watermark;

    if-eqz v0, :cond_0

    .line 5898
    return-void

    .line 5901
    :cond_0
    new-instance v0, Ljava/io/File;

    const-string v1, "/system/etc/setup.conf"

    invoke-direct {v0, v1}, Ljava/io/File;-><init>(Ljava/lang/String;)V

    .line 5902
    .local v0, "file":Ljava/io/File;
    const/4 v1, 0x0

    .line 5903
    .local v1, "in":Ljava/io/FileInputStream;
    const/4 v2, 0x0

    .line 5905
    .local v2, "ind":Ljava/io/DataInputStream;
    :try_start_0
    new-instance v3, Ljava/io/FileInputStream;

    invoke-direct {v3, v0}, Ljava/io/FileInputStream;-><init>(Ljava/io/File;)V

    move-object v1, v3

    .line 5906
    new-instance v3, Ljava/io/DataInputStream;

    invoke-direct {v3, v1}, Ljava/io/DataInputStream;-><init>(Ljava/io/InputStream;)V

    move-object v2, v3

    .line 5907
    invoke-virtual {v2}, Ljava/io/DataInputStream;->readLine()Ljava/lang/String;

    move-result-object v3

    .line 5908
    .local v3, "line":Ljava/lang/String;
    if-eqz v3, :cond_1

    .line 5909
    const-string v4, "%"

    invoke-virtual {v3, v4}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v4

    .line 5910
    .local v4, "toks":[Ljava/lang/String;
    if-eqz v4, :cond_1

    array-length v5, v4

    if-lez v5, :cond_1

    .line 5912
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v5

    .line 5913
    .local v5, "displayContent":Lcom/android/server/wm/DisplayContent;
    new-instance v6, Lcom/android/server/wm/Watermark;

    iget-object v7, v5, Lcom/android/server/wm/DisplayContent;->mRealDisplayMetrics:Landroid/util/DisplayMetrics;

    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mTransaction:Landroid/view/SurfaceControl$Transaction;

    invoke-direct {v6, v5, v7, v4, v8}, Lcom/android/server/wm/Watermark;-><init>(Lcom/android/server/wm/DisplayContent;Landroid/util/DisplayMetrics;[Ljava/lang/String;Landroid/view/SurfaceControl$Transaction;)V

    iput-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mWatermark:Lcom/android/server/wm/Watermark;

    .line 5915
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mTransaction:Landroid/view/SurfaceControl$Transaction;

    invoke-virtual {v6}, Landroid/view/SurfaceControl$Transaction;->apply()V
    :try_end_0
    .catch Ljava/io/FileNotFoundException; {:try_start_0 .. :try_end_0} :catch_5
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_3
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 5921
    .end local v3    # "line":Ljava/lang/String;
    .end local v4    # "toks":[Ljava/lang/String;
    .end local v5    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_1
    nop

    .line 5923
    :try_start_1
    invoke-virtual {v2}, Ljava/io/DataInputStream;->close()V
    :try_end_1
    .catch Ljava/io/IOException; {:try_start_1 .. :try_end_1} :catch_0

    .line 5925
    :goto_0
    goto :goto_4

    .line 5924
    :catch_0
    move-exception v3

    goto :goto_0

    .line 5921
    :catchall_0
    move-exception v3

    if-nez v2, :cond_2

    .line 5926
    if-eqz v1, :cond_3

    .line 5928
    :try_start_2
    invoke-virtual {v1}, Ljava/io/FileInputStream;->close()V
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_1

    .line 5930
    goto :goto_2

    .line 5929
    :catch_1
    move-exception v4

    goto :goto_2

    .line 5923
    :cond_2
    :try_start_3
    invoke-virtual {v2}, Ljava/io/DataInputStream;->close()V
    :try_end_3
    .catch Ljava/io/IOException; {:try_start_3 .. :try_end_3} :catch_2

    .line 5925
    :goto_1
    goto :goto_2

    .line 5924
    :catch_2
    move-exception v4

    goto :goto_1

    .line 5932
    :cond_3
    :goto_2
    throw v3

    .line 5919
    :catch_3
    move-exception v3

    .line 5921
    if-eqz v2, :cond_4

    .line 5923
    :try_start_4
    invoke-virtual {v2}, Ljava/io/DataInputStream;->close()V
    :try_end_4
    .catch Ljava/io/IOException; {:try_start_4 .. :try_end_4} :catch_0

    goto :goto_0

    .line 5926
    :cond_4
    if-eqz v1, :cond_6

    .line 5928
    :try_start_5
    invoke-virtual {v1}, Ljava/io/FileInputStream;->close()V
    :try_end_5
    .catch Ljava/io/IOException; {:try_start_5 .. :try_end_5} :catch_4

    .line 5930
    :goto_3
    goto :goto_4

    .line 5929
    :catch_4
    move-exception v3

    goto :goto_3

    .line 5918
    :catch_5
    move-exception v3

    .line 5921
    if-eqz v2, :cond_5

    .line 5923
    :try_start_6
    invoke-virtual {v2}, Ljava/io/DataInputStream;->close()V
    :try_end_6
    .catch Ljava/io/IOException; {:try_start_6 .. :try_end_6} :catch_0

    goto :goto_0

    .line 5926
    :cond_5
    if-eqz v1, :cond_6

    .line 5928
    :try_start_7
    invoke-virtual {v1}, Ljava/io/FileInputStream;->close()V
    :try_end_7
    .catch Ljava/io/IOException; {:try_start_7 .. :try_end_7} :catch_4

    goto :goto_3

    .line 5933
    :cond_6
    :goto_4
    return-void
.end method

.method public destroyInputConsumer(Ljava/lang/String;I)Z
    .locals 3
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "displayId"    # I

    .line 6031
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    invoke-virtual {v0, v1}, Lcom/android/server/wm/ActivityTaskManagerInternal;->isCallerRecents(I)Z

    move-result v0

    if-nez v0, :cond_1

    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.INPUT_CONSUMER"

    .line 6032
    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_0

    goto :goto_0

    .line 6033
    :cond_0
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "destroyInputConsumer requires INPUT_CONSUMER permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 6036
    :cond_1
    :goto_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 6037
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p2}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 6038
    .local v1, "display":Lcom/android/server/wm/DisplayContent;
    if-eqz v1, :cond_2

    .line 6039
    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->getInputMonitor()Lcom/android/server/wm/InputMonitor;

    move-result-object v2

    invoke-virtual {v2, p1}, Lcom/android/server/wm/InputMonitor;->destroyInputConsumer(Ljava/lang/String;)Z

    move-result v2

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v2

    .line 6041
    :cond_2
    const/4 v2, 0x0

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v2

    .line 6042
    .end local v1    # "display":Lcom/android/server/wm/DisplayContent;
    :catchall_0
    move-exception v1

    :try_start_2
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public detachWindowContextFromWindowContainer(Landroid/os/IBinder;)V
    .locals 9
    .param p1, "clientToken"    # Landroid/os/IBinder;

    .line 2785
    const-string v0, "android.permission.MANAGE_APP_TOKENS"

    const-string v1, "detachWindowContextFromWindowContainer"

    const/4 v2, 0x0

    invoke-virtual {p0, v0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;Z)Z

    move-result v0

    .line 2787
    .local v0, "callerCanManageAppTokens":Z
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    .line 2788
    .local v1, "callingUid":I
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 2790
    .local v2, "origId":J
    :try_start_0
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v4
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 2791
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mWindowContextListenerController:Lcom/android/server/wm/WindowContextListenerController;

    invoke-virtual {v5, p1, v0, v1}, Lcom/android/server/wm/WindowContextListenerController;->assertCallerCanModifyListener(Landroid/os/IBinder;ZI)Z

    move-result v5

    if-nez v5, :cond_0

    .line 2793
    monitor-exit v4
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 2806
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 2793
    return-void

    .line 2795
    :cond_0
    :try_start_2
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mWindowContextListenerController:Lcom/android/server/wm/WindowContextListenerController;

    .line 2796
    invoke-virtual {v5, p1}, Lcom/android/server/wm/WindowContextListenerController;->getContainer(Landroid/os/IBinder;)Lcom/android/server/wm/WindowContainer;

    move-result-object v5

    .line 2798
    .local v5, "wc":Lcom/android/server/wm/WindowContainer;
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mWindowContextListenerController:Lcom/android/server/wm/WindowContextListenerController;

    invoke-virtual {v6, p1}, Lcom/android/server/wm/WindowContextListenerController;->unregisterWindowContainerListener(Landroid/os/IBinder;)V

    .line 2800
    invoke-virtual {v5}, Lcom/android/server/wm/WindowContainer;->asWindowToken()Lcom/android/server/wm/WindowToken;

    move-result-object v6

    .line 2801
    .local v6, "token":Lcom/android/server/wm/WindowToken;
    if-eqz v6, :cond_1

    invoke-virtual {v6}, Lcom/android/server/wm/WindowToken;->isFromClient()Z

    move-result v7

    if-eqz v7, :cond_1

    .line 2802
    iget-object v7, v6, Lcom/android/server/wm/WindowToken;->token:Landroid/os/IBinder;

    invoke-virtual {v6}, Lcom/android/server/wm/WindowToken;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v8

    invoke-virtual {v8}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    move-result v8

    invoke-virtual {p0, v7, v8}, Lcom/android/server/wm/WindowManagerService;->removeWindowToken(Landroid/os/IBinder;I)V

    .line 2804
    .end local v5    # "wc":Lcom/android/server/wm/WindowContainer;
    .end local v6    # "token":Lcom/android/server/wm/WindowToken;
    :cond_1
    monitor-exit v4
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 2806
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 2807
    nop

    .line 2808
    return-void

    .line 2804
    :catchall_0
    move-exception v5

    :try_start_4
    monitor-exit v4
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    :try_start_5
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .end local v0    # "callerCanManageAppTokens":Z
    .end local v1    # "callingUid":I
    .end local v2    # "origId":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "clientToken":Landroid/os/IBinder;
    throw v5
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    .line 2806
    .restart local v0    # "callerCanManageAppTokens":Z
    .restart local v1    # "callingUid":I
    .restart local v2    # "origId":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "clientToken":Landroid/os/IBinder;
    :catchall_1
    move-exception v4

    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 2807
    throw v4
.end method

.method public detectSafeMode()Z
    .locals 21

    .line 4787
    move-object/from16 v1, p0

    const-string v0, "persist.sys.safemode"

    const-string v2, "ro.sys.safemode"

    iget-object v3, v1, Lcom/android/server/wm/WindowManagerService;->mInputManagerCallback:Lcom/android/server/wm/InputManagerCallback;

    const-wide/16 v4, 0x3e8

    invoke-virtual {v3, v4, v5}, Lcom/android/server/wm/InputManagerCallback;->waitForInputDevicesReady(J)Z

    move-result v3

    const/4 v4, 0x1

    const/4 v5, 0x0

    if-nez v3, :cond_0

    .line 4789
    sget-boolean v3, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v3, :cond_0

    const-wide/16 v6, 0x3e8

    .local v6, "protoLogParam0":J
    sget-object v3, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const v8, 0x69c73085

    new-array v9, v4, [Ljava/lang/Object;

    invoke-static {v6, v7}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v10

    aput-object v10, v9, v5

    const-string v10, "Devices still not ready after waiting %d milliseconds before attempting to detect safe mode."

    invoke-static {v3, v8, v4, v10, v9}, Lcom/android/internal/protolog/ProtoLogImpl;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 4794
    .end local v6    # "protoLogParam0":J
    :cond_0
    iget-object v3, v1, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    .line 4795
    invoke-virtual {v3}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v3

    .line 4794
    const-string v6, "safe_boot_disallowed"

    invoke-static {v3, v6, v5}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v3

    if-eqz v3, :cond_1

    .line 4796
    return v5

    .line 4799
    :cond_1
    iget-object v3, v1, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    const/16 v6, 0x52

    const/4 v7, -0x1

    const/16 v8, -0x100

    invoke-virtual {v3, v7, v8, v6}, Lcom/android/server/input/InputManagerService;->getKeyCodeState(III)I

    move-result v3

    .line 4801
    .local v3, "menuState":I
    iget-object v6, v1, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    const/16 v9, 0x2f

    invoke-virtual {v6, v7, v8, v9}, Lcom/android/server/input/InputManagerService;->getKeyCodeState(III)I

    move-result v6

    .line 4802
    .local v6, "sState":I
    iget-object v9, v1, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    const/16 v10, 0x201

    const/16 v11, 0x17

    invoke-virtual {v9, v7, v10, v11}, Lcom/android/server/input/InputManagerService;->getKeyCodeState(III)I

    move-result v9

    .line 4804
    .local v9, "dpadState":I
    iget-object v10, v1, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    const v11, 0x10004

    const/16 v12, 0x110

    invoke-virtual {v10, v7, v11, v12}, Lcom/android/server/input/InputManagerService;->getScanCodeState(III)I

    move-result v10

    .line 4806
    .local v10, "trackballState":I
    iget-object v11, v1, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    const/16 v12, 0x19

    invoke-virtual {v11, v7, v8, v12}, Lcom/android/server/input/InputManagerService;->getKeyCodeState(III)I

    move-result v7

    .line 4808
    .local v7, "volumeDownState":I
    if-gtz v3, :cond_3

    if-gtz v6, :cond_3

    if-gtz v9, :cond_3

    if-gtz v10, :cond_3

    if-lez v7, :cond_2

    goto :goto_0

    :cond_2
    move v8, v5

    goto :goto_1

    :cond_3
    :goto_0
    move v8, v4

    :goto_1
    iput-boolean v8, v1, Lcom/android/server/wm/WindowManagerService;->mSafeMode:Z

    .line 4811
    :try_start_0
    invoke-static {v0, v5}, Landroid/os/SystemProperties;->getInt(Ljava/lang/String;I)I

    move-result v8

    if-nez v8, :cond_4

    .line 4812
    invoke-static {v2, v5}, Landroid/os/SystemProperties;->getInt(Ljava/lang/String;I)I

    move-result v8

    if-eqz v8, :cond_5

    .line 4813
    :cond_4
    iput-boolean v4, v1, Lcom/android/server/wm/WindowManagerService;->mSafeMode:Z

    .line 4814
    const-string v8, ""

    invoke-static {v0, v8}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V
    :try_end_0
    .catch Ljava/lang/IllegalArgumentException; {:try_start_0 .. :try_end_0} :catch_0

    .line 4817
    :cond_5
    goto :goto_2

    .line 4816
    :catch_0
    move-exception v0

    .line 4818
    :goto_2
    iget-boolean v0, v1, Lcom/android/server/wm/WindowManagerService;->mSafeMode:Z

    if-eqz v0, :cond_7

    .line 4819
    sget-boolean v0, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v0, :cond_6

    int-to-long v11, v3

    .local v11, "protoLogParam0":J
    int-to-long v13, v6

    .local v13, "protoLogParam1":J
    int-to-long v4, v9

    move/from16 v16, v9

    .end local v9    # "dpadState":I
    .local v4, "protoLogParam2":J
    .local v16, "dpadState":I
    int-to-long v8, v10

    .local v8, "protoLogParam3":J
    sget-object v0, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const/4 v15, 0x4

    new-array v15, v15, [Ljava/lang/Object;

    invoke-static {v11, v12}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v19

    const/16 v18, 0x0

    aput-object v19, v15, v18

    invoke-static {v13, v14}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v19

    const/16 v17, 0x1

    aput-object v19, v15, v17

    const/16 v17, 0x2

    invoke-static {v4, v5}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v19

    aput-object v19, v15, v17

    const/16 v17, 0x3

    invoke-static {v8, v9}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v19

    aput-object v19, v15, v17

    move/from16 v17, v3

    .end local v3    # "menuState":I
    .local v17, "menuState":I
    const-string v3, "SAFE MODE ENABLED (menu=%d s=%d dpad=%d trackball=%d)"

    move-wide/from16 v19, v4

    const v4, -0x5602e201

    const/16 v5, 0x55

    .end local v4    # "protoLogParam2":J
    .local v19, "protoLogParam2":J
    invoke-static {v0, v4, v5, v3, v15}, Lcom/android/internal/protolog/ProtoLogImpl;->i(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    goto :goto_3

    .end local v8    # "protoLogParam3":J
    .end local v11    # "protoLogParam0":J
    .end local v13    # "protoLogParam1":J
    .end local v16    # "dpadState":I
    .end local v17    # "menuState":I
    .end local v19    # "protoLogParam2":J
    .restart local v3    # "menuState":I
    .restart local v9    # "dpadState":I
    :cond_6
    move/from16 v17, v3

    move/from16 v16, v9

    .line 4822
    .end local v3    # "menuState":I
    .end local v9    # "dpadState":I
    .restart local v16    # "dpadState":I
    .restart local v17    # "menuState":I
    :goto_3
    const/4 v3, 0x0

    invoke-static {v2, v3}, Landroid/os/SystemProperties;->getInt(Ljava/lang/String;I)I

    move-result v0

    if-nez v0, :cond_8

    .line 4823
    const-string v0, "1"

    invoke-static {v2, v0}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V

    goto :goto_4

    .line 4826
    .end local v16    # "dpadState":I
    .end local v17    # "menuState":I
    .restart local v3    # "menuState":I
    .restart local v9    # "dpadState":I
    :cond_7
    move/from16 v17, v3

    move/from16 v16, v9

    .end local v3    # "menuState":I
    .end local v9    # "dpadState":I
    .restart local v16    # "dpadState":I
    .restart local v17    # "menuState":I
    sget-boolean v0, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v0, :cond_8

    sget-object v0, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const v2, 0x6f44b0ba

    const/4 v3, 0x0

    check-cast v3, [Ljava/lang/Object;

    const-string v4, "SAFE MODE not enabled"

    const/4 v5, 0x0

    invoke-static {v0, v2, v5, v4, v3}, Lcom/android/internal/protolog/ProtoLogImpl;->i(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 4828
    :cond_8
    :goto_4
    iget-object v0, v1, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    iget-boolean v2, v1, Lcom/android/server/wm/WindowManagerService;->mSafeMode:Z

    invoke-interface {v0, v2}, Lcom/android/server/policy/WindowManagerPolicy;->setSafeMode(Z)V

    .line 4829
    iget-boolean v0, v1, Lcom/android/server/wm/WindowManagerService;->mSafeMode:Z

    return v0
.end method

.method public disableKeyguard(Landroid/os/IBinder;Ljava/lang/String;I)V
    .locals 8
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "tag"    # Ljava/lang/String;
    .param p3, "userId"    # I

    .line 3122
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAmInternal:Landroid/app/ActivityManagerInternal;

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    const/4 v4, 0x0

    const/4 v5, 0x2

    const-string v6, "disableKeyguard"

    const/4 v7, 0x0

    move v3, p3

    invoke-virtual/range {v0 .. v7}, Landroid/app/ActivityManagerInternal;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p3

    .line 3124
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.DISABLE_KEYGUARD"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_0

    .line 3128
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 3129
    .local v0, "callingUid":I
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v1

    .line 3131
    .local v1, "origIdentity":J
    :try_start_0
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mKeyguardDisableHandler:Lcom/android/server/wm/KeyguardDisableHandler;

    invoke-virtual {v3, p1, p2, v0, p3}, Lcom/android/server/wm/KeyguardDisableHandler;->disableKeyguard(Landroid/os/IBinder;Ljava/lang/String;II)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 3133
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3134
    nop

    .line 3135
    return-void

    .line 3133
    :catchall_0
    move-exception v3

    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3134
    throw v3

    .line 3126
    .end local v0    # "callingUid":I
    .end local v1    # "origIdentity":J
    :cond_0
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires DISABLE_KEYGUARD permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public disableNonVrUi(Z)V
    .locals 5
    .param p1, "disable"    # Z

    .line 7953
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 7955
    const/4 v1, 0x1

    if-nez p1, :cond_0

    move v2, v1

    goto :goto_0

    :cond_0
    const/4 v2, 0x0

    .line 7956
    .local v2, "showAlertWindowNotifications":Z
    :goto_0
    iget-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mShowAlertWindowNotifications:Z

    if-ne v2, v3, :cond_1

    .line 7957
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 7959
    :cond_1
    :try_start_1
    iput-boolean v2, p0, Lcom/android/server/wm/WindowManagerService;->mShowAlertWindowNotifications:Z

    .line 7961
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mSessions:Landroid/util/ArraySet;

    invoke-virtual {v3}, Landroid/util/ArraySet;->size()I

    move-result v3

    sub-int/2addr v3, v1

    .local v3, "i":I
    :goto_1
    if-ltz v3, :cond_2

    .line 7962
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mSessions:Landroid/util/ArraySet;

    invoke-virtual {v1, v3}, Landroid/util/ArraySet;->valueAt(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/Session;

    .line 7963
    .local v1, "s":Lcom/android/server/wm/Session;
    iget-boolean v4, p0, Lcom/android/server/wm/WindowManagerService;->mShowAlertWindowNotifications:Z

    invoke-virtual {v1, v4}, Lcom/android/server/wm/Session;->setShowingAlertWindowNotificationAllowed(Z)V

    .line 7961
    .end local v1    # "s":Lcom/android/server/wm/Session;
    add-int/lit8 v3, v3, -0x1

    goto :goto_1

    .line 7965
    .end local v2    # "showAlertWindowNotifications":Z
    .end local v3    # "i":I
    :cond_2
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 7966
    return-void

    .line 7965
    :catchall_0
    move-exception v1

    :try_start_2
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public dismissKeyguard(Lcom/android/internal/policy/IKeyguardDismissCallback;Ljava/lang/CharSequence;)V
    .locals 2
    .param p1, "callback"    # Lcom/android/internal/policy/IKeyguardDismissCallback;
    .param p2, "message"    # Ljava/lang/CharSequence;

    .line 3208
    const-string v0, "android.permission.CONTROL_KEYGUARD"

    const-string v1, "dismissKeyguard"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 3211
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-virtual {v0}, Lcom/android/server/wm/ActivityTaskManagerInternal;->isDreaming()Z

    move-result v0

    if-eqz v0, :cond_0

    .line 3212
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    iget-object v0, v0, Lcom/android/server/wm/ActivityTaskManagerService;->mTaskSupervisor:Lcom/android/server/wm/ActivityTaskSupervisor;

    const-string v1, "dismissKeyguard"

    invoke-virtual {v0, v1}, Lcom/android/server/wm/ActivityTaskSupervisor;->wakeUp(Ljava/lang/String;)V

    .line 3214
    :cond_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 3215
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    invoke-interface {v1, p1, p2}, Lcom/android/server/policy/WindowManagerPolicy;->dismissKeyguardLw(Lcom/android/internal/policy/IKeyguardDismissCallback;Ljava/lang/CharSequence;)V

    .line 3216
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 3217
    return-void

    .line 3216
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1

    .line 3209
    :cond_1
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires CONTROL_KEYGUARD permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method dispatchNewAnimatorScaleLocked(Lcom/android/server/wm/Session;)V
    .locals 2
    .param p1, "session"    # Lcom/android/server/wm/Session;

    .line 3338
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v1, 0x22

    invoke-virtual {v0, v1, p1}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    move-result-object v0

    invoke-virtual {v0}, Landroid/os/Message;->sendToTarget()V

    .line 3339
    return-void
.end method

.method public displayReady()V
    .locals 3

    .line 4833
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 4834
    iget v1, p0, Lcom/android/server/wm/WindowManagerService;->mMaxUiWidth:I

    if-lez v1, :cond_0

    .line 4835
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    new-instance v2, Lcom/android/server/wm/WindowManagerService$$ExternalSyntheticLambda10;

    invoke-direct {v2, p0}, Lcom/android/server/wm/WindowManagerService$$ExternalSyntheticLambda10;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    invoke-virtual {v1, v2}, Lcom/android/server/wm/RootWindowContainer;->forAllDisplays(Ljava/util/function/Consumer;)V

    .line 4837
    :cond_0
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->applyForcedPropertiesForDefaultDisplay()Z

    .line 4838
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    invoke-virtual {v1}, Lcom/android/server/wm/WindowAnimator;->ready()V

    .line 4839
    const/4 v1, 0x1

    iput-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayReady:Z

    .line 4842
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    sget-object v2, Lcom/android/server/wm/WindowManagerService$$ExternalSyntheticLambda16;->INSTANCE:Lcom/android/server/wm/WindowManagerService$$ExternalSyntheticLambda16;

    invoke-virtual {v1, v2}, Lcom/android/server/wm/RootWindowContainer;->forAllDisplays(Ljava/util/function/Consumer;)V

    .line 4843
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v1}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v1

    const-string v2, "android.hardware.touchscreen"

    invoke-virtual {v1, v2}, Landroid/content/pm/PackageManager;->hasSystemFeature(Ljava/lang/String;)Z

    move-result v1

    iput-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mIsTouchDevice:Z

    .line 4845
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v1}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v1

    const-string v2, "android.hardware.faketouch"

    invoke-virtual {v1, v2}, Landroid/content/pm/PackageManager;->hasSystemFeature(Ljava/lang/String;)Z

    move-result v1

    iput-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mIsFakeTouchDevice:Z

    .line 4847
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 4850
    :try_start_1
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mActivityTaskManager:Landroid/app/IActivityTaskManager;

    const/4 v1, 0x0

    invoke-interface {v0, v1}, Landroid/app/IActivityTaskManager;->updateConfiguration(Landroid/content/res/Configuration;)Z
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0

    .line 4852
    goto :goto_0

    .line 4851
    :catch_0
    move-exception v0

    .line 4853
    :goto_0
    return-void

    .line 4847
    :catchall_0
    move-exception v1

    :try_start_2
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public dontOverrideDisplayInfo(I)V
    .locals 6
    .param p1, "displayId"    # I

    .line 7078
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 7080
    .local v0, "token":J
    :try_start_0
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 7081
    const/4 v3, 0x0

    invoke-direct {p0, p1, v3}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentOrCreate(ILandroid/os/IBinder;)Lcom/android/server/wm/DisplayContent;

    move-result-object v4

    .line 7082
    .local v4, "dc":Lcom/android/server/wm/DisplayContent;
    if-eqz v4, :cond_0

    .line 7090
    const/4 v5, 0x0

    iput-boolean v5, v4, Lcom/android/server/wm/DisplayContent;->mShouldOverrideDisplayConfiguration:Z

    .line 7091
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayManagerInternal:Landroid/hardware/display/DisplayManagerInternal;

    invoke-virtual {v5, p1, v3}, Landroid/hardware/display/DisplayManagerInternal;->setDisplayInfoOverrideFromWindowManager(ILandroid/view/DisplayInfo;)V

    .line 7093
    .end local v4    # "dc":Lcom/android/server/wm/DisplayContent;
    monitor-exit v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 7095
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 7096
    nop

    .line 7097
    return-void

    .line 7083
    .restart local v4    # "dc":Lcom/android/server/wm/DisplayContent;
    :cond_0
    :try_start_3
    new-instance v3, Ljava/lang/IllegalArgumentException;

    const-string v5, "Trying to configure a non existent display."

    invoke-direct {v3, v5}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .end local v0    # "token":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "displayId":I
    throw v3

    .line 7093
    .end local v4    # "dc":Lcom/android/server/wm/DisplayContent;
    .restart local v0    # "token":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "displayId":I
    :catchall_0
    move-exception v3

    monitor-exit v2
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .end local v0    # "token":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "displayId":I
    throw v3
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 7095
    .restart local v0    # "token":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "displayId":I
    :catchall_1
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 7096
    throw v2
.end method

.method public dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
    .locals 1
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "args"    # [Ljava/lang/String;

    .line 6473
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPriorityDumper:Lcom/android/server/utils/PriorityDump$PriorityDumper;

    invoke-static {v0, p1, p2, p3}, Lcom/android/server/utils/PriorityDump;->dump(Lcom/android/server/utils/PriorityDump$PriorityDumper;Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V

    .line 6474
    return-void
.end method

.method dumpDebugLocked(Landroid/util/proto/ProtoOutputStream;I)V
    .locals 6
    .param p1, "proto"    # Landroid/util/proto/ProtoOutputStream;
    .param p2, "logLevel"    # I

    .line 6184
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    const-wide v1, 0x10b00000001L

    invoke-interface {v0, p1, v1, v2}, Lcom/android/server/policy/WindowManagerPolicy;->dumpDebug(Landroid/util/proto/ProtoOutputStream;J)V

    .line 6185
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    const-wide v1, 0x10b00000002L

    invoke-virtual {v0, p1, v1, v2, p2}, Lcom/android/server/wm/RootWindowContainer;->dumpDebug(Landroid/util/proto/ProtoOutputStream;JI)V

    .line 6186
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v0}, Lcom/android/server/wm/RootWindowContainer;->getTopFocusedDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 6187
    .local v0, "topFocusedDisplayContent":Lcom/android/server/wm/DisplayContent;
    iget-object v1, v0, Lcom/android/server/wm/DisplayContent;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    if-eqz v1, :cond_0

    .line 6188
    iget-object v1, v0, Lcom/android/server/wm/DisplayContent;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    const-wide v2, 0x10b00000003L

    invoke-virtual {v1, p1, v2, v3}, Lcom/android/server/wm/WindowState;->writeIdentifierToProto(Landroid/util/proto/ProtoOutputStream;J)V

    .line 6190
    :cond_0
    iget-object v1, v0, Lcom/android/server/wm/DisplayContent;->mFocusedApp:Lcom/android/server/wm/ActivityRecord;

    if-eqz v1, :cond_1

    .line 6191
    iget-object v1, v0, Lcom/android/server/wm/DisplayContent;->mFocusedApp:Lcom/android/server/wm/ActivityRecord;

    const-wide v2, 0x10900000004L

    invoke-virtual {v1, p1, v2, v3}, Lcom/android/server/wm/ActivityRecord;->writeNameToProto(Landroid/util/proto/ProtoOutputStream;J)V

    .line 6193
    :cond_1
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1}, Lcom/android/server/wm/RootWindowContainer;->getCurrentInputMethodWindow()Lcom/android/server/wm/WindowState;

    move-result-object v1

    .line 6194
    .local v1, "imeWindow":Lcom/android/server/wm/WindowState;
    if-eqz v1, :cond_2

    .line 6195
    const-wide v2, 0x10b00000005L

    invoke-virtual {v1, p1, v2, v3}, Lcom/android/server/wm/WindowState;->writeIdentifierToProto(Landroid/util/proto/ProtoOutputStream;J)V

    .line 6197
    :cond_2
    const-wide v2, 0x10800000006L

    iget-boolean v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayFrozen:Z

    invoke-virtual {p1, v2, v3, v4}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 6198
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v2

    .line 6199
    .local v2, "defaultDisplayContent":Lcom/android/server/wm/DisplayContent;
    const-wide v3, 0x10500000009L

    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    move-result v5

    invoke-virtual {p1, v3, v4, v5}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 6200
    const-wide v3, 0x1080000000aL

    iget-boolean v5, p0, Lcom/android/server/wm/WindowManagerService;->mHardKeyboardAvailable:Z

    invoke-virtual {p1, v3, v4, v5}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 6201
    return-void
.end method

.method public enableScreenAfterBoot()V
    .locals 14

    .line 3474
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 3475
    sget-boolean v1, Lcom/android/server/wm/ProtoLogCache;->WM_DEBUG_BOOT_enabled:Z

    const/4 v2, 0x1

    if-eqz v1, :cond_0

    iget-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayEnabled:Z

    .local v1, "protoLogParam0":Z
    iget-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mForceDisplayEnabled:Z

    .local v3, "protoLogParam1":Z
    iget-boolean v4, p0, Lcom/android/server/wm/WindowManagerService;->mShowingBootMessages:Z

    .local v4, "protoLogParam2":Z
    iget-boolean v5, p0, Lcom/android/server/wm/WindowManagerService;->mSystemBooted:Z

    .local v5, "protoLogParam3":Z
    new-instance v6, Ljava/lang/RuntimeException;

    const-string v7, "here"

    invoke-direct {v6, v7}, Ljava/lang/RuntimeException;-><init>(Ljava/lang/String;)V

    invoke-virtual {v6}, Ljava/lang/RuntimeException;->fillInStackTrace()Ljava/lang/Throwable;

    move-result-object v6

    invoke-static {v6}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v6

    .local v6, "protoLogParam4":Ljava/lang/String;
    sget-object v7, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_BOOT:Lcom/android/internal/protolog/ProtoLogGroup;

    const v8, -0x7059ccfd

    const/16 v9, 0xff

    const/4 v10, 0x0

    const/4 v11, 0x5

    new-array v11, v11, [Ljava/lang/Object;

    const/4 v12, 0x0

    invoke-static {v1}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v13

    aput-object v13, v11, v12

    invoke-static {v3}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v12

    aput-object v12, v11, v2

    const/4 v12, 0x2

    invoke-static {v4}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v13

    aput-object v13, v11, v12

    const/4 v12, 0x3

    invoke-static {v5}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v13

    aput-object v13, v11, v12

    const/4 v12, 0x4

    aput-object v6, v11, v12

    invoke-static {v7, v8, v9, v10, v11}, Lcom/android/internal/protolog/ProtoLogImpl;->i(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 3480
    .end local v1    # "protoLogParam0":Z
    .end local v3    # "protoLogParam1":Z
    .end local v4    # "protoLogParam2":Z
    .end local v5    # "protoLogParam3":Z
    .end local v6    # "protoLogParam4":Ljava/lang/String;
    :cond_0
    iget-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mSystemBooted:Z

    if-eqz v1, :cond_1

    .line 3481
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 3483
    :cond_1
    :try_start_1
    iput-boolean v2, p0, Lcom/android/server/wm/WindowManagerService;->mSystemBooted:Z

    .line 3484
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->hideBootMessagesLocked()V

    .line 3487
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v2, 0x17

    const-wide/16 v3, 0x7530

    invoke-virtual {v1, v2, v3, v4}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessageDelayed(IJ)Z

    .line 3488
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 3490
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    invoke-interface {v0}, Lcom/android/server/policy/WindowManagerPolicy;->systemBooted()V

    .line 3492
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->performEnableScreen()V

    .line 3493
    return-void

    .line 3488
    :catchall_0
    move-exception v1

    :try_start_2
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public enableScreenIfNeeded()V
    .locals 2

    .line 3497
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 3498
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->enableScreenIfNeededLocked()V

    .line 3499
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 3500
    return-void

    .line 3499
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method enableScreenIfNeededLocked()V
    .locals 12

    .line 3503
    sget-boolean v0, Lcom/android/server/wm/ProtoLogCache;->WM_DEBUG_BOOT_enabled:Z

    if-eqz v0, :cond_0

    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayEnabled:Z

    .local v0, "protoLogParam0":Z
    iget-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mForceDisplayEnabled:Z

    .local v1, "protoLogParam1":Z
    iget-boolean v2, p0, Lcom/android/server/wm/WindowManagerService;->mShowingBootMessages:Z

    .local v2, "protoLogParam2":Z
    iget-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mSystemBooted:Z

    .local v3, "protoLogParam3":Z
    new-instance v4, Ljava/lang/RuntimeException;

    const-string v5, "here"

    invoke-direct {v4, v5}, Ljava/lang/RuntimeException;-><init>(Ljava/lang/String;)V

    invoke-virtual {v4}, Ljava/lang/RuntimeException;->fillInStackTrace()Ljava/lang/Throwable;

    move-result-object v4

    invoke-static {v4}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v4

    .local v4, "protoLogParam4":Ljava/lang/String;
    sget-object v5, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_BOOT:Lcom/android/internal/protolog/ProtoLogGroup;

    const v6, -0x20b98437

    const/16 v7, 0xff

    const/4 v8, 0x0

    const/4 v9, 0x5

    new-array v9, v9, [Ljava/lang/Object;

    const/4 v10, 0x0

    invoke-static {v0}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v11

    aput-object v11, v9, v10

    const/4 v10, 0x1

    invoke-static {v1}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v11

    aput-object v11, v9, v10

    const/4 v10, 0x2

    invoke-static {v2}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v11

    aput-object v11, v9, v10

    const/4 v10, 0x3

    invoke-static {v3}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v11

    aput-object v11, v9, v10

    const/4 v10, 0x4

    aput-object v4, v9, v10

    invoke-static {v5, v6, v7, v8, v9}, Lcom/android/internal/protolog/ProtoLogImpl;->i(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 3508
    .end local v0    # "protoLogParam0":Z
    .end local v1    # "protoLogParam1":Z
    .end local v2    # "protoLogParam2":Z
    .end local v3    # "protoLogParam3":Z
    .end local v4    # "protoLogParam4":Ljava/lang/String;
    :cond_0
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayEnabled:Z

    if-eqz v0, :cond_1

    .line 3509
    return-void

    .line 3511
    :cond_1
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mSystemBooted:Z

    if-nez v0, :cond_2

    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mShowingBootMessages:Z

    if-nez v0, :cond_2

    .line 3512
    return-void

    .line 3514
    :cond_2
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v1, 0x10

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    .line 3515
    return-void
.end method

.method public endProlongedAnimations()V
    .locals 0

    .line 2932
    return-void
.end method

.method public executeAppTransition()V
    .locals 2

    .line 2937
    const-string v0, "android.permission.MANAGE_APP_TOKENS"

    const-string v1, "executeAppTransition()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_0

    .line 2940
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->executeAppTransition()V

    .line 2941
    return-void

    .line 2938
    :cond_0
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires MANAGE_APP_TOKENS permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public exitKeyguardSecurely(Landroid/view/IOnKeyguardExitResult;)V
    .locals 2
    .param p1, "callback"    # Landroid/view/IOnKeyguardExitResult;

    .line 3160
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.DISABLE_KEYGUARD"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_1

    .line 3165
    if-eqz p1, :cond_0

    .line 3169
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    new-instance v1, Lcom/android/server/wm/WindowManagerService$9;

    invoke-direct {v1, p0, p1}, Lcom/android/server/wm/WindowManagerService$9;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/view/IOnKeyguardExitResult;)V

    invoke-interface {v0, v1}, Lcom/android/server/policy/WindowManagerPolicy;->exitKeyguardSecurely(Lcom/android/server/policy/WindowManagerPolicy$OnKeyguardExitResult;)V

    .line 3179
    return-void

    .line 3166
    :cond_0
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "callback == null"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 3162
    :cond_1
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires DISABLE_KEYGUARD permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method finishDrawingWindow(Lcom/android/server/wm/Session;Landroid/view/IWindow;Landroid/view/SurfaceControl$Transaction;)V
    .locals 12
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;
    .param p3, "postDrawTransaction"    # Landroid/view/SurfaceControl$Transaction;

    .line 2642
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 2644
    .local v0, "origId":J
    :try_start_0
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 2645
    const/4 v3, 0x0

    invoke-virtual {p0, p1, p2, v3}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;

    move-result-object v4

    .line 2646
    .local v4, "win":Lcom/android/server/wm/WindowState;
    sget-boolean v5, Lcom/android/server/wm/ProtoLogCache;->WM_DEBUG_ADD_REMOVE_enabled:Z

    if-eqz v5, :cond_1

    invoke-static {v4}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v5

    .local v5, "protoLogParam0":Ljava/lang/String;
    if-eqz v4, :cond_0

    iget-object v6, v4, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    invoke-virtual {v6}, Lcom/android/server/wm/WindowStateAnimator;->drawStateToString()Ljava/lang/String;

    move-result-object v6

    goto :goto_0

    :cond_0
    const-string v6, "null"

    :goto_0
    invoke-static {v6}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v6

    .local v6, "protoLogParam1":Ljava/lang/String;
    sget-object v7, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_ADD_REMOVE:Lcom/android/internal/protolog/ProtoLogGroup;

    const v8, 0x42487ea1

    const/4 v9, 0x0

    const/4 v10, 0x2

    new-array v10, v10, [Ljava/lang/Object;

    aput-object v5, v10, v3

    const/4 v11, 0x1

    aput-object v6, v10, v11

    invoke-static {v7, v8, v3, v9, v10}, Lcom/android/internal/protolog/ProtoLogImpl;->d(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 2648
    .end local v5    # "protoLogParam0":Ljava/lang/String;
    .end local v6    # "protoLogParam1":Ljava/lang/String;
    :cond_1
    if-eqz v4, :cond_3

    invoke-virtual {v4, p3}, Lcom/android/server/wm/WindowState;->finishDrawing(Landroid/view/SurfaceControl$Transaction;)Z

    move-result v3

    if-eqz v3, :cond_3

    .line 2649
    invoke-virtual {v4}, Lcom/android/server/wm/WindowState;->hasWallpaper()Z

    move-result v3

    if-eqz v3, :cond_2

    .line 2650
    invoke-virtual {v4}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    iget v5, v3, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    or-int/lit8 v5, v5, 0x4

    iput v5, v3, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    .line 2653
    :cond_2
    invoke-virtual {v4}, Lcom/android/server/wm/WindowState;->setDisplayLayoutNeeded()V

    .line 2654
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    invoke-virtual {v3}, Lcom/android/server/wm/WindowSurfacePlacer;->requestTraversal()V

    .line 2656
    .end local v4    # "win":Lcom/android/server/wm/WindowState;
    :cond_3
    monitor-exit v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 2658
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 2659
    nop

    .line 2660
    return-void

    .line 2656
    :catchall_0
    move-exception v3

    :try_start_3
    monitor-exit v2
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .end local v0    # "origId":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "session":Lcom/android/server/wm/Session;
    .end local p2    # "client":Landroid/view/IWindow;
    .end local p3    # "postDrawTransaction":Landroid/view/SurfaceControl$Transaction;
    throw v3
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 2658
    .restart local v0    # "origId":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "session":Lcom/android/server/wm/Session;
    .restart local p2    # "client":Landroid/view/IWindow;
    .restart local p3    # "postDrawTransaction":Landroid/view/SurfaceControl$Transaction;
    :catchall_1
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 2659
    throw v2
.end method

.method public freezeDisplayRotation(II)V
    .locals 6
    .param p1, "displayId"    # I
    .param p2, "rotation"    # I

    .line 3909
    const-string v0, "android.permission.SET_ORIENTATION"

    const-string v1, "freezeRotation()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_2

    .line 3913
    const/4 v0, -0x1

    if-lt p2, v0, :cond_1

    const/4 v0, 0x3

    if-gt p2, v0, :cond_1

    .line 3918
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 3920
    .local v0, "origId":J
    :try_start_0
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 3921
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v3, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    .line 3922
    .local v3, "display":Lcom/android/server/wm/DisplayContent;
    if-nez v3, :cond_0

    .line 3923
    const-string v4, "WindowManager"

    const-string v5, "Trying to freeze rotation for a missing display."

    invoke-static {v4, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 3924
    monitor-exit v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 3929
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3924
    return-void

    .line 3926
    :cond_0
    :try_start_2
    invoke-virtual {v3}, Lcom/android/server/wm/DisplayContent;->getDisplayRotation()Lcom/android/server/wm/DisplayRotation;

    move-result-object v4

    invoke-virtual {v4, p2}, Lcom/android/server/wm/DisplayRotation;->freezeRotation(I)V

    .line 3927
    .end local v3    # "display":Lcom/android/server/wm/DisplayContent;
    monitor-exit v2
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 3929
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3930
    nop

    .line 3932
    const/4 v2, 0x0

    invoke-direct {p0, v2, v2}, Lcom/android/server/wm/WindowManagerService;->updateRotationUnchecked(ZZ)V

    .line 3933
    return-void

    .line 3927
    :catchall_0
    move-exception v3

    :try_start_4
    monitor-exit v2
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    :try_start_5
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .end local v0    # "origId":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "displayId":I
    .end local p2    # "rotation":I
    throw v3
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    .line 3929
    .restart local v0    # "origId":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "displayId":I
    .restart local p2    # "rotation":I
    :catchall_1
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3930
    throw v2

    .line 3914
    .end local v0    # "origId":J
    :cond_1
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "Rotation argument must be -1 or a valid rotation constant."

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 3911
    :cond_2
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires SET_ORIENTATION permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public freezeRotation(I)V
    .locals 1
    .param p1, "rotation"    # I

    .line 3897
    const/4 v0, 0x0

    invoke-virtual {p0, v0, p1}, Lcom/android/server/wm/WindowManagerService;->freezeDisplayRotation(II)V

    .line 3898
    return-void
.end method

.method generateDisplayHash(Lcom/android/server/wm/Session;Landroid/view/IWindow;Landroid/graphics/Rect;Ljava/lang/String;Landroid/os/RemoteCallback;)V
    .locals 15
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "window"    # Landroid/view/IWindow;
    .param p3, "boundsInWindow"    # Landroid/graphics/Rect;
    .param p4, "hashAlgorithm"    # Ljava/lang/String;
    .param p5, "callback"    # Landroid/os/RemoteCallback;

    .line 8548
    move-object v1, p0

    move-object/from16 v2, p1

    move-object/from16 v9, p3

    move-object/from16 v10, p5

    new-instance v0, Landroid/graphics/Rect;

    invoke-direct {v0, v9}, Landroid/graphics/Rect;-><init>(Landroid/graphics/Rect;)V

    move-object v11, v0

    .line 8549
    .local v11, "boundsInDisplay":Landroid/graphics/Rect;
    iget-object v3, v1, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v3

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 8550
    const/4 v0, 0x0

    move-object/from16 v12, p2

    :try_start_1
    invoke-virtual {p0, v2, v12, v0}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;

    move-result-object v0

    .line 8551
    .local v0, "win":Lcom/android/server/wm/WindowState;
    const/4 v4, -0x3

    if-nez v0, :cond_0

    .line 8552
    const-string v5, "WindowManager"

    const-string v6, "Failed to generate DisplayHash. Invalid window"

    invoke-static {v5, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 8553
    iget-object v5, v1, Lcom/android/server/wm/WindowManagerService;->mDisplayHashController:Lcom/android/server/wm/DisplayHashController;

    invoke-virtual {v5, v10, v4}, Lcom/android/server/wm/DisplayHashController;->sendDisplayHashError(Landroid/os/RemoteCallback;I)V

    .line 8555
    monitor-exit v3
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 8558
    :cond_0
    :try_start_2
    iget-object v5, v0, Lcom/android/server/wm/WindowState;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    if-eqz v5, :cond_4

    iget-object v5, v0, Lcom/android/server/wm/WindowState;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    sget-object v6, Lcom/android/server/wm/Task$ActivityState;->RESUMED:Lcom/android/server/wm/Task$ActivityState;

    invoke-virtual {v5, v6}, Lcom/android/server/wm/ActivityRecord;->isState(Lcom/android/server/wm/Task$ActivityState;)Z

    move-result v5

    if-nez v5, :cond_1

    goto :goto_0

    .line 8565
    :cond_1
    invoke-virtual {v0}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v4

    .line 8566
    .local v4, "displayContent":Lcom/android/server/wm/DisplayContent;
    const/4 v5, -0x4

    if-nez v4, :cond_2

    .line 8567
    const-string v6, "WindowManager"

    const-string v7, "Failed to generate DisplayHash. Window is not on a display"

    invoke-static {v6, v7}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 8568
    iget-object v6, v1, Lcom/android/server/wm/WindowManagerService;->mDisplayHashController:Lcom/android/server/wm/DisplayHashController;

    invoke-virtual {v6, v10, v5}, Lcom/android/server/wm/DisplayHashController;->sendDisplayHashError(Landroid/os/RemoteCallback;I)V

    .line 8570
    monitor-exit v3
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 8573
    :cond_2
    :try_start_3
    invoke-virtual {v4}, Lcom/android/server/wm/DisplayContent;->getSurfaceControl()Landroid/view/SurfaceControl;

    move-result-object v6

    move-object v13, v6

    .line 8574
    .local v13, "displaySurfaceControl":Landroid/view/SurfaceControl;
    iget-object v6, v1, Lcom/android/server/wm/WindowManagerService;->mDisplayHashController:Lcom/android/server/wm/DisplayHashController;

    invoke-virtual {v6, v0, v9, v11}, Lcom/android/server/wm/DisplayHashController;->calculateDisplayHashBoundsLocked(Lcom/android/server/wm/WindowState;Landroid/graphics/Rect;Landroid/graphics/Rect;)V

    .line 8577
    invoke-virtual {v11}, Landroid/graphics/Rect;->isEmpty()Z

    move-result v6

    if-eqz v6, :cond_3

    .line 8578
    const-string v6, "WindowManager"

    const-string v7, "Failed to generate DisplayHash. Bounds are not on screen"

    invoke-static {v6, v7}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 8579
    iget-object v6, v1, Lcom/android/server/wm/WindowManagerService;->mDisplayHashController:Lcom/android/server/wm/DisplayHashController;

    invoke-virtual {v6, v10, v5}, Lcom/android/server/wm/DisplayHashController;->sendDisplayHashError(Landroid/os/RemoteCallback;I)V

    .line 8581
    monitor-exit v3
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 8583
    .end local v0    # "win":Lcom/android/server/wm/WindowState;
    .end local v4    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_3
    :try_start_4
    monitor-exit v3
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 8589
    iget v0, v2, Lcom/android/server/wm/Session;->mUid:I

    .line 8590
    .local v0, "uid":I
    new-instance v3, Landroid/view/SurfaceControl$LayerCaptureArgs$Builder;

    invoke-direct {v3, v13}, Landroid/view/SurfaceControl$LayerCaptureArgs$Builder;-><init>(Landroid/view/SurfaceControl;)V

    int-to-long v4, v0

    .line 8592
    invoke-virtual {v3, v4, v5}, Landroid/view/SurfaceControl$LayerCaptureArgs$Builder;->setUid(J)Landroid/view/SurfaceControl$CaptureArgs$Builder;

    move-result-object v3

    check-cast v3, Landroid/view/SurfaceControl$LayerCaptureArgs$Builder;

    .line 8593
    invoke-virtual {v3, v11}, Landroid/view/SurfaceControl$LayerCaptureArgs$Builder;->setSourceCrop(Landroid/graphics/Rect;)Landroid/view/SurfaceControl$CaptureArgs$Builder;

    move-result-object v3

    move-object v14, v3

    check-cast v14, Landroid/view/SurfaceControl$LayerCaptureArgs$Builder;

    .line 8595
    .local v14, "args":Landroid/view/SurfaceControl$LayerCaptureArgs$Builder;
    iget-object v3, v1, Lcom/android/server/wm/WindowManagerService;->mDisplayHashController:Lcom/android/server/wm/DisplayHashController;

    move-object v4, v14

    move-object/from16 v5, p3

    move-object/from16 v6, p4

    move v7, v0

    move-object/from16 v8, p5

    invoke-virtual/range {v3 .. v8}, Lcom/android/server/wm/DisplayHashController;->generateDisplayHash(Landroid/view/SurfaceControl$LayerCaptureArgs$Builder;Landroid/graphics/Rect;Ljava/lang/String;ILandroid/os/RemoteCallback;)V

    .line 8597
    return-void

    .line 8560
    .end local v13    # "displaySurfaceControl":Landroid/view/SurfaceControl;
    .end local v14    # "args":Landroid/view/SurfaceControl$LayerCaptureArgs$Builder;
    .local v0, "win":Lcom/android/server/wm/WindowState;
    :cond_4
    :goto_0
    :try_start_5
    iget-object v5, v1, Lcom/android/server/wm/WindowManagerService;->mDisplayHashController:Lcom/android/server/wm/DisplayHashController;

    invoke-virtual {v5, v10, v4}, Lcom/android/server/wm/DisplayHashController;->sendDisplayHashError(Landroid/os/RemoteCallback;I)V

    .line 8562
    monitor-exit v3
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 8583
    .end local v0    # "win":Lcom/android/server/wm/WindowState;
    :catchall_0
    move-exception v0

    goto :goto_1

    :catchall_1
    move-exception v0

    move-object/from16 v12, p2

    :goto_1
    :try_start_6
    monitor-exit v3
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public getAnimationScale(I)F
    .locals 1
    .param p1, "which"    # I

    .line 3316
    packed-switch p1, :pswitch_data_0

    .line 3321
    const/4 v0, 0x0

    return v0

    .line 3319
    :pswitch_0
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mAnimatorDurationScaleSetting:F

    return v0

    .line 3318
    :pswitch_1
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mTransitionAnimationScaleSetting:F

    return v0

    .line 3317
    :pswitch_2
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowAnimationScaleSetting:F

    return v0

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_2
        :pswitch_1
        :pswitch_0
    .end packed-switch
.end method

.method public getAnimationScales()[F
    .locals 3

    .line 3326
    const/4 v0, 0x3

    new-array v0, v0, [F

    iget v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowAnimationScaleSetting:F

    const/4 v2, 0x0

    aput v1, v0, v2

    iget v1, p0, Lcom/android/server/wm/WindowManagerService;->mTransitionAnimationScaleSetting:F

    const/4 v2, 0x1

    aput v1, v0, v2

    iget v1, p0, Lcom/android/server/wm/WindowManagerService;->mAnimatorDurationScaleSetting:F

    const/4 v2, 0x2

    aput v1, v0, v2

    return-object v0
.end method

.method public getBaseDisplayDensity(I)I
    .locals 3
    .param p1, "displayId"    # I

    .line 5474
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 5475
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 5476
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v1, :cond_0

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    invoke-virtual {v1, v2}, Lcom/android/server/wm/DisplayContent;->hasAccess(I)Z

    move-result v2

    if-eqz v2, :cond_0

    .line 5477
    iget v2, v1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayDensity:I

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v2

    .line 5479
    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_0
    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 5480
    const/4 v0, -0x1

    return v0

    .line 5479
    :catchall_0
    move-exception v1

    :try_start_2
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public getBaseDisplaySize(ILandroid/graphics/Point;)V
    .locals 3
    .param p1, "displayId"    # I
    .param p2, "size"    # Landroid/graphics/Point;

    .line 5344
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 5345
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 5346
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v1, :cond_0

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    invoke-virtual {v1, v2}, Lcom/android/server/wm/DisplayContent;->hasAccess(I)Z

    move-result v2

    if-eqz v2, :cond_0

    .line 5347
    iget v2, v1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayWidth:I

    iput v2, p2, Landroid/graphics/Point;->x:I

    .line 5348
    iget v2, v1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayHeight:I

    iput v2, p2, Landroid/graphics/Point;->y:I

    .line 5350
    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_0
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 5351
    return-void

    .line 5350
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public getCameraLensCoverState()I
    .locals 4

    .line 3387
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    const/4 v1, -0x1

    const/16 v2, -0x100

    const/16 v3, 0x9

    invoke-virtual {v0, v1, v2, v3}, Lcom/android/server/input/InputManagerService;->getSwitchState(III)I

    move-result v0

    .line 3389
    .local v0, "sw":I
    if-lez v0, :cond_0

    .line 3391
    const/4 v1, 0x1

    return v1

    .line 3392
    :cond_0
    if-nez v0, :cond_1

    .line 3394
    const/4 v1, 0x0

    return v1

    .line 3397
    :cond_1
    return v1
.end method

.method public getCurrentAnimatorScale()F
    .locals 2

    .line 3332
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 3333
    iget-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mAnimationsDisabled:Z

    if-eqz v1, :cond_0

    const/4 v1, 0x0

    goto :goto_0

    :cond_0
    iget v1, p0, Lcom/android/server/wm/WindowManagerService;->mAnimatorDurationScaleSetting:F

    :goto_0
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v1

    .line 3334
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public getCurrentImeTouchRegion()Landroid/graphics/Region;
    .locals 5

    .line 6047
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.RESTRICTED_VR_ACCESS"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_2

    .line 6050
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 6051
    new-instance v1, Landroid/graphics/Region;

    invoke-direct {v1}, Landroid/graphics/Region;-><init>()V

    .line 6055
    .local v1, "r":Landroid/graphics/Region;
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    iget-object v2, v2, Lcom/android/server/wm/RootWindowContainer;->mChildren:Lcom/android/server/wm/WindowList;

    invoke-virtual {v2}, Lcom/android/server/wm/WindowList;->size()I

    move-result v2

    add-int/lit8 v2, v2, -0x1

    .local v2, "i":I
    :goto_0
    if-ltz v2, :cond_1

    .line 6056
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    iget-object v3, v3, Lcom/android/server/wm/RootWindowContainer;->mChildren:Lcom/android/server/wm/WindowList;

    invoke-virtual {v3, v2}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/wm/DisplayContent;

    .line 6057
    .local v3, "displayContent":Lcom/android/server/wm/DisplayContent;
    iget-object v4, v3, Lcom/android/server/wm/DisplayContent;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    if-eqz v4, :cond_0

    .line 6058
    iget-object v4, v3, Lcom/android/server/wm/DisplayContent;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    invoke-virtual {v4, v1}, Lcom/android/server/wm/WindowState;->getTouchableRegion(Landroid/graphics/Region;)V

    .line 6059
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-object v1

    .line 6055
    .end local v3    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_0
    add-int/lit8 v2, v2, -0x1

    goto :goto_0

    .line 6062
    .end local v2    # "i":I
    :cond_1
    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-object v1

    .line 6063
    .end local v1    # "r":Landroid/graphics/Region;
    :catchall_0
    move-exception v1

    :try_start_2
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1

    .line 6048
    :cond_2
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "getCurrentImeTouchRegion is restricted to VR services"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;
    .locals 2

    .line 6667
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    const/4 v1, 0x0

    invoke-virtual {v0, v1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    return-object v0
.end method

.method public getDefaultDisplayRotation()I
    .locals 2

    .line 4065
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 4066
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->getRotation()I

    move-result v1

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v1

    .line 4067
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method getDisplayAreaPolicyProvider()Lcom/android/server/wm/DisplayAreaPolicy$Provider;
    .locals 1

    .line 1396
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayAreaPolicyProvider:Lcom/android/server/wm/DisplayAreaPolicy$Provider;

    return-object v0
.end method

.method public getDisplayImePolicy(I)I
    .locals 10
    .param p1, "displayId"    # I

    .line 7285
    const-string v0, "android.permission.INTERNAL_SYSTEM_WINDOW"

    const-string v1, "getDisplayImePolicy()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_2

    .line 7288
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v0, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 7289
    .local v0, "dc":Lcom/android/server/wm/DisplayContent;
    if-nez v0, :cond_1

    .line 7290
    sget-boolean v1, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    const/4 v2, 0x1

    if-eqz v1, :cond_0

    int-to-long v3, p1

    .local v3, "protoLogParam0":J
    sget-object v1, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const v5, 0x4191aa11

    const-string v6, "Attempted to get IME policy of a display that does not exist: %d"

    new-array v7, v2, [Ljava/lang/Object;

    const/4 v8, 0x0

    invoke-static {v3, v4}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v9

    aput-object v9, v7, v8

    invoke-static {v1, v5, v2, v6, v7}, Lcom/android/internal/protolog/ProtoLogImpl;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 7293
    .end local v3    # "protoLogParam0":J
    :cond_0
    return v2

    .line 7295
    :cond_1
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v1

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 7296
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getImePolicy()I

    move-result v2

    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v2

    .line 7297
    :catchall_0
    move-exception v2

    :try_start_1
    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v2

    .line 7286
    .end local v0    # "dc":Lcom/android/server/wm/DisplayContent;
    :cond_2
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires INTERNAL_SYSTEM_WINDOW permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method getDisplayUserRotation(I)I
    .locals 4
    .param p1, "displayId"    # I

    .line 3988
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 3989
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 3990
    .local v1, "display":Lcom/android/server/wm/DisplayContent;
    if-nez v1, :cond_0

    .line 3991
    const-string v2, "WindowManager"

    const-string v3, "Trying to get user rotation of a missing display."

    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 3992
    const/4 v2, -0x1

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v2

    .line 3994
    :cond_0
    :try_start_1
    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->getDisplayRotation()Lcom/android/server/wm/DisplayRotation;

    move-result-object v2

    invoke-virtual {v2}, Lcom/android/server/wm/DisplayRotation;->getUserRotation()I

    move-result v2

    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v2

    .line 3995
    .end local v1    # "display":Lcom/android/server/wm/DisplayContent;
    :catchall_0
    move-exception v1

    :try_start_2
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public getDockedStackSide()I
    .locals 1

    .line 6779
    const/4 v0, 0x0

    return v0
.end method

.method getFixedToUserRotation(I)I
    .locals 4
    .param p1, "displayId"    # I

    .line 3852
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 3853
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 3854
    .local v1, "display":Lcom/android/server/wm/DisplayContent;
    if-nez v1, :cond_0

    .line 3855
    const-string v2, "WindowManager"

    const-string v3, "Trying to get fixed to user rotation for a missing display."

    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 3856
    const/4 v2, -0x1

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v2

    .line 3858
    :cond_0
    :try_start_1
    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->getDisplayRotation()Lcom/android/server/wm/DisplayRotation;

    move-result-object v2

    invoke-virtual {v2}, Lcom/android/server/wm/DisplayRotation;->getFixedToUserRotationMode()I

    move-result v2

    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v2

    .line 3859
    .end local v1    # "display":Lcom/android/server/wm/DisplayContent;
    :catchall_0
    move-exception v1

    :try_start_2
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method getFoldedArea()Landroid/graphics/Rect;
    .locals 4

    .line 4330
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 4332
    .local v0, "origId":J
    :try_start_0
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 4333
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    invoke-interface {v3}, Lcom/android/server/policy/WindowManagerPolicy;->getFoldedArea()Landroid/graphics/Rect;

    move-result-object v3

    monitor-exit v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 4336
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4333
    return-object v3

    .line 4334
    :catchall_0
    move-exception v3

    :try_start_2
    monitor-exit v2
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .end local v0    # "origId":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    throw v3
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 4336
    .restart local v0    # "origId":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    :catchall_1
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4337
    throw v2
.end method

.method getIgnoreOrientationRequest(I)Z
    .locals 4
    .param p1, "displayId"    # I

    .line 3885
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 3886
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 3887
    .local v1, "display":Lcom/android/server/wm/DisplayContent;
    if-nez v1, :cond_0

    .line 3888
    const-string v2, "WindowManager"

    const-string v3, "Trying to getIgnoreOrientationRequest() for a missing display."

    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 3889
    const/4 v2, 0x0

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v2

    .line 3891
    :cond_0
    :try_start_1
    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->getIgnoreOrientationRequest()Z

    move-result v2

    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v2

    .line 3892
    .end local v1    # "display":Lcom/android/server/wm/DisplayContent;
    :catchall_0
    move-exception v1

    :try_start_2
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method getImeFocusRootTaskLocked()Lcom/android/server/wm/Task;
    .locals 3

    .line 4780
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v0}, Lcom/android/server/wm/RootWindowContainer;->getTopFocusedDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 4781
    .local v0, "topFocusedDisplay":Lcom/android/server/wm/DisplayContent;
    iget-object v1, v0, Lcom/android/server/wm/DisplayContent;->mFocusedApp:Lcom/android/server/wm/ActivityRecord;

    .line 4782
    .local v1, "focusedApp":Lcom/android/server/wm/ActivityRecord;
    if-eqz v1, :cond_0

    invoke-virtual {v1}, Lcom/android/server/wm/ActivityRecord;->getTask()Lcom/android/server/wm/Task;

    move-result-object v2

    if-eqz v2, :cond_0

    .line 4783
    invoke-virtual {v1}, Lcom/android/server/wm/ActivityRecord;->getTask()Lcom/android/server/wm/Task;

    move-result-object v2

    invoke-virtual {v2}, Lcom/android/server/wm/Task;->getRootTask()Lcom/android/server/wm/Task;

    move-result-object v2

    goto :goto_0

    :cond_0
    const/4 v2, 0x0

    .line 4782
    :goto_0
    return-object v2
.end method

.method getInTouchMode()Z
    .locals 2

    .line 3682
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 3683
    iget-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mInTouchMode:Z

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v1

    .line 3684
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public getInitialDisplayDensity(I)I
    .locals 3
    .param p1, "displayId"    # I

    .line 5463
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 5464
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 5465
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v1, :cond_0

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    invoke-virtual {v1, v2}, Lcom/android/server/wm/DisplayContent;->hasAccess(I)Z

    move-result v2

    if-eqz v2, :cond_0

    .line 5466
    iget v2, v1, Lcom/android/server/wm/DisplayContent;->mInitialDisplayDensity:I

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v2

    .line 5468
    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_0
    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 5469
    const/4 v0, -0x1

    return v0

    .line 5468
    :catchall_0
    move-exception v1

    :try_start_2
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public getInitialDisplaySize(ILandroid/graphics/Point;)V
    .locals 3
    .param p1, "displayId"    # I
    .param p2, "size"    # Landroid/graphics/Point;

    .line 5333
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 5334
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 5335
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v1, :cond_0

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    invoke-virtual {v1, v2}, Lcom/android/server/wm/DisplayContent;->hasAccess(I)Z

    move-result v2

    if-eqz v2, :cond_0

    .line 5336
    iget v2, v1, Lcom/android/server/wm/DisplayContent;->mInitialDisplayWidth:I

    iput v2, p2, Landroid/graphics/Point;->x:I

    .line 5337
    iget v2, v1, Lcom/android/server/wm/DisplayContent;->mInitialDisplayHeight:I

    iput v2, p2, Landroid/graphics/Point;->y:I

    .line 5339
    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_0
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 5340
    return-void

    .line 5339
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public getInputManagerCallback()Lcom/android/server/wm/InputManagerCallback;
    .locals 1

    .line 1427
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInputManagerCallback:Lcom/android/server/wm/InputManagerCallback;

    return-object v0
.end method

.method public getLidState()I
    .locals 4

    .line 3364
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    const/4 v1, -0x1

    const/16 v2, -0x100

    const/4 v3, 0x0

    invoke-virtual {v0, v1, v2, v3}, Lcom/android/server/input/InputManagerService;->getSwitchState(III)I

    move-result v0

    .line 3366
    .local v0, "sw":I
    if-lez v0, :cond_0

    .line 3368
    return v3

    .line 3369
    :cond_0
    if-nez v0, :cond_1

    .line 3371
    const/4 v1, 0x1

    return v1

    .line 3374
    :cond_1
    return v1
.end method

.method public getNavBarPosition(I)I
    .locals 5
    .param p1, "displayId"    # I

    .line 5997
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 6000
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 6001
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v1, :cond_0

    .line 6002
    const-string v2, "WindowManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "getNavBarPosition with invalid displayId="

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v4, " callers="

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const/4 v4, 0x3

    .line 6003
    invoke-static {v4}, Landroid/os/Debug;->getCallers(I)Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    .line 6002
    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 6004
    const/4 v2, -0x1

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v2

    .line 6006
    :cond_0
    const/4 v2, 0x0

    :try_start_1
    invoke-virtual {v1, v2, v2}, Lcom/android/server/wm/DisplayContent;->performLayout(ZZ)V

    .line 6008
    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->getDisplayPolicy()Lcom/android/server/wm/DisplayPolicy;

    move-result-object v2

    invoke-virtual {v2}, Lcom/android/server/wm/DisplayPolicy;->getNavBarPosition()I

    move-result v2

    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v2

    .line 6009
    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_0
    move-exception v1

    :try_start_2
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public getPreferredOptionsPanelGravity(I)I
    .locals 3
    .param p1, "displayId"    # I

    .line 4361
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 4362
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 4363
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v1, :cond_0

    .line 4364
    const/16 v2, 0x51

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v2

    .line 4366
    :cond_0
    :try_start_1
    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->getPreferredOptionsPanelGravity()I

    move-result v2

    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v2

    .line 4367
    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_0
    move-exception v1

    :try_start_2
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method getRecentsAnimationController()Lcom/android/server/wm/RecentsAnimationController;
    .locals 1

    .line 2959
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mRecentsAnimationController:Lcom/android/server/wm/RecentsAnimationController;

    return-object v0
.end method

.method public getRemoveContentMode(I)I
    .locals 11
    .param p1, "displayId"    # I

    .line 7154
    const-string v0, "android.permission.INTERNAL_SYSTEM_WINDOW"

    const-string v1, "getRemoveContentMode()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_2

    .line 7158
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 7159
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 7160
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v1, :cond_1

    .line 7161
    sget-boolean v2, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    const/4 v3, 0x0

    if-eqz v2, :cond_0

    int-to-long v4, p1

    .local v4, "protoLogParam0":J
    sget-object v2, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const v6, -0x1d9ac061

    const-string v7, "Attempted to get remove mode of a display that does not exist: %d"

    const/4 v8, 0x1

    new-array v9, v8, [Ljava/lang/Object;

    invoke-static {v4, v5}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v10

    aput-object v10, v9, v3

    invoke-static {v2, v6, v8, v7, v9}, Lcom/android/internal/protolog/ProtoLogImpl;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 7164
    .end local v4    # "protoLogParam0":J
    :cond_0
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v3

    .line 7166
    :cond_1
    :try_start_1
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayWindowSettings:Lcom/android/server/wm/DisplayWindowSettings;

    invoke-virtual {v2, v1}, Lcom/android/server/wm/DisplayWindowSettings;->getRemoveContentModeLocked(Lcom/android/server/wm/DisplayContent;)I

    move-result v2

    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v2

    .line 7167
    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_0
    move-exception v1

    :try_start_2
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1

    .line 7155
    :cond_2
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires INTERNAL_SYSTEM_WINDOW permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method getRootTaskBounds(IILandroid/graphics/Rect;)V
    .locals 1
    .param p1, "windowingMode"    # I
    .param p2, "activityType"    # I
    .param p3, "bounds"    # Landroid/graphics/Rect;

    .line 2998
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/wm/RootWindowContainer;->getRootTask(II)Lcom/android/server/wm/Task;

    move-result-object v0

    .line 2999
    .local v0, "rootTask":Lcom/android/server/wm/Task;
    if-eqz v0, :cond_0

    .line 3000
    invoke-virtual {v0, p3}, Lcom/android/server/wm/Task;->getBounds(Landroid/graphics/Rect;)V

    .line 3001
    return-void

    .line 3003
    :cond_0
    invoke-virtual {p3}, Landroid/graphics/Rect;->setEmpty()V

    .line 3004
    return-void
.end method

.method public getStableInsets(ILandroid/graphics/Rect;)V
    .locals 2
    .param p1, "displayId"    # I
    .param p2, "outInsets"    # Landroid/graphics/Rect;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .line 6840
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 6841
    invoke-virtual {p0, p1, p2}, Lcom/android/server/wm/WindowManagerService;->getStableInsetsLocked(ILandroid/graphics/Rect;)V

    .line 6842
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 6843
    return-void

    .line 6842
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method getStableInsetsLocked(ILandroid/graphics/Rect;)V
    .locals 8
    .param p1, "displayId"    # I
    .param p2, "outInsets"    # Landroid/graphics/Rect;

    .line 6846
    invoke-virtual {p2}, Landroid/graphics/Rect;->setEmpty()V

    .line 6847
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v0, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 6848
    .local v0, "dc":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_0

    .line 6849
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    move-result-object v1

    .line 6850
    .local v1, "di":Landroid/view/DisplayInfo;
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getDisplayPolicy()Lcom/android/server/wm/DisplayPolicy;

    move-result-object v2

    iget v3, v1, Landroid/view/DisplayInfo;->rotation:I

    iget v4, v1, Landroid/view/DisplayInfo;->logicalWidth:I

    iget v5, v1, Landroid/view/DisplayInfo;->logicalHeight:I

    iget-object v6, v1, Landroid/view/DisplayInfo;->displayCutout:Landroid/view/DisplayCutout;

    move-object v7, p2

    invoke-virtual/range {v2 .. v7}, Lcom/android/server/wm/DisplayPolicy;->getStableInsetsLw(IIILandroid/view/DisplayCutout;Landroid/graphics/Rect;)V

    .line 6853
    .end local v1    # "di":Landroid/view/DisplayInfo;
    :cond_0
    return-void
.end method

.method public getSupportedDisplayHashAlgorithms()[Ljava/lang/String;
    .locals 1

    .line 8522
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayHashController:Lcom/android/server/wm/DisplayHashController;

    invoke-virtual {v0}, Lcom/android/server/wm/DisplayHashController;->getSupportedHashAlgorithms()[Ljava/lang/String;

    move-result-object v0

    return-object v0
.end method

.method public getTaskSnapshot(IIZZ)Landroid/window/TaskSnapshot;
    .locals 1
    .param p1, "taskId"    # I
    .param p2, "userId"    # I
    .param p3, "isLowResolution"    # Z
    .param p4, "restoreFromDisk"    # Z

    .line 3812
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mTaskSnapshotController:Lcom/android/server/wm/TaskSnapshotController;

    invoke-virtual {v0, p1, p2, p4, p3}, Lcom/android/server/wm/TaskSnapshotController;->getSnapshot(IIZZ)Landroid/window/TaskSnapshot;

    move-result-object v0

    return-object v0
.end method

.method public getTransitionAnimationScaleLocked()F
    .locals 1

    .line 3311
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mAnimationsDisabled:Z

    if-eqz v0, :cond_0

    const/4 v0, 0x0

    goto :goto_0

    :cond_0
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mTransitionAnimationScaleSetting:F

    :goto_0
    return v0
.end method

.method public getWindowAnimationScaleLocked()F
    .locals 1

    .line 3307
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mAnimationsDisabled:Z

    if-eqz v0, :cond_0

    const/4 v0, 0x0

    goto :goto_0

    :cond_0
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowAnimationScaleSetting:F

    :goto_0
    return v0
.end method

.method public getWindowContentFrameStats(Landroid/os/IBinder;)Landroid/view/WindowContentFrameStats;
    .locals 6
    .param p1, "token"    # Landroid/os/IBinder;

    .line 6112
    const-string v0, "android.permission.FRAME_STATS"

    const-string v1, "getWindowContentFrameStats()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_4

    .line 6116
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 6117
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    invoke-virtual {v1, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/WindowState;

    .line 6118
    .local v1, "windowState":Lcom/android/server/wm/WindowState;
    const/4 v2, 0x0

    if-nez v1, :cond_0

    .line 6119
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-object v2

    .line 6121
    :cond_0
    :try_start_1
    iget-object v3, v1, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    iget-object v3, v3, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceController:Lcom/android/server/wm/WindowSurfaceController;

    .line 6122
    .local v3, "surfaceController":Lcom/android/server/wm/WindowSurfaceController;
    if-nez v3, :cond_1

    .line 6123
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-object v2

    .line 6125
    :cond_1
    :try_start_2
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mTempWindowRenderStats:Landroid/view/WindowContentFrameStats;

    if-nez v4, :cond_2

    .line 6126
    new-instance v4, Landroid/view/WindowContentFrameStats;

    invoke-direct {v4}, Landroid/view/WindowContentFrameStats;-><init>()V

    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mTempWindowRenderStats:Landroid/view/WindowContentFrameStats;

    .line 6128
    :cond_2
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mTempWindowRenderStats:Landroid/view/WindowContentFrameStats;

    .line 6129
    .local v4, "stats":Landroid/view/WindowContentFrameStats;
    invoke-virtual {v3, v4}, Lcom/android/server/wm/WindowSurfaceController;->getWindowContentFrameStats(Landroid/view/WindowContentFrameStats;)Z

    move-result v5

    if-nez v5, :cond_3

    .line 6130
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-object v2

    .line 6132
    :cond_3
    :try_start_3
    monitor-exit v0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-object v4

    .line 6133
    .end local v1    # "windowState":Lcom/android/server/wm/WindowState;
    .end local v3    # "surfaceController":Lcom/android/server/wm/WindowSurfaceController;
    .end local v4    # "stats":Landroid/view/WindowContentFrameStats;
    :catchall_0
    move-exception v1

    :try_start_4
    monitor-exit v0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1

    .line 6114
    :cond_4
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires FRAME_STATS permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public getWindowId(Landroid/os/IBinder;)Landroid/view/IWindowId;
    .locals 3
    .param p1, "token"    # Landroid/os/IBinder;

    .line 2190
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 2191
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    invoke-virtual {v1, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/WindowState;

    .line 2192
    .local v1, "window":Lcom/android/server/wm/WindowState;
    if-eqz v1, :cond_0

    iget-object v2, v1, Lcom/android/server/wm/WindowState;->mWindowId:Lcom/android/server/wm/WindowState$WindowId;

    goto :goto_0

    :cond_0
    const/4 v2, 0x0

    :goto_0
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-object v2

    .line 2193
    .end local v1    # "window":Lcom/android/server/wm/WindowState;
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public getWindowInsets(Landroid/view/WindowManager$LayoutParams;ILandroid/view/InsetsState;)Z
    .locals 8
    .param p1, "attrs"    # Landroid/view/WindowManager$LayoutParams;
    .param p2, "displayId"    # I
    .param p3, "outInsetsState"    # Landroid/view/InsetsState;

    .line 8405
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v0

    invoke-static {}, Landroid/os/Process;->myPid()I

    move-result v1

    if-ne v0, v1, :cond_0

    const/4 v0, 0x1

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    .line 8406
    .local v0, "fromLocal":Z
    :goto_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v1

    .line 8408
    .local v1, "origId":J
    :try_start_0
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 8409
    iget-object v4, p1, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    invoke-direct {p0, p2, v4}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentOrCreate(ILandroid/os/IBinder;)Lcom/android/server/wm/DisplayContent;

    move-result-object v4

    .line 8410
    .local v4, "dc":Lcom/android/server/wm/DisplayContent;
    if-eqz v4, :cond_1

    .line 8414
    iget-object v5, p1, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    invoke-virtual {v4, v5}, Lcom/android/server/wm/DisplayContent;->getWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/WindowToken;

    move-result-object v5

    .line 8415
    .local v5, "windowToken":Lcom/android/server/wm/WindowToken;
    invoke-virtual {v4}, Lcom/android/server/wm/DisplayContent;->getDisplayPolicy()Lcom/android/server/wm/DisplayPolicy;

    move-result-object v6

    invoke-virtual {v6, p1, v5, p3, v0}, Lcom/android/server/wm/DisplayPolicy;->getLayoutHint(Landroid/view/WindowManager$LayoutParams;Lcom/android/server/wm/WindowToken;Landroid/view/InsetsState;Z)Z

    move-result v6

    monitor-exit v3
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 8419
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8415
    return v6

    .line 8411
    .end local v5    # "windowToken":Lcom/android/server/wm/WindowToken;
    :cond_1
    :try_start_2
    new-instance v5, Landroid/view/WindowManager$InvalidDisplayException;

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Display#"

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v7, "could not be found!"

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-direct {v5, v6}, Landroid/view/WindowManager$InvalidDisplayException;-><init>(Ljava/lang/String;)V

    .end local v0    # "fromLocal":Z
    .end local v1    # "origId":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "attrs":Landroid/view/WindowManager$LayoutParams;
    .end local p2    # "displayId":I
    .end local p3    # "outInsetsState":Landroid/view/InsetsState;
    throw v5

    .line 8417
    .end local v4    # "dc":Lcom/android/server/wm/DisplayContent;
    .restart local v0    # "fromLocal":Z
    .restart local v1    # "origId":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "attrs":Landroid/view/WindowManager$LayoutParams;
    .restart local p2    # "displayId":I
    .restart local p3    # "outInsetsState":Landroid/view/InsetsState;
    :catchall_0
    move-exception v4

    monitor-exit v3
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .end local v0    # "fromLocal":Z
    .end local v1    # "origId":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "attrs":Landroid/view/WindowManager$LayoutParams;
    .end local p2    # "displayId":I
    .end local p3    # "outInsetsState":Landroid/view/InsetsState;
    throw v4
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 8419
    .restart local v0    # "fromLocal":Z
    .restart local v1    # "origId":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "attrs":Landroid/view/WindowManager$LayoutParams;
    .restart local p2    # "displayId":I
    .restart local p3    # "outInsetsState":Landroid/view/InsetsState;
    :catchall_1
    move-exception v3

    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8420
    throw v3
.end method

.method public getWindowManagerLock()Ljava/lang/Object;
    .locals 1

    .line 6682
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    return-object v0
.end method

.method public getWindowingMode(I)I
    .locals 11
    .param p1, "displayId"    # I

    .line 7101
    const-string v0, "android.permission.INTERNAL_SYSTEM_WINDOW"

    const-string v1, "getWindowingMode()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_2

    .line 7105
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 7106
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 7107
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v1, :cond_1

    .line 7108
    sget-boolean v2, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    const/4 v3, 0x0

    if-eqz v2, :cond_0

    int-to-long v4, p1

    .local v4, "protoLogParam0":J
    sget-object v2, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const v6, 0x313c891

    const-string v7, "Attempted to get windowing mode of a display that does not exist: %d"

    const/4 v8, 0x1

    new-array v9, v8, [Ljava/lang/Object;

    invoke-static {v4, v5}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v10

    aput-object v10, v9, v3

    invoke-static {v2, v6, v8, v7, v9}, Lcom/android/internal/protolog/ProtoLogImpl;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 7111
    .end local v4    # "protoLogParam0":J
    :cond_0
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v3

    .line 7113
    :cond_1
    :try_start_1
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayWindowSettings:Lcom/android/server/wm/DisplayWindowSettings;

    invoke-virtual {v2, v1}, Lcom/android/server/wm/DisplayWindowSettings;->getWindowingModeLocked(Lcom/android/server/wm/DisplayContent;)I

    move-result v2

    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v2

    .line 7114
    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_0
    move-exception v1

    :try_start_2
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1

    .line 7102
    :cond_2
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires INTERNAL_SYSTEM_WINDOW permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method grantEmbeddedWindowFocus(Lcom/android/server/wm/Session;Landroid/os/IBinder;Z)V
    .locals 18
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "inputToken"    # Landroid/os/IBinder;
    .param p3, "grantFocus"    # Z

    .line 8424
    move-object/from16 v1, p0

    move-object/from16 v2, p1

    move-object/from16 v9, p2

    iget-object v10, v1, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v10

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 8425
    iget-object v0, v1, Lcom/android/server/wm/WindowManagerService;->mEmbeddedWindowController:Lcom/android/server/wm/EmbeddedWindowController;

    .line 8426
    invoke-virtual {v0, v9}, Lcom/android/server/wm/EmbeddedWindowController;->get(Landroid/os/IBinder;)Lcom/android/server/wm/EmbeddedWindowController$EmbeddedWindow;

    move-result-object v0

    .line 8427
    .local v0, "embeddedWindow":Lcom/android/server/wm/EmbeddedWindowController$EmbeddedWindow;
    if-nez v0, :cond_0

    .line 8428
    const-string v3, "WindowManager"

    const-string v4, "Embedded window not found"

    invoke-static {v3, v4}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 8429
    monitor-exit v10
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 8431
    :cond_0
    :try_start_1
    iget-object v3, v0, Lcom/android/server/wm/EmbeddedWindowController$EmbeddedWindow;->mSession:Lcom/android/server/wm/Session;

    if-eq v3, v2, :cond_1

    .line 8432
    const-string v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Window not in session:"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 8433
    monitor-exit v10
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 8435
    :cond_1
    :try_start_2
    iget-object v3, v1, Lcom/android/server/wm/WindowManagerService;->mTransactionFactory:Ljava/util/function/Supplier;

    invoke-interface {v3}, Ljava/util/function/Supplier;->get()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/view/SurfaceControl$Transaction;

    move-object v11, v3

    .line 8436
    .local v11, "t":Landroid/view/SurfaceControl$Transaction;
    iget v3, v0, Lcom/android/server/wm/EmbeddedWindowController$EmbeddedWindow;->mDisplayId:I

    move v12, v3

    .line 8437
    .local v12, "displayId":I
    const v13, 0xf231

    const/4 v14, 0x2

    const/4 v15, 0x0

    const/4 v8, 0x1

    const/4 v7, 0x0

    if-eqz p3, :cond_2

    .line 8438
    invoke-virtual {v0}, Lcom/android/server/wm/EmbeddedWindowController$EmbeddedWindow;->getName()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v11, v9, v3, v12}, Landroid/view/SurfaceControl$Transaction;->setFocusedWindow(Landroid/os/IBinder;Ljava/lang/String;I)Landroid/view/SurfaceControl$Transaction;

    move-result-object v3

    invoke-virtual {v3}, Landroid/view/SurfaceControl$Transaction;->apply()V

    .line 8439
    new-array v3, v14, [Ljava/lang/Object;

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Focus request "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 8440
    invoke-virtual {v0}, Lcom/android/server/wm/EmbeddedWindowController$EmbeddedWindow;->getName()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    aput-object v4, v3, v7

    const-string v4, "reason=grantEmbeddedWindowFocus(true)"

    aput-object v4, v3, v8

    .line 8439
    invoke-static {v13, v3}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    move v13, v7

    move/from16 v17, v8

    goto/16 :goto_1

    .line 8444
    :cond_2
    iget-object v3, v1, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v3, v12}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    move-object/from16 v16, v3

    .line 8445
    .local v16, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v16, :cond_3

    .line 8446
    move-object v3, v15

    goto :goto_0

    :cond_3
    invoke-virtual/range {v16 .. v16}, Lcom/android/server/wm/DisplayContent;->findFocusedWindow()Lcom/android/server/wm/WindowState;

    move-result-object v3

    :goto_0
    move-object v6, v3

    .line 8447
    .local v6, "newFocusTarget":Lcom/android/server/wm/WindowState;
    if-nez v6, :cond_5

    .line 8448
    sget-boolean v3, Lcom/android/server/wm/ProtoLogCache;->WM_DEBUG_FOCUS_enabled:Z

    if-eqz v3, :cond_4

    invoke-virtual {v0}, Lcom/android/server/wm/EmbeddedWindowController$EmbeddedWindow;->getName()Ljava/lang/String;

    move-result-object v3

    invoke-static {v3}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v3

    .local v3, "protoLogParam0":Ljava/lang/String;
    sget-object v4, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_FOCUS:Lcom/android/internal/protolog/ProtoLogGroup;

    const v5, 0x17ab5a22

    new-array v8, v8, [Ljava/lang/Object;

    aput-object v3, v8, v7

    invoke-static {v4, v5, v7, v15, v8}, Lcom/android/internal/protolog/ProtoLogImpl;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 8451
    .end local v3    # "protoLogParam0":Ljava/lang/String;
    :cond_4
    monitor-exit v10
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 8453
    :cond_5
    :try_start_3
    iget-object v4, v6, Lcom/android/server/wm/WindowState;->mInputChannelToken:Landroid/os/IBinder;

    invoke-virtual {v6}, Lcom/android/server/wm/WindowState;->getName()Ljava/lang/String;

    move-result-object v5

    .line 8454
    invoke-virtual {v0}, Lcom/android/server/wm/EmbeddedWindowController$EmbeddedWindow;->getName()Ljava/lang/String;

    move-result-object v17

    .line 8453
    move-object v3, v11

    move-object v15, v6

    .end local v6    # "newFocusTarget":Lcom/android/server/wm/WindowState;
    .local v15, "newFocusTarget":Lcom/android/server/wm/WindowState;
    move-object/from16 v6, p2

    move v13, v7

    move-object/from16 v7, v17

    move/from16 v17, v8

    move v8, v12

    invoke-virtual/range {v3 .. v8}, Landroid/view/SurfaceControl$Transaction;->requestFocusTransfer(Landroid/os/IBinder;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;I)Landroid/view/SurfaceControl$Transaction;

    move-result-object v3

    .line 8455
    invoke-virtual {v3}, Landroid/view/SurfaceControl$Transaction;->apply()V

    .line 8456
    new-array v3, v14, [Ljava/lang/Object;

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Transfer focus request "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    aput-object v4, v3, v13

    const-string v4, "reason=grantEmbeddedWindowFocus(false)"

    aput-object v4, v3, v17

    const v4, 0xf231

    invoke-static {v4, v3}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 8460
    .end local v15    # "newFocusTarget":Lcom/android/server/wm/WindowState;
    .end local v16    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :goto_1
    sget-boolean v3, Lcom/android/server/wm/ProtoLogCache;->WM_DEBUG_FOCUS_enabled:Z

    if-eqz v3, :cond_6

    invoke-virtual {v0}, Lcom/android/server/wm/EmbeddedWindowController$EmbeddedWindow;->getName()Ljava/lang/String;

    move-result-object v3

    invoke-static {v3}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v3

    .restart local v3    # "protoLogParam0":Ljava/lang/String;
    invoke-static/range {p3 .. p3}, Ljava/lang/String;->valueOf(Z)Ljava/lang/String;

    move-result-object v4

    .local v4, "protoLogParam1":Ljava/lang/String;
    sget-object v5, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_FOCUS:Lcom/android/internal/protolog/ProtoLogGroup;

    const v6, -0x7da145da

    new-array v7, v14, [Ljava/lang/Object;

    aput-object v3, v7, v13

    aput-object v4, v7, v17

    const/4 v8, 0x0

    invoke-static {v5, v6, v13, v8, v7}, Lcom/android/internal/protolog/ProtoLogImpl;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 8462
    .end local v0    # "embeddedWindow":Lcom/android/server/wm/EmbeddedWindowController$EmbeddedWindow;
    .end local v3    # "protoLogParam0":Ljava/lang/String;
    .end local v4    # "protoLogParam1":Ljava/lang/String;
    .end local v11    # "t":Landroid/view/SurfaceControl$Transaction;
    .end local v12    # "displayId":I
    :cond_6
    monitor-exit v10
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 8463
    return-void

    .line 8462
    :catchall_0
    move-exception v0

    :try_start_4
    monitor-exit v10
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method grantEmbeddedWindowFocus(Lcom/android/server/wm/Session;Landroid/view/IWindow;Landroid/os/IBinder;Z)V
    .locals 18
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "callingWindow"    # Landroid/view/IWindow;
    .param p3, "targetInputToken"    # Landroid/os/IBinder;
    .param p4, "grantFocus"    # Z

    .line 8467
    move-object/from16 v1, p0

    iget-object v2, v1, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v2

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 8468
    nop

    .line 8469
    const/4 v0, 0x0

    move-object/from16 v3, p1

    move-object/from16 v4, p2

    :try_start_1
    invoke-virtual {v1, v3, v4, v0}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;

    move-result-object v5

    .line 8470
    .local v5, "hostWindow":Lcom/android/server/wm/WindowState;
    if-nez v5, :cond_0

    .line 8471
    const-string v0, "WindowManager"

    const-string v6, "Host window not found"

    invoke-static {v0, v6}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 8472
    monitor-exit v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 8474
    :cond_0
    :try_start_2
    iget-object v6, v5, Lcom/android/server/wm/WindowState;->mInputChannel:Landroid/view/InputChannel;

    if-nez v6, :cond_1

    .line 8475
    const-string v0, "WindowManager"

    const-string v6, "Host window does not have an input channel"

    invoke-static {v0, v6}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 8476
    monitor-exit v2
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 8478
    :cond_1
    :try_start_3
    iget-object v6, v1, Lcom/android/server/wm/WindowManagerService;->mEmbeddedWindowController:Lcom/android/server/wm/EmbeddedWindowController;
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 8479
    move-object/from16 v14, p3

    :try_start_4
    invoke-virtual {v6, v14}, Lcom/android/server/wm/EmbeddedWindowController;->get(Landroid/os/IBinder;)Lcom/android/server/wm/EmbeddedWindowController$EmbeddedWindow;

    move-result-object v6

    .line 8480
    .local v6, "embeddedWindow":Lcom/android/server/wm/EmbeddedWindowController$EmbeddedWindow;
    if-nez v6, :cond_2

    .line 8481
    const-string v0, "WindowManager"

    const-string v7, "Embedded window not found"

    invoke-static {v0, v7}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 8482
    monitor-exit v2
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_2

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 8484
    :cond_2
    :try_start_5
    iget-object v7, v6, Lcom/android/server/wm/EmbeddedWindowController$EmbeddedWindow;->mHostWindowState:Lcom/android/server/wm/WindowState;

    if-eq v7, v5, :cond_3

    .line 8485
    const-string v0, "WindowManager"

    const-string v7, "Embedded window does not belong to the host"

    invoke-static {v0, v7}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 8486
    monitor-exit v2
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_2

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 8488
    :cond_3
    :try_start_6
    iget-object v7, v1, Lcom/android/server/wm/WindowManagerService;->mTransactionFactory:Ljava/util/function/Supplier;

    invoke-interface {v7}, Ljava/util/function/Supplier;->get()Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Landroid/view/SurfaceControl$Transaction;

    .line 8489
    .local v7, "t":Landroid/view/SurfaceControl$Transaction;
    const v15, 0xf231

    const/16 v16, 0x1

    const/4 v13, 0x2

    if-eqz p4, :cond_4

    .line 8490
    invoke-virtual {v6}, Lcom/android/server/wm/EmbeddedWindowController$EmbeddedWindow;->getName()Ljava/lang/String;

    move-result-object v9

    iget-object v8, v5, Lcom/android/server/wm/WindowState;->mInputChannel:Landroid/view/InputChannel;

    .line 8491
    invoke-virtual {v8}, Landroid/view/InputChannel;->getToken()Landroid/os/IBinder;

    move-result-object v10

    .line 8492
    invoke-virtual {v5}, Lcom/android/server/wm/WindowState;->getName()Ljava/lang/String;

    move-result-object v11

    .line 8493
    invoke-virtual {v5}, Lcom/android/server/wm/WindowState;->getDisplayId()I

    move-result v12

    .line 8490
    move-object/from16 v8, p3

    invoke-virtual/range {v7 .. v12}, Landroid/view/SurfaceControl$Transaction;->requestFocusTransfer(Landroid/os/IBinder;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;I)Landroid/view/SurfaceControl$Transaction;

    move-result-object v8

    .line 8493
    invoke-virtual {v8}, Landroid/view/SurfaceControl$Transaction;->apply()V

    .line 8494
    new-array v8, v13, [Ljava/lang/Object;

    new-instance v9, Ljava/lang/StringBuilder;

    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V

    const-string v10, "Transfer focus request "

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 8495
    invoke-virtual {v6}, Lcom/android/server/wm/EmbeddedWindowController$EmbeddedWindow;->getName()Ljava/lang/String;

    move-result-object v10

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v9

    aput-object v9, v8, v0

    const-string v9, "reason=grantEmbeddedWindowFocus(true)"

    aput-object v9, v8, v16

    .line 8494
    invoke-static {v15, v8}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    move v15, v13

    goto :goto_0

    .line 8498
    :cond_4
    iget-object v8, v5, Lcom/android/server/wm/WindowState;->mInputChannel:Landroid/view/InputChannel;

    invoke-virtual {v8}, Landroid/view/InputChannel;->getToken()Landroid/os/IBinder;

    move-result-object v9

    invoke-virtual {v5}, Lcom/android/server/wm/WindowState;->getName()Ljava/lang/String;

    move-result-object v10

    .line 8500
    invoke-virtual {v6}, Lcom/android/server/wm/EmbeddedWindowController$EmbeddedWindow;->getName()Ljava/lang/String;

    move-result-object v12

    .line 8501
    invoke-virtual {v5}, Lcom/android/server/wm/WindowState;->getDisplayId()I

    move-result v17

    .line 8498
    move-object v8, v7

    move-object/from16 v11, p3

    move v15, v13

    move/from16 v13, v17

    invoke-virtual/range {v8 .. v13}, Landroid/view/SurfaceControl$Transaction;->requestFocusTransfer(Landroid/os/IBinder;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;I)Landroid/view/SurfaceControl$Transaction;

    move-result-object v8

    .line 8501
    invoke-virtual {v8}, Landroid/view/SurfaceControl$Transaction;->apply()V

    .line 8502
    new-array v8, v15, [Ljava/lang/Object;

    new-instance v9, Ljava/lang/StringBuilder;

    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V

    const-string v10, "Transfer focus request "

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v9, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v9

    aput-object v9, v8, v0

    const-string v9, "reason=grantEmbeddedWindowFocus(false)"

    aput-object v9, v8, v16

    const v9, 0xf231

    invoke-static {v9, v8}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 8506
    :goto_0
    sget-boolean v8, Lcom/android/server/wm/ProtoLogCache;->WM_DEBUG_FOCUS_enabled:Z

    if-eqz v8, :cond_5

    invoke-virtual {v6}, Lcom/android/server/wm/EmbeddedWindowController$EmbeddedWindow;->getName()Ljava/lang/String;

    move-result-object v8

    invoke-static {v8}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v8

    .local v8, "protoLogParam0":Ljava/lang/String;
    invoke-static/range {p4 .. p4}, Ljava/lang/String;->valueOf(Z)Ljava/lang/String;

    move-result-object v9

    .local v9, "protoLogParam1":Ljava/lang/String;
    sget-object v10, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_FOCUS:Lcom/android/internal/protolog/ProtoLogGroup;

    const v11, -0x7da145da

    const/4 v12, 0x0

    new-array v13, v15, [Ljava/lang/Object;

    aput-object v8, v13, v0

    aput-object v9, v13, v16

    invoke-static {v10, v11, v0, v12, v13}, Lcom/android/internal/protolog/ProtoLogImpl;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 8508
    .end local v5    # "hostWindow":Lcom/android/server/wm/WindowState;
    .end local v6    # "embeddedWindow":Lcom/android/server/wm/EmbeddedWindowController$EmbeddedWindow;
    .end local v7    # "t":Landroid/view/SurfaceControl$Transaction;
    .end local v8    # "protoLogParam0":Ljava/lang/String;
    .end local v9    # "protoLogParam1":Ljava/lang/String;
    :cond_5
    monitor-exit v2
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_2

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 8509
    return-void

    .line 8508
    :catchall_0
    move-exception v0

    goto :goto_1

    :catchall_1
    move-exception v0

    move-object/from16 v3, p1

    move-object/from16 v4, p2

    :goto_1
    move-object/from16 v14, p3

    :goto_2
    :try_start_7
    monitor-exit v2
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_2

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    :catchall_2
    move-exception v0

    goto :goto_2
.end method

.method grantInputChannel(Lcom/android/server/wm/Session;IIILandroid/view/SurfaceControl;Landroid/view/IWindow;Landroid/os/IBinder;IIILandroid/view/InputChannel;)V
    .locals 16
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "callingUid"    # I
    .param p3, "callingPid"    # I
    .param p4, "displayId"    # I
    .param p5, "surface"    # Landroid/view/SurfaceControl;
    .param p6, "window"    # Landroid/view/IWindow;
    .param p7, "hostInputToken"    # Landroid/os/IBinder;
    .param p8, "flags"    # I
    .param p9, "privateFlags"    # I
    .param p10, "type"    # I
    .param p11, "outInputChannel"    # Landroid/view/InputChannel;

    .line 8202
    move-object/from16 v13, p0

    iget-object v10, v13, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v10

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 8203
    new-instance v0, Lcom/android/server/wm/EmbeddedWindowController$EmbeddedWindow;

    iget-object v1, v13, Lcom/android/server/wm/WindowManagerService;->mInputToWindowMap:Ljava/util/HashMap;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 8205
    move-object/from16 v14, p7

    :try_start_1
    invoke-virtual {v1, v14}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    move-object v5, v1

    check-cast v5, Lcom/android/server/wm/WindowState;

    move-object v1, v0

    move-object/from16 v2, p1

    move-object/from16 v3, p0

    move-object/from16 v4, p6

    move/from16 v6, p2

    move/from16 v7, p3

    move/from16 v8, p10

    move/from16 v9, p4

    invoke-direct/range {v1 .. v9}, Lcom/android/server/wm/EmbeddedWindowController$EmbeddedWindow;-><init>(Lcom/android/server/wm/Session;Lcom/android/server/wm/WindowManagerService;Landroid/view/IWindow;Lcom/android/server/wm/WindowState;IIII)V

    .line 8207
    .local v0, "win":Lcom/android/server/wm/EmbeddedWindowController$EmbeddedWindow;
    invoke-virtual {v0}, Lcom/android/server/wm/EmbeddedWindowController$EmbeddedWindow;->openInputChannel()Landroid/view/InputChannel;

    move-result-object v1

    move-object v15, v1

    .line 8208
    .local v15, "clientChannel":Landroid/view/InputChannel;
    iget-object v1, v13, Lcom/android/server/wm/WindowManagerService;->mEmbeddedWindowController:Lcom/android/server/wm/EmbeddedWindowController;

    invoke-virtual {v15}, Landroid/view/InputChannel;->getToken()Landroid/os/IBinder;

    move-result-object v2

    invoke-virtual {v1, v2, v0}, Lcom/android/server/wm/EmbeddedWindowController;->add(Landroid/os/IBinder;Lcom/android/server/wm/EmbeddedWindowController$EmbeddedWindow;)V

    .line 8209
    invoke-virtual {v0}, Lcom/android/server/wm/EmbeddedWindowController$EmbeddedWindow;->getApplicationHandle()Landroid/view/InputApplicationHandle;

    move-result-object v8

    .line 8210
    .local v8, "applicationHandle":Landroid/view/InputApplicationHandle;
    invoke-virtual {v0}, Lcom/android/server/wm/EmbeddedWindowController$EmbeddedWindow;->getName()Ljava/lang/String;

    move-result-object v7

    .line 8211
    .end local v0    # "win":Lcom/android/server/wm/EmbeddedWindowController$EmbeddedWindow;
    .local v7, "name":Ljava/lang/String;
    monitor-exit v10
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 8213
    invoke-virtual {v15}, Landroid/view/InputChannel;->getToken()Landroid/os/IBinder;

    move-result-object v2

    const/4 v12, 0x0

    move-object/from16 v1, p0

    move/from16 v3, p2

    move/from16 v4, p3

    move/from16 v5, p4

    move-object/from16 v6, p5

    move/from16 v9, p8

    move/from16 v10, p9

    move/from16 v11, p10

    invoke-direct/range {v1 .. v12}, Lcom/android/server/wm/WindowManagerService;->updateInputChannel(Landroid/os/IBinder;IIILandroid/view/SurfaceControl;Ljava/lang/String;Landroid/view/InputApplicationHandle;IIILandroid/graphics/Region;)V

    .line 8216
    move-object/from16 v1, p11

    invoke-virtual {v15, v1}, Landroid/view/InputChannel;->copyTo(Landroid/view/InputChannel;)V

    .line 8217
    return-void

    .line 8211
    .end local v7    # "name":Ljava/lang/String;
    .end local v8    # "applicationHandle":Landroid/view/InputApplicationHandle;
    .end local v15    # "clientChannel":Landroid/view/InputChannel;
    :catchall_0
    move-exception v0

    goto :goto_0

    :catchall_1
    move-exception v0

    move-object/from16 v14, p7

    :goto_0
    move-object/from16 v1, p11

    :goto_1
    :try_start_2
    monitor-exit v10
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_2

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    :catchall_2
    move-exception v0

    goto :goto_1
.end method

.method handleTaskFocusChange(Lcom/android/server/wm/Task;)V
    .locals 3
    .param p1, "task"    # Lcom/android/server/wm/Task;

    .line 8168
    if-nez p1, :cond_0

    .line 8169
    return-void

    .line 8175
    :cond_0
    invoke-virtual {p1}, Lcom/android/server/wm/Task;->isActivityTypeHome()Z

    move-result v0

    if-eqz v0, :cond_1

    .line 8178
    invoke-virtual {p1}, Lcom/android/server/wm/Task;->getDisplayArea()Lcom/android/server/wm/TaskDisplayArea;

    move-result-object v0

    .line 8179
    .local v0, "homeTda":Lcom/android/server/wm/TaskDisplayArea;
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->getFocusedWindow()Lcom/android/server/wm/WindowState;

    move-result-object v1

    .line 8180
    .local v1, "curFocusedWindow":Lcom/android/server/wm/WindowState;
    if-eqz v1, :cond_1

    if-eqz v0, :cond_1

    .line 8181
    invoke-virtual {v1, v0}, Lcom/android/server/wm/WindowState;->isDescendantOf(Lcom/android/server/wm/WindowContainer;)Z

    move-result v2

    if-eqz v2, :cond_1

    .line 8182
    return-void

    .line 8186
    .end local v0    # "homeTda":Lcom/android/server/wm/TaskDisplayArea;
    .end local v1    # "curFocusedWindow":Lcom/android/server/wm/WindowState;
    :cond_1
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    iget v1, p1, Lcom/android/server/wm/Task;->mTaskId:I

    invoke-virtual {v0, v1}, Lcom/android/server/wm/ActivityTaskManagerService;->setFocusedTask(I)V

    .line 8187
    return-void
.end method

.method hasHdrSupport()Z
    .locals 1

    .line 7974
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mHasHdrSupport:Z

    if-eqz v0, :cond_0

    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->hasWideColorGamutSupport()Z

    move-result v0

    if-eqz v0, :cond_0

    const/4 v0, 0x1

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    :goto_0
    return v0
.end method

.method public hasNavigationBar(I)Z
    .locals 3
    .param p1, "displayId"    # I

    .line 6068
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 6069
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 6070
    .local v1, "dc":Lcom/android/server/wm/DisplayContent;
    if-nez v1, :cond_0

    .line 6071
    const/4 v2, 0x0

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v2

    .line 6073
    :cond_0
    :try_start_1
    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->getDisplayPolicy()Lcom/android/server/wm/DisplayPolicy;

    move-result-object v2

    invoke-virtual {v2}, Lcom/android/server/wm/DisplayPolicy;->hasNavigationBar()Z

    move-result v2

    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v2

    .line 6074
    .end local v1    # "dc":Lcom/android/server/wm/DisplayContent;
    :catchall_0
    move-exception v1

    :try_start_2
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method hasWideColorGamutSupport()Z
    .locals 3

    .line 7969
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mHasWideColorGamutSupport:Z

    const/4 v1, 0x1

    const/4 v2, 0x0

    if-eqz v0, :cond_0

    .line 7970
    const-string v0, "persist.sys.sf.native_mode"

    invoke-static {v0, v2}, Landroid/os/SystemProperties;->getInt(Ljava/lang/String;I)I

    move-result v0

    if-eq v0, v1, :cond_0

    goto :goto_0

    :cond_0
    move v1, v2

    .line 7969
    :goto_0
    return v1
.end method

.method public hideBootMessagesLocked()V
    .locals 13

    .line 3662
    sget-boolean v0, Lcom/android/server/wm/ProtoLogCache;->WM_DEBUG_BOOT_enabled:Z

    const/4 v1, 0x0

    if-eqz v0, :cond_0

    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayEnabled:Z

    .local v0, "protoLogParam0":Z
    iget-boolean v2, p0, Lcom/android/server/wm/WindowManagerService;->mForceDisplayEnabled:Z

    .local v2, "protoLogParam1":Z
    iget-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mShowingBootMessages:Z

    .local v3, "protoLogParam2":Z
    iget-boolean v4, p0, Lcom/android/server/wm/WindowManagerService;->mSystemBooted:Z

    .local v4, "protoLogParam3":Z
    new-instance v5, Ljava/lang/RuntimeException;

    const-string v6, "here"

    invoke-direct {v5, v6}, Ljava/lang/RuntimeException;-><init>(Ljava/lang/String;)V

    invoke-virtual {v5}, Ljava/lang/RuntimeException;->fillInStackTrace()Ljava/lang/Throwable;

    move-result-object v5

    invoke-static {v5}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v5

    .local v5, "protoLogParam4":Ljava/lang/String;
    sget-object v6, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_BOOT:Lcom/android/internal/protolog/ProtoLogGroup;

    const v7, -0x507a6318

    const/16 v8, 0xff

    const/4 v9, 0x0

    const/4 v10, 0x5

    new-array v10, v10, [Ljava/lang/Object;

    invoke-static {v0}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v11

    aput-object v11, v10, v1

    const/4 v11, 0x1

    invoke-static {v2}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v12

    aput-object v12, v10, v11

    const/4 v11, 0x2

    invoke-static {v3}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v12

    aput-object v12, v10, v11

    const/4 v11, 0x3

    invoke-static {v4}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v12

    aput-object v12, v10, v11

    const/4 v11, 0x4

    aput-object v5, v10, v11

    invoke-static {v6, v7, v8, v9, v10}, Lcom/android/internal/protolog/ProtoLogImpl;->i(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 3667
    .end local v0    # "protoLogParam0":Z
    .end local v2    # "protoLogParam1":Z
    .end local v3    # "protoLogParam2":Z
    .end local v4    # "protoLogParam3":Z
    .end local v5    # "protoLogParam4":Ljava/lang/String;
    :cond_0
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mShowingBootMessages:Z

    if-eqz v0, :cond_1

    .line 3668
    iput-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mShowingBootMessages:Z

    .line 3669
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    invoke-interface {v0}, Lcom/android/server/policy/WindowManagerPolicy;->hideBootMessages()V

    .line 3671
    :cond_1
    return-void
.end method

.method public hideTransientBars(I)V
    .locals 5
    .param p1, "displayId"    # I

    .line 5948
    const-string v0, "android.permission.STATUS_BAR"

    const-string v1, "hideTransientBars()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 5953
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 5954
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 5955
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v1, :cond_0

    .line 5956
    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->getInsetsPolicy()Lcom/android/server/wm/InsetsPolicy;

    move-result-object v2

    invoke-virtual {v2}, Lcom/android/server/wm/InsetsPolicy;->hideTransient()V

    goto :goto_0

    .line 5958
    :cond_0
    const-string v2, "WindowManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "hideTransientBars with invalid displayId="

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 5960
    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :goto_0
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 5961
    return-void

    .line 5960
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1

    .line 5950
    :cond_1
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires STATUS_BAR permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public holdLock(Landroid/os/IBinder;I)V
    .locals 3
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "durationMs"    # I

    .line 8513
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mTestUtilityService:Landroid/content/pm/TestUtilityService;

    invoke-interface {v0, p1}, Landroid/content/pm/TestUtilityService;->verifyHoldLockToken(Landroid/os/IBinder;)V

    .line 8515
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 8516
    int-to-long v1, p2

    invoke-static {v1, v2}, Landroid/os/SystemClock;->sleep(J)V

    .line 8517
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 8518
    return-void

    .line 8517
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method inSurfaceTransaction(Ljava/lang/Runnable;)V
    .locals 1
    .param p1, "exec"    # Ljava/lang/Runnable;

    .line 7943
    invoke-static {}, Landroid/view/SurfaceControl;->openTransaction()V

    .line 7945
    :try_start_0
    invoke-interface {p1}, Ljava/lang/Runnable;->run()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 7947
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    .line 7948
    nop

    .line 7949
    return-void

    .line 7947
    :catchall_0
    move-exception v0

    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    .line 7948
    throw v0
.end method

.method initializeRecentsAnimation(ILandroid/view/IRecentsAnimationRunner;Lcom/android/server/wm/RecentsAnimationController$RecentsAnimationCallbacks;ILandroid/util/SparseBooleanArray;Lcom/android/server/wm/ActivityRecord;)V
    .locals 1
    .param p1, "targetActivityType"    # I
    .param p2, "recentsAnimationRunner"    # Landroid/view/IRecentsAnimationRunner;
    .param p3, "callbacks"    # Lcom/android/server/wm/RecentsAnimationController$RecentsAnimationCallbacks;
    .param p4, "displayId"    # I
    .param p5, "recentTaskIds"    # Landroid/util/SparseBooleanArray;
    .param p6, "targetActivity"    # Lcom/android/server/wm/ActivityRecord;

    .line 2947
    new-instance v0, Lcom/android/server/wm/RecentsAnimationController;

    invoke-direct {v0, p0, p2, p3, p4}, Lcom/android/server/wm/RecentsAnimationController;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/view/IRecentsAnimationRunner;Lcom/android/server/wm/RecentsAnimationController$RecentsAnimationCallbacks;I)V

    iput-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mRecentsAnimationController:Lcom/android/server/wm/RecentsAnimationController;

    .line 2949
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v0, p4}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    iget-object v0, v0, Lcom/android/server/wm/DisplayContent;->mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v0}, Lcom/android/server/wm/AppTransition;->updateBooster()V

    .line 2950
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mRecentsAnimationController:Lcom/android/server/wm/RecentsAnimationController;

    invoke-virtual {v0, p1, p5, p6}, Lcom/android/server/wm/RecentsAnimationController;->initialize(ILandroid/util/SparseBooleanArray;Lcom/android/server/wm/ActivityRecord;)V

    .line 2951
    return-void
.end method

.method public injectInputAfterTransactionsApplied(Landroid/view/InputEvent;IZ)Z
    .locals 6
    .param p1, "ev"    # Landroid/view/InputEvent;
    .param p2, "mode"    # I
    .param p3, "waitForAnimations"    # Z

    .line 8039
    instance-of v0, p1, Landroid/view/KeyEvent;

    const/4 v1, 0x0

    const/4 v2, 0x1

    if-eqz v0, :cond_2

    .line 8040
    move-object v0, p1

    check-cast v0, Landroid/view/KeyEvent;

    .line 8041
    .local v0, "keyEvent":Landroid/view/KeyEvent;
    invoke-virtual {v0}, Landroid/view/KeyEvent;->getAction()I

    move-result v3

    if-nez v3, :cond_0

    move v3, v2

    goto :goto_0

    :cond_0
    move v3, v1

    .line 8042
    .local v3, "isDown":Z
    :goto_0
    invoke-virtual {v0}, Landroid/view/KeyEvent;->getAction()I

    move-result v4

    if-ne v4, v2, :cond_1

    move v4, v2

    goto :goto_1

    :cond_1
    move v4, v1

    :goto_1
    move v0, v4

    .line 8043
    .local v0, "isUp":Z
    goto :goto_4

    .line 8044
    .end local v0    # "isUp":Z
    .end local v3    # "isDown":Z
    :cond_2
    move-object v0, p1

    check-cast v0, Landroid/view/MotionEvent;

    .line 8045
    .local v0, "motionEvent":Landroid/view/MotionEvent;
    invoke-virtual {v0}, Landroid/view/MotionEvent;->getAction()I

    move-result v3

    if-nez v3, :cond_3

    move v3, v2

    goto :goto_2

    :cond_3
    move v3, v1

    .line 8046
    .restart local v3    # "isDown":Z
    :goto_2
    invoke-virtual {v0}, Landroid/view/MotionEvent;->getAction()I

    move-result v4

    if-ne v4, v2, :cond_4

    move v4, v2

    goto :goto_3

    :cond_4
    move v4, v1

    :goto_3
    move v0, v4

    .line 8048
    .local v0, "isUp":Z
    :goto_4
    invoke-virtual {p1}, Landroid/view/InputEvent;->getSource()I

    move-result v4

    const/16 v5, 0x2002

    if-ne v4, v5, :cond_5

    move v1, v2

    .line 8053
    .local v1, "isMouseEvent":Z
    :cond_5
    if-nez v3, :cond_6

    if-eqz v1, :cond_7

    .line 8054
    :cond_6
    invoke-virtual {p0, p3}, Lcom/android/server/wm/WindowManagerService;->syncInputTransactions(Z)V

    .line 8056
    :cond_7
    const-class v2, Landroid/hardware/input/InputManagerInternal;

    .line 8057
    invoke-static {v2}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/hardware/input/InputManagerInternal;

    invoke-virtual {v2, p1, p2}, Landroid/hardware/input/InputManagerInternal;->injectInputEvent(Landroid/view/InputEvent;I)Z

    move-result v2

    .line 8058
    .local v2, "result":Z
    if-eqz v0, :cond_8

    .line 8059
    invoke-virtual {p0, p3}, Lcom/android/server/wm/WindowManagerService;->syncInputTransactions(Z)V

    .line 8061
    :cond_8
    return v2
.end method

.method intersectDisplayInsetBounds(Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;)V
    .locals 1
    .param p1, "display"    # Landroid/graphics/Rect;
    .param p2, "insets"    # Landroid/graphics/Rect;
    .param p3, "inOutBounds"    # Landroid/graphics/Rect;

    .line 6873
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mTmpRect3:Landroid/graphics/Rect;

    invoke-virtual {v0, p1}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 6874
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mTmpRect3:Landroid/graphics/Rect;

    invoke-virtual {v0, p2}, Landroid/graphics/Rect;->inset(Landroid/graphics/Rect;)V

    .line 6875
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mTmpRect3:Landroid/graphics/Rect;

    invoke-virtual {p3, v0}, Landroid/graphics/Rect;->intersect(Landroid/graphics/Rect;)Z

    .line 6876
    return-void
.end method

.method isCurrentProfile(I)Z
    .locals 4
    .param p1, "userId"    # I

    .line 3466
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentUserId:I

    const/4 v1, 0x1

    if-ne p1, v0, :cond_0

    return v1

    .line 3467
    :cond_0
    const/4 v0, 0x0

    .local v0, "i":I
    :goto_0
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentProfileIds:[I

    array-length v3, v2

    if-ge v0, v3, :cond_2

    .line 3468
    aget v2, v2, v0

    if-ne v2, p1, :cond_1

    return v1

    .line 3467
    :cond_1
    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    .line 3470
    .end local v0    # "i":I
    :cond_2
    const/4 v0, 0x0

    return v0
.end method

.method public isDisplayRotationFrozen(I)Z
    .locals 4
    .param p1, "displayId"    # I

    .line 3977
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 3978
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 3979
    .local v1, "display":Lcom/android/server/wm/DisplayContent;
    if-nez v1, :cond_0

    .line 3980
    const-string v2, "WindowManager"

    const-string v3, "Trying to check if rotation is frozen on a missing display."

    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 3981
    const/4 v2, 0x0

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v2

    .line 3983
    :cond_0
    :try_start_1
    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->getDisplayRotation()Lcom/android/server/wm/DisplayRotation;

    move-result-object v2

    invoke-virtual {v2}, Lcom/android/server/wm/DisplayRotation;->isRotationFrozen()Z

    move-result v2

    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v2

    .line 3984
    .end local v1    # "display":Lcom/android/server/wm/DisplayContent;
    :catchall_0
    move-exception v1

    :try_start_2
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public isKeyguardLocked()Z
    .locals 1

    .line 3183
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    invoke-interface {v0}, Lcom/android/server/policy/WindowManagerPolicy;->isKeyguardLocked()Z

    move-result v0

    return v0
.end method

.method public isKeyguardSecure(I)Z
    .locals 3
    .param p1, "userId"    # I

    .line 3192
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v0

    if-eq p1, v0, :cond_1

    .line 3193
    const-string v0, "android.permission.INTERACT_ACROSS_USERS"

    const-string v1, "isKeyguardSecure"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_0

    goto :goto_0

    .line 3195
    :cond_0
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires INTERACT_ACROSS_USERS permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 3198
    :cond_1
    :goto_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 3200
    .local v0, "origId":J
    :try_start_0
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    invoke-interface {v2, p1}, Lcom/android/server/policy/WindowManagerPolicy;->isKeyguardSecure(I)Z

    move-result v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 3202
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3200
    return v2

    .line 3202
    :catchall_0
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3203
    throw v2
.end method

.method public isKeyguardShowingAndNotOccluded()Z
    .locals 1

    .line 3187
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    invoke-interface {v0}, Lcom/android/server/policy/WindowManagerPolicy;->isKeyguardShowingAndNotOccluded()Z

    move-result v0

    return v0
.end method

.method public isLayerTracing()Z
    .locals 8

    .line 8285
    const-string v0, "android.permission.DUMP"

    const-string v1, "isLayerTracing()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_8

    .line 8290
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 8292
    .local v0, "token":J
    const/4 v2, 0x0

    .line 8293
    .local v2, "data":Landroid/os/Parcel;
    const/4 v3, 0x0

    .line 8295
    .local v3, "reply":Landroid/os/Parcel;
    const/4 v4, 0x0

    :try_start_0
    const-string v5, "SurfaceFlinger"

    invoke-static {v5}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v5

    .line 8296
    .local v5, "sf":Landroid/os/IBinder;
    if-eqz v5, :cond_2

    .line 8297
    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;

    move-result-object v6

    move-object v3, v6

    .line 8298
    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;

    move-result-object v6

    move-object v2, v6

    .line 8299
    const-string v6, "android.ui.ISurfaceComposer"

    invoke-virtual {v2, v6}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V

    .line 8300
    const/16 v6, 0x402

    invoke-interface {v5, v6, v2, v3, v4}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z

    .line 8301
    invoke-virtual {v3}, Landroid/os/Parcel;->readBoolean()Z

    move-result v4
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 8306
    if-eqz v2, :cond_0

    .line 8307
    :try_start_1
    invoke-virtual {v2}, Landroid/os/Parcel;->recycle()V

    .line 8309
    :cond_0
    if-eqz v3, :cond_1

    .line 8310
    invoke-virtual {v3}, Landroid/os/Parcel;->recycle()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 8314
    :cond_1
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8301
    return v4

    .line 8306
    .end local v5    # "sf":Landroid/os/IBinder;
    :cond_2
    if-eqz v2, :cond_3

    .line 8307
    :try_start_2
    invoke-virtual {v2}, Landroid/os/Parcel;->recycle()V

    .line 8309
    :cond_3
    if-eqz v3, :cond_5

    .line 8310
    :goto_0
    invoke-virtual {v3}, Landroid/os/Parcel;->recycle()V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    goto :goto_1

    .line 8306
    :catchall_0
    move-exception v4

    goto :goto_2

    .line 8303
    :catch_0
    move-exception v5

    .line 8304
    .local v5, "e":Landroid/os/RemoteException;
    :try_start_3
    const-string v6, "WindowManager"

    const-string v7, "Failed to get layer tracing"

    invoke-static {v6, v7}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 8306
    .end local v5    # "e":Landroid/os/RemoteException;
    if-eqz v2, :cond_4

    .line 8307
    :try_start_4
    invoke-virtual {v2}, Landroid/os/Parcel;->recycle()V
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 8309
    :cond_4
    if-eqz v3, :cond_5

    .line 8310
    goto :goto_0

    .line 8314
    .end local v2    # "data":Landroid/os/Parcel;
    .end local v3    # "reply":Landroid/os/Parcel;
    :cond_5
    :goto_1
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8315
    nop

    .line 8316
    return v4

    .line 8306
    .restart local v2    # "data":Landroid/os/Parcel;
    .restart local v3    # "reply":Landroid/os/Parcel;
    :goto_2
    if-eqz v2, :cond_6

    .line 8307
    :try_start_5
    invoke-virtual {v2}, Landroid/os/Parcel;->recycle()V

    goto :goto_3

    .line 8314
    .end local v2    # "data":Landroid/os/Parcel;
    .end local v3    # "reply":Landroid/os/Parcel;
    :catchall_1
    move-exception v2

    goto :goto_4

    .line 8309
    .restart local v2    # "data":Landroid/os/Parcel;
    .restart local v3    # "reply":Landroid/os/Parcel;
    :cond_6
    :goto_3
    if-eqz v3, :cond_7

    .line 8310
    invoke-virtual {v3}, Landroid/os/Parcel;->recycle()V

    .line 8312
    :cond_7
    nop

    .end local v0    # "token":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    throw v4
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    .line 8314
    .end local v2    # "data":Landroid/os/Parcel;
    .end local v3    # "reply":Landroid/os/Parcel;
    .restart local v0    # "token":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    :goto_4
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8315
    throw v2

    .line 8287
    .end local v0    # "token":J
    :cond_8
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires DUMP permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method isRecentsAnimationTarget(Lcom/android/server/wm/ActivityRecord;)Z
    .locals 1
    .param p1, "r"    # Lcom/android/server/wm/ActivityRecord;

    .line 2982
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mRecentsAnimationController:Lcom/android/server/wm/RecentsAnimationController;

    if-eqz v0, :cond_0

    invoke-virtual {v0, p1}, Lcom/android/server/wm/RecentsAnimationController;->isTargetApp(Lcom/android/server/wm/ActivityRecord;)Z

    move-result v0

    if-eqz v0, :cond_0

    const/4 v0, 0x1

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    :goto_0
    return v0
.end method

.method public isRotationFrozen()Z
    .locals 1

    .line 3972
    const/4 v0, 0x0

    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->isDisplayRotationFrozen(I)Z

    move-result v0

    return v0
.end method

.method public isSafeModeEnabled()Z
    .locals 1

    .line 6088
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mSafeMode:Z

    return v0
.end method

.method public isTaskSnapshotSupported()Z
    .locals 2

    .line 8540
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 8541
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTaskSnapshotController:Lcom/android/server/wm/TaskSnapshotController;

    invoke-virtual {v1}, Lcom/android/server/wm/TaskSnapshotController;->shouldDisableSnapshots()Z

    move-result v1

    if-nez v1, :cond_0

    const/4 v1, 0x1

    goto :goto_0

    :cond_0
    const/4 v1, 0x0

    :goto_0
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v1

    .line 8542
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method isValidPictureInPictureAspectRatio(Lcom/android/server/wm/DisplayContent;F)Z
    .locals 1
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;
    .param p2, "aspectRatio"    # F

    .line 2993
    invoke-virtual {p1}, Lcom/android/server/wm/DisplayContent;->getPinnedTaskController()Lcom/android/server/wm/PinnedTaskController;

    move-result-object v0

    invoke-virtual {v0, p2}, Lcom/android/server/wm/PinnedTaskController;->isValidPictureInPictureAspectRatio(F)Z

    move-result v0

    return v0
.end method

.method public isViewServerRunning()Z
    .locals 3

    .line 4452
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->isSystemSecure()Z

    move-result v0

    const/4 v1, 0x0

    if-eqz v0, :cond_0

    .line 4453
    return v1

    .line 4456
    :cond_0
    const-string v0, "android.permission.DUMP"

    const-string v2, "isViewServerRunning"

    invoke-virtual {p0, v0, v2}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_1

    .line 4457
    return v1

    .line 4460
    :cond_1
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mViewServer:Lcom/android/server/wm/ViewServer;

    if-eqz v0, :cond_2

    invoke-virtual {v0}, Lcom/android/server/wm/ViewServer;->isRunning()Z

    move-result v0

    if-eqz v0, :cond_2

    const/4 v1, 0x1

    :cond_2
    return v1
.end method

.method public isWindowToken(Landroid/os/IBinder;)Z
    .locals 2
    .param p1, "binder"    # Landroid/os/IBinder;

    .line 2813
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 2814
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p1}, Lcom/android/server/wm/RootWindowContainer;->getWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/WindowToken;

    move-result-object v1

    if-eqz v1, :cond_0

    const/4 v1, 0x1

    goto :goto_0

    :cond_0
    const/4 v1, 0x0

    :goto_0
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v1

    .line 2815
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public isWindowTraceEnabled()Z
    .locals 1

    .line 5562
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowTracing:Lcom/android/server/wm/WindowTracing;

    invoke-virtual {v0}, Lcom/android/server/wm/WindowTracing;->isEnabled()Z

    move-result v0

    return v0
.end method

.method public synthetic lambda$checkDrawnWindowsLocked$7$WindowManagerService(Lcom/android/server/wm/WindowContainer;Ljava/lang/Runnable;)V
    .locals 18
    .param p1, "container"    # Lcom/android/server/wm/WindowContainer;
    .param p2, "callback"    # Ljava/lang/Runnable;

    .line 5632
    move-object/from16 v0, p0

    move-object/from16 v1, p1

    iget-object v2, v1, Lcom/android/server/wm/WindowContainer;->mWaitingForDrawn:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    const/4 v3, 0x1

    sub-int/2addr v2, v3

    .local v2, "j":I
    :goto_0
    const/4 v5, 0x0

    if-ltz v2, :cond_6

    .line 5633
    iget-object v6, v1, Lcom/android/server/wm/WindowContainer;->mWaitingForDrawn:Ljava/util/ArrayList;

    invoke-virtual {v6, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/wm/WindowState;

    .line 5634
    .local v6, "win":Lcom/android/server/wm/WindowState;
    sget-boolean v7, Lcom/android/server/wm/ProtoLogCache;->WM_DEBUG_SCREEN_ON_enabled:Z

    if-eqz v7, :cond_0

    invoke-static {v6}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v7

    .local v7, "protoLogParam0":Ljava/lang/String;
    iget-boolean v8, v6, Lcom/android/server/wm/WindowState;->mRemoved:Z

    .local v8, "protoLogParam1":Z
    invoke-virtual {v6}, Lcom/android/server/wm/WindowState;->isVisible()Z

    move-result v9

    .local v9, "protoLogParam2":Z
    iget-boolean v10, v6, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    .local v10, "protoLogParam3":Z
    iget-object v11, v6, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    iget v11, v11, Lcom/android/server/wm/WindowStateAnimator;->mDrawState:I

    int-to-long v11, v11

    .local v11, "protoLogParam4":J
    sget-object v13, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_SCREEN_ON:Lcom/android/internal/protolog/ProtoLogGroup;

    const v14, 0x352e905d

    const/16 v15, 0x1fc

    const/4 v4, 0x5

    new-array v4, v4, [Ljava/lang/Object;

    aput-object v7, v4, v5

    invoke-static {v8}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v16

    aput-object v16, v4, v3

    const/16 v16, 0x2

    invoke-static {v9}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v17

    aput-object v17, v4, v16

    const/16 v16, 0x3

    invoke-static {v10}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v17

    aput-object v17, v4, v16

    const/16 v16, 0x4

    invoke-static {v11, v12}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v17

    aput-object v17, v4, v16

    const/4 v5, 0x0

    invoke-static {v13, v14, v15, v5, v4}, Lcom/android/internal/protolog/ProtoLogImpl;->i(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 5638
    .end local v7    # "protoLogParam0":Ljava/lang/String;
    .end local v8    # "protoLogParam1":Z
    .end local v9    # "protoLogParam2":Z
    .end local v10    # "protoLogParam3":Z
    .end local v11    # "protoLogParam4":J
    :cond_0
    iget-boolean v4, v6, Lcom/android/server/wm/WindowState;->mRemoved:Z

    if-nez v4, :cond_3

    iget-boolean v4, v6, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    if-eqz v4, :cond_3

    invoke-virtual {v6}, Lcom/android/server/wm/WindowState;->isVisibleByPolicy()Z

    move-result v4

    if-nez v4, :cond_1

    goto :goto_1

    .line 5642
    :cond_1
    invoke-virtual {v6}, Lcom/android/server/wm/WindowState;->hasDrawn()Z

    move-result v4

    if-eqz v4, :cond_5

    .line 5644
    sget-boolean v4, Lcom/android/server/wm/ProtoLogCache;->WM_DEBUG_SCREEN_ON_enabled:Z

    if-eqz v4, :cond_2

    invoke-static {v6}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v4

    .local v4, "protoLogParam0":Ljava/lang/String;
    sget-object v5, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_SCREEN_ON:Lcom/android/internal/protolog/ProtoLogGroup;

    const v7, 0x538c41d8

    new-array v8, v3, [Ljava/lang/Object;

    const/4 v9, 0x0

    aput-object v4, v8, v9

    const/4 v10, 0x0

    invoke-static {v5, v7, v9, v10, v8}, Lcom/android/internal/protolog/ProtoLogImpl;->d(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 5645
    .end local v4    # "protoLogParam0":Ljava/lang/String;
    :cond_2
    iget-object v4, v1, Lcom/android/server/wm/WindowContainer;->mWaitingForDrawn:Ljava/util/ArrayList;

    invoke-virtual {v4, v6}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    goto :goto_2

    .line 5640
    :cond_3
    :goto_1
    sget-boolean v4, Lcom/android/server/wm/ProtoLogCache;->WM_DEBUG_SCREEN_ON_enabled:Z

    if-eqz v4, :cond_4

    invoke-static {v6}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v4

    .restart local v4    # "protoLogParam0":Ljava/lang/String;
    sget-object v5, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_SCREEN_ON:Lcom/android/internal/protolog/ProtoLogGroup;

    const v7, 0x1ba7fc29

    new-array v8, v3, [Ljava/lang/Object;

    const/4 v9, 0x0

    aput-object v4, v8, v9

    const/4 v10, 0x0

    invoke-static {v5, v7, v9, v10, v8}, Lcom/android/internal/protolog/ProtoLogImpl;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 5641
    .end local v4    # "protoLogParam0":Ljava/lang/String;
    :cond_4
    iget-object v4, v1, Lcom/android/server/wm/WindowContainer;->mWaitingForDrawn:Ljava/util/ArrayList;

    invoke-virtual {v4, v6}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 5632
    .end local v6    # "win":Lcom/android/server/wm/WindowState;
    :cond_5
    :goto_2
    add-int/lit8 v2, v2, -0x1

    goto/16 :goto_0

    .line 5648
    .end local v2    # "j":I
    :cond_6
    iget-object v2, v1, Lcom/android/server/wm/WindowContainer;->mWaitingForDrawn:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->isEmpty()Z

    move-result v2

    if-eqz v2, :cond_8

    .line 5649
    sget-boolean v2, Lcom/android/server/wm/ProtoLogCache;->WM_DEBUG_SCREEN_ON_enabled:Z

    if-eqz v2, :cond_7

    sget-object v2, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_SCREEN_ON:Lcom/android/internal/protolog/ProtoLogGroup;

    const v3, 0x27a70260

    const/4 v4, 0x0

    move-object v5, v4

    check-cast v5, [Ljava/lang/Object;

    const/4 v6, 0x0

    invoke-static {v2, v3, v6, v4, v5}, Lcom/android/internal/protolog/ProtoLogImpl;->d(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 5650
    :cond_7
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v3, 0x18

    invoke-virtual {v2, v3, v1}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(ILjava/lang/Object;)V

    .line 5651
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v3, 0x21

    invoke-virtual {v2, v3, v1}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    move-result-object v3

    invoke-virtual {v2, v3}, Lcom/android/server/wm/WindowManagerService$H;->sendMessage(Landroid/os/Message;)Z

    .line 5653
    :cond_8
    return-void
.end method

.method public synthetic lambda$displayReady$6$WindowManagerService(Lcom/android/server/wm/DisplayContent;)V
    .locals 1
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;

    .line 4835
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mMaxUiWidth:I

    invoke-virtual {p1, v0}, Lcom/android/server/wm/DisplayContent;->setMaxUiWidth(I)V

    return-void
.end method

.method public synthetic lambda$new$0$WindowManagerService()V
    .locals 1

    .line 723
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayRotationController:Landroid/view/IDisplayWindowRotationController;

    return-void
.end method

.method public lockDeviceNow()V
    .locals 1

    .line 3381
    const/4 v0, 0x0

    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->lockNow(Landroid/os/Bundle;)V

    .line 3382
    return-void
.end method

.method public lockNow(Landroid/os/Bundle;)V
    .locals 1
    .param p1, "options"    # Landroid/os/Bundle;

    .line 6079
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    invoke-interface {v0, p1}, Lcom/android/server/policy/WindowManagerPolicy;->lockNow(Landroid/os/Bundle;)V

    .line 6080
    return-void
.end method

.method makeSurfaceBuilder(Landroid/view/SurfaceSession;)Landroid/view/SurfaceControl$Builder;
    .locals 1
    .param p1, "s"    # Landroid/view/SurfaceSession;

    .line 8011
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mSurfaceControlFactory:Ljava/util/function/Function;

    invoke-interface {v0, p1}, Ljava/util/function/Function;->apply(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/view/SurfaceControl$Builder;

    return-object v0
.end method

.method makeWindowFreezingScreenIfNeededLocked(Lcom/android/server/wm/WindowState;)V
    .locals 7
    .param p1, "w"    # Lcom/android/server/wm/WindowState;

    .line 5614
    iget-object v0, p1, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    invoke-virtual {v0}, Lcom/android/server/wm/WindowToken;->okToDisplay()Z

    move-result v0

    if-nez v0, :cond_1

    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsFreezingScreen:I

    const/4 v1, 0x2

    if-eq v0, v1, :cond_1

    .line 5615
    sget-boolean v0, Lcom/android/server/wm/ProtoLogCache;->WM_DEBUG_ORIENTATION_enabled:Z

    const/4 v1, 0x1

    if-eqz v0, :cond_0

    invoke-static {p1}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v0

    .local v0, "protoLogParam0":Ljava/lang/String;
    sget-object v2, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_ORIENTATION:Lcom/android/internal/protolog/ProtoLogGroup;

    const v3, -0x614835ed

    const/4 v4, 0x0

    new-array v5, v1, [Ljava/lang/Object;

    const/4 v6, 0x0

    aput-object v0, v5, v6

    invoke-static {v2, v3, v6, v4, v5}, Lcom/android/internal/protolog/ProtoLogImpl;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 5616
    .end local v0    # "protoLogParam0":Ljava/lang/String;
    :cond_0
    invoke-virtual {p1, v1}, Lcom/android/server/wm/WindowState;->setOrientationChanging(Z)V

    .line 5617
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsFreezingScreen:I

    if-nez v0, :cond_1

    .line 5618
    iput v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsFreezingScreen:I

    .line 5621
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v1, 0xb

    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v2

    const-wide/16 v3, 0x7d0

    invoke-virtual {v0, v1, v2, v3, v4}, Lcom/android/server/wm/WindowManagerService$H;->sendNewMessageDelayed(ILjava/lang/Object;J)V

    .line 5625
    :cond_1
    return-void
.end method

.method public mirrorDisplay(ILandroid/view/SurfaceControl;)Z
    .locals 5
    .param p1, "displayId"    # I
    .param p2, "outSurfaceControl"    # Landroid/view/SurfaceControl;

    .line 8381
    const-string v0, "android.permission.READ_FRAME_BUFFER"

    const-string v1, "mirrorDisplay()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 8386
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 8387
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 8388
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v1, :cond_0

    .line 8389
    const-string v2, "WindowManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Invalid displayId "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v4, " for mirrorDisplay"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 8390
    const/4 v2, 0x0

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v2

    .line 8393
    :cond_0
    :try_start_1
    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->getWindowingLayer()Landroid/view/SurfaceControl;

    move-result-object v2

    move-object v1, v2

    .line 8394
    .local v1, "displaySc":Landroid/view/SurfaceControl;
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 8396
    invoke-static {v1}, Landroid/view/SurfaceControl;->mirrorSurface(Landroid/view/SurfaceControl;)Landroid/view/SurfaceControl;

    move-result-object v0

    .line 8397
    .local v0, "mirror":Landroid/view/SurfaceControl;
    const-string v2, "WMS.mirrorDisplay"

    invoke-virtual {p2, v0, v2}, Landroid/view/SurfaceControl;->copyFrom(Landroid/view/SurfaceControl;Ljava/lang/String;)V

    .line 8399
    const/4 v2, 0x1

    return v2

    .line 8394
    .end local v0    # "mirror":Landroid/view/SurfaceControl;
    .end local v1    # "displaySc":Landroid/view/SurfaceControl;
    :catchall_0
    move-exception v1

    :try_start_2
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1

    .line 8382
    :cond_1
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires READ_FRAME_BUFFER permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public modifyDisplayWindowInsets(ILandroid/view/InsetsState;)V
    .locals 6
    .param p1, "displayId"    # I
    .param p2, "state"    # Landroid/view/InsetsState;

    .line 4157
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.MANAGE_APP_TOKENS"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_2

    .line 4161
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 4163
    .local v0, "origId":J
    :try_start_0
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 4164
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v3, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    .line 4165
    .local v3, "dc":Lcom/android/server/wm/DisplayContent;
    if-eqz v3, :cond_1

    iget-object v4, v3, Lcom/android/server/wm/DisplayContent;->mRemoteInsetsControlTarget:Lcom/android/server/wm/DisplayContent$RemoteInsetsControlTarget;

    if-nez v4, :cond_0

    goto :goto_0

    .line 4168
    :cond_0
    iget-object v4, v3, Lcom/android/server/wm/DisplayContent;->mRemoteInsetsControlTarget:Lcom/android/server/wm/DisplayContent$RemoteInsetsControlTarget;

    invoke-virtual {v4, p2}, Lcom/android/server/wm/DisplayContent$RemoteInsetsControlTarget;->updateRequestedVisibility(Landroid/view/InsetsState;)V

    .line 4169
    invoke-virtual {v3}, Lcom/android/server/wm/DisplayContent;->getInsetsStateController()Lcom/android/server/wm/InsetsStateController;

    move-result-object v4

    iget-object v5, v3, Lcom/android/server/wm/DisplayContent;->mRemoteInsetsControlTarget:Lcom/android/server/wm/DisplayContent$RemoteInsetsControlTarget;

    invoke-virtual {v4, v5}, Lcom/android/server/wm/InsetsStateController;->onInsetsModified(Lcom/android/server/wm/InsetsControlTarget;)V

    .line 4170
    .end local v3    # "dc":Lcom/android/server/wm/DisplayContent;
    monitor-exit v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 4172
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4173
    nop

    .line 4174
    return-void

    .line 4166
    .restart local v3    # "dc":Lcom/android/server/wm/DisplayContent;
    :cond_1
    :goto_0
    :try_start_3
    monitor-exit v2
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 4172
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4166
    return-void

    .line 4170
    .end local v3    # "dc":Lcom/android/server/wm/DisplayContent;
    :catchall_0
    move-exception v3

    :try_start_4
    monitor-exit v2
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    :try_start_5
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .end local v0    # "origId":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "displayId":I
    .end local p2    # "state":Landroid/view/InsetsState;
    throw v3
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    .line 4172
    .restart local v0    # "origId":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "displayId":I
    .restart local p2    # "state":Landroid/view/InsetsState;
    :catchall_1
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4173
    throw v2

    .line 4159
    .end local v0    # "origId":J
    :cond_2
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Must hold permission android.permission.MANAGE_APP_TOKENS"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public monitor()V
    .locals 2

    .line 6660
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 6661
    return-void

    .line 6660
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public moveDisplayToTop(I)V
    .locals 5
    .param p1, "displayId"    # I

    .line 3053
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 3054
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 3055
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    const/4 v2, 0x1

    if-eqz v1, :cond_0

    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v3}, Lcom/android/server/wm/RootWindowContainer;->getTopChild()Lcom/android/server/wm/WindowContainer;

    move-result-object v3

    if-eq v3, v1, :cond_0

    .line 3056
    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->getParent()Lcom/android/server/wm/WindowContainer;

    move-result-object v3

    const v4, 0x7fffffff

    invoke-virtual {v3, v4, v1, v2}, Lcom/android/server/wm/WindowContainer;->positionChildAt(ILcom/android/server/wm/WindowContainer;Z)V

    .line 3059
    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_0
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 3060
    invoke-virtual {p0, v2}, Lcom/android/server/wm/WindowManagerService;->syncInputTransactions(Z)V

    .line 3061
    return-void

    .line 3059
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public moveWindowTokenToDisplay(Landroid/os/IBinder;I)V
    .locals 12
    .param p1, "binder"    # Landroid/os/IBinder;
    .param p2, "displayId"    # I

    .line 2850
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 2851
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p2}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContentOrCreate(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 2852
    .local v1, "dc":Lcom/android/server/wm/DisplayContent;
    const/4 v2, 0x1

    const/4 v3, 0x0

    if-nez v1, :cond_1

    .line 2853
    sget-boolean v4, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v4, :cond_0

    invoke-static {p1}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v4

    .local v4, "protoLogParam0":Ljava/lang/String;
    int-to-long v5, p2

    .local v5, "protoLogParam1":J
    sget-object v7, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const v8, 0x7ad80782

    const/4 v9, 0x4

    const-string v10, "moveWindowTokenToDisplay: Attempted to move token: %s to non-exiting displayId=%d"

    const/4 v11, 0x2

    new-array v11, v11, [Ljava/lang/Object;

    aput-object v4, v11, v3

    invoke-static {v5, v6}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v3

    aput-object v3, v11, v2

    invoke-static {v7, v8, v9, v10, v11}, Lcom/android/internal/protolog/ProtoLogImpl;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 2855
    .end local v4    # "protoLogParam0":Ljava/lang/String;
    .end local v5    # "protoLogParam1":J
    :cond_0
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 2857
    :cond_1
    :try_start_1
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v4, p1}, Lcom/android/server/wm/RootWindowContainer;->getWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/WindowToken;

    move-result-object v4

    .line 2858
    .local v4, "token":Lcom/android/server/wm/WindowToken;
    if-nez v4, :cond_3

    .line 2859
    sget-boolean v5, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v5, :cond_2

    invoke-static {p1}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v5

    .local v5, "protoLogParam0":Ljava/lang/String;
    sget-object v6, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const v7, 0x3d96848d

    const-string v8, "moveWindowTokenToDisplay: Attempted to move non-existing token: %s"

    new-array v2, v2, [Ljava/lang/Object;

    aput-object v5, v2, v3

    invoke-static {v6, v7, v3, v8, v2}, Lcom/android/internal/protolog/ProtoLogImpl;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 2862
    .end local v5    # "protoLogParam0":Ljava/lang/String;
    :cond_2
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 2864
    :cond_3
    :try_start_2
    invoke-virtual {v4}, Lcom/android/server/wm/WindowToken;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v5

    if-ne v5, v1, :cond_5

    .line 2865
    sget-boolean v5, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v5, :cond_4

    invoke-static {p1}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v5

    .restart local v5    # "protoLogParam0":Ljava/lang/String;
    sget-object v6, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const v7, 0x2e9450fe

    const-string v8, "moveWindowTokenToDisplay: Cannot move to the original display for token: %s"

    new-array v2, v2, [Ljava/lang/Object;

    aput-object v5, v2, v3

    invoke-static {v6, v7, v3, v8, v2}, Lcom/android/internal/protolog/ProtoLogImpl;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 2868
    .end local v5    # "protoLogParam0":Ljava/lang/String;
    :cond_4
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 2870
    :cond_5
    :try_start_3
    invoke-virtual {v1, v4}, Lcom/android/server/wm/DisplayContent;->reParentWindowToken(Lcom/android/server/wm/WindowToken;)V

    .line 2871
    .end local v1    # "dc":Lcom/android/server/wm/DisplayContent;
    .end local v4    # "token":Lcom/android/server/wm/WindowToken;
    monitor-exit v0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 2872
    return-void

    .line 2871
    :catchall_0
    move-exception v1

    :try_start_4
    monitor-exit v0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method notifyHardKeyboardStatusChange()V
    .locals 3

    .line 4733
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 4734
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mHardKeyboardStatusChangeListener:Lcom/android/server/wm/WindowManagerInternal$OnHardKeyboardStatusChangeListener;

    .line 4735
    .local v1, "listener":Lcom/android/server/wm/WindowManagerInternal$OnHardKeyboardStatusChangeListener;
    iget-boolean v2, p0, Lcom/android/server/wm/WindowManagerService;->mHardKeyboardAvailable:Z

    .line 4736
    .local v2, "available":Z
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 4737
    if-eqz v1, :cond_0

    .line 4738
    invoke-interface {v1, v2}, Lcom/android/server/wm/WindowManagerInternal$OnHardKeyboardStatusChangeListener;->onHardKeyboardStatusChange(Z)V

    .line 4740
    :cond_0
    return-void

    .line 4736
    .end local v1    # "listener":Lcom/android/server/wm/WindowManagerInternal$OnHardKeyboardStatusChangeListener;
    .end local v2    # "available":Z
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method notifyKeyguardFlagsChanged(Ljava/lang/Runnable;I)V
    .locals 1
    .param p1, "callback"    # Ljava/lang/Runnable;
    .param p2, "displayId"    # I

    .line 3069
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/wm/ActivityTaskManagerInternal;->notifyKeyguardFlagsChanged(Ljava/lang/Runnable;I)V

    .line 3070
    return-void
.end method

.method public notifyKeyguardTrustedChanged()V
    .locals 1

    .line 3016
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-virtual {v0}, Lcom/android/server/wm/ActivityTaskManagerInternal;->notifyKeyguardTrustedChanged()V

    .line 3017
    return-void
.end method

.method public notifyShowingDreamChanged()V
    .locals 2

    .line 3011
    const/4 v0, 0x0

    const/4 v1, 0x0

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->notifyKeyguardFlagsChanged(Ljava/lang/Runnable;I)V

    .line 3012
    return-void
.end method

.method onAnimationFinished()V
    .locals 2

    .line 8127
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 8128
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    invoke-virtual {v1}, Ljava/lang/Object;->notifyAll()V

    .line 8129
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 8130
    return-void

    .line 8129
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public onInitReady()V
    .locals 1

    .line 1418
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->initPolicy()V

    .line 1421
    invoke-static {}, Lcom/android/server/Watchdog;->getInstance()Lcom/android/server/Watchdog;

    move-result-object v0

    invoke-virtual {v0, p0}, Lcom/android/server/Watchdog;->addMonitor(Lcom/android/server/Watchdog$Monitor;)V

    .line 1422
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->createWatermark()V

    .line 1423
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->showEmulatorDisplayOverlayIfNeeded()V

    .line 1424
    return-void
.end method

.method public onKeyguardShowingAndNotOccludedChanged()V
    .locals 2

    .line 3031
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v1, 0x3d

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    .line 3032
    return-void
.end method

.method onLockTaskStateChanged(I)V
    .locals 4
    .param p1, "lockTaskState"    # I

    .line 8025
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 8026
    sget-object v1, Lcom/android/server/wm/WindowManagerService$$ExternalSyntheticLambda7;->INSTANCE:Lcom/android/server/wm/WindowManagerService$$ExternalSyntheticLambda7;

    .line 8027
    invoke-static {}, Lcom/android/internal/util/function/pooled/PooledLambda;->__()Lcom/android/internal/util/function/pooled/ArgumentPlaceholder;

    move-result-object v2

    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v3

    .line 8026
    invoke-static {v1, v2, v3}, Lcom/android/internal/util/function/pooled/PooledLambda;->obtainConsumer(Ljava/util/function/BiConsumer;Lcom/android/internal/util/function/pooled/ArgumentPlaceholder;Ljava/lang/Object;)Lcom/android/internal/util/function/pooled/PooledConsumer;

    move-result-object v1

    .line 8028
    .local v1, "c":Lcom/android/internal/util/function/pooled/PooledConsumer;
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v2, v1}, Lcom/android/server/wm/RootWindowContainer;->forAllDisplayPolicies(Ljava/util/function/Consumer;)V

    .line 8029
    invoke-interface {v1}, Lcom/android/internal/util/function/pooled/PooledConsumer;->recycle()V

    .line 8030
    .end local v1    # "c":Lcom/android/internal/util/function/pooled/PooledConsumer;
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 8031
    return-void

    .line 8030
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public onOverlayChanged()V
    .locals 3

    .line 6671
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 6672
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    sget-object v2, Lcom/android/server/wm/WindowManagerService$$ExternalSyntheticLambda17;->INSTANCE:Lcom/android/server/wm/WindowManagerService$$ExternalSyntheticLambda17;

    invoke-virtual {v1, v2}, Lcom/android/server/wm/RootWindowContainer;->forAllDisplays(Ljava/util/function/Consumer;)V

    .line 6676
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->requestTraversal()V

    .line 6677
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 6678
    return-void

    .line 6677
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public onPowerKeyDown(Z)V
    .locals 3
    .param p1, "isScreenOn"    # Z

    .line 3036
    sget-object v0, Lcom/android/server/wm/WindowManagerService$$ExternalSyntheticLambda6;->INSTANCE:Lcom/android/server/wm/WindowManagerService$$ExternalSyntheticLambda6;

    .line 3037
    invoke-static {}, Lcom/android/internal/util/function/pooled/PooledLambda;->__()Lcom/android/internal/util/function/pooled/ArgumentPlaceholder;

    move-result-object v1

    invoke-static {p1}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v2

    .line 3036
    invoke-static {v0, v1, v2}, Lcom/android/internal/util/function/pooled/PooledLambda;->obtainConsumer(Ljava/util/function/BiConsumer;Lcom/android/internal/util/function/pooled/ArgumentPlaceholder;Ljava/lang/Object;)Lcom/android/internal/util/function/pooled/PooledConsumer;

    move-result-object v0

    .line 3038
    .local v0, "c":Lcom/android/internal/util/function/pooled/PooledConsumer;
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, v0}, Lcom/android/server/wm/RootWindowContainer;->forAllDisplayPolicies(Ljava/util/function/Consumer;)V

    .line 3039
    invoke-interface {v0}, Lcom/android/internal/util/function/pooled/PooledConsumer;->recycle()V

    .line 3040
    return-void
.end method

.method public onRectangleOnScreenRequested(Landroid/os/IBinder;Landroid/graphics/Rect;)V
    .locals 4
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "rectangle"    # Landroid/graphics/Rect;

    .line 2178
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 2179
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    if-eqz v1, :cond_0

    .line 2180
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    invoke-virtual {v1, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/WindowState;

    .line 2181
    .local v1, "window":Lcom/android/server/wm/WindowState;
    if-eqz v1, :cond_0

    .line 2182
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    .line 2183
    invoke-virtual {v1}, Lcom/android/server/wm/WindowState;->getDisplayId()I

    move-result v3

    .line 2182
    invoke-virtual {v2, v3, p2}, Lcom/android/server/wm/AccessibilityController;->onRectangleOnScreenRequested(ILandroid/graphics/Rect;)V

    .line 2186
    .end local v1    # "window":Lcom/android/server/wm/WindowState;
    :cond_0
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 2187
    return-void

    .line 2186
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public onShellCommand(Ljava/io/FileDescriptor;Ljava/io/FileDescriptor;Ljava/io/FileDescriptor;[Ljava/lang/String;Landroid/os/ShellCallback;Landroid/os/ResultReceiver;)V
    .locals 8
    .param p1, "in"    # Ljava/io/FileDescriptor;
    .param p2, "out"    # Ljava/io/FileDescriptor;
    .param p3, "err"    # Ljava/io/FileDescriptor;
    .param p4, "args"    # [Ljava/lang/String;
    .param p5, "callback"    # Landroid/os/ShellCallback;
    .param p6, "result"    # Landroid/os/ResultReceiver;

    .line 1201
    new-instance v0, Lcom/android/server/wm/WindowManagerShellCommand;

    invoke-direct {v0, p0}, Lcom/android/server/wm/WindowManagerShellCommand;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    move-object v1, p0

    move-object v2, p1

    move-object v3, p2

    move-object v4, p3

    move-object v5, p4

    move-object v6, p5

    move-object v7, p6

    invoke-virtual/range {v0 .. v7}, Lcom/android/server/wm/WindowManagerShellCommand;->exec(Landroid/os/Binder;Ljava/io/FileDescriptor;Ljava/io/FileDescriptor;Ljava/io/FileDescriptor;[Ljava/lang/String;Landroid/os/ShellCallback;Landroid/os/ResultReceiver;)I

    .line 1202
    return-void
.end method

.method public onSystemUiStarted()V
    .locals 1

    .line 3532
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    invoke-interface {v0}, Lcom/android/server/policy/WindowManagerPolicy;->onSystemUiStarted()V

    .line 3533
    return-void
.end method

.method public onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
    .locals 7
    .param p1, "code"    # I
    .param p2, "data"    # Landroid/os/Parcel;
    .param p3, "reply"    # Landroid/os/Parcel;
    .param p4, "flags"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .line 1434
    :try_start_0
    invoke-super {p0, p1, p2, p3, p4}, Landroid/view/IWindowManager$Stub;->onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z

    move-result v0
    :try_end_0
    .catch Ljava/lang/RuntimeException; {:try_start_0 .. :try_end_0} :catch_0

    return v0

    .line 1435
    :catch_0
    move-exception v0

    .line 1438
    .local v0, "e":Ljava/lang/RuntimeException;
    instance-of v1, v0, Ljava/lang/SecurityException;

    if-nez v1, :cond_0

    .line 1439
    sget-boolean v1, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v1, :cond_0

    invoke-static {v0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v1

    .local v1, "protoLogParam0":Ljava/lang/String;
    sget-object v2, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const v3, 0x1626ce5b

    const/4 v4, 0x1

    new-array v4, v4, [Ljava/lang/Object;

    const/4 v5, 0x0

    aput-object v1, v4, v5

    const-string v6, "Window Manager Crash %s"

    invoke-static {v2, v3, v5, v6, v4}, Lcom/android/internal/protolog/ProtoLogImpl;->wtf(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 1441
    .end local v1    # "protoLogParam0":Ljava/lang/String;
    :cond_0
    throw v0
.end method

.method public onUserSwitched()V
    .locals 3

    .line 3044
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mSettingsObserver:Lcom/android/server/wm/WindowManagerService$SettingsObserver;

    const/4 v1, 0x1

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService$SettingsObserver;->updateSystemUiSettings(Z)V

    .line 3045
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 3047
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    sget-object v2, Lcom/android/server/wm/WindowManagerService$$ExternalSyntheticLambda18;->INSTANCE:Lcom/android/server/wm/WindowManagerService$$ExternalSyntheticLambda18;

    invoke-virtual {v1, v2}, Lcom/android/server/wm/RootWindowContainer;->forAllDisplayPolicies(Ljava/util/function/Consumer;)V

    .line 3048
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 3049
    return-void

    .line 3048
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public openSession(Landroid/view/IWindowSessionCallback;)Landroid/view/IWindowSession;
    .locals 1
    .param p1, "callback"    # Landroid/view/IWindowSessionCallback;

    .line 5319
    new-instance v0, Lcom/android/server/wm/Session;

    invoke-direct {v0, p0, p1}, Lcom/android/server/wm/Session;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/view/IWindowSessionCallback;)V

    return-object v0
.end method

.method openSurfaceTransaction()V
    .locals 3

    .line 1092
    const-wide/16 v0, 0x20

    :try_start_0
    const-string v2, "openSurfaceTransaction"

    invoke-static {v0, v1, v2}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 1093
    invoke-static {}, Landroid/view/SurfaceControl;->openTransaction()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 1095
    invoke-static {v0, v1}, Landroid/os/Trace;->traceEnd(J)V

    .line 1096
    nop

    .line 1097
    return-void

    .line 1095
    :catchall_0
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Trace;->traceEnd(J)V

    .line 1096
    throw v2
.end method

.method public outOfMemoryWindow(Lcom/android/server/wm/Session;Landroid/view/IWindow;)Z
    .locals 8
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;

    .line 2625
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 2628
    .local v0, "origId":J
    :try_start_0
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 2629
    const/4 v3, 0x0

    invoke-virtual {p0, p1, p2, v3}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;

    move-result-object v4

    .line 2630
    .local v4, "win":Lcom/android/server/wm/WindowState;
    if-nez v4, :cond_0

    .line 2631
    monitor-exit v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 2636
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 2631
    return v3

    .line 2633
    :cond_0
    :try_start_2
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    iget-object v6, v4, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    const-string v7, "from-client"

    invoke-virtual {v5, v6, v7, v3}, Lcom/android/server/wm/RootWindowContainer;->reclaimSomeSurfaceMemory(Lcom/android/server/wm/WindowStateAnimator;Ljava/lang/String;Z)Z

    move-result v3

    monitor-exit v2
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 2636
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 2633
    return v3

    .line 2634
    .end local v4    # "win":Lcom/android/server/wm/WindowState;
    :catchall_0
    move-exception v3

    :try_start_3
    monitor-exit v2
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .end local v0    # "origId":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "session":Lcom/android/server/wm/Session;
    .end local p2    # "client":Landroid/view/IWindow;
    throw v3
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 2636
    .restart local v0    # "origId":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "session":Lcom/android/server/wm/Session;
    .restart local p2    # "client":Landroid/view/IWindow;
    :catchall_1
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 2637
    throw v2
.end method

.method public overridePendingAppTransitionMultiThumbFuture(Landroid/view/IAppTransitionAnimationSpecsFuture;Landroid/os/IRemoteCallback;ZI)V
    .locals 5
    .param p1, "specsFuture"    # Landroid/view/IAppTransitionAnimationSpecsFuture;
    .param p2, "callback"    # Landroid/os/IRemoteCallback;
    .param p3, "scaleUp"    # Z
    .param p4, "displayId"    # I

    .line 2896
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 2897
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p4}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 2898
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v1, :cond_0

    .line 2899
    const-string v2, "WindowManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Attempted to call overridePendingAppTransitionMultiThumbFuture for the display "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, p4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v4, " that does not exist."

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 2901
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 2903
    :cond_0
    :try_start_1
    iget-object v2, v1, Lcom/android/server/wm/DisplayContent;->mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v2, p1, p2, p3}, Lcom/android/server/wm/AppTransition;->overridePendingAppTransitionMultiThumbFuture(Landroid/view/IAppTransitionAnimationSpecsFuture;Landroid/os/IRemoteCallback;Z)V

    .line 2905
    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 2906
    return-void

    .line 2905
    :catchall_0
    move-exception v1

    :try_start_2
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public overridePendingAppTransitionRemote(Landroid/view/RemoteAnimationAdapter;I)V
    .locals 5
    .param p1, "remoteAnimationAdapter"    # Landroid/view/RemoteAnimationAdapter;
    .param p2, "displayId"    # I

    .line 2911
    const-string v0, "android.permission.CONTROL_REMOTE_APP_TRANSITION_ANIMATIONS"

    const-string v1, "overridePendingAppTransitionRemote()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 2916
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 2917
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p2}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 2918
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v1, :cond_0

    .line 2919
    const-string v2, "WindowManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Attempted to call overridePendingAppTransitionRemote for the display "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v4, " that does not exist."

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 2921
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 2923
    :cond_0
    :try_start_1
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v3

    invoke-virtual {p1, v2, v3}, Landroid/view/RemoteAnimationAdapter;->setCallingPidUid(II)V

    .line 2924
    iget-object v2, v1, Lcom/android/server/wm/DisplayContent;->mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v2, p1}, Lcom/android/server/wm/AppTransition;->overridePendingAppTransitionRemote(Landroid/view/RemoteAnimationAdapter;)V

    .line 2926
    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 2927
    return-void

    .line 2926
    :catchall_0
    move-exception v1

    :try_start_2
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1

    .line 2913
    :cond_1
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires CONTROL_REMOTE_APP_TRANSITION_ANIMATIONS permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public performBootTimeout()V
    .locals 6

    .line 3518
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 3519
    iget-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayEnabled:Z

    if-eqz v1, :cond_0

    .line 3520
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 3522
    :cond_0
    :try_start_1
    sget-boolean v1, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v1, :cond_1

    sget-object v1, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const v2, 0x3bb7db44

    const/4 v3, 0x0

    const-string v4, "***** BOOT TIMEOUT: forcing display enabled"

    const/4 v5, 0x0

    check-cast v5, [Ljava/lang/Object;

    invoke-static {v1, v2, v3, v4, v5}, Lcom/android/internal/protolog/ProtoLogImpl;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 3523
    :cond_1
    const/4 v1, 0x1

    iput-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mForceDisplayEnabled:Z

    .line 3524
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 3525
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->performEnableScreen()V

    .line 3526
    return-void

    .line 3524
    :catchall_0
    move-exception v1

    :try_start_2
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public pokeDrawLock(Lcom/android/server/wm/Session;Landroid/os/IBinder;)V
    .locals 4
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "token"    # Landroid/os/IBinder;

    .line 2197
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 2198
    const/4 v1, 0x0

    invoke-virtual {p0, p1, p2, v1}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/os/IBinder;Z)Lcom/android/server/wm/WindowState;

    move-result-object v1

    .line 2199
    .local v1, "window":Lcom/android/server/wm/WindowState;
    if-eqz v1, :cond_0

    .line 2200
    iget-wide v2, p0, Lcom/android/server/wm/WindowManagerService;->mDrawLockTimeoutMillis:J

    invoke-virtual {v1, v2, v3}, Lcom/android/server/wm/WindowState;->pokeDrawLockLw(J)V

    .line 2202
    .end local v1    # "window":Lcom/android/server/wm/WindowState;
    :cond_0
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 2203
    return-void

    .line 2202
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method postWindowRemoveCleanupLocked(Lcom/android/server/wm/WindowState;)V
    .locals 12
    .param p1, "win"    # Lcom/android/server/wm/WindowState;

    .line 2045
    sget-boolean v0, Lcom/android/server/wm/ProtoLogCache;->WM_DEBUG_ADD_REMOVE_enabled:Z

    const/4 v1, 0x0

    const/4 v2, 0x1

    const/4 v3, 0x0

    if-eqz v0, :cond_0

    invoke-static {p1}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v0

    .local v0, "protoLogParam0":Ljava/lang/String;
    sget-object v4, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_ADD_REMOVE:Lcom/android/internal/protolog/ProtoLogGroup;

    const v5, -0x252230fa

    new-array v6, v2, [Ljava/lang/Object;

    aput-object v0, v6, v3

    invoke-static {v4, v5, v3, v1, v6}, Lcom/android/internal/protolog/ProtoLogImpl;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 2046
    .end local v0    # "protoLogParam0":Ljava/lang/String;
    :cond_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    iget-object v4, p1, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    invoke-interface {v4}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    move-result-object v4

    invoke-virtual {v0, v4}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 2048
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 2049
    .local v0, "dc":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getDisplayRotation()Lcom/android/server/wm/DisplayRotation;

    move-result-object v4

    invoke-virtual {v4, p1, v3}, Lcom/android/server/wm/DisplayRotation;->markForSeamlessRotation(Lcom/android/server/wm/WindowState;Z)V

    .line 2051
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->resetAppOpsState()V

    .line 2053
    iget-object v4, v0, Lcom/android/server/wm/DisplayContent;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    if-nez v4, :cond_1

    .line 2054
    iget-object v4, v0, Lcom/android/server/wm/DisplayContent;->mWinRemovedSinceNullFocus:Ljava/util/ArrayList;

    invoke-virtual {v4, p1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 2056
    :cond_1
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mEmbeddedWindowController:Lcom/android/server/wm/EmbeddedWindowController;

    invoke-virtual {v4, p1}, Lcom/android/server/wm/EmbeddedWindowController;->onWindowRemoved(Lcom/android/server/wm/WindowState;)V

    .line 2057
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mPendingRemove:Ljava/util/ArrayList;

    invoke-virtual {v4, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 2058
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mResizingWindows:Ljava/util/ArrayList;

    invoke-virtual {v4, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 2059
    invoke-virtual {p0, p1, v3}, Lcom/android/server/wm/WindowManagerService;->updateNonSystemOverlayWindowsVisibilityIfNeeded(Lcom/android/server/wm/WindowState;Z)V

    .line 2060
    iput-boolean v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    .line 2061
    sget-boolean v4, Lcom/android/server/wm/ProtoLogCache;->WM_DEBUG_WINDOW_MOVEMENT_enabled:Z

    if-eqz v4, :cond_2

    invoke-static {p1}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v4

    .local v4, "protoLogParam0":Ljava/lang/String;
    sget-object v5, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_WINDOW_MOVEMENT:Lcom/android/internal/protolog/ProtoLogGroup;

    const v6, -0xb8ce44d

    new-array v7, v2, [Ljava/lang/Object;

    aput-object v4, v7, v3

    invoke-static {v5, v6, v3, v1, v7}, Lcom/android/internal/protolog/ProtoLogImpl;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 2063
    .end local v4    # "protoLogParam0":Ljava/lang/String;
    :cond_2
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v4

    .line 2064
    .local v4, "displayContent":Lcom/android/server/wm/DisplayContent;
    iget-object v5, v4, Lcom/android/server/wm/DisplayContent;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    if-ne v5, p1, :cond_3

    .line 2065
    invoke-virtual {v4, v1}, Lcom/android/server/wm/DisplayContent;->setInputMethodWindowLocked(Lcom/android/server/wm/WindowState;)V

    .line 2068
    :cond_3
    iget-object v5, p1, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    .line 2069
    .local v5, "token":Lcom/android/server/wm/WindowToken;
    iget-object v6, p1, Lcom/android/server/wm/WindowState;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    .line 2070
    .local v6, "activity":Lcom/android/server/wm/ActivityRecord;
    sget-boolean v7, Lcom/android/server/wm/ProtoLogCache;->WM_DEBUG_ADD_REMOVE_enabled:Z

    if-eqz v7, :cond_4

    invoke-static {p1}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v7

    .local v7, "protoLogParam0":Ljava/lang/String;
    invoke-static {v5}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v8

    .local v8, "protoLogParam1":Ljava/lang/String;
    sget-object v9, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_ADD_REMOVE:Lcom/android/internal/protolog/ProtoLogGroup;

    const v10, -0x75080bd7

    const/4 v11, 0x2

    new-array v11, v11, [Ljava/lang/Object;

    aput-object v7, v11, v3

    aput-object v8, v11, v2

    invoke-static {v9, v10, v3, v1, v11}, Lcom/android/internal/protolog/ProtoLogImpl;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 2072
    .end local v7    # "protoLogParam0":Ljava/lang/String;
    .end local v8    # "protoLogParam1":Ljava/lang/String;
    :cond_4
    invoke-virtual {v5}, Lcom/android/server/wm/WindowToken;->isEmpty()Z

    move-result v1

    if-eqz v1, :cond_6

    .line 2073
    iget-boolean v1, v5, Lcom/android/server/wm/WindowToken;->mPersistOnEmpty:Z

    if-nez v1, :cond_5

    .line 2074
    invoke-virtual {v5}, Lcom/android/server/wm/WindowToken;->removeImmediately()V

    goto :goto_0

    .line 2075
    :cond_5
    if-eqz v6, :cond_6

    .line 2078
    iput-boolean v3, v6, Lcom/android/server/wm/ActivityRecord;->firstWindowDrawn:Z

    .line 2079
    invoke-virtual {v6}, Lcom/android/server/wm/ActivityRecord;->clearAllDrawn()V

    .line 2080
    invoke-virtual {v6}, Lcom/android/server/wm/ActivityRecord;->getRootTask()Lcom/android/server/wm/Task;

    move-result-object v1

    .line 2081
    .local v1, "rootTask":Lcom/android/server/wm/Task;
    if-eqz v1, :cond_6

    .line 2082
    iget-object v3, v1, Lcom/android/server/wm/Task;->mExitingActivities:Ljava/util/ArrayList;

    invoke-virtual {v3, v6}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 2087
    .end local v1    # "rootTask":Lcom/android/server/wm/Task;
    :cond_6
    :goto_0
    if-eqz v6, :cond_7

    .line 2088
    invoke-virtual {v6, p1}, Lcom/android/server/wm/ActivityRecord;->postWindowRemoveStartingWindowCleanup(Lcom/android/server/wm/WindowState;)V

    .line 2091
    :cond_7
    iget-object v1, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v1, v1, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v3, 0x7dd

    if-ne v1, v3, :cond_8

    .line 2092
    iget-object v1, v0, Lcom/android/server/wm/DisplayContent;->mWallpaperController:Lcom/android/server/wm/WallpaperController;

    invoke-virtual {v1}, Lcom/android/server/wm/WallpaperController;->clearLastWallpaperTimeoutTime()V

    .line 2093
    iget v1, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    or-int/lit8 v1, v1, 0x4

    iput v1, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    goto :goto_1

    .line 2094
    :cond_8
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->hasWallpaper()Z

    move-result v1

    if-eqz v1, :cond_9

    .line 2095
    iget v1, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    or-int/lit8 v1, v1, 0x4

    iput v1, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    .line 2098
    :cond_9
    :goto_1
    if-eqz v0, :cond_a

    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    invoke-virtual {v1}, Lcom/android/server/wm/WindowSurfacePlacer;->isInLayout()Z

    move-result v1

    if-nez v1, :cond_a

    .line 2099
    invoke-virtual {v0, v2}, Lcom/android/server/wm/DisplayContent;->assignWindowLayers(Z)V

    .line 2100
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    invoke-virtual {v1}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement()V

    .line 2101
    iget-object v1, p1, Lcom/android/server/wm/WindowState;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    if-eqz v1, :cond_a

    .line 2102
    iget-object v1, p1, Lcom/android/server/wm/WindowState;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    invoke-virtual {v1}, Lcom/android/server/wm/ActivityRecord;->updateReportedVisibilityLocked()V

    .line 2106
    :cond_a
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getInputMonitor()Lcom/android/server/wm/InputMonitor;

    move-result-object v1

    invoke-virtual {v1, v2}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    .line 2107
    return-void
.end method

.method prepareAppTransitionNone()V
    .locals 2

    .line 2886
    const-string v0, "android.permission.MANAGE_APP_TOKENS"

    const-string v1, "prepareAppTransition()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_0

    .line 2889
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    const/4 v1, 0x0

    invoke-virtual {v0, v1}, Lcom/android/server/wm/DisplayContent;->prepareAppTransition(I)V

    .line 2890
    return-void

    .line 2887
    :cond_0
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires MANAGE_APP_TOKENS permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public reboot(Z)V
    .locals 2
    .param p1, "confirm"    # Z

    .line 3419
    invoke-static {}, Landroid/app/ActivityThread;->currentActivityThread()Landroid/app/ActivityThread;

    move-result-object v0

    invoke-virtual {v0}, Landroid/app/ActivityThread;->getSystemUiContext()Landroid/app/ContextImpl;

    move-result-object v0

    const-string v1, "userrequested"

    invoke-static {v0, v1, p1}, Lcom/android/server/power/ShutdownThread;->reboot(Landroid/content/Context;Ljava/lang/String;Z)V

    .line 3421
    return-void
.end method

.method public rebootSafeMode(Z)V
    .locals 1
    .param p1, "confirm"    # Z

    .line 3427
    invoke-static {}, Landroid/app/ActivityThread;->currentActivityThread()Landroid/app/ActivityThread;

    move-result-object v0

    invoke-virtual {v0}, Landroid/app/ActivityThread;->getSystemUiContext()Landroid/app/ContextImpl;

    move-result-object v0

    invoke-static {v0, p1}, Lcom/android/server/power/ShutdownThread;->rebootSafeMode(Landroid/content/Context;Z)V

    .line 3429
    return-void
.end method

.method public reenableKeyguard(Landroid/os/IBinder;I)V
    .locals 8
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "userId"    # I

    .line 3139
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAmInternal:Landroid/app/ActivityManagerInternal;

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    const/4 v4, 0x0

    const/4 v5, 0x2

    const-string v6, "reenableKeyguard"

    const/4 v7, 0x0

    move v3, p2

    invoke-virtual/range {v0 .. v7}, Landroid/app/ActivityManagerInternal;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p2

    .line 3141
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.DISABLE_KEYGUARD"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_0

    .line 3145
    const-string v0, "token is null"

    invoke-static {p1, v0}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;

    .line 3146
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 3147
    .local v0, "callingUid":I
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v1

    .line 3149
    .local v1, "origIdentity":J
    :try_start_0
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mKeyguardDisableHandler:Lcom/android/server/wm/KeyguardDisableHandler;

    invoke-virtual {v3, p1, v0, p2}, Lcom/android/server/wm/KeyguardDisableHandler;->reenableKeyguard(Landroid/os/IBinder;II)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 3151
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3152
    nop

    .line 3153
    return-void

    .line 3151
    :catchall_0
    move-exception v3

    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3152
    throw v3

    .line 3143
    .end local v0    # "callingUid":I
    .end local v1    # "origIdentity":J
    :cond_0
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires DISABLE_KEYGUARD permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public refreshScreenCaptureDisabled(I)V
    .locals 3
    .param p1, "userId"    # I

    .line 2013
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 2014
    .local v0, "callingUid":I
    const/16 v1, 0x3e8

    if-ne v0, v1, :cond_0

    .line 2018
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v1

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 2020
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v2, p1}, Lcom/android/server/wm/RootWindowContainer;->setSecureSurfaceState(I)V

    .line 2021
    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 2022
    return-void

    .line 2021
    :catchall_0
    move-exception v2

    :try_start_1
    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v2

    .line 2015
    :cond_0
    new-instance v1, Ljava/lang/SecurityException;

    const-string v2, "Only system can call refreshScreenCaptureDisabled."

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1
.end method

.method registerAppFreezeListener(Lcom/android/server/wm/WindowManagerService$AppFreezeListener;)V
    .locals 1
    .param p1, "listener"    # Lcom/android/server/wm/WindowManagerService$AppFreezeListener;

    .line 7909
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppFreezeListeners:Ljava/util/ArrayList;

    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_0

    .line 7910
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppFreezeListeners:Ljava/util/ArrayList;

    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 7912
    :cond_0
    return-void
.end method

.method public registerCrossWindowBlurEnabledListener(Landroid/view/ICrossWindowBlurEnabledListener;)Z
    .locals 1
    .param p1, "listener"    # Landroid/view/ICrossWindowBlurEnabledListener;

    .line 5568
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mBlurController:Lcom/android/server/wm/BlurController;

    invoke-virtual {v0, p1}, Lcom/android/server/wm/BlurController;->registerCrossWindowBlurEnabledListener(Landroid/view/ICrossWindowBlurEnabledListener;)Z

    move-result v0

    return v0
.end method

.method public registerDisplayFoldListener(Landroid/view/IDisplayFoldListener;)V
    .locals 1
    .param p1, "listener"    # Landroid/view/IDisplayFoldListener;

    .line 4297
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    invoke-interface {v0, p1}, Lcom/android/server/policy/WindowManagerPolicy;->registerDisplayFoldListener(Landroid/view/IDisplayFoldListener;)V

    .line 4298
    return-void
.end method

.method public registerDisplayWindowListener(Landroid/view/IDisplayWindowListener;)V
    .locals 3
    .param p1, "listener"    # Landroid/view/IDisplayWindowListener;

    .line 4343
    const-string v0, "registerDisplayWindowListener"

    invoke-static {v0}, Lcom/android/server/wm/ActivityTaskManagerService;->enforceTaskPermission(Ljava/lang/String;)V

    .line 4344
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 4346
    .local v0, "ident":J
    :try_start_0
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayNotificationController:Lcom/android/server/wm/DisplayWindowListenerController;

    invoke-virtual {v2, p1}, Lcom/android/server/wm/DisplayWindowListenerController;->registerListener(Landroid/view/IDisplayWindowListener;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 4348
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4349
    nop

    .line 4350
    return-void

    .line 4348
    :catchall_0
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4349
    throw v2
.end method

.method public registerPinnedTaskListener(ILandroid/view/IPinnedTaskListener;)V
    .locals 3
    .param p1, "displayId"    # I
    .param p2, "listener"    # Landroid/view/IPinnedTaskListener;

    .line 6814
    const-string v0, "android.permission.REGISTER_WINDOW_MANAGER_LISTENERS"

    const-string v1, "registerPinnedTaskListener()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_0

    .line 6816
    return-void

    .line 6818
    :cond_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    iget-boolean v0, v0, Lcom/android/server/wm/ActivityTaskManagerService;->mSupportsPictureInPicture:Z

    if-nez v0, :cond_1

    .line 6819
    return-void

    .line 6821
    :cond_1
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 6822
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 6823
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->getPinnedTaskController()Lcom/android/server/wm/PinnedTaskController;

    move-result-object v2

    invoke-virtual {v2, p2}, Lcom/android/server/wm/PinnedTaskController;->registerPinnedTaskListener(Landroid/view/IPinnedTaskListener;)V

    .line 6824
    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 6825
    return-void

    .line 6824
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public registerPointerEventListener(Landroid/view/WindowManagerPolicyConstants$PointerEventListener;I)V
    .locals 2
    .param p1, "listener"    # Landroid/view/WindowManagerPolicyConstants$PointerEventListener;
    .param p2, "displayId"    # I

    .line 3343
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 3344
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p2}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 3345
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v1, :cond_0

    .line 3346
    invoke-virtual {v1, p1}, Lcom/android/server/wm/DisplayContent;->registerPointerEventListener(Landroid/view/WindowManagerPolicyConstants$PointerEventListener;)V

    .line 3348
    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_0
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 3349
    return-void

    .line 3348
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public registerShortcutKey(JLcom/android/internal/policy/IShortcutService;)V
    .locals 2
    .param p1, "shortcutCode"    # J
    .param p3, "shortcutKeyReceiver"    # Lcom/android/internal/policy/IShortcutService;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .line 7331
    const-string v0, "android.permission.REGISTER_WINDOW_MANAGER_LISTENERS"

    const-string v1, "registerShortcutKey"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_0

    .line 7335
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    invoke-interface {v0, p1, p2, p3}, Lcom/android/server/policy/WindowManagerPolicy;->registerShortcutKey(JLcom/android/internal/policy/IShortcutService;)V

    .line 7336
    return-void

    .line 7332
    :cond_0
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires REGISTER_WINDOW_MANAGER_LISTENERS permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public registerSystemGestureExclusionListener(Landroid/view/ISystemGestureExclusionListener;I)V
    .locals 5
    .param p1, "listener"    # Landroid/view/ISystemGestureExclusionListener;
    .param p2, "displayId"    # I

    .line 4262
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 4263
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p2}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 4264
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v1, :cond_0

    .line 4268
    invoke-virtual {v1, p1}, Lcom/android/server/wm/DisplayContent;->registerSystemGestureExclusionListener(Landroid/view/ISystemGestureExclusionListener;)V

    .line 4269
    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 4270
    return-void

    .line 4265
    .restart local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_0
    :try_start_1
    new-instance v2, Ljava/lang/IllegalArgumentException;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Trying to register visibility event for invalid display: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v2, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "listener":Landroid/view/ISystemGestureExclusionListener;
    .end local p2    # "displayId":I
    throw v2

    .line 4269
    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "listener":Landroid/view/ISystemGestureExclusionListener;
    .restart local p2    # "displayId":I
    :catchall_0
    move-exception v1

    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public registerWallpaperVisibilityListener(Landroid/view/IWallpaperVisibilityListener;I)Z
    .locals 5
    .param p1, "listener"    # Landroid/view/IWallpaperVisibilityListener;
    .param p2, "displayId"    # I

    .line 4239
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 4240
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p2}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 4241
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v1, :cond_0

    .line 4245
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperVisibilityListeners:Lcom/android/server/wm/WallpaperVisibilityListeners;

    invoke-virtual {v2, p1, p2}, Lcom/android/server/wm/WallpaperVisibilityListeners;->registerWallpaperVisibilityListener(Landroid/view/IWallpaperVisibilityListener;I)V

    .line 4246
    iget-object v2, v1, Lcom/android/server/wm/DisplayContent;->mWallpaperController:Lcom/android/server/wm/WallpaperController;

    invoke-virtual {v2}, Lcom/android/server/wm/WallpaperController;->isWallpaperVisible()Z

    move-result v2

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v2

    .line 4242
    :cond_0
    :try_start_1
    new-instance v2, Ljava/lang/IllegalArgumentException;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Trying to register visibility event for invalid display: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v2, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "listener":Landroid/view/IWallpaperVisibilityListener;
    .end local p2    # "displayId":I
    throw v2

    .line 4247
    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "listener":Landroid/view/IWallpaperVisibilityListener;
    .restart local p2    # "displayId":I
    :catchall_0
    move-exception v1

    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public relayoutWindow(Lcom/android/server/wm/Session;Landroid/view/IWindow;Landroid/view/WindowManager$LayoutParams;IIIIJLandroid/window/ClientWindowFrames;Landroid/util/MergedConfiguration;Landroid/view/SurfaceControl;Landroid/view/InsetsState;[Landroid/view/InsetsSourceControl;Landroid/graphics/Point;)I
    .locals 40
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;
    .param p3, "attrs"    # Landroid/view/WindowManager$LayoutParams;
    .param p4, "requestedWidth"    # I
    .param p5, "requestedHeight"    # I
    .param p6, "viewVisibility"    # I
    .param p7, "flags"    # I
    .param p8, "frameNumber"    # J
    .param p10, "outFrames"    # Landroid/window/ClientWindowFrames;
    .param p11, "mergedConfiguration"    # Landroid/util/MergedConfiguration;
    .param p12, "outSurfaceControl"    # Landroid/view/SurfaceControl;
    .param p13, "outInsetsState"    # Landroid/view/InsetsState;
    .param p14, "outActiveControls"    # [Landroid/view/InsetsSourceControl;
    .param p15, "outSurfaceSize"    # Landroid/graphics/Point;

    .line 2215
    move-object/from16 v1, p0

    move-object/from16 v2, p3

    move/from16 v3, p6

    move-object/from16 v4, p12

    move-object/from16 v5, p14

    const/4 v0, 0x0

    invoke-static {v5, v0}, Ljava/util/Arrays;->fill([Ljava/lang/Object;Ljava/lang/Object;)V

    .line 2216
    const/4 v6, 0x0

    .line 2218
    .local v6, "result":I
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v7

    .line 2219
    .local v7, "pid":I
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v8

    .line 2220
    .local v8, "uid":I
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v9

    .line 2221
    .local v9, "origId":J
    iget-object v11, v1, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v11

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 2222
    const/4 v12, 0x0

    move-object/from16 v13, p1

    move-object/from16 v14, p2

    invoke-virtual {v1, v13, v14, v12}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;

    move-result-object v15
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_10

    .line 2223
    .local v15, "win":Lcom/android/server/wm/WindowState;
    if-nez v15, :cond_0

    .line 2224
    :try_start_1
    monitor-exit v11
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v12

    .line 2531
    .end local v15    # "win":Lcom/android/server/wm/WindowState;
    :catchall_0
    move-exception v0

    move-object/from16 v3, p15

    move-object v2, v5

    move/from16 v26, v7

    move/from16 v27, v8

    move-wide/from16 v32, v9

    goto/16 :goto_22

    .line 2226
    .restart local v15    # "win":Lcom/android/server/wm/WindowState;
    :cond_0
    :try_start_2
    invoke-virtual {v15}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v16

    move-object/from16 v17, v16

    .line 2227
    .local v17, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual/range {v17 .. v17}, Lcom/android/server/wm/DisplayContent;->getDisplayPolicy()Lcom/android/server/wm/DisplayPolicy;

    move-result-object v16

    move-object/from16 v18, v16

    .line 2229
    .local v18, "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    iget-object v0, v15, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_10

    move-object/from16 v19, v0

    .line 2230
    .local v19, "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    const/16 v0, 0x8

    if-eq v3, v0, :cond_1

    .line 2231
    move/from16 v12, p4

    move/from16 v13, p5

    :try_start_3
    invoke-virtual {v15, v12, v13}, Lcom/android/server/wm/WindowState;->setRequestedSize(II)V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    goto :goto_0

    .line 2230
    :cond_1
    move/from16 v12, p4

    move/from16 v13, p5

    .line 2234
    :goto_0
    move-wide/from16 v12, p8

    :try_start_4
    invoke-virtual {v15, v12, v13}, Lcom/android/server/wm/WindowState;->setFrameNumber(J)V
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_10

    .line 2236
    const/16 v21, 0x0

    .line 2237
    .local v21, "attrChanges":I
    const/16 v22, 0x0

    .line 2238
    .local v22, "flagChanges":I
    const/16 v23, 0x0

    .line 2239
    .local v23, "privateFlagChanges":I
    if-eqz v2, :cond_c

    .line 2240
    move-object/from16 v13, v18

    .end local v18    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .local v13, "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    :try_start_5
    invoke-virtual {v13, v15, v2}, Lcom/android/server/wm/DisplayPolicy;->adjustWindowParamsLw(Lcom/android/server/wm/WindowState;Landroid/view/WindowManager$LayoutParams;)V

    .line 2241
    iget-object v0, v15, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    invoke-virtual {v0, v15, v2}, Lcom/android/server/wm/WindowToken;->adjustWindowParams(Lcom/android/server/wm/WindowState;Landroid/view/WindowManager$LayoutParams;)V

    .line 2242
    iget v0, v2, Landroid/view/WindowManager$LayoutParams;->systemUiVisibility:I

    iget v12, v2, Landroid/view/WindowManager$LayoutParams;->subtreeSystemUiVisibility:I
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    or-int/2addr v0, v12

    const/high16 v12, 0x7ff0000

    and-int/2addr v0, v12

    .line 2244
    .local v0, "disableFlags":I
    if-eqz v0, :cond_2

    :try_start_6
    invoke-direct {v1, v7, v8}, Lcom/android/server/wm/WindowManagerService;->hasStatusBarPermission(II)Z

    move-result v12
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    if-nez v12, :cond_2

    .line 2245
    const/4 v0, 0x0

    .line 2247
    :cond_2
    :try_start_7
    iput v0, v15, Lcom/android/server/wm/WindowState;->mDisableFlags:I

    .line 2248
    iget-object v12, v15, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v12, v12, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v25, v0

    .end local v0    # "disableFlags":I
    .local v25, "disableFlags":I
    iget v0, v2, Landroid/view/WindowManager$LayoutParams;->type:I

    if-ne v12, v0, :cond_b

    .line 2252
    iget-object v0, v15, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget-object v0, v0, Landroid/view/WindowManager$LayoutParams;->providesInsetsTypes:[I

    iget-object v12, v2, Landroid/view/WindowManager$LayoutParams;->providesInsetsTypes:[I

    invoke-static {v0, v12}, Ljava/util/Arrays;->equals([I[I)Z

    move-result v0

    if-eqz v0, :cond_a

    .line 2257
    iget-object v0, v15, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->flags:I

    iget v12, v2, Landroid/view/WindowManager$LayoutParams;->flags:I

    xor-int v22, v0, v12

    .line 2258
    iget-object v0, v15, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    iget v12, v2, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    xor-int v23, v0, v12

    .line 2259
    iget-object v0, v15, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    invoke-virtual {v0, v2}, Landroid/view/WindowManager$LayoutParams;->copyFrom(Landroid/view/WindowManager$LayoutParams;)I

    move-result v0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_1

    .line 2260
    .end local v21    # "attrChanges":I
    .local v0, "attrChanges":I
    and-int/lit16 v12, v0, 0x4001

    if-eqz v12, :cond_3

    .line 2262
    const/4 v12, 0x1

    :try_start_8
    iput-boolean v12, v15, Lcom/android/server/wm/WindowState;->mLayoutNeeded:Z
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_0

    .line 2264
    :cond_3
    :try_start_9
    iget-object v12, v15, Lcom/android/server/wm/WindowState;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_1

    const/high16 v21, 0x80000

    if-eqz v12, :cond_5

    and-int v12, v22, v21

    if-nez v12, :cond_4

    const/high16 v12, 0x400000

    and-int v12, v22, v12

    if-eqz v12, :cond_5

    .line 2266
    :cond_4
    :try_start_a
    iget-object v12, v15, Lcom/android/server/wm/WindowState;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    invoke-virtual {v12}, Lcom/android/server/wm/ActivityRecord;->checkKeyguardFlagsChanged()V
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_0

    .line 2268
    :cond_5
    const/high16 v12, 0x2000000

    and-int/2addr v12, v0

    if-eqz v12, :cond_6

    :try_start_b
    iget-object v12, v1, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;
    :try_end_b
    .catchall {:try_start_b .. :try_end_b} :catchall_1

    if-eqz v12, :cond_6

    .line 2271
    move/from16 v26, v7

    const/4 v7, 0x1

    .end local v7    # "pid":I
    .local v26, "pid":I
    :try_start_c
    new-array v14, v7, [I

    .line 2272
    invoke-virtual {v15}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v7

    invoke-virtual {v7}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    move-result v7

    const/16 v20, 0x0

    aput v7, v14, v20

    .line 2271
    invoke-virtual {v12, v8, v14}, Lcom/android/server/wm/AccessibilityController;->onSomeWindowResizedOrMovedWithCallingUid(I[I)V

    goto :goto_1

    .line 2268
    .end local v26    # "pid":I
    .restart local v7    # "pid":I
    :cond_6
    move/from16 v26, v7

    .line 2275
    .end local v7    # "pid":I
    .restart local v26    # "pid":I
    :goto_1
    and-int v7, v23, v21

    if-eqz v7, :cond_7

    .line 2276
    iget-object v7, v15, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    .line 2277
    invoke-virtual {v7}, Lcom/android/server/wm/WindowStateAnimator;->getShown()Z

    move-result v7

    .line 2276
    invoke-virtual {v1, v15, v7}, Lcom/android/server/wm/WindowManagerService;->updateNonSystemOverlayWindowsVisibilityIfNeeded(Lcom/android/server/wm/WindowState;Z)V

    .line 2279
    :cond_7
    const/high16 v7, 0x20000

    and-int/2addr v7, v0

    if-eqz v7, :cond_9

    .line 2280
    iget-object v7, v15, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v7, v7, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    const/high16 v12, 0x1000000

    and-int/2addr v7, v12

    if-eqz v7, :cond_8

    const/4 v7, 0x1

    goto :goto_2

    :cond_8
    const/4 v7, 0x0

    :goto_2
    move-object/from16 v12, v19

    .end local v19    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .local v12, "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    invoke-virtual {v12, v7}, Lcom/android/server/wm/WindowStateAnimator;->setColorSpaceAgnosticLocked(Z)V

    goto :goto_3

    .line 2279
    .end local v12    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .restart local v19    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    :cond_9
    move-object/from16 v12, v19

    .line 2287
    .end local v19    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .end local v25    # "disableFlags":I
    .restart local v12    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    :goto_3
    move v7, v0

    move/from16 v14, v22

    goto :goto_4

    .line 2253
    .end local v0    # "attrChanges":I
    .end local v12    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .end local v26    # "pid":I
    .restart local v7    # "pid":I
    .restart local v19    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .restart local v21    # "attrChanges":I
    .restart local v25    # "disableFlags":I
    :cond_a
    move/from16 v26, v7

    move-object/from16 v12, v19

    .end local v7    # "pid":I
    .end local v19    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .restart local v12    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .restart local v26    # "pid":I
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v7, "Insets types can not be changed after the window is added."

    invoke-direct {v0, v7}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .end local v6    # "result":I
    .end local v8    # "uid":I
    .end local v9    # "origId":J
    .end local v26    # "pid":I
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "session":Lcom/android/server/wm/Session;
    .end local p2    # "client":Landroid/view/IWindow;
    .end local p3    # "attrs":Landroid/view/WindowManager$LayoutParams;
    .end local p4    # "requestedWidth":I
    .end local p5    # "requestedHeight":I
    .end local p6    # "viewVisibility":I
    .end local p7    # "flags":I
    .end local p8    # "frameNumber":J
    .end local p10    # "outFrames":Landroid/window/ClientWindowFrames;
    .end local p11    # "mergedConfiguration":Landroid/util/MergedConfiguration;
    .end local p12    # "outSurfaceControl":Landroid/view/SurfaceControl;
    .end local p13    # "outInsetsState":Landroid/view/InsetsState;
    .end local p14    # "outActiveControls":[Landroid/view/InsetsSourceControl;
    .end local p15    # "outSurfaceSize":Landroid/graphics/Point;
    throw v0

    .line 2249
    .end local v12    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .restart local v6    # "result":I
    .restart local v7    # "pid":I
    .restart local v8    # "uid":I
    .restart local v9    # "origId":J
    .restart local v19    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "session":Lcom/android/server/wm/Session;
    .restart local p2    # "client":Landroid/view/IWindow;
    .restart local p3    # "attrs":Landroid/view/WindowManager$LayoutParams;
    .restart local p4    # "requestedWidth":I
    .restart local p5    # "requestedHeight":I
    .restart local p6    # "viewVisibility":I
    .restart local p7    # "flags":I
    .restart local p8    # "frameNumber":J
    .restart local p10    # "outFrames":Landroid/window/ClientWindowFrames;
    .restart local p11    # "mergedConfiguration":Landroid/util/MergedConfiguration;
    .restart local p12    # "outSurfaceControl":Landroid/view/SurfaceControl;
    .restart local p13    # "outInsetsState":Landroid/view/InsetsState;
    .restart local p14    # "outActiveControls":[Landroid/view/InsetsSourceControl;
    .restart local p15    # "outSurfaceSize":Landroid/graphics/Point;
    :cond_b
    move/from16 v26, v7

    move-object/from16 v12, v19

    .end local v7    # "pid":I
    .end local v19    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .restart local v12    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .restart local v26    # "pid":I
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v7, "Window type can not be changed after the window is added."

    invoke-direct {v0, v7}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .end local v6    # "result":I
    .end local v8    # "uid":I
    .end local v9    # "origId":J
    .end local v26    # "pid":I
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "session":Lcom/android/server/wm/Session;
    .end local p2    # "client":Landroid/view/IWindow;
    .end local p3    # "attrs":Landroid/view/WindowManager$LayoutParams;
    .end local p4    # "requestedWidth":I
    .end local p5    # "requestedHeight":I
    .end local p6    # "viewVisibility":I
    .end local p7    # "flags":I
    .end local p8    # "frameNumber":J
    .end local p10    # "outFrames":Landroid/window/ClientWindowFrames;
    .end local p11    # "mergedConfiguration":Landroid/util/MergedConfiguration;
    .end local p12    # "outSurfaceControl":Landroid/view/SurfaceControl;
    .end local p13    # "outInsetsState":Landroid/view/InsetsState;
    .end local p14    # "outActiveControls":[Landroid/view/InsetsSourceControl;
    .end local p15    # "outSurfaceSize":Landroid/graphics/Point;
    throw v0

    .line 2531
    .end local v12    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .end local v13    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .end local v15    # "win":Lcom/android/server/wm/WindowState;
    .end local v17    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v21    # "attrChanges":I
    .end local v22    # "flagChanges":I
    .end local v23    # "privateFlagChanges":I
    .end local v25    # "disableFlags":I
    .restart local v6    # "result":I
    .restart local v7    # "pid":I
    .restart local v8    # "uid":I
    .restart local v9    # "origId":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "session":Lcom/android/server/wm/Session;
    .restart local p2    # "client":Landroid/view/IWindow;
    .restart local p3    # "attrs":Landroid/view/WindowManager$LayoutParams;
    .restart local p4    # "requestedWidth":I
    .restart local p5    # "requestedHeight":I
    .restart local p6    # "viewVisibility":I
    .restart local p7    # "flags":I
    .restart local p8    # "frameNumber":J
    .restart local p10    # "outFrames":Landroid/window/ClientWindowFrames;
    .restart local p11    # "mergedConfiguration":Landroid/util/MergedConfiguration;
    .restart local p12    # "outSurfaceControl":Landroid/view/SurfaceControl;
    .restart local p13    # "outInsetsState":Landroid/view/InsetsState;
    .restart local p14    # "outActiveControls":[Landroid/view/InsetsSourceControl;
    .restart local p15    # "outSurfaceSize":Landroid/graphics/Point;
    :catchall_1
    move-exception v0

    move/from16 v26, v7

    move-object/from16 v3, p15

    move-object v2, v5

    move/from16 v27, v8

    move-wide/from16 v32, v9

    .end local v7    # "pid":I
    .restart local v26    # "pid":I
    goto/16 :goto_22

    .line 2239
    .end local v26    # "pid":I
    .restart local v7    # "pid":I
    .restart local v15    # "win":Lcom/android/server/wm/WindowState;
    .restart local v17    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v18    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .restart local v19    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .restart local v21    # "attrChanges":I
    .restart local v22    # "flagChanges":I
    .restart local v23    # "privateFlagChanges":I
    :cond_c
    move/from16 v26, v7

    move-object/from16 v13, v18

    move-object/from16 v12, v19

    .end local v7    # "pid":I
    .end local v18    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .end local v19    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .restart local v12    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .restart local v13    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .restart local v26    # "pid":I
    move/from16 v7, v21

    move/from16 v14, v22

    .line 2287
    .end local v21    # "attrChanges":I
    .end local v22    # "flagChanges":I
    .local v7, "attrChanges":I
    .local v14, "flagChanges":I
    :goto_4
    and-int/lit16 v0, v7, 0x80

    if-eqz v0, :cond_d

    .line 2288
    iget v0, v2, Landroid/view/WindowManager$LayoutParams;->alpha:F

    iput v0, v12, Lcom/android/server/wm/WindowStateAnimator;->mAlpha:F
    :try_end_c
    .catchall {:try_start_c .. :try_end_c} :catchall_2

    goto :goto_5

    .line 2531
    .end local v7    # "attrChanges":I
    .end local v12    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .end local v13    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .end local v14    # "flagChanges":I
    .end local v15    # "win":Lcom/android/server/wm/WindowState;
    .end local v17    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v23    # "privateFlagChanges":I
    :catchall_2
    move-exception v0

    move-object/from16 v3, p15

    move-object v2, v5

    move/from16 v27, v8

    move-wide/from16 v32, v9

    goto/16 :goto_22

    .line 2290
    .restart local v7    # "attrChanges":I
    .restart local v12    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .restart local v13    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .restart local v14    # "flagChanges":I
    .restart local v15    # "win":Lcom/android/server/wm/WindowState;
    .restart local v17    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v23    # "privateFlagChanges":I
    :cond_d
    :goto_5
    :try_start_d
    iget v0, v15, Lcom/android/server/wm/WindowState;->mRequestedWidth:I

    iget v2, v15, Lcom/android/server/wm/WindowState;->mRequestedHeight:I

    invoke-virtual {v15, v0, v2}, Lcom/android/server/wm/WindowState;->setWindowScale(II)V

    .line 2292
    iget-object v0, v15, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget-object v0, v0, Landroid/view/WindowManager$LayoutParams;->surfaceInsets:Landroid/graphics/Rect;

    iget v0, v0, Landroid/graphics/Rect;->left:I
    :try_end_d
    .catchall {:try_start_d .. :try_end_d} :catchall_f

    if-nez v0, :cond_e

    :try_start_e
    iget-object v0, v15, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget-object v0, v0, Landroid/view/WindowManager$LayoutParams;->surfaceInsets:Landroid/graphics/Rect;

    iget v0, v0, Landroid/graphics/Rect;->top:I

    if-nez v0, :cond_e

    iget-object v0, v15, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget-object v0, v0, Landroid/view/WindowManager$LayoutParams;->surfaceInsets:Landroid/graphics/Rect;

    iget v0, v0, Landroid/graphics/Rect;->right:I

    if-nez v0, :cond_e

    iget-object v0, v15, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget-object v0, v0, Landroid/view/WindowManager$LayoutParams;->surfaceInsets:Landroid/graphics/Rect;

    iget v0, v0, Landroid/graphics/Rect;->bottom:I
    :try_end_e
    .catchall {:try_start_e .. :try_end_e} :catchall_2

    if-eqz v0, :cond_f

    .line 2296
    :cond_e
    const/4 v2, 0x0

    :try_start_f
    invoke-virtual {v12, v2}, Lcom/android/server/wm/WindowStateAnimator;->setOpaqueLocked(Z)V

    .line 2299
    :cond_f
    iget v0, v15, Lcom/android/server/wm/WindowState;->mViewVisibility:I

    move v2, v0

    .line 2303
    .local v2, "oldVisibility":I
    const/4 v0, 0x4

    if-eq v2, v0, :cond_10

    const/16 v0, 0x8

    if-ne v2, v0, :cond_11

    :cond_10
    if-nez v3, :cond_11

    const/4 v0, 0x1

    goto :goto_6

    :cond_11
    const/4 v0, 0x0

    :goto_6
    move/from16 v21, v0

    .line 2306
    .local v21, "becameVisible":Z
    const v0, 0x20008

    and-int/2addr v0, v14

    if-nez v0, :cond_13

    if-eqz v21, :cond_12

    goto :goto_7

    :cond_12
    const/4 v0, 0x0

    goto :goto_8

    :cond_13
    :goto_7
    const/4 v0, 0x1

    :goto_8
    move/from16 v22, v0

    .line 2308
    .local v22, "imMayMove":Z
    iget v0, v15, Lcom/android/server/wm/WindowState;->mViewVisibility:I
    :try_end_f
    .catchall {:try_start_f .. :try_end_f} :catchall_f

    if-ne v0, v3, :cond_15

    and-int/lit8 v0, v14, 0x8

    if-nez v0, :cond_15

    :try_start_10
    iget-boolean v0, v15, Lcom/android/server/wm/WindowState;->mRelayoutCalled:Z
    :try_end_10
    .catchall {:try_start_10 .. :try_end_10} :catchall_2

    if-nez v0, :cond_14

    goto :goto_9

    :cond_14
    const/4 v0, 0x0

    goto :goto_a

    :cond_15
    :goto_9
    const/4 v0, 0x1

    .line 2312
    .local v0, "focusMayChange":Z
    :goto_a
    move/from16 v25, v7

    .end local v7    # "attrChanges":I
    .local v25, "attrChanges":I
    :try_start_11
    iget v7, v15, Lcom/android/server/wm/WindowState;->mViewVisibility:I
    :try_end_11
    .catchall {:try_start_11 .. :try_end_11} :catchall_f

    if-eq v7, v3, :cond_16

    .line 2313
    :try_start_12
    invoke-virtual {v15}, Lcom/android/server/wm/WindowState;->hasWallpaper()Z

    move-result v7
    :try_end_12
    .catchall {:try_start_12 .. :try_end_12} :catchall_2

    if-eqz v7, :cond_16

    const/4 v7, 0x1

    goto :goto_b

    :cond_16
    const/4 v7, 0x0

    .line 2314
    .local v7, "wallpaperMayMove":Z
    :goto_b
    const/high16 v27, 0x100000

    and-int v27, v14, v27

    if-eqz v27, :cond_17

    const/16 v27, 0x1

    goto :goto_c

    :cond_17
    const/16 v27, 0x0

    :goto_c
    or-int v7, v7, v27

    .line 2315
    move/from16 v27, v8

    .end local v8    # "uid":I
    .local v27, "uid":I
    and-int/lit16 v8, v14, 0x2000

    if-eqz v8, :cond_18

    :try_start_13
    iget-object v8, v12, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceController:Lcom/android/server/wm/WindowSurfaceController;

    if-eqz v8, :cond_18

    .line 2316
    iget-object v8, v12, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceController:Lcom/android/server/wm/WindowSurfaceController;

    move/from16 v28, v14

    .end local v14    # "flagChanges":I
    .local v28, "flagChanges":I
    invoke-virtual {v15}, Lcom/android/server/wm/WindowState;->isSecureLocked()Z

    move-result v14

    invoke-virtual {v8, v14}, Lcom/android/server/wm/WindowSurfaceController;->setSecure(Z)V
    :try_end_13
    .catchall {:try_start_13 .. :try_end_13} :catchall_3

    goto :goto_d

    .line 2531
    .end local v0    # "focusMayChange":Z
    .end local v2    # "oldVisibility":I
    .end local v7    # "wallpaperMayMove":Z
    .end local v12    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .end local v13    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .end local v15    # "win":Lcom/android/server/wm/WindowState;
    .end local v17    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v21    # "becameVisible":Z
    .end local v22    # "imMayMove":Z
    .end local v23    # "privateFlagChanges":I
    .end local v25    # "attrChanges":I
    .end local v28    # "flagChanges":I
    :catchall_3
    move-exception v0

    move-object/from16 v3, p15

    move-object v2, v5

    move-wide/from16 v32, v9

    goto/16 :goto_22

    .line 2315
    .restart local v0    # "focusMayChange":Z
    .restart local v2    # "oldVisibility":I
    .restart local v7    # "wallpaperMayMove":Z
    .restart local v12    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .restart local v13    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .restart local v14    # "flagChanges":I
    .restart local v15    # "win":Lcom/android/server/wm/WindowState;
    .restart local v17    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v21    # "becameVisible":Z
    .restart local v22    # "imMayMove":Z
    .restart local v23    # "privateFlagChanges":I
    .restart local v25    # "attrChanges":I
    :cond_18
    move/from16 v28, v14

    .line 2319
    .end local v14    # "flagChanges":I
    .restart local v28    # "flagChanges":I
    :goto_d
    const/4 v8, 0x1

    :try_start_14
    iput-boolean v8, v15, Lcom/android/server/wm/WindowState;->mRelayoutCalled:Z

    .line 2320
    iput-boolean v8, v15, Lcom/android/server/wm/WindowState;->mInRelayout:Z

    .line 2322
    invoke-virtual {v15, v3}, Lcom/android/server/wm/WindowState;->setViewVisibility(I)V

    .line 2323
    sget-boolean v8, Lcom/android/server/wm/ProtoLogCache;->WM_DEBUG_SCREEN_ON_enabled:Z
    :try_end_14
    .catchall {:try_start_14 .. :try_end_14} :catchall_e

    if-eqz v8, :cond_19

    :try_start_15
    invoke-static {v15}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v8
    :try_end_15
    .catchall {:try_start_15 .. :try_end_15} :catchall_4

    move-object/from16 v30, v15

    .end local v15    # "win":Lcom/android/server/wm/WindowState;
    .local v8, "protoLogParam0":Ljava/lang/String;
    .local v30, "win":Lcom/android/server/wm/WindowState;
    int-to-long v14, v2

    move-wide/from16 v32, v9

    .end local v9    # "origId":J
    .local v14, "protoLogParam1":J
    .local v32, "origId":J
    int-to-long v9, v3

    .local v9, "protoLogParam2":J
    :try_start_16
    new-instance v34, Ljava/lang/RuntimeException;

    invoke-direct/range {v34 .. v34}, Ljava/lang/RuntimeException;-><init>()V

    invoke-virtual/range {v34 .. v34}, Ljava/lang/RuntimeException;->fillInStackTrace()Ljava/lang/Throwable;

    move-result-object v34

    invoke-static/range {v34 .. v34}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v34

    move/from16 v35, v2

    .end local v2    # "oldVisibility":I
    .local v34, "protoLogParam3":Ljava/lang/String;
    .local v35, "oldVisibility":I
    sget-object v2, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_SCREEN_ON:Lcom/android/internal/protolog/ProtoLogGroup;

    move-object/from16 v37, v13

    const/4 v5, 0x4

    .end local v13    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .local v37, "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    new-array v13, v5, [Ljava/lang/Object;

    const/4 v5, 0x0

    aput-object v8, v13, v5

    invoke-static {v14, v15}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v5

    const/16 v24, 0x1

    aput-object v5, v13, v24

    invoke-static {v9, v10}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v5

    const/16 v31, 0x2

    aput-object v5, v13, v31

    const/4 v5, 0x3

    aput-object v34, v13, v5

    move-object/from16 v36, v8

    move-wide/from16 v38, v9

    const v5, -0x2cf8cd70

    const/16 v8, 0x14

    const/4 v9, 0x0

    .end local v8    # "protoLogParam0":Ljava/lang/String;
    .end local v9    # "protoLogParam2":J
    .local v36, "protoLogParam0":Ljava/lang/String;
    .local v38, "protoLogParam2":J
    invoke-static {v2, v5, v8, v9, v13}, Lcom/android/internal/protolog/ProtoLogImpl;->i(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    goto :goto_e

    .line 2531
    .end local v0    # "focusMayChange":Z
    .end local v7    # "wallpaperMayMove":Z
    .end local v12    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .end local v14    # "protoLogParam1":J
    .end local v17    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v21    # "becameVisible":Z
    .end local v22    # "imMayMove":Z
    .end local v23    # "privateFlagChanges":I
    .end local v25    # "attrChanges":I
    .end local v28    # "flagChanges":I
    .end local v30    # "win":Lcom/android/server/wm/WindowState;
    .end local v32    # "origId":J
    .end local v34    # "protoLogParam3":Ljava/lang/String;
    .end local v35    # "oldVisibility":I
    .end local v36    # "protoLogParam0":Ljava/lang/String;
    .end local v37    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .end local v38    # "protoLogParam2":J
    .local v9, "origId":J
    :catchall_4
    move-exception v0

    move-wide/from16 v32, v9

    move-object/from16 v2, p14

    move-object/from16 v3, p15

    goto/16 :goto_21

    .line 2323
    .restart local v0    # "focusMayChange":Z
    .restart local v2    # "oldVisibility":I
    .restart local v7    # "wallpaperMayMove":Z
    .restart local v12    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .restart local v13    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .restart local v15    # "win":Lcom/android/server/wm/WindowState;
    .restart local v17    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v21    # "becameVisible":Z
    .restart local v22    # "imMayMove":Z
    .restart local v23    # "privateFlagChanges":I
    .restart local v25    # "attrChanges":I
    .restart local v28    # "flagChanges":I
    :cond_19
    move/from16 v35, v2

    move-wide/from16 v32, v9

    move-object/from16 v37, v13

    move-object/from16 v30, v15

    .line 2328
    .end local v2    # "oldVisibility":I
    .end local v9    # "origId":J
    .end local v13    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .end local v15    # "win":Lcom/android/server/wm/WindowState;
    .restart local v30    # "win":Lcom/android/server/wm/WindowState;
    .restart local v32    # "origId":J
    .restart local v35    # "oldVisibility":I
    .restart local v37    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    :goto_e
    invoke-virtual/range {v30 .. v30}, Lcom/android/server/wm/WindowState;->setDisplayLayoutNeeded()V

    .line 2329
    and-int/lit8 v2, p7, 0x1

    if-eqz v2, :cond_1a

    const/4 v2, 0x1

    goto :goto_f

    :cond_1a
    const/4 v2, 0x0

    :goto_f
    move-object/from16 v5, v30

    .end local v30    # "win":Lcom/android/server/wm/WindowState;
    .local v5, "win":Lcom/android/server/wm/WindowState;
    iput-boolean v2, v5, Lcom/android/server/wm/WindowState;->mGivenInsetsPending:Z

    .line 2333
    if-nez v3, :cond_1c

    iget-object v2, v5, Lcom/android/server/wm/WindowState;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    if-eqz v2, :cond_1b

    iget-object v2, v5, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v2, v2, Landroid/view/WindowManager$LayoutParams;->type:I

    const/4 v8, 0x3

    if-eq v2, v8, :cond_1b

    iget-object v2, v5, Lcom/android/server/wm/WindowState;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    .line 2335
    invoke-virtual {v2}, Lcom/android/server/wm/ActivityRecord;->isClientVisible()Z

    move-result v2

    if-eqz v2, :cond_1c

    :cond_1b
    const/4 v2, 0x1

    goto :goto_10

    :cond_1c
    const/4 v2, 0x0

    .line 2346
    .local v2, "shouldRelayout":Z
    :goto_10
    if-nez v2, :cond_1f

    invoke-virtual {v12}, Lcom/android/server/wm/WindowStateAnimator;->hasSurface()Z

    move-result v8

    if-eqz v8, :cond_1f

    iget-boolean v8, v5, Lcom/android/server/wm/WindowState;->mAnimatingExit:Z

    if-nez v8, :cond_1f

    .line 2351
    or-int/lit8 v6, v6, 0x4

    .line 2352
    iget-boolean v8, v5, Lcom/android/server/wm/WindowState;->mWillReplaceWindow:Z

    if-nez v8, :cond_1e

    .line 2361
    if-eqz v7, :cond_1d

    .line 2362
    move-object/from16 v8, v17

    .end local v17    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .local v8, "displayContent":Lcom/android/server/wm/DisplayContent;
    iget-object v9, v8, Lcom/android/server/wm/DisplayContent;->mWallpaperController:Lcom/android/server/wm/WallpaperController;

    invoke-virtual {v9}, Lcom/android/server/wm/WallpaperController;->adjustWallpaperWindows()V

    goto :goto_11

    .line 2361
    .end local v8    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v17    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_1d
    move-object/from16 v8, v17

    .line 2364
    .end local v17    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v8    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :goto_11
    invoke-direct {v1, v5, v12, v0}, Lcom/android/server/wm/WindowManagerService;->tryStartExitingAnimation(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowStateAnimator;Z)Z

    move-result v9
    :try_end_16
    .catchall {:try_start_16 .. :try_end_16} :catchall_d

    move v0, v9

    move v9, v6

    move v6, v0

    goto :goto_12

    .line 2352
    .end local v8    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v17    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_1e
    move-object/from16 v8, v17

    .end local v17    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v8    # "displayContent":Lcom/android/server/wm/DisplayContent;
    move v9, v6

    move v6, v0

    goto :goto_12

    .line 2346
    .end local v8    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v17    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_1f
    move-object/from16 v8, v17

    .line 2370
    .end local v17    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v8    # "displayContent":Lcom/android/server/wm/DisplayContent;
    move v9, v6

    move v6, v0

    .end local v0    # "focusMayChange":Z
    .local v6, "focusMayChange":Z
    .local v9, "result":I
    :goto_12
    if-eqz v2, :cond_21

    .line 2372
    :try_start_17
    invoke-direct {v1, v4, v9, v5, v12}, Lcom/android/server/wm/WindowManagerService;->createSurfaceControl(Landroid/view/SurfaceControl;ILcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowStateAnimator;)I

    move-result v0
    :try_end_17
    .catch Ljava/lang/Exception; {:try_start_17 .. :try_end_17} :catch_0
    .catchall {:try_start_17 .. :try_end_17} :catchall_5

    .line 2381
    .end local v9    # "result":I
    .local v0, "result":I
    move/from16 v30, v6

    move v6, v0

    goto/16 :goto_14

    .line 2531
    .end local v0    # "result":I
    .end local v2    # "shouldRelayout":Z
    .end local v5    # "win":Lcom/android/server/wm/WindowState;
    .end local v6    # "focusMayChange":Z
    .end local v7    # "wallpaperMayMove":Z
    .end local v8    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v12    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .end local v21    # "becameVisible":Z
    .end local v22    # "imMayMove":Z
    .end local v23    # "privateFlagChanges":I
    .end local v25    # "attrChanges":I
    .end local v28    # "flagChanges":I
    .end local v35    # "oldVisibility":I
    .end local v37    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .restart local v9    # "result":I
    :catchall_5
    move-exception v0

    move-object/from16 v2, p14

    move-object/from16 v3, p15

    move v6, v9

    goto/16 :goto_22

    .line 2373
    .restart local v2    # "shouldRelayout":Z
    .restart local v5    # "win":Lcom/android/server/wm/WindowState;
    .restart local v6    # "focusMayChange":Z
    .restart local v7    # "wallpaperMayMove":Z
    .restart local v8    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v12    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .restart local v21    # "becameVisible":Z
    .restart local v22    # "imMayMove":Z
    .restart local v23    # "privateFlagChanges":I
    .restart local v25    # "attrChanges":I
    .restart local v28    # "flagChanges":I
    .restart local v35    # "oldVisibility":I
    .restart local v37    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    :catch_0
    move-exception v0

    move-object v10, v0

    move-object v0, v10

    .line 2374
    .local v0, "e":Ljava/lang/Exception;
    :try_start_18
    invoke-virtual {v8}, Lcom/android/server/wm/DisplayContent;->getInputMonitor()Lcom/android/server/wm/InputMonitor;

    move-result-object v10

    const/4 v13, 0x1

    invoke-virtual {v10, v13}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    .line 2376
    sget-boolean v10, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v10, :cond_20

    invoke-static/range {p2 .. p2}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v10

    .local v10, "protoLogParam0":Ljava/lang/String;
    iget-object v13, v5, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    invoke-virtual {v13}, Landroid/view/WindowManager$LayoutParams;->getTitle()Ljava/lang/CharSequence;

    move-result-object v13

    invoke-static {v13}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v13

    .local v13, "protoLogParam1":Ljava/lang/String;
    invoke-static {v0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v14

    .local v14, "protoLogParam2":Ljava/lang/String;
    sget-object v15, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    move-object/from16 v16, v0

    .end local v0    # "e":Ljava/lang/Exception;
    .local v16, "e":Ljava/lang/Exception;
    const-string v0, "Exception thrown when creating surface for client %s (%s). %s"

    move/from16 v30, v6

    const/4 v6, 0x3

    .end local v6    # "focusMayChange":Z
    .local v30, "focusMayChange":Z
    new-array v6, v6, [Ljava/lang/Object;
    :try_end_18
    .catchall {:try_start_18 .. :try_end_18} :catchall_7

    move/from16 v29, v9

    const/4 v9, 0x0

    .end local v9    # "result":I
    .local v29, "result":I
    :try_start_19
    aput-object v10, v6, v9

    const/16 v18, 0x1

    aput-object v13, v6, v18

    const/16 v18, 0x2

    aput-object v14, v6, v18

    move-object/from16 v18, v10

    const v10, -0x685207b6

    .end local v10    # "protoLogParam0":Ljava/lang/String;
    .local v18, "protoLogParam0":Ljava/lang/String;
    invoke-static {v15, v10, v9, v0, v6}, Lcom/android/internal/protolog/ProtoLogImpl;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    goto :goto_13

    .end local v13    # "protoLogParam1":Ljava/lang/String;
    .end local v14    # "protoLogParam2":Ljava/lang/String;
    .end local v16    # "e":Ljava/lang/Exception;
    .end local v18    # "protoLogParam0":Ljava/lang/String;
    .end local v29    # "result":I
    .end local v30    # "focusMayChange":Z
    .restart local v0    # "e":Ljava/lang/Exception;
    .restart local v6    # "focusMayChange":Z
    .restart local v9    # "result":I
    :cond_20
    move-object/from16 v16, v0

    move/from16 v30, v6

    move/from16 v29, v9

    .line 2379
    .end local v0    # "e":Ljava/lang/Exception;
    .end local v6    # "focusMayChange":Z
    .end local v9    # "result":I
    .restart local v16    # "e":Ljava/lang/Exception;
    .restart local v29    # "result":I
    .restart local v30    # "focusMayChange":Z
    :goto_13
    invoke-static/range {v32 .. v33}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 2380
    monitor-exit v11
    :try_end_19
    .catchall {:try_start_19 .. :try_end_19} :catchall_6

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    const/4 v6, 0x0

    return v6

    .line 2531
    .end local v2    # "shouldRelayout":Z
    .end local v5    # "win":Lcom/android/server/wm/WindowState;
    .end local v7    # "wallpaperMayMove":Z
    .end local v8    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v12    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .end local v16    # "e":Ljava/lang/Exception;
    .end local v21    # "becameVisible":Z
    .end local v22    # "imMayMove":Z
    .end local v23    # "privateFlagChanges":I
    .end local v25    # "attrChanges":I
    .end local v28    # "flagChanges":I
    .end local v30    # "focusMayChange":Z
    .end local v35    # "oldVisibility":I
    .end local v37    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    :catchall_6
    move-exception v0

    move-object/from16 v2, p14

    move-object/from16 v3, p15

    move/from16 v6, v29

    goto/16 :goto_22

    .end local v29    # "result":I
    .restart local v9    # "result":I
    :catchall_7
    move-exception v0

    move/from16 v29, v9

    move-object/from16 v2, p14

    move-object/from16 v3, p15

    move/from16 v6, v29

    .end local v9    # "result":I
    .restart local v29    # "result":I
    goto/16 :goto_22

    .line 2370
    .end local v29    # "result":I
    .restart local v2    # "shouldRelayout":Z
    .restart local v5    # "win":Lcom/android/server/wm/WindowState;
    .restart local v6    # "focusMayChange":Z
    .restart local v7    # "wallpaperMayMove":Z
    .restart local v8    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v9    # "result":I
    .restart local v12    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .restart local v21    # "becameVisible":Z
    .restart local v22    # "imMayMove":Z
    .restart local v23    # "privateFlagChanges":I
    .restart local v25    # "attrChanges":I
    .restart local v28    # "flagChanges":I
    .restart local v35    # "oldVisibility":I
    .restart local v37    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    :cond_21
    move/from16 v30, v6

    move/from16 v29, v9

    .end local v6    # "focusMayChange":Z
    .end local v9    # "result":I
    .restart local v29    # "result":I
    .restart local v30    # "focusMayChange":Z
    move/from16 v6, v29

    .line 2386
    .end local v29    # "result":I
    .local v6, "result":I
    :goto_14
    :try_start_1a
    iget-object v0, v1, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    const/4 v9, 0x1

    invoke-virtual {v0, v9}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement(Z)V

    .line 2388
    const-wide/16 v9, 0x20

    if-eqz v2, :cond_24

    .line 2389
    const-string v0, "relayoutWindow: viewVisibility_1"

    invoke-static {v9, v10, v0}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 2391
    invoke-virtual {v5, v6}, Lcom/android/server/wm/WindowState;->relayoutVisibleWindow(I)I

    move-result v0

    move v6, v0

    .line 2393
    and-int/lit8 v0, v6, 0x2

    if-eqz v0, :cond_22

    .line 2394
    const/4 v0, 0x1

    .end local v30    # "focusMayChange":Z
    .local v0, "focusMayChange":Z
    goto :goto_15

    .line 2393
    .end local v0    # "focusMayChange":Z
    .restart local v30    # "focusMayChange":Z
    :cond_22
    move/from16 v0, v30

    .line 2396
    .end local v30    # "focusMayChange":Z
    .restart local v0    # "focusMayChange":Z
    :goto_15
    iget-object v13, v5, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v13, v13, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v14, 0x7db

    if-ne v13, v14, :cond_23

    iget-object v13, v8, Lcom/android/server/wm/DisplayContent;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    if-nez v13, :cond_23

    .line 2398
    invoke-virtual {v8, v5}, Lcom/android/server/wm/DisplayContent;->setInputMethodWindowLocked(Lcom/android/server/wm/WindowState;)V

    .line 2399
    const/16 v22, 0x1

    .line 2401
    :cond_23
    invoke-virtual {v5}, Lcom/android/server/wm/WindowState;->adjustStartingWindowFlags()V

    .line 2402
    invoke-static {v9, v10}, Landroid/os/Trace;->traceEnd(J)V

    move v13, v6

    move v6, v0

    goto :goto_17

    .line 2404
    .end local v0    # "focusMayChange":Z
    .restart local v30    # "focusMayChange":Z
    :cond_24
    const-string v0, "relayoutWindow: viewVisibility_2"

    invoke-static {v9, v10, v0}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 2406
    const/4 v13, 0x0

    iput-boolean v13, v12, Lcom/android/server/wm/WindowStateAnimator;->mEnterAnimationPending:Z

    .line 2407
    iput-boolean v13, v12, Lcom/android/server/wm/WindowStateAnimator;->mEnteringAnimation:Z

    .line 2409
    if-nez v3, :cond_25

    invoke-virtual {v12}, Lcom/android/server/wm/WindowStateAnimator;->hasSurface()Z

    move-result v0

    if-eqz v0, :cond_25

    .line 2413
    const-string v0, "relayoutWindow: getSurface"

    invoke-static {v9, v10, v0}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 2414
    iget-object v0, v12, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceController:Lcom/android/server/wm/WindowSurfaceController;

    invoke-virtual {v0, v4}, Lcom/android/server/wm/WindowSurfaceController;->getSurfaceControl(Landroid/view/SurfaceControl;)V

    .line 2415
    invoke-static {v9, v10}, Landroid/os/Trace;->traceEnd(J)V
    :try_end_1a
    .catchall {:try_start_1a .. :try_end_1a} :catchall_d

    goto :goto_16

    .line 2420
    :cond_25
    :try_start_1b
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v13, "wmReleaseOutSurface_"

    invoke-virtual {v0, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v13, v5, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    .line 2421
    invoke-virtual {v13}, Landroid/view/WindowManager$LayoutParams;->getTitle()Ljava/lang/CharSequence;

    move-result-object v13

    invoke-virtual {v0, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 2420
    invoke-static {v9, v10, v0}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 2422
    invoke-virtual/range {p12 .. p12}, Landroid/view/SurfaceControl;->release()V
    :try_end_1b
    .catchall {:try_start_1b .. :try_end_1b} :catchall_c

    .line 2424
    :try_start_1c
    invoke-static {v9, v10}, Landroid/os/Trace;->traceEnd(J)V

    .line 2425
    nop

    .line 2428
    :goto_16
    invoke-static {v9, v10}, Landroid/os/Trace;->traceEnd(J)V
    :try_end_1c
    .catchall {:try_start_1c .. :try_end_1c} :catchall_d

    move v13, v6

    move/from16 v6, v30

    .line 2431
    .end local v30    # "focusMayChange":Z
    .local v6, "focusMayChange":Z
    .local v13, "result":I
    :goto_17
    if-eqz v6, :cond_26

    .line 2432
    const/4 v14, 0x1

    const/4 v15, 0x0

    :try_start_1d
    invoke-virtual {v1, v15, v14}, Lcom/android/server/wm/WindowManagerService;->updateFocusedWindowLocked(IZ)Z

    move-result v0

    if-eqz v0, :cond_26

    .line 2433
    const/16 v22, 0x0

    goto :goto_18

    .line 2531
    .end local v2    # "shouldRelayout":Z
    .end local v5    # "win":Lcom/android/server/wm/WindowState;
    .end local v6    # "focusMayChange":Z
    .end local v7    # "wallpaperMayMove":Z
    .end local v8    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v12    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .end local v21    # "becameVisible":Z
    .end local v22    # "imMayMove":Z
    .end local v23    # "privateFlagChanges":I
    .end local v25    # "attrChanges":I
    .end local v28    # "flagChanges":I
    .end local v35    # "oldVisibility":I
    .end local v37    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    :catchall_8
    move-exception v0

    move-object/from16 v2, p14

    move-object/from16 v3, p15

    move v6, v13

    goto/16 :goto_22

    .line 2439
    .restart local v2    # "shouldRelayout":Z
    .restart local v5    # "win":Lcom/android/server/wm/WindowState;
    .restart local v6    # "focusMayChange":Z
    .restart local v7    # "wallpaperMayMove":Z
    .restart local v8    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v12    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .restart local v21    # "becameVisible":Z
    .restart local v22    # "imMayMove":Z
    .restart local v23    # "privateFlagChanges":I
    .restart local v25    # "attrChanges":I
    .restart local v28    # "flagChanges":I
    .restart local v35    # "oldVisibility":I
    .restart local v37    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    :cond_26
    :goto_18
    and-int/lit8 v0, v13, 0x2

    if-eqz v0, :cond_27

    const/4 v0, 0x1

    goto :goto_19

    :cond_27
    const/4 v0, 0x0

    .line 2440
    .local v0, "toBeDisplayed":Z
    :goto_19
    if-eqz v22, :cond_28

    .line 2441
    const/4 v14, 0x1

    invoke-virtual {v8, v14}, Lcom/android/server/wm/DisplayContent;->computeImeTarget(Z)Lcom/android/server/wm/WindowState;

    .line 2442
    if-eqz v0, :cond_28

    .line 2447
    const/4 v14, 0x0

    invoke-virtual {v8, v14}, Lcom/android/server/wm/DisplayContent;->assignWindowLayers(Z)V

    .line 2451
    :cond_28
    if-eqz v7, :cond_29

    .line 2452
    iget v14, v8, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    const/4 v15, 0x4

    or-int/2addr v14, v15

    iput v14, v8, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    .line 2456
    :cond_29
    iget-object v14, v5, Lcom/android/server/wm/WindowState;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    if-eqz v14, :cond_2a

    .line 2457
    iget-object v14, v8, Lcom/android/server/wm/DisplayContent;->mUnknownAppVisibilityController:Lcom/android/server/wm/UnknownAppVisibilityController;

    iget-object v15, v5, Lcom/android/server/wm/WindowState;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    invoke-virtual {v14, v15}, Lcom/android/server/wm/UnknownAppVisibilityController;->notifyRelayouted(Lcom/android/server/wm/ActivityRecord;)V

    .line 2460
    :cond_2a
    const-string v14, "relayoutWindow: updateOrientation"

    invoke-static {v9, v10, v14}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 2461
    invoke-virtual {v8}, Lcom/android/server/wm/DisplayContent;->updateOrientation()Z

    move-result v14

    .line 2462
    .local v14, "configChanged":Z
    invoke-static {v9, v10}, Landroid/os/Trace;->traceEnd(J)V

    .line 2464
    iget-object v15, v5, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    .line 2465
    invoke-virtual {v15}, Lcom/android/server/wm/WindowToken;->getFixedRotationTransformDisplayInfo()Landroid/view/DisplayInfo;

    move-result-object v15

    .line 2466
    .local v15, "rotatedDisplayInfo":Landroid/view/DisplayInfo;
    if-eqz v15, :cond_2b

    .line 2467
    iget v9, v15, Landroid/view/DisplayInfo;->rotation:I

    invoke-virtual {v4, v9}, Landroid/view/SurfaceControl;->setTransformHint(I)V

    goto :goto_1a

    .line 2472
    :cond_2b
    invoke-virtual {v8}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    move-result-object v9

    iget v9, v9, Landroid/view/DisplayInfo;->rotation:I

    invoke-virtual {v4, v9}, Landroid/view/SurfaceControl;->setTransformHint(I)V

    .line 2475
    :goto_1a
    if-eqz v0, :cond_2c

    iget-boolean v9, v5, Lcom/android/server/wm/WindowState;->mIsWallpaper:Z

    if-eqz v9, :cond_2c

    .line 2476
    iget-object v9, v8, Lcom/android/server/wm/DisplayContent;->mWallpaperController:Lcom/android/server/wm/WallpaperController;

    const/4 v10, 0x0

    invoke-virtual {v9, v5, v10}, Lcom/android/server/wm/WallpaperController;->updateWallpaperOffset(Lcom/android/server/wm/WindowState;Z)Z

    .line 2478
    :cond_2c
    iget-object v9, v5, Lcom/android/server/wm/WindowState;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    if-eqz v9, :cond_2d

    .line 2479
    iget-object v9, v5, Lcom/android/server/wm/WindowState;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    invoke-virtual {v9}, Lcom/android/server/wm/ActivityRecord;->updateReportedVisibilityLocked()V

    .line 2481
    :cond_2d
    move-object/from16 v9, v37

    .end local v37    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .local v9, "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    invoke-virtual {v9, v5}, Lcom/android/server/wm/DisplayPolicy;->areSystemBarsForcedShownLw(Lcom/android/server/wm/WindowState;)Z

    move-result v10
    :try_end_1d
    .catchall {:try_start_1d .. :try_end_1d} :catchall_8

    if-eqz v10, :cond_2e

    .line 2482
    or-int/lit8 v10, v13, 0x40

    .end local v13    # "result":I
    .local v10, "result":I
    goto :goto_1b

    .line 2481
    .end local v10    # "result":I
    .restart local v13    # "result":I
    :cond_2e
    move v10, v13

    .line 2484
    .end local v13    # "result":I
    .restart local v10    # "result":I
    :goto_1b
    :try_start_1e
    invoke-virtual {v5}, Lcom/android/server/wm/WindowState;->isGoneForLayout()Z

    move-result v13

    if-nez v13, :cond_2f

    .line 2485
    const/4 v13, 0x0

    iput-boolean v13, v5, Lcom/android/server/wm/WindowState;->mResizedWhileGone:Z

    goto :goto_1c

    .line 2484
    :cond_2f
    const/4 v13, 0x0

    .line 2488
    :goto_1c
    move-object/from16 v4, p10

    move/from16 v17, v7

    move-object/from16 v7, p11

    .end local v7    # "wallpaperMayMove":Z
    .local v17, "wallpaperMayMove":Z
    invoke-virtual {v5, v4, v7, v13, v2}, Lcom/android/server/wm/WindowState;->fillClientWindowFramesAndConfiguration(Landroid/window/ClientWindowFrames;Landroid/util/MergedConfiguration;ZZ)V

    .line 2492
    invoke-virtual {v5}, Lcom/android/server/wm/WindowState;->onResizeHandled()V

    .line 2494
    invoke-virtual {v5}, Lcom/android/server/wm/WindowState;->getCompatInsetsState()Landroid/view/InsetsState;

    move-result-object v13

    move/from16 v19, v0

    .end local v0    # "toBeDisplayed":Z
    .local v19, "toBeDisplayed":Z
    invoke-virtual {v5}, Lcom/android/server/wm/WindowState;->isClientLocal()Z

    move-result v0

    move/from16 v29, v2

    move-object/from16 v2, p13

    .end local v2    # "shouldRelayout":Z
    .local v29, "shouldRelayout":Z
    invoke-virtual {v2, v13, v0}, Landroid/view/InsetsState;->set(Landroid/view/InsetsState;Z)V

    .line 2504
    sget-boolean v0, Lcom/android/server/wm/ProtoLogCache;->WM_DEBUG_FOCUS_enabled:Z

    if-eqz v0, :cond_30

    invoke-static {v5}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v0

    .local v0, "protoLogParam0":Ljava/lang/String;
    move v13, v6

    .local v13, "protoLogParam1":Z
    sget-object v2, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_FOCUS:Lcom/android/internal/protolog/ProtoLogGroup;

    const/4 v4, 0x2

    new-array v4, v4, [Ljava/lang/Object;

    const/16 v20, 0x0

    aput-object v0, v4, v20

    invoke-static {v13}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v31

    const/16 v24, 0x1

    aput-object v31, v4, v24

    move-object/from16 v31, v0

    move/from16 v16, v6

    const v0, 0x5b75a9f

    const/16 v6, 0xc

    const/4 v7, 0x0

    .end local v0    # "protoLogParam0":Ljava/lang/String;
    .end local v6    # "focusMayChange":Z
    .local v16, "focusMayChange":Z
    .local v31, "protoLogParam0":Ljava/lang/String;
    invoke-static {v2, v0, v6, v7, v4}, Lcom/android/internal/protolog/ProtoLogImpl;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    goto :goto_1d

    .end local v13    # "protoLogParam1":Z
    .end local v16    # "focusMayChange":Z
    .end local v31    # "protoLogParam0":Ljava/lang/String;
    .restart local v6    # "focusMayChange":Z
    :cond_30
    move/from16 v16, v6

    const/16 v24, 0x1

    .line 2507
    .end local v6    # "focusMayChange":Z
    .restart local v16    # "focusMayChange":Z
    :goto_1d
    iget-boolean v0, v1, Lcom/android/server/wm/WindowManagerService;->mInTouchMode:Z
    :try_end_1e
    .catchall {:try_start_1e .. :try_end_1e} :catchall_b

    if-eqz v0, :cond_31

    goto :goto_1e

    :cond_31
    const/16 v24, 0x0

    :goto_1e
    or-int v6, v10, v24

    .line 2512
    .end local v10    # "result":I
    .local v6, "result":I
    const/4 v2, 0x0

    :try_start_1f
    iput-boolean v2, v5, Lcom/android/server/wm/WindowState;->mInRelayout:Z

    .line 2514
    invoke-virtual {v5}, Lcom/android/server/wm/WindowState;->useBLASTSync()Z

    move-result v0

    if-eqz v0, :cond_32

    const/16 v0, 0x8

    if-eq v3, v0, :cond_32

    .line 2515
    invoke-virtual {v5}, Lcom/android/server/wm/WindowState;->prepareDrawHandlers()V

    .line 2516
    invoke-virtual {v5}, Lcom/android/server/wm/WindowState;->markRedrawForSyncReported()V

    .line 2517
    or-int/lit16 v0, v6, 0x80

    move v6, v0

    .line 2520
    :cond_32
    if-eqz v14, :cond_33

    .line 2521
    const-string v0, "relayoutWindow: postNewConfigurationToHandler"

    const-wide/16 v2, 0x20

    invoke-static {v2, v3, v0}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 2523
    invoke-virtual {v8}, Lcom/android/server/wm/DisplayContent;->sendNewConfiguration()V

    .line 2524
    invoke-static {v2, v3}, Landroid/os/Trace;->traceEnd(J)V

    .line 2526
    :cond_33
    iget-object v0, v12, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceController:Lcom/android/server/wm/WindowSurfaceController;
    :try_end_1f
    .catchall {:try_start_1f .. :try_end_1f} :catchall_d

    if-eqz v0, :cond_34

    .line 2527
    :try_start_20
    invoke-virtual {v5}, Lcom/android/server/wm/WindowState;->getAttrs()Landroid/view/WindowManager$LayoutParams;

    move-result-object v0

    iget-object v2, v1, Lcom/android/server/wm/WindowManagerService;->mTmpRect:Landroid/graphics/Rect;

    invoke-virtual {v5, v0, v2}, Lcom/android/server/wm/WindowState;->calculateSurfaceBounds(Landroid/view/WindowManager$LayoutParams;Landroid/graphics/Rect;)V

    .line 2528
    iget-object v0, v1, Lcom/android/server/wm/WindowManagerService;->mTmpRect:Landroid/graphics/Rect;

    invoke-virtual {v0}, Landroid/graphics/Rect;->width()I

    move-result v0

    iget-object v2, v1, Lcom/android/server/wm/WindowManagerService;->mTmpRect:Landroid/graphics/Rect;

    invoke-virtual {v2}, Landroid/graphics/Rect;->height()I

    move-result v2
    :try_end_20
    .catchall {:try_start_20 .. :try_end_20} :catchall_a

    move-object/from16 v3, p15

    :try_start_21
    invoke-virtual {v3, v0, v2}, Landroid/graphics/Point;->set(II)V
    :try_end_21
    .catchall {:try_start_21 .. :try_end_21} :catchall_9

    goto :goto_20

    .line 2531
    .end local v5    # "win":Lcom/android/server/wm/WindowState;
    .end local v8    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v9    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .end local v12    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .end local v14    # "configChanged":Z
    .end local v15    # "rotatedDisplayInfo":Landroid/view/DisplayInfo;
    .end local v16    # "focusMayChange":Z
    .end local v17    # "wallpaperMayMove":Z
    .end local v19    # "toBeDisplayed":Z
    .end local v21    # "becameVisible":Z
    .end local v22    # "imMayMove":Z
    .end local v23    # "privateFlagChanges":I
    .end local v25    # "attrChanges":I
    .end local v28    # "flagChanges":I
    .end local v29    # "shouldRelayout":Z
    .end local v35    # "oldVisibility":I
    :catchall_9
    move-exception v0

    goto :goto_1f

    :catchall_a
    move-exception v0

    move-object/from16 v3, p15

    :goto_1f
    move-object/from16 v2, p14

    goto :goto_22

    .line 2526
    .restart local v5    # "win":Lcom/android/server/wm/WindowState;
    .restart local v8    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v9    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .restart local v12    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .restart local v14    # "configChanged":Z
    .restart local v15    # "rotatedDisplayInfo":Landroid/view/DisplayInfo;
    .restart local v16    # "focusMayChange":Z
    .restart local v17    # "wallpaperMayMove":Z
    .restart local v19    # "toBeDisplayed":Z
    .restart local v21    # "becameVisible":Z
    .restart local v22    # "imMayMove":Z
    .restart local v23    # "privateFlagChanges":I
    .restart local v25    # "attrChanges":I
    .restart local v28    # "flagChanges":I
    .restart local v29    # "shouldRelayout":Z
    .restart local v35    # "oldVisibility":I
    :cond_34
    move-object/from16 v3, p15

    .line 2530
    :goto_20
    move-object/from16 v2, p14

    :try_start_22
    invoke-direct {v1, v5, v2}, Lcom/android/server/wm/WindowManagerService;->getInsetsSourceControls(Lcom/android/server/wm/WindowState;[Landroid/view/InsetsSourceControl;)V

    .line 2531
    .end local v5    # "win":Lcom/android/server/wm/WindowState;
    .end local v8    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v9    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .end local v12    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .end local v15    # "rotatedDisplayInfo":Landroid/view/DisplayInfo;
    .end local v16    # "focusMayChange":Z
    .end local v17    # "wallpaperMayMove":Z
    .end local v19    # "toBeDisplayed":Z
    .end local v21    # "becameVisible":Z
    .end local v22    # "imMayMove":Z
    .end local v23    # "privateFlagChanges":I
    .end local v25    # "attrChanges":I
    .end local v28    # "flagChanges":I
    .end local v29    # "shouldRelayout":Z
    .end local v35    # "oldVisibility":I
    monitor-exit v11
    :try_end_22
    .catchall {:try_start_22 .. :try_end_22} :catchall_11

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 2533
    invoke-static/range {v32 .. v33}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 2534
    return v6

    .line 2531
    .end local v6    # "result":I
    .end local v14    # "configChanged":Z
    .restart local v10    # "result":I
    :catchall_b
    move-exception v0

    move-object/from16 v2, p14

    move-object/from16 v3, p15

    move v6, v10

    goto :goto_22

    .line 2424
    .end local v10    # "result":I
    .restart local v2    # "shouldRelayout":Z
    .restart local v5    # "win":Lcom/android/server/wm/WindowState;
    .restart local v6    # "result":I
    .restart local v7    # "wallpaperMayMove":Z
    .restart local v8    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v12    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .restart local v21    # "becameVisible":Z
    .restart local v22    # "imMayMove":Z
    .restart local v23    # "privateFlagChanges":I
    .restart local v25    # "attrChanges":I
    .restart local v28    # "flagChanges":I
    .restart local v30    # "focusMayChange":Z
    .restart local v35    # "oldVisibility":I
    .restart local v37    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    :catchall_c
    move-exception v0

    move-object/from16 v3, p15

    move/from16 v29, v2

    move/from16 v17, v7

    move-object/from16 v9, v37

    move-object/from16 v2, p14

    .end local v2    # "shouldRelayout":Z
    .end local v7    # "wallpaperMayMove":Z
    .end local v37    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .restart local v9    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .restart local v17    # "wallpaperMayMove":Z
    .restart local v29    # "shouldRelayout":Z
    const-wide/16 v13, 0x20

    :try_start_23
    invoke-static {v13, v14}, Landroid/os/Trace;->traceEnd(J)V

    .line 2425
    nop

    .end local v6    # "result":I
    .end local v26    # "pid":I
    .end local v27    # "uid":I
    .end local v32    # "origId":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "session":Lcom/android/server/wm/Session;
    .end local p2    # "client":Landroid/view/IWindow;
    .end local p3    # "attrs":Landroid/view/WindowManager$LayoutParams;
    .end local p4    # "requestedWidth":I
    .end local p5    # "requestedHeight":I
    .end local p6    # "viewVisibility":I
    .end local p7    # "flags":I
    .end local p8    # "frameNumber":J
    .end local p10    # "outFrames":Landroid/window/ClientWindowFrames;
    .end local p11    # "mergedConfiguration":Landroid/util/MergedConfiguration;
    .end local p12    # "outSurfaceControl":Landroid/view/SurfaceControl;
    .end local p13    # "outInsetsState":Landroid/view/InsetsState;
    .end local p14    # "outActiveControls":[Landroid/view/InsetsSourceControl;
    .end local p15    # "outSurfaceSize":Landroid/graphics/Point;
    throw v0

    .line 2531
    .end local v5    # "win":Lcom/android/server/wm/WindowState;
    .end local v8    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v9    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .end local v12    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .end local v17    # "wallpaperMayMove":Z
    .end local v21    # "becameVisible":Z
    .end local v22    # "imMayMove":Z
    .end local v23    # "privateFlagChanges":I
    .end local v25    # "attrChanges":I
    .end local v28    # "flagChanges":I
    .end local v29    # "shouldRelayout":Z
    .end local v30    # "focusMayChange":Z
    .end local v35    # "oldVisibility":I
    .restart local v6    # "result":I
    .restart local v26    # "pid":I
    .restart local v27    # "uid":I
    .restart local v32    # "origId":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "session":Lcom/android/server/wm/Session;
    .restart local p2    # "client":Landroid/view/IWindow;
    .restart local p3    # "attrs":Landroid/view/WindowManager$LayoutParams;
    .restart local p4    # "requestedWidth":I
    .restart local p5    # "requestedHeight":I
    .restart local p6    # "viewVisibility":I
    .restart local p7    # "flags":I
    .restart local p8    # "frameNumber":J
    .restart local p10    # "outFrames":Landroid/window/ClientWindowFrames;
    .restart local p11    # "mergedConfiguration":Landroid/util/MergedConfiguration;
    .restart local p12    # "outSurfaceControl":Landroid/view/SurfaceControl;
    .restart local p13    # "outInsetsState":Landroid/view/InsetsState;
    .restart local p14    # "outActiveControls":[Landroid/view/InsetsSourceControl;
    .restart local p15    # "outSurfaceSize":Landroid/graphics/Point;
    :catchall_d
    move-exception v0

    move-object/from16 v2, p14

    move-object/from16 v3, p15

    goto :goto_22

    .end local v32    # "origId":J
    .local v9, "origId":J
    :catchall_e
    move-exception v0

    move-object/from16 v3, p15

    move-object v2, v5

    move-wide/from16 v32, v9

    .end local v9    # "origId":J
    .restart local v32    # "origId":J
    :goto_21
    goto :goto_22

    .end local v27    # "uid":I
    .end local v32    # "origId":J
    .local v8, "uid":I
    .restart local v9    # "origId":J
    :catchall_f
    move-exception v0

    move-object/from16 v3, p15

    move-object v2, v5

    move/from16 v27, v8

    move-wide/from16 v32, v9

    .end local v8    # "uid":I
    .end local v9    # "origId":J
    .restart local v27    # "uid":I
    .restart local v32    # "origId":J
    goto :goto_22

    .end local v26    # "pid":I
    .end local v27    # "uid":I
    .end local v32    # "origId":J
    .local v7, "pid":I
    .restart local v8    # "uid":I
    .restart local v9    # "origId":J
    :catchall_10
    move-exception v0

    move-object/from16 v3, p15

    move-object v2, v5

    move/from16 v26, v7

    move/from16 v27, v8

    move-wide/from16 v32, v9

    .end local v7    # "pid":I
    .end local v8    # "uid":I
    .end local v9    # "origId":J
    .restart local v26    # "pid":I
    .restart local v27    # "uid":I
    .restart local v32    # "origId":J
    :goto_22
    monitor-exit v11
    :try_end_23
    .catchall {:try_start_23 .. :try_end_23} :catchall_11

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    :catchall_11
    move-exception v0

    goto :goto_22
.end method

.method public removeObsoleteTaskFiles(Landroid/util/ArraySet;[I)V
    .locals 2
    .param p2, "runningUserIds"    # [I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/util/ArraySet<",
            "Ljava/lang/Integer;",
            ">;[I)V"
        }
    .end annotation

    .line 3825
    .local p1, "persistentTaskIds":Landroid/util/ArraySet;, "Landroid/util/ArraySet<Ljava/lang/Integer;>;"
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 3826
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTaskSnapshotController:Lcom/android/server/wm/TaskSnapshotController;

    invoke-virtual {v1, p1, p2}, Lcom/android/server/wm/TaskSnapshotController;->removeObsoleteTaskFiles(Landroid/util/ArraySet;[I)V

    .line 3827
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 3828
    return-void

    .line 3827
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public removeRotationWatcher(Landroid/view/IRotationWatcher;)V
    .locals 8
    .param p1, "watcher"    # Landroid/view/IRotationWatcher;

    .line 4220
    invoke-interface {p1}, Landroid/view/IRotationWatcher;->asBinder()Landroid/os/IBinder;

    move-result-object v0

    .line 4221
    .local v0, "watcherBinder":Landroid/os/IBinder;
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v1

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 4222
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_0
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mRotationWatchers:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    if-ge v2, v3, :cond_2

    .line 4223
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mRotationWatchers:Ljava/util/ArrayList;

    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/wm/WindowManagerService$RotationWatcher;

    .line 4224
    .local v3, "rotationWatcher":Lcom/android/server/wm/WindowManagerService$RotationWatcher;
    iget-object v4, v3, Lcom/android/server/wm/WindowManagerService$RotationWatcher;->mWatcher:Landroid/view/IRotationWatcher;

    invoke-interface {v4}, Landroid/view/IRotationWatcher;->asBinder()Landroid/os/IBinder;

    move-result-object v4

    if-ne v0, v4, :cond_1

    .line 4225
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mRotationWatchers:Ljava/util/ArrayList;

    invoke-virtual {v4, v2}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/wm/WindowManagerService$RotationWatcher;

    .line 4226
    .local v4, "removed":Lcom/android/server/wm/WindowManagerService$RotationWatcher;
    iget-object v5, v4, Lcom/android/server/wm/WindowManagerService$RotationWatcher;->mWatcher:Landroid/view/IRotationWatcher;

    invoke-interface {v5}, Landroid/view/IRotationWatcher;->asBinder()Landroid/os/IBinder;

    move-result-object v5

    .line 4227
    .local v5, "binder":Landroid/os/IBinder;
    if-eqz v5, :cond_0

    .line 4228
    iget-object v6, v4, Lcom/android/server/wm/WindowManagerService$RotationWatcher;->mDeathRecipient:Landroid/os/IBinder$DeathRecipient;

    const/4 v7, 0x0

    invoke-interface {v5, v6, v7}, Landroid/os/IBinder;->unlinkToDeath(Landroid/os/IBinder$DeathRecipient;I)Z

    .line 4230
    :cond_0
    add-int/lit8 v2, v2, -0x1

    .line 4222
    .end local v3    # "rotationWatcher":Lcom/android/server/wm/WindowManagerService$RotationWatcher;
    .end local v4    # "removed":Lcom/android/server/wm/WindowManagerService$RotationWatcher;
    .end local v5    # "binder":Landroid/os/IBinder;
    :cond_1
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 4233
    .end local v2    # "i":I
    :cond_2
    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 4234
    return-void

    .line 4233
    :catchall_0
    move-exception v2

    :try_start_1
    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v2
.end method

.method removeWindow(Lcom/android/server/wm/Session;Landroid/view/IWindow;)V
    .locals 3
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;

    .line 2025
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 2026
    const/4 v1, 0x0

    invoke-virtual {p0, p1, p2, v1}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;

    move-result-object v1

    .line 2027
    .local v1, "win":Lcom/android/server/wm/WindowState;
    if-eqz v1, :cond_0

    .line 2028
    invoke-virtual {v1}, Lcom/android/server/wm/WindowState;->removeIfPossible()V

    .line 2029
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 2033
    :cond_0
    :try_start_1
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mEmbeddedWindowController:Lcom/android/server/wm/EmbeddedWindowController;

    invoke-virtual {v2, p2}, Lcom/android/server/wm/EmbeddedWindowController;->remove(Landroid/view/IWindow;)V

    .line 2034
    .end local v1    # "win":Lcom/android/server/wm/WindowState;
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 2035
    return-void

    .line 2034
    :catchall_0
    move-exception v1

    :try_start_2
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public removeWindowChangeListener(Lcom/android/server/wm/WindowManagerService$WindowChangeListener;)V
    .locals 2
    .param p1, "listener"    # Lcom/android/server/wm/WindowManagerService$WindowChangeListener;

    .line 4668
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 4669
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowChangeListeners:Ljava/util/ArrayList;

    invoke-virtual {v1, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 4670
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 4671
    return-void

    .line 4670
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public removeWindowToken(Landroid/os/IBinder;I)V
    .locals 16
    .param p1, "binder"    # Landroid/os/IBinder;
    .param p2, "displayId"    # I

    .line 2821
    move-object/from16 v1, p0

    move/from16 v2, p2

    const-string v0, "android.permission.MANAGE_APP_TOKENS"

    const-string v3, "removeWindowToken()"

    invoke-virtual {v1, v0, v3}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_4

    .line 2824
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v3

    .line 2826
    .local v3, "origId":J
    :try_start_0
    iget-object v5, v1, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v5
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_3

    :try_start_1
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 2827
    iget-object v0, v1, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v0, v2}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 2829
    .local v0, "dc":Lcom/android/server/wm/DisplayContent;
    const/4 v6, 0x0

    const/4 v7, 0x1

    if-nez v0, :cond_1

    .line 2830
    sget-boolean v8, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v8, :cond_0

    invoke-static/range {p1 .. p1}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v8

    .local v8, "protoLogParam0":Ljava/lang/String;
    int-to-long v9, v2

    .local v9, "protoLogParam1":J
    sget-object v11, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const v12, 0x67ab9823

    const/4 v13, 0x4

    const-string v14, "removeWindowToken: Attempted to remove token: %s for non-exiting displayId=%d"

    const/4 v15, 0x2

    new-array v15, v15, [Ljava/lang/Object;

    aput-object v8, v15, v6

    invoke-static {v9, v10}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v6

    aput-object v6, v15, v7

    invoke-static {v11, v12, v13, v14, v15}, Lcom/android/internal/protolog/ProtoLogImpl;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 2832
    .end local v8    # "protoLogParam0":Ljava/lang/String;
    .end local v9    # "protoLogParam1":J
    :cond_0
    monitor-exit v5
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 2844
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v3, v4}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 2832
    return-void

    .line 2834
    :cond_1
    move-object/from16 v8, p1

    :try_start_2
    invoke-virtual {v0, v8}, Lcom/android/server/wm/DisplayContent;->removeWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/WindowToken;

    move-result-object v9

    .line 2835
    .local v9, "token":Lcom/android/server/wm/WindowToken;
    if-nez v9, :cond_3

    .line 2836
    sget-boolean v10, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v10, :cond_2

    invoke-static/range {p1 .. p1}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v10

    .local v10, "protoLogParam0":Ljava/lang/String;
    sget-object v11, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const v12, 0x5a8266d6

    const-string v13, "removeWindowToken: Attempted to remove non-existing token: %s"

    new-array v7, v7, [Ljava/lang/Object;

    aput-object v10, v7, v6

    invoke-static {v11, v12, v6, v13, v7}, Lcom/android/internal/protolog/ProtoLogImpl;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 2839
    .end local v10    # "protoLogParam0":Ljava/lang/String;
    :cond_2
    monitor-exit v5
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_2

    .line 2844
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v3, v4}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 2839
    return-void

    .line 2841
    :cond_3
    :try_start_3
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getInputMonitor()Lcom/android/server/wm/InputMonitor;

    move-result-object v6

    invoke-virtual {v6, v7}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    .line 2842
    .end local v0    # "dc":Lcom/android/server/wm/DisplayContent;
    .end local v9    # "token":Lcom/android/server/wm/WindowToken;
    monitor-exit v5
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_2

    :try_start_4
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 2844
    invoke-static {v3, v4}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 2845
    nop

    .line 2846
    return-void

    .line 2842
    :catchall_0
    move-exception v0

    move-object/from16 v8, p1

    :goto_0
    :try_start_5
    monitor-exit v5
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_2

    :try_start_6
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .end local v3    # "origId":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "binder":Landroid/os/IBinder;
    .end local p2    # "displayId":I
    throw v0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    .line 2844
    .restart local v3    # "origId":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "binder":Landroid/os/IBinder;
    .restart local p2    # "displayId":I
    :catchall_1
    move-exception v0

    goto :goto_1

    .line 2842
    :catchall_2
    move-exception v0

    goto :goto_0

    .line 2844
    :catchall_3
    move-exception v0

    move-object/from16 v8, p1

    :goto_1
    invoke-static {v3, v4}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 2845
    throw v0

    .line 2822
    .end local v3    # "origId":J
    :cond_4
    move-object/from16 v8, p1

    new-instance v0, Ljava/lang/SecurityException;

    const-string v3, "Requires MANAGE_APP_TOKENS permission"

    invoke-direct {v0, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method reportFocusChanged(Landroid/os/IBinder;Landroid/os/IBinder;)V
    .locals 11
    .param p1, "oldToken"    # Landroid/os/IBinder;
    .param p2, "newToken"    # Landroid/os/IBinder;

    .line 4924
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 4925
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mInputToWindowMap:Ljava/util/HashMap;

    invoke-virtual {v1, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/WindowState;

    .line 4926
    .local v1, "lastFocus":Lcom/android/server/wm/WindowState;
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mInputToWindowMap:Ljava/util/HashMap;

    invoke-virtual {v2, p2}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/WindowState;

    .line 4927
    .local v2, "newFocus":Lcom/android/server/wm/WindowState;
    sget-boolean v3, Lcom/android/server/wm/ProtoLogCache;->WM_DEBUG_FOCUS_LIGHT_enabled:Z

    const/4 v4, 0x1

    const/4 v5, 0x0

    if-eqz v3, :cond_0

    invoke-static {v1}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v3

    .local v3, "protoLogParam0":Ljava/lang/String;
    invoke-static {v2}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v6

    .local v6, "protoLogParam1":Ljava/lang/String;
    sget-object v7, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_FOCUS_LIGHT:Lcom/android/internal/protolog/ProtoLogGroup;

    const v8, 0x6e03aeb

    const/4 v9, 0x0

    const/4 v10, 0x2

    new-array v10, v10, [Ljava/lang/Object;

    aput-object v3, v10, v5

    aput-object v6, v10, v4

    invoke-static {v7, v8, v5, v9, v10}, Lcom/android/internal/protolog/ProtoLogImpl;->i(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 4928
    .end local v3    # "protoLogParam0":Ljava/lang/String;
    .end local v6    # "protoLogParam1":Ljava/lang/String;
    :cond_0
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 4930
    if-eqz v2, :cond_1

    .line 4931
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAnrController:Lcom/android/server/wm/AnrController;

    invoke-virtual {v0, v2}, Lcom/android/server/wm/AnrController;->onFocusChanged(Lcom/android/server/wm/WindowState;)V

    .line 4932
    invoke-virtual {v2, v4}, Lcom/android/server/wm/WindowState;->reportFocusChangedSerialized(Z)V

    .line 4933
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->notifyFocusChanged()V

    .line 4936
    :cond_1
    if-eqz v1, :cond_2

    .line 4937
    invoke-virtual {v1, v5}, Lcom/android/server/wm/WindowState;->reportFocusChangedSerialized(Z)V

    .line 4939
    :cond_2
    return-void

    .line 4928
    .end local v1    # "lastFocus":Lcom/android/server/wm/WindowState;
    .end local v2    # "newFocus":Lcom/android/server/wm/WindowState;
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method reportSystemGestureExclusionChanged(Lcom/android/server/wm/Session;Landroid/view/IWindow;Ljava/util/List;)V
    .locals 3
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "window"    # Landroid/view/IWindow;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Lcom/android/server/wm/Session;",
            "Landroid/view/IWindow;",
            "Ljava/util/List<",
            "Landroid/graphics/Rect;",
            ">;)V"
        }
    .end annotation

    .line 4287
    .local p3, "exclusionRects":Ljava/util/List;, "Ljava/util/List<Landroid/graphics/Rect;>;"
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 4288
    const/4 v1, 0x1

    invoke-virtual {p0, p1, p2, v1}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;

    move-result-object v1

    .line 4289
    .local v1, "win":Lcom/android/server/wm/WindowState;
    invoke-virtual {v1, p3}, Lcom/android/server/wm/WindowState;->setSystemGestureExclusion(Ljava/util/List;)Z

    move-result v2

    if-eqz v2, :cond_0

    .line 4290
    invoke-virtual {v1}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v2

    invoke-virtual {v2}, Lcom/android/server/wm/DisplayContent;->updateSystemGestureExclusion()Z

    .line 4292
    .end local v1    # "win":Lcom/android/server/wm/WindowState;
    :cond_0
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 4293
    return-void

    .line 4292
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public requestAppKeyboardShortcuts(Lcom/android/internal/os/IResultReceiver;I)V
    .locals 2
    .param p1, "receiver"    # Lcom/android/internal/os/IResultReceiver;
    .param p2, "deviceId"    # I

    .line 6830
    :try_start_0
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->getFocusedWindow()Lcom/android/server/wm/WindowState;

    move-result-object v0

    .line 6831
    .local v0, "focusedWindow":Lcom/android/server/wm/WindowState;
    if-eqz v0, :cond_0

    iget-object v1, v0, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    if-eqz v1, :cond_0

    .line 6832
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->getFocusedWindow()Lcom/android/server/wm/WindowState;

    move-result-object v1

    iget-object v1, v1, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    invoke-interface {v1, p1, p2}, Landroid/view/IWindow;->requestAppKeyboardShortcuts(Lcom/android/internal/os/IResultReceiver;I)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 6835
    .end local v0    # "focusedWindow":Lcom/android/server/wm/WindowState;
    :cond_0
    goto :goto_0

    .line 6834
    :catch_0
    move-exception v0

    .line 6836
    :goto_0
    return-void
.end method

.method public requestAssistScreenshot(Landroid/app/IAssistDataReceiver;)Z
    .locals 3
    .param p1, "receiver"    # Landroid/app/IAssistDataReceiver;

    .line 3778
    const-string v0, "android.permission.READ_FRAME_BUFFER"

    const-string v1, "requestAssistScreenshot()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 3783
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 3784
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    const/4 v2, 0x0

    invoke-virtual {v1, v2}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 3785
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v1, :cond_0

    .line 3790
    const/4 v2, 0x0

    .local v2, "bm":Landroid/graphics/Bitmap;
    goto :goto_0

    .line 3792
    .end local v2    # "bm":Landroid/graphics/Bitmap;
    :cond_0
    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->screenshotDisplayLocked()Landroid/graphics/Bitmap;

    move-result-object v2

    .line 3794
    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v2    # "bm":Landroid/graphics/Bitmap;
    :goto_0
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 3796
    invoke-static {}, Lcom/android/server/FgThread;->getHandler()Landroid/os/Handler;

    move-result-object v0

    new-instance v1, Lcom/android/server/wm/WindowManagerService$$ExternalSyntheticLambda1;

    invoke-direct {v1, p1, v2}, Lcom/android/server/wm/WindowManagerService$$ExternalSyntheticLambda1;-><init>(Landroid/app/IAssistDataReceiver;Landroid/graphics/Bitmap;)V

    invoke-virtual {v0, v1}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    .line 3803
    const/4 v0, 0x1

    return v0

    .line 3794
    .end local v2    # "bm":Landroid/graphics/Bitmap;
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1

    .line 3779
    :cond_1
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires READ_FRAME_BUFFER permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public requestScrollCapture(ILandroid/os/IBinder;ILandroid/view/IScrollCaptureResponseListener;)V
    .locals 17
    .param p1, "displayId"    # I
    .param p2, "behindClient"    # Landroid/os/IBinder;
    .param p3, "taskId"    # I
    .param p4, "listener"    # Landroid/view/IScrollCaptureResponseListener;

    .line 7031
    move-object/from16 v1, p0

    move/from16 v2, p1

    move-object/from16 v3, p2

    move-object/from16 v4, p4

    const-string v0, "android.permission.READ_FRAME_BUFFER"

    const-string v5, "requestScrollCapture()"

    invoke-virtual {v1, v0, v5}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_6

    .line 7034
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v5

    .line 7036
    .local v5, "token":J
    const/4 v7, 0x1

    const/4 v8, 0x0

    :try_start_0
    new-instance v0, Landroid/view/ScrollCaptureResponse$Builder;

    invoke-direct {v0}, Landroid/view/ScrollCaptureResponse$Builder;-><init>()V

    move-object v9, v0

    .line 7037
    .local v9, "responseBuilder":Landroid/view/ScrollCaptureResponse$Builder;
    iget-object v10, v1, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v10
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_2
    .catchall {:try_start_0 .. :try_end_0} :catchall_2

    :try_start_1
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 7038
    iget-object v0, v1, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v0, v2}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    move-object v11, v0

    .line 7039
    .local v11, "dc":Lcom/android/server/wm/DisplayContent;
    if-nez v11, :cond_1

    .line 7040
    sget-boolean v0, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v0, :cond_0

    int-to-long v12, v2

    .local v12, "protoLogParam0":J
    sget-object v0, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const-string v15, "Invalid displayId for requestScrollCapture: %d"

    new-array v14, v7, [Ljava/lang/Object;

    invoke-static {v12, v13}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v16

    aput-object v16, v14, v8

    const v8, 0x269025b8    # 1.0002231E-15f

    invoke-static {v0, v8, v7, v15, v14}, Lcom/android/internal/protolog/ProtoLogImpl;->e(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 7042
    .end local v12    # "protoLogParam0":J
    :cond_0
    const-string v0, "bad displayId: %d"

    new-array v8, v7, [Ljava/lang/Object;

    invoke-static/range {p1 .. p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v12

    const/4 v13, 0x0

    aput-object v12, v8, v13

    invoke-static {v0, v8}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v9, v0}, Landroid/view/ScrollCaptureResponse$Builder;->setDescription(Ljava/lang/String;)Landroid/view/ScrollCaptureResponse$Builder;

    .line 7043
    invoke-virtual {v9}, Landroid/view/ScrollCaptureResponse$Builder;->build()Landroid/view/ScrollCaptureResponse;

    move-result-object v0

    invoke-interface {v4, v0}, Landroid/view/IScrollCaptureResponseListener;->onScrollCaptureResponse(Landroid/view/ScrollCaptureResponse;)V

    .line 7044
    monitor-exit v10
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 7072
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v5, v6}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 7044
    return-void

    .line 7046
    :cond_1
    const/4 v0, 0x0

    .line 7047
    .local v0, "topWindow":Lcom/android/server/wm/WindowState;
    if-eqz v3, :cond_2

    .line 7048
    const/4 v8, 0x0

    const/4 v12, 0x0

    :try_start_2
    invoke-virtual {v1, v8, v3, v12}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/os/IBinder;Z)Lcom/android/server/wm/WindowState;

    move-result-object v8
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    move-object v0, v8

    goto :goto_0

    .line 7047
    :cond_2
    move-object v8, v0

    .line 7050
    .end local v0    # "topWindow":Lcom/android/server/wm/WindowState;
    .local v8, "topWindow":Lcom/android/server/wm/WindowState;
    :goto_0
    move/from16 v12, p3

    :try_start_3
    invoke-virtual {v11, v8, v12}, Lcom/android/server/wm/DisplayContent;->findScrollCaptureTargetWindow(Lcom/android/server/wm/WindowState;I)Lcom/android/server/wm/WindowState;

    move-result-object v0

    move-object v13, v0

    .line 7051
    .local v13, "targetWindow":Lcom/android/server/wm/WindowState;
    if-nez v13, :cond_3

    .line 7052
    const-string v0, "findScrollCaptureTargetWindow returned null"

    invoke-virtual {v9, v0}, Landroid/view/ScrollCaptureResponse$Builder;->setDescription(Ljava/lang/String;)Landroid/view/ScrollCaptureResponse$Builder;

    .line 7053
    invoke-virtual {v9}, Landroid/view/ScrollCaptureResponse$Builder;->build()Landroid/view/ScrollCaptureResponse;

    move-result-object v0

    invoke-interface {v4, v0}, Landroid/view/IScrollCaptureResponseListener;->onScrollCaptureResponse(Landroid/view/ScrollCaptureResponse;)V

    .line 7054
    monitor-exit v10
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 7072
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v5, v6}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 7054
    return-void

    .line 7058
    :cond_3
    :try_start_4
    iget-object v0, v13, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    invoke-interface {v0, v4}, Landroid/view/IWindow;->requestScrollCapture(Landroid/view/IScrollCaptureResponseListener;)V
    :try_end_4
    .catch Landroid/os/RemoteException; {:try_start_4 .. :try_end_4} :catch_0
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 7066
    goto :goto_1

    .line 7059
    :catch_0
    move-exception v0

    .line 7060
    .local v0, "e":Landroid/os/RemoteException;
    :try_start_5
    sget-boolean v14, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v14, :cond_4

    iget-object v14, v13, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    invoke-interface {v14}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    move-result-object v14

    invoke-static {v14}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v14

    .local v14, "protoLogParam0":Ljava/lang/String;
    sget-object v15, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const-string v7, "requestScrollCapture: caught exception dispatching to window.token=%s"

    const/4 v1, 0x1

    new-array v2, v1, [Ljava/lang/Object;

    const/4 v1, 0x0

    aput-object v14, v2, v1

    const v3, -0x5a7973b0

    invoke-static {v15, v3, v1, v7, v2}, Lcom/android/internal/protolog/ProtoLogImpl;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 7063
    .end local v14    # "protoLogParam0":Ljava/lang/String;
    :cond_4
    invoke-virtual {v13}, Lcom/android/server/wm/WindowState;->getName()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v9, v1}, Landroid/view/ScrollCaptureResponse$Builder;->setWindowTitle(Ljava/lang/String;)Landroid/view/ScrollCaptureResponse$Builder;

    .line 7064
    const-string v1, "caught exception: %s"

    const/4 v2, 0x1

    new-array v3, v2, [Ljava/lang/Object;

    const/4 v2, 0x0

    aput-object v0, v3, v2

    invoke-static {v1, v3}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v9, v1}, Landroid/view/ScrollCaptureResponse$Builder;->setDescription(Ljava/lang/String;)Landroid/view/ScrollCaptureResponse$Builder;

    .line 7065
    invoke-virtual {v9}, Landroid/view/ScrollCaptureResponse$Builder;->build()Landroid/view/ScrollCaptureResponse;

    move-result-object v1

    invoke-interface {v4, v1}, Landroid/view/IScrollCaptureResponseListener;->onScrollCaptureResponse(Landroid/view/ScrollCaptureResponse;)V

    .line 7067
    .end local v0    # "e":Landroid/os/RemoteException;
    .end local v8    # "topWindow":Lcom/android/server/wm/WindowState;
    .end local v11    # "dc":Lcom/android/server/wm/DisplayContent;
    .end local v13    # "targetWindow":Lcom/android/server/wm/WindowState;
    :goto_1
    monitor-exit v10
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    :try_start_6
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V
    :try_end_6
    .catch Landroid/os/RemoteException; {:try_start_6 .. :try_end_6} :catch_1
    .catchall {:try_start_6 .. :try_end_6} :catchall_3

    goto :goto_4

    :catchall_0
    move-exception v0

    move/from16 v12, p3

    :goto_2
    :try_start_7
    monitor-exit v10
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_1

    :try_start_8
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .end local v5    # "token":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "displayId":I
    .end local p2    # "behindClient":Landroid/os/IBinder;
    .end local p3    # "taskId":I
    .end local p4    # "listener":Landroid/view/IScrollCaptureResponseListener;
    throw v0
    :try_end_8
    .catch Landroid/os/RemoteException; {:try_start_8 .. :try_end_8} :catch_1
    .catchall {:try_start_8 .. :try_end_8} :catchall_3

    .line 7068
    .end local v9    # "responseBuilder":Landroid/view/ScrollCaptureResponse$Builder;
    .restart local v5    # "token":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "displayId":I
    .restart local p2    # "behindClient":Landroid/os/IBinder;
    .restart local p3    # "taskId":I
    .restart local p4    # "listener":Landroid/view/IScrollCaptureResponseListener;
    :catch_1
    move-exception v0

    goto :goto_3

    .line 7067
    .restart local v9    # "responseBuilder":Landroid/view/ScrollCaptureResponse$Builder;
    :catchall_1
    move-exception v0

    goto :goto_2

    .line 7072
    .end local v9    # "responseBuilder":Landroid/view/ScrollCaptureResponse$Builder;
    :catchall_2
    move-exception v0

    move/from16 v12, p3

    goto :goto_5

    .line 7068
    :catch_2
    move-exception v0

    move/from16 v12, p3

    .line 7069
    .restart local v0    # "e":Landroid/os/RemoteException;
    :goto_3
    :try_start_9
    sget-boolean v1, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v1, :cond_5

    invoke-static {v0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v1

    .local v1, "protoLogParam0":Ljava/lang/String;
    sget-object v2, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const v3, 0x3e66c5be

    const-string v7, "requestScrollCapture: caught exception dispatching callback: %s"

    const/4 v8, 0x1

    new-array v8, v8, [Ljava/lang/Object;

    const/4 v9, 0x0

    aput-object v1, v8, v9

    invoke-static {v2, v3, v9, v7, v8}, Lcom/android/internal/protolog/ProtoLogImpl;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_3

    .line 7072
    .end local v0    # "e":Landroid/os/RemoteException;
    .end local v1    # "protoLogParam0":Ljava/lang/String;
    :cond_5
    :goto_4
    invoke-static {v5, v6}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 7073
    nop

    .line 7074
    return-void

    .line 7072
    :catchall_3
    move-exception v0

    :goto_5
    invoke-static {v5, v6}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 7073
    throw v0

    .line 7032
    .end local v5    # "token":J
    :cond_6
    move/from16 v12, p3

    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires READ_FRAME_BUFFER permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method requestTraversal()V
    .locals 1

    .line 5685
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    invoke-virtual {v0}, Lcom/android/server/wm/WindowSurfacePlacer;->requestTraversal()V

    .line 5686
    return-void
.end method

.method restorePointerIconLocked(Lcom/android/server/wm/DisplayContent;FF)V
    .locals 7
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;
    .param p2, "latestX"    # F
    .param p3, "latestY"    # F

    .line 6947
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mMousePositionTracker:Lcom/android/server/wm/WindowManagerService$MousePositionTracker;

    invoke-virtual {v0, p2, p3}, Lcom/android/server/wm/WindowManagerService$MousePositionTracker;->updatePosition(FF)V

    .line 6949
    nop

    .line 6950
    invoke-virtual {p1, p2, p3}, Lcom/android/server/wm/DisplayContent;->getTouchableWinAtPointLocked(FF)Lcom/android/server/wm/WindowState;

    move-result-object v0

    .line 6951
    .local v0, "windowUnderPointer":Lcom/android/server/wm/WindowState;
    if-eqz v0, :cond_1

    .line 6953
    :try_start_0
    iget-object v1, v0, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    .line 6954
    invoke-virtual {v0, p2}, Lcom/android/server/wm/WindowState;->translateToWindowX(F)F

    move-result v2

    .line 6955
    invoke-virtual {v0, p3}, Lcom/android/server/wm/WindowState;->translateToWindowY(F)F

    move-result v3

    .line 6953
    invoke-interface {v1, v2, v3}, Landroid/view/IWindow;->updatePointerIcon(FF)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_0

    .line 6956
    :catch_0
    move-exception v1

    .line 6957
    .local v1, "e":Landroid/os/RemoteException;
    sget-boolean v2, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v2, :cond_0

    sget-object v2, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const v3, 0x54d7a428

    const/4 v4, 0x0

    const/4 v5, 0x0

    check-cast v5, [Ljava/lang/Object;

    const-string v6, "unable to restore pointer icon"

    invoke-static {v2, v3, v4, v6, v5}, Lcom/android/internal/protolog/ProtoLogImpl;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 6958
    .end local v1    # "e":Landroid/os/RemoteException;
    :cond_0
    :goto_0
    goto :goto_1

    .line 6960
    :cond_1
    invoke-static {}, Landroid/hardware/input/InputManager;->getInstance()Landroid/hardware/input/InputManager;

    move-result-object v1

    const/16 v2, 0x3e8

    invoke-virtual {v1, v2}, Landroid/hardware/input/InputManager;->setPointerIconType(I)V

    .line 6962
    :goto_1
    return-void
.end method

.method saveANRStateLocked(Lcom/android/server/wm/ActivityRecord;Lcom/android/server/wm/WindowState;Ljava/lang/String;)V
    .locals 9
    .param p1, "activity"    # Lcom/android/server/wm/ActivityRecord;
    .param p2, "windowState"    # Lcom/android/server/wm/WindowState;
    .param p3, "reason"    # Ljava/lang/String;

    .line 6435
    new-instance v0, Ljava/io/StringWriter;

    invoke-direct {v0}, Ljava/io/StringWriter;-><init>()V

    .line 6436
    .local v0, "sw":Ljava/io/StringWriter;
    new-instance v1, Lcom/android/internal/util/FastPrintWriter;

    const/4 v2, 0x0

    const/16 v3, 0x400

    invoke-direct {v1, v0, v2, v3}, Lcom/android/internal/util/FastPrintWriter;-><init>(Ljava/io/Writer;ZI)V

    .line 6437
    .local v1, "pw":Ljava/io/PrintWriter;
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "  ANR time: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {}, Ljava/text/DateFormat;->getDateTimeInstance()Ljava/text/DateFormat;

    move-result-object v3

    new-instance v4, Ljava/util/Date;

    invoke-direct {v4}, Ljava/util/Date;-><init>()V

    invoke-virtual {v3, v4}, Ljava/text/DateFormat;->format(Ljava/util/Date;)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 6438
    if-eqz p1, :cond_0

    .line 6439
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "  Application at fault: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v3, p1, Lcom/android/server/wm/ActivityRecord;->stringName:Ljava/lang/String;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 6441
    :cond_0
    if-eqz p2, :cond_1

    .line 6442
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "  Window at fault: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v3, p2, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    invoke-virtual {v3}, Landroid/view/WindowManager$LayoutParams;->getTitle()Ljava/lang/CharSequence;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 6444
    :cond_1
    if-eqz p3, :cond_2

    .line 6445
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "  Reason: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 6447
    :cond_2
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v2}, Lcom/android/server/wm/RootWindowContainer;->getChildCount()I

    move-result v2

    const/4 v3, 0x1

    sub-int/2addr v2, v3

    .local v2, "i":I
    :goto_0
    if-ltz v2, :cond_5

    .line 6448
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v4, v2}, Lcom/android/server/wm/RootWindowContainer;->getChildAt(I)Lcom/android/server/wm/WindowContainer;

    move-result-object v4

    check-cast v4, Lcom/android/server/wm/DisplayContent;

    .line 6449
    .local v4, "dc":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {v4}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    move-result v5

    .line 6450
    .local v5, "displayId":I
    iget-object v6, v4, Lcom/android/server/wm/DisplayContent;->mWinAddedSinceNullFocus:Ljava/util/ArrayList;

    invoke-virtual {v6}, Ljava/util/ArrayList;->isEmpty()Z

    move-result v6

    const-string v7, " since null focus: "

    if-nez v6, :cond_3

    .line 6451
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "  Windows added in display #"

    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v8, v4, Lcom/android/server/wm/DisplayContent;->mWinAddedSinceNullFocus:Ljava/util/ArrayList;

    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v1, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 6454
    :cond_3
    iget-object v6, v4, Lcom/android/server/wm/DisplayContent;->mWinRemovedSinceNullFocus:Ljava/util/ArrayList;

    invoke-virtual {v6}, Ljava/util/ArrayList;->isEmpty()Z

    move-result v6

    if-nez v6, :cond_4

    .line 6455
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "  Windows removed in display #"

    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v7, v4, Lcom/android/server/wm/DisplayContent;->mWinRemovedSinceNullFocus:Ljava/util/ArrayList;

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v1, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 6447
    .end local v4    # "dc":Lcom/android/server/wm/DisplayContent;
    .end local v5    # "displayId":I
    :cond_4
    add-int/lit8 v2, v2, -0x1

    goto :goto_0

    .line 6459
    .end local v2    # "i":I
    :cond_5
    invoke-virtual {v1}, Ljava/io/PrintWriter;->println()V

    .line 6460
    const/4 v2, 0x0

    invoke-direct {p0, v1, v3, v2}, Lcom/android/server/wm/WindowManagerService;->dumpWindowsNoHeaderLocked(Ljava/io/PrintWriter;ZLjava/util/ArrayList;)V

    .line 6461
    invoke-virtual {v1}, Ljava/io/PrintWriter;->println()V

    .line 6462
    const-string v2, "Last ANR continued"

    invoke-virtual {v1, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 6463
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v2, v1}, Lcom/android/server/wm/RootWindowContainer;->dumpDisplayContents(Ljava/io/PrintWriter;)V

    .line 6464
    invoke-virtual {v1}, Ljava/io/PrintWriter;->close()V

    .line 6465
    invoke-virtual {v0}, Ljava/io/StringWriter;->toString()Ljava/lang/String;

    move-result-object v2

    iput-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mLastANRState:Ljava/lang/String;

    .line 6467
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v3, 0x26

    invoke-virtual {v2, v3}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    .line 6468
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const-wide/32 v4, 0x6ddd00

    invoke-virtual {v2, v3, v4, v5}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessageDelayed(IJ)Z

    .line 6469
    return-void
.end method

.method scheduleAnimationLocked()V
    .locals 1

    .line 5690
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    if-eqz v0, :cond_0

    .line 5691
    invoke-virtual {v0}, Lcom/android/server/wm/WindowAnimator;->scheduleAnimation()V

    .line 5693
    :cond_0
    return-void
.end method

.method scheduleClearWillReplaceWindows(Landroid/os/IBinder;Z)V
    .locals 7
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "replacing"    # Z

    .line 6755
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v0, p1}, Lcom/android/server/wm/RootWindowContainer;->getActivityRecord(Landroid/os/IBinder;)Lcom/android/server/wm/ActivityRecord;

    move-result-object v0

    .line 6756
    .local v0, "activity":Lcom/android/server/wm/ActivityRecord;
    if-nez v0, :cond_1

    .line 6757
    sget-boolean v1, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v1, :cond_0

    invoke-static {p1}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v1

    .local v1, "protoLogParam0":Ljava/lang/String;
    sget-object v2, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const v3, 0x247ea29

    const/4 v4, 0x1

    new-array v4, v4, [Ljava/lang/Object;

    const/4 v5, 0x0

    aput-object v1, v4, v5

    const-string v6, "Attempted to reset replacing window on non-existing app token %s"

    invoke-static {v2, v3, v5, v6, v4}, Lcom/android/internal/protolog/ProtoLogImpl;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 6759
    .end local v1    # "protoLogParam0":Ljava/lang/String;
    :cond_0
    return-void

    .line 6761
    :cond_1
    if-eqz p2, :cond_2

    .line 6762
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->scheduleWindowReplacementTimeouts(Lcom/android/server/wm/ActivityRecord;)V

    goto :goto_0

    .line 6764
    :cond_2
    invoke-virtual {v0}, Lcom/android/server/wm/ActivityRecord;->clearWillReplaceWindows()V

    .line 6766
    :goto_0
    return-void
.end method

.method scheduleWindowReplacementTimeouts(Lcom/android/server/wm/ActivityRecord;)V
    .locals 4
    .param p1, "activity"    # Lcom/android/server/wm/ActivityRecord;

    .line 6769
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowReplacementTimeouts:Ljava/util/ArrayList;

    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_0

    .line 6770
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowReplacementTimeouts:Ljava/util/ArrayList;

    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 6772
    :cond_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v1, 0x2e

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    .line 6773
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const-wide/16 v2, 0x7d0

    invoke-virtual {v0, v1, v2, v3}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessageDelayed(IJ)Z

    .line 6775
    return-void
.end method

.method public screenTurningOff(ILcom/android/server/policy/WindowManagerPolicy$ScreenOffListener;)V
    .locals 1
    .param p1, "displayId"    # I
    .param p2, "listener"    # Lcom/android/server/policy/WindowManagerPolicy$ScreenOffListener;

    .line 3021
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mTaskSnapshotController:Lcom/android/server/wm/TaskSnapshotController;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/wm/TaskSnapshotController;->screenTurningOff(ILcom/android/server/policy/WindowManagerPolicy$ScreenOffListener;)V

    .line 3022
    return-void
.end method

.method public screenshotWallpaper()Landroid/graphics/Bitmap;
    .locals 5

    .line 3756
    const-string v0, "android.permission.READ_FRAME_BUFFER"

    const-string v1, "screenshotWallpaper()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_0

    .line 3760
    const-wide/16 v0, 0x20

    :try_start_0
    const-string v2, "screenshotWallpaper"

    invoke-static {v0, v1, v2}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 3761
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 3763
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    const/4 v4, 0x0

    invoke-virtual {v3, v4}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    .line 3764
    .local v3, "dc":Lcom/android/server/wm/DisplayContent;
    iget-object v4, v3, Lcom/android/server/wm/DisplayContent;->mWallpaperController:Lcom/android/server/wm/WallpaperController;

    invoke-virtual {v4}, Lcom/android/server/wm/WallpaperController;->screenshotWallpaperLocked()Landroid/graphics/Bitmap;

    move-result-object v4

    monitor-exit v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 3767
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v0, v1}, Landroid/os/Trace;->traceEnd(J)V

    .line 3764
    return-object v4

    .line 3765
    .end local v3    # "dc":Lcom/android/server/wm/DisplayContent;
    :catchall_0
    move-exception v3

    :try_start_2
    monitor-exit v2
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    throw v3
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 3767
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    :catchall_1
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Trace;->traceEnd(J)V

    .line 3768
    throw v2

    .line 3757
    :cond_0
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires READ_FRAME_BUFFER permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public setAnimationScale(IF)V
    .locals 2
    .param p1, "which"    # I
    .param p2, "scale"    # F

    .line 3261
    const-string v0, "android.permission.SET_ANIMATION_SCALE"

    const-string v1, "setAnimationScale()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_0

    .line 3266
    invoke-static {p2}, Lcom/android/server/wm/WindowManagerService;->fixScale(F)F

    move-result p2

    .line 3267
    packed-switch p1, :pswitch_data_0

    goto :goto_0

    .line 3270
    :pswitch_0
    iput p2, p0, Lcom/android/server/wm/WindowManagerService;->mAnimatorDurationScaleSetting:F

    goto :goto_0

    .line 3269
    :pswitch_1
    iput p2, p0, Lcom/android/server/wm/WindowManagerService;->mTransitionAnimationScaleSetting:F

    goto :goto_0

    .line 3268
    :pswitch_2
    iput p2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowAnimationScaleSetting:F

    .line 3274
    :goto_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v1, 0xe

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    .line 3275
    return-void

    .line 3263
    :cond_0
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires SET_ANIMATION_SCALE permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_2
        :pswitch_1
        :pswitch_0
    .end packed-switch
.end method

.method public setAnimationScales([F)V
    .locals 3
    .param p1, "scales"    # [F

    .line 3279
    const-string v0, "android.permission.SET_ANIMATION_SCALE"

    const-string v1, "setAnimationScale()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_3

    .line 3284
    if-eqz p1, :cond_2

    .line 3285
    array-length v0, p1

    const/4 v1, 0x1

    if-lt v0, v1, :cond_0

    .line 3286
    const/4 v0, 0x0

    aget v0, p1, v0

    invoke-static {v0}, Lcom/android/server/wm/WindowManagerService;->fixScale(F)F

    move-result v0

    iput v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowAnimationScaleSetting:F

    .line 3288
    :cond_0
    array-length v0, p1

    const/4 v2, 0x2

    if-lt v0, v2, :cond_1

    .line 3289
    aget v0, p1, v1

    invoke-static {v0}, Lcom/android/server/wm/WindowManagerService;->fixScale(F)F

    move-result v0

    iput v0, p0, Lcom/android/server/wm/WindowManagerService;->mTransitionAnimationScaleSetting:F

    .line 3291
    :cond_1
    array-length v0, p1

    const/4 v1, 0x3

    if-lt v0, v1, :cond_2

    .line 3292
    aget v0, p1, v2

    invoke-static {v0}, Lcom/android/server/wm/WindowManagerService;->fixScale(F)F

    move-result v0

    iput v0, p0, Lcom/android/server/wm/WindowManagerService;->mAnimatorDurationScaleSetting:F

    .line 3293
    const/4 v0, 0x0

    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->dispatchNewAnimatorScaleLocked(Lcom/android/server/wm/Session;)V

    .line 3298
    :cond_2
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v1, 0xe

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    .line 3299
    return-void

    .line 3281
    :cond_3
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires SET_ANIMATION_SCALE permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public setCurrentProfileIds([I)V
    .locals 2
    .param p1, "currentProfileIds"    # [I

    .line 3432
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 3433
    iput-object p1, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentProfileIds:[I

    .line 3434
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 3435
    return-void

    .line 3434
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public setCurrentUser(I[I)V
    .locals 5
    .param p1, "newUserId"    # I
    .param p2, "currentProfileIds"    # [I

    .line 3438
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 3439
    iput p1, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentUserId:I

    .line 3440
    iput-object p2, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentProfileIds:[I

    .line 3441
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    invoke-interface {v1, p1}, Lcom/android/server/policy/WindowManagerPolicy;->setCurrentUserLw(I)V

    .line 3442
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mKeyguardDisableHandler:Lcom/android/server/wm/KeyguardDisableHandler;

    invoke-virtual {v1, p1}, Lcom/android/server/wm/KeyguardDisableHandler;->setCurrentUser(I)V

    .line 3445
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p1}, Lcom/android/server/wm/RootWindowContainer;->switchUser(I)V

    .line 3446
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    invoke-virtual {v1}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement()V

    .line 3449
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 3451
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    new-instance v3, Lcom/android/server/wm/WindowManagerService$$ExternalSyntheticLambda8;

    invoke-direct {v3, p1}, Lcom/android/server/wm/WindowManagerService$$ExternalSyntheticLambda8;-><init>(I)V

    invoke-virtual {v2, v3}, Lcom/android/server/wm/RootWindowContainer;->forAllDisplays(Ljava/util/function/Consumer;)V

    .line 3455
    iget-boolean v2, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayReady:Z

    if-eqz v2, :cond_1

    .line 3456
    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getForcedDisplayDensityForUserLocked(I)I

    move-result v2

    .line 3457
    .local v2, "forcedDensity":I
    if-eqz v2, :cond_0

    move v3, v2

    goto :goto_0

    .line 3458
    :cond_0
    iget v3, v1, Lcom/android/server/wm/DisplayContent;->mInitialDisplayDensity:I

    :goto_0
    nop

    .line 3459
    .local v3, "targetDensity":I
    const/4 v4, -0x2

    invoke-virtual {v1, v3, v4}, Lcom/android/server/wm/DisplayContent;->setForcedDensity(II)V

    .line 3461
    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v2    # "forcedDensity":I
    .end local v3    # "targetDensity":I
    :cond_1
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 3462
    return-void

    .line 3461
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public setDisplayHashThrottlingEnabled(Z)V
    .locals 2
    .param p1, "enable"    # Z

    .line 8532
    const-string v0, "android.permission.READ_FRAME_BUFFER"

    const-string v1, "setDisplayHashThrottle()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_0

    .line 8535
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayHashController:Lcom/android/server/wm/DisplayHashController;

    invoke-virtual {v0, p1}, Lcom/android/server/wm/DisplayHashController;->setDisplayHashThrottlingEnabled(Z)V

    .line 8536
    return-void

    .line 8533
    :cond_0
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires READ_FRAME_BUFFER permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public setDisplayImePolicy(II)V
    .locals 13
    .param p1, "displayId"    # I
    .param p2, "imePolicy"    # I

    .line 7302
    const-string v0, "android.permission.INTERNAL_SYSTEM_WINDOW"

    const-string v1, "setDisplayImePolicy()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_3

    .line 7305
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 7307
    .local v0, "origId":J
    :try_start_0
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 7308
    const/4 v3, 0x0

    invoke-direct {p0, p1, v3}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentOrCreate(ILandroid/os/IBinder;)Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    .line 7309
    .local v3, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v3, :cond_1

    .line 7310
    sget-boolean v4, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v4, :cond_0

    int-to-long v4, p1

    .local v4, "protoLogParam0":J
    sget-object v6, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const v7, -0x1173a13f

    const-string v8, "Attempted to set IME policy to a display that does not exist: %d"

    const/4 v9, 0x1

    new-array v10, v9, [Ljava/lang/Object;

    const/4 v11, 0x0

    invoke-static {v4, v5}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v12

    aput-object v12, v10, v11

    invoke-static {v6, v7, v9, v8, v10}, Lcom/android/internal/protolog/ProtoLogImpl;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 7312
    .end local v4    # "protoLogParam0":J
    :cond_0
    monitor-exit v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 7324
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 7312
    return-void

    .line 7314
    :cond_1
    :try_start_2
    invoke-virtual {v3}, Lcom/android/server/wm/DisplayContent;->isTrusted()Z

    move-result v4

    if-eqz v4, :cond_2

    .line 7319
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayWindowSettings:Lcom/android/server/wm/DisplayWindowSettings;

    invoke-virtual {v4, v3, p2}, Lcom/android/server/wm/DisplayWindowSettings;->setDisplayImePolicy(Lcom/android/server/wm/DisplayContent;I)V

    .line 7321
    invoke-virtual {v3}, Lcom/android/server/wm/DisplayContent;->reconfigureDisplayLocked()V

    .line 7322
    .end local v3    # "displayContent":Lcom/android/server/wm/DisplayContent;
    monitor-exit v2
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 7324
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 7325
    nop

    .line 7326
    return-void

    .line 7315
    .restart local v3    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_2
    :try_start_4
    new-instance v4, Ljava/lang/SecurityException;

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Attempted to set IME policy to an untrusted virtual display: "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-direct {v4, v5}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .end local v0    # "origId":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "displayId":I
    .end local p2    # "imePolicy":I
    throw v4

    .line 7322
    .end local v3    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v0    # "origId":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "displayId":I
    .restart local p2    # "imePolicy":I
    :catchall_0
    move-exception v3

    monitor-exit v2
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    :try_start_5
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .end local v0    # "origId":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "displayId":I
    .end local p2    # "imePolicy":I
    throw v3
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    .line 7324
    .restart local v0    # "origId":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "displayId":I
    .restart local p2    # "imePolicy":I
    :catchall_1
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 7325
    throw v2

    .line 7303
    .end local v0    # "origId":J
    :cond_3
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires INTERNAL_SYSTEM_WINDOW permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public setDisplayWindowInsetsController(ILandroid/view/IDisplayWindowInsetsController;)V
    .locals 4
    .param p1, "displayId"    # I
    .param p2, "insetsController"    # Landroid/view/IDisplayWindowInsetsController;

    .line 4137
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.MANAGE_APP_TOKENS"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_1

    .line 4141
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 4143
    .local v0, "origId":J
    :try_start_0
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 4144
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v3, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    .line 4145
    .local v3, "dc":Lcom/android/server/wm/DisplayContent;
    if-nez v3, :cond_0

    .line 4146
    monitor-exit v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 4151
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4146
    return-void

    .line 4148
    :cond_0
    :try_start_2
    invoke-virtual {v3, p2}, Lcom/android/server/wm/DisplayContent;->setRemoteInsetsController(Landroid/view/IDisplayWindowInsetsController;)V

    .line 4149
    .end local v3    # "dc":Lcom/android/server/wm/DisplayContent;
    monitor-exit v2
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 4151
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4152
    nop

    .line 4153
    return-void

    .line 4149
    :catchall_0
    move-exception v3

    :try_start_4
    monitor-exit v2
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    :try_start_5
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .end local v0    # "origId":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "displayId":I
    .end local p2    # "insetsController":Landroid/view/IDisplayWindowInsetsController;
    throw v3
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    .line 4151
    .restart local v0    # "origId":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "displayId":I
    .restart local p2    # "insetsController":Landroid/view/IDisplayWindowInsetsController;
    :catchall_1
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4152
    throw v2

    .line 4139
    .end local v0    # "origId":J
    :cond_1
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Must hold permission android.permission.MANAGE_APP_TOKENS"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public setDisplayWindowRotationController(Landroid/view/IDisplayWindowRotationController;)V
    .locals 4
    .param p1, "controller"    # Landroid/view/IDisplayWindowRotationController;

    .line 4072
    const-string v0, "setDisplayWindowRotationController"

    invoke-static {v0}, Lcom/android/server/wm/ActivityTaskManagerService;->enforceTaskPermission(Ljava/lang/String;)V

    .line 4074
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    :try_start_1
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 4075
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayRotationController:Landroid/view/IDisplayWindowRotationController;

    const/4 v2, 0x0

    if-eqz v1, :cond_0

    .line 4076
    invoke-interface {v1}, Landroid/view/IDisplayWindowRotationController;->asBinder()Landroid/os/IBinder;

    move-result-object v1

    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayRotationControllerDeath:Landroid/os/IBinder$DeathRecipient;

    invoke-interface {v1, v3, v2}, Landroid/os/IBinder;->unlinkToDeath(Landroid/os/IBinder$DeathRecipient;I)Z

    .line 4078
    const/4 v1, 0x0

    iput-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayRotationController:Landroid/view/IDisplayWindowRotationController;

    .line 4080
    :cond_0
    invoke-interface {p1}, Landroid/view/IDisplayWindowRotationController;->asBinder()Landroid/os/IBinder;

    move-result-object v1

    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayRotationControllerDeath:Landroid/os/IBinder$DeathRecipient;

    invoke-interface {v1, v3, v2}, Landroid/os/IBinder;->linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V

    .line 4081
    iput-object p1, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayRotationController:Landroid/view/IDisplayWindowRotationController;

    .line 4082
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_0

    .line 4085
    nop

    .line 4086
    return-void

    .line 4082
    :catchall_0
    move-exception v1

    :try_start_3
    monitor-exit v0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "controller":Landroid/view/IDisplayWindowRotationController;
    throw v1
    :try_end_4
    .catch Landroid/os/RemoteException; {:try_start_4 .. :try_end_4} :catch_0

    .line 4083
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "controller":Landroid/view/IDisplayWindowRotationController;
    :catch_0
    move-exception v0

    .line 4084
    .local v0, "e":Landroid/os/RemoteException;
    new-instance v1, Ljava/lang/RuntimeException;

    const-string v2, "Unable to set rotation controller"

    invoke-direct {v1, v2}, Ljava/lang/RuntimeException;-><init>(Ljava/lang/String;)V

    throw v1
.end method

.method setDockedRootTaskResizing(Z)V
    .locals 1
    .param p1, "resizing"    # Z

    .line 6783
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getDockedDividerController()Lcom/android/server/wm/DockedTaskDividerController;

    move-result-object v0

    invoke-virtual {v0, p1}, Lcom/android/server/wm/DockedTaskDividerController;->setResizing(Z)V

    .line 6784
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->requestTraversal()V

    .line 6785
    return-void
.end method

.method public setDockedTaskDividerTouchRegion(Landroid/graphics/Rect;)V
    .locals 3
    .param p1, "touchRegion"    # Landroid/graphics/Rect;

    .line 6789
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 6790
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 6791
    .local v1, "dc":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->getDockedDividerController()Lcom/android/server/wm/DockedTaskDividerController;

    move-result-object v2

    invoke-virtual {v2, p1}, Lcom/android/server/wm/DockedTaskDividerController;->setTouchRegion(Landroid/graphics/Rect;)V

    .line 6792
    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->updateTouchExcludeRegion()V

    .line 6793
    .end local v1    # "dc":Lcom/android/server/wm/DisplayContent;
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 6794
    return-void

    .line 6793
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public setEventDispatching(Z)V
    .locals 2
    .param p1, "enabled"    # Z

    .line 4751
    const-string v0, "android.permission.MANAGE_APP_TOKENS"

    const-string v1, "setEventDispatching()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 4755
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 4756
    iput-boolean p1, p0, Lcom/android/server/wm/WindowManagerService;->mEventDispatchingEnabled:Z

    .line 4757
    iget-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayEnabled:Z

    if-eqz v1, :cond_0

    .line 4758
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mInputManagerCallback:Lcom/android/server/wm/InputManagerCallback;

    invoke-virtual {v1, p1}, Lcom/android/server/wm/InputManagerCallback;->setEventDispatchingLw(Z)V

    .line 4760
    :cond_0
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 4761
    return-void

    .line 4760
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1

    .line 4752
    :cond_1
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires MANAGE_APP_TOKENS permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public setFixedToUserRotation(II)V
    .locals 6
    .param p1, "displayId"    # I
    .param p2, "fixedToUserRotation"    # I

    .line 3832
    const-string v0, "android.permission.SET_ORIENTATION"

    const-string v1, "setFixedToUserRotation()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 3836
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 3838
    .local v0, "origId":J
    :try_start_0
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 3839
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v3, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    .line 3840
    .local v3, "display":Lcom/android/server/wm/DisplayContent;
    if-nez v3, :cond_0

    .line 3841
    const-string v4, "WindowManager"

    const-string v5, "Trying to set fixed to user rotation for a missing display."

    invoke-static {v4, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 3842
    monitor-exit v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 3847
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3842
    return-void

    .line 3844
    :cond_0
    :try_start_2
    invoke-virtual {v3}, Lcom/android/server/wm/DisplayContent;->getDisplayRotation()Lcom/android/server/wm/DisplayRotation;

    move-result-object v4

    invoke-virtual {v4, p2}, Lcom/android/server/wm/DisplayRotation;->setFixedToUserRotation(I)V

    .line 3845
    .end local v3    # "display":Lcom/android/server/wm/DisplayContent;
    monitor-exit v2
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 3847
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3848
    nop

    .line 3849
    return-void

    .line 3845
    :catchall_0
    move-exception v3

    :try_start_4
    monitor-exit v2
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    :try_start_5
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .end local v0    # "origId":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "displayId":I
    .end local p2    # "fixedToUserRotation":I
    throw v3
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    .line 3847
    .restart local v0    # "origId":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "displayId":I
    .restart local p2    # "fixedToUserRotation":I
    :catchall_1
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3848
    throw v2

    .line 3834
    .end local v0    # "origId":J
    :cond_1
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires SET_ORIENTATION permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method setForceDesktopModeOnExternalDisplays(Z)V
    .locals 2
    .param p1, "forceDesktopModeOnExternalDisplays"    # Z

    .line 6797
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 6798
    iput-boolean p1, p0, Lcom/android/server/wm/WindowManagerService;->mForceDesktopModeOnExternalDisplays:Z

    .line 6799
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 6800
    return-void

    .line 6799
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public setForcedDisplayDensityForUser(III)V
    .locals 8
    .param p1, "displayId"    # I
    .param p2, "density"    # I
    .param p3, "userId"    # I

    .line 5485
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.WRITE_SECURE_SETTINGS"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_1

    .line 5490
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    .line 5491
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    const/4 v4, 0x0

    const/4 v5, 0x1

    const-string v6, "setForcedDisplayDensityForUser"

    const/4 v7, 0x0

    .line 5490
    move v3, p3

    invoke-static/range {v1 .. v7}, Landroid/app/ActivityManager;->handleIncomingUser(IIIZZLjava/lang/String;Ljava/lang/String;)I

    move-result v0

    .line 5493
    .local v0, "targetUserId":I
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v1

    .line 5495
    .local v1, "ident":J
    :try_start_0
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 5496
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v4, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v4

    .line 5497
    .local v4, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v4, :cond_0

    .line 5498
    invoke-virtual {v4, p2, v0}, Lcom/android/server/wm/DisplayContent;->setForcedDensity(II)V

    .line 5500
    .end local v4    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_0
    monitor-exit v3
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 5502
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5503
    nop

    .line 5504
    return-void

    .line 5500
    :catchall_0
    move-exception v4

    :try_start_3
    monitor-exit v3
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .end local v0    # "targetUserId":I
    .end local v1    # "ident":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "displayId":I
    .end local p2    # "density":I
    .end local p3    # "userId":I
    throw v4
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 5502
    .restart local v0    # "targetUserId":I
    .restart local v1    # "ident":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "displayId":I
    .restart local p2    # "density":I
    .restart local p3    # "userId":I
    :catchall_1
    move-exception v3

    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5503
    throw v3

    .line 5487
    .end local v0    # "targetUserId":I
    .end local v1    # "ident":J
    :cond_1
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Must hold permission android.permission.WRITE_SECURE_SETTINGS"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public setForcedDisplayScalingMode(II)V
    .locals 4
    .param p1, "displayId"    # I
    .param p2, "mode"    # I

    .line 5375
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.WRITE_SECURE_SETTINGS"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_1

    .line 5380
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 5382
    .local v0, "ident":J
    :try_start_0
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 5383
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v3, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    .line 5384
    .local v3, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v3, :cond_0

    .line 5385
    invoke-virtual {v3, p2}, Lcom/android/server/wm/DisplayContent;->setForcedScalingMode(I)V

    .line 5387
    .end local v3    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_0
    monitor-exit v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 5389
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5390
    nop

    .line 5391
    return-void

    .line 5387
    :catchall_0
    move-exception v3

    :try_start_3
    monitor-exit v2
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .end local v0    # "ident":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "displayId":I
    .end local p2    # "mode":I
    throw v3
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 5389
    .restart local v0    # "ident":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "displayId":I
    .restart local p2    # "mode":I
    :catchall_1
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5390
    throw v2

    .line 5377
    .end local v0    # "ident":J
    :cond_1
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Must hold permission android.permission.WRITE_SECURE_SETTINGS"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public setForcedDisplaySize(III)V
    .locals 4
    .param p1, "displayId"    # I
    .param p2, "width"    # I
    .param p3, "height"    # I

    .line 5355
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.WRITE_SECURE_SETTINGS"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_1

    .line 5360
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 5362
    .local v0, "ident":J
    :try_start_0
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 5363
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v3, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    .line 5364
    .local v3, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v3, :cond_0

    .line 5365
    invoke-virtual {v3, p2, p3}, Lcom/android/server/wm/DisplayContent;->setForcedSize(II)V

    .line 5367
    .end local v3    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_0
    monitor-exit v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 5369
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5370
    nop

    .line 5371
    return-void

    .line 5367
    :catchall_0
    move-exception v3

    :try_start_3
    monitor-exit v2
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .end local v0    # "ident":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "displayId":I
    .end local p2    # "width":I
    .end local p3    # "height":I
    throw v3
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 5369
    .restart local v0    # "ident":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "displayId":I
    .restart local p2    # "width":I
    .restart local p3    # "height":I
    :catchall_1
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5370
    throw v2

    .line 5357
    .end local v0    # "ident":J
    :cond_1
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Must hold permission android.permission.WRITE_SECURE_SETTINGS"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public setForwardedInsets(ILandroid/graphics/Insets;)V
    .locals 6
    .param p1, "displayId"    # I
    .param p2, "insets"    # Landroid/graphics/Insets;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .line 6857
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 6858
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 6859
    .local v1, "dc":Lcom/android/server/wm/DisplayContent;
    if-nez v1, :cond_0

    .line 6860
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 6862
    :cond_0
    :try_start_1
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    .line 6863
    .local v2, "callingUid":I
    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->getDisplay()Landroid/view/Display;

    move-result-object v3

    invoke-virtual {v3}, Landroid/view/Display;->getOwnerUid()I

    move-result v3

    .line 6864
    .local v3, "displayOwnerUid":I
    if-ne v2, v3, :cond_1

    .line 6868
    invoke-virtual {v1, p2}, Lcom/android/server/wm/DisplayContent;->setForwardedInsets(Landroid/graphics/Insets;)V

    .line 6869
    .end local v1    # "dc":Lcom/android/server/wm/DisplayContent;
    .end local v2    # "callingUid":I
    .end local v3    # "displayOwnerUid":I
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 6870
    return-void

    .line 6865
    .restart local v1    # "dc":Lcom/android/server/wm/DisplayContent;
    .restart local v2    # "callingUid":I
    .restart local v3    # "displayOwnerUid":I
    :cond_1
    :try_start_2
    new-instance v4, Ljava/lang/SecurityException;

    const-string v5, "Only owner of the display can set ForwardedInsets to it."

    invoke-direct {v4, v5}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "displayId":I
    .end local p2    # "insets":Landroid/graphics/Insets;
    throw v4

    .line 6869
    .end local v1    # "dc":Lcom/android/server/wm/DisplayContent;
    .end local v2    # "callingUid":I
    .end local v3    # "displayOwnerUid":I
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "displayId":I
    .restart local p2    # "insets":Landroid/graphics/Insets;
    :catchall_0
    move-exception v1

    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method setHoldScreenLocked(Lcom/android/server/wm/Session;)V
    .locals 8
    .param p1, "newHoldScreen"    # Lcom/android/server/wm/Session;

    .line 5657
    const/4 v0, 0x1

    const/4 v1, 0x0

    if-eqz p1, :cond_0

    move v2, v0

    goto :goto_0

    :cond_0
    move v2, v1

    .line 5659
    .local v2, "hold":Z
    :goto_0
    if-eqz v2, :cond_1

    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mHoldingScreenOn:Lcom/android/server/wm/Session;

    if-eq v3, p1, :cond_1

    .line 5660
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mHoldingScreenWakeLock:Landroid/os/PowerManager$WakeLock;

    new-instance v4, Landroid/os/WorkSource;

    iget v5, p1, Lcom/android/server/wm/Session;->mUid:I

    invoke-direct {v4, v5}, Landroid/os/WorkSource;-><init>(I)V

    invoke-virtual {v3, v4}, Landroid/os/PowerManager$WakeLock;->setWorkSource(Landroid/os/WorkSource;)V

    .line 5662
    :cond_1
    iput-object p1, p0, Lcom/android/server/wm/WindowManagerService;->mHoldingScreenOn:Lcom/android/server/wm/Session;

    .line 5664
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mHoldingScreenWakeLock:Landroid/os/PowerManager$WakeLock;

    invoke-virtual {v3}, Landroid/os/PowerManager$WakeLock;->isHeld()Z

    move-result v3

    .line 5665
    .local v3, "state":Z
    if-eq v2, v3, :cond_5

    .line 5666
    const/4 v4, 0x0

    if-eqz v2, :cond_3

    .line 5667
    sget-boolean v5, Lcom/android/server/wm/ProtoLogCache;->WM_DEBUG_KEEP_SCREEN_ON_enabled:Z

    if-eqz v5, :cond_2

    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    iget-object v5, v5, Lcom/android/server/wm/RootWindowContainer;->mHoldScreenWindow:Lcom/android/server/wm/WindowState;

    invoke-static {v5}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v5

    .local v5, "protoLogParam0":Ljava/lang/String;
    sget-object v6, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_KEEP_SCREEN_ON:Lcom/android/internal/protolog/ProtoLogGroup;

    const v7, 0x7cf81cba

    new-array v0, v0, [Ljava/lang/Object;

    aput-object v5, v0, v1

    invoke-static {v6, v7, v1, v4, v0}, Lcom/android/internal/protolog/ProtoLogImpl;->d(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 5669
    .end local v5    # "protoLogParam0":Ljava/lang/String;
    :cond_2
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    iget-object v0, v0, Lcom/android/server/wm/RootWindowContainer;->mHoldScreenWindow:Lcom/android/server/wm/WindowState;

    iput-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mLastWakeLockHoldingWindow:Lcom/android/server/wm/WindowState;

    .line 5670
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mLastWakeLockObscuringWindow:Lcom/android/server/wm/WindowState;

    .line 5671
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mHoldingScreenWakeLock:Landroid/os/PowerManager$WakeLock;

    invoke-virtual {v0}, Landroid/os/PowerManager$WakeLock;->acquire()V

    .line 5672
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    invoke-interface {v0}, Lcom/android/server/policy/WindowManagerPolicy;->keepScreenOnStartedLw()V

    goto :goto_1

    .line 5674
    :cond_3
    sget-boolean v5, Lcom/android/server/wm/ProtoLogCache;->WM_DEBUG_KEEP_SCREEN_ON_enabled:Z

    if-eqz v5, :cond_4

    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    iget-object v5, v5, Lcom/android/server/wm/RootWindowContainer;->mObscuringWindow:Lcom/android/server/wm/WindowState;

    invoke-static {v5}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v5

    .restart local v5    # "protoLogParam0":Ljava/lang/String;
    sget-object v6, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_KEEP_SCREEN_ON:Lcom/android/internal/protolog/ProtoLogGroup;

    const v7, -0x7fec2232

    new-array v0, v0, [Ljava/lang/Object;

    aput-object v5, v0, v1

    invoke-static {v6, v7, v1, v4, v0}, Lcom/android/internal/protolog/ProtoLogImpl;->d(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 5676
    .end local v5    # "protoLogParam0":Ljava/lang/String;
    :cond_4
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mLastWakeLockHoldingWindow:Lcom/android/server/wm/WindowState;

    .line 5677
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    iget-object v0, v0, Lcom/android/server/wm/RootWindowContainer;->mObscuringWindow:Lcom/android/server/wm/WindowState;

    iput-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mLastWakeLockObscuringWindow:Lcom/android/server/wm/WindowState;

    .line 5678
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    invoke-interface {v0}, Lcom/android/server/policy/WindowManagerPolicy;->keepScreenOnStoppedLw()V

    .line 5679
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mHoldingScreenWakeLock:Landroid/os/PowerManager$WakeLock;

    invoke-virtual {v0}, Landroid/os/PowerManager$WakeLock;->release()V

    .line 5682
    :cond_5
    :goto_1
    return-void
.end method

.method public setIgnoreOrientationRequest(IZ)V
    .locals 6
    .param p1, "displayId"    # I
    .param p2, "ignoreOrientationRequest"    # Z

    .line 3864
    const-string v0, "android.permission.SET_ORIENTATION"

    const-string v1, "setIgnoreOrientationRequest()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 3869
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 3871
    .local v0, "origId":J
    :try_start_0
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 3872
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v3, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    .line 3873
    .local v3, "display":Lcom/android/server/wm/DisplayContent;
    if-nez v3, :cond_0

    .line 3874
    const-string v4, "WindowManager"

    const-string v5, "Trying to setIgnoreOrientationRequest() for a missing display."

    invoke-static {v4, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 3875
    monitor-exit v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 3880
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3875
    return-void

    .line 3877
    :cond_0
    :try_start_2
    invoke-virtual {v3, p2}, Lcom/android/server/wm/DisplayContent;->setIgnoreOrientationRequest(Z)Z

    .line 3878
    nop

    .end local v3    # "display":Lcom/android/server/wm/DisplayContent;
    monitor-exit v2
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 3880
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3881
    nop

    .line 3882
    return-void

    .line 3878
    :catchall_0
    move-exception v3

    :try_start_4
    monitor-exit v2
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    :try_start_5
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .end local v0    # "origId":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "displayId":I
    .end local p2    # "ignoreOrientationRequest":Z
    throw v3
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    .line 3880
    .restart local v0    # "origId":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "displayId":I
    .restart local p2    # "ignoreOrientationRequest":Z
    :catchall_1
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3881
    throw v2

    .line 3866
    .end local v0    # "origId":J
    :cond_1
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires SET_ORIENTATION permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public setInTouchMode(Z)V
    .locals 2
    .param p1, "mode"    # Z

    .line 3675
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 3676
    iput-boolean p1, p0, Lcom/android/server/wm/WindowManagerService;->mInTouchMode:Z

    .line 3677
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 3678
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    invoke-virtual {v0, p1}, Lcom/android/server/input/InputManagerService;->setInTouchMode(Z)V

    .line 3679
    return-void

    .line 3677
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method setInsetsWindow(Lcom/android/server/wm/Session;Landroid/view/IWindow;ILandroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Region;)V
    .locals 9
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;
    .param p3, "touchableInsets"    # I
    .param p4, "contentInsets"    # Landroid/graphics/Rect;
    .param p5, "visibleInsets"    # Landroid/graphics/Rect;
    .param p6, "touchableRegion"    # Landroid/graphics/Region;

    .line 2141
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 2142
    .local v0, "uid":I
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v1

    .line 2144
    .local v1, "origId":J
    :try_start_0
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 2145
    const/4 v4, 0x0

    invoke-virtual {p0, p1, p2, v4}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;

    move-result-object v5

    .line 2151
    .local v5, "w":Lcom/android/server/wm/WindowState;
    if-eqz v5, :cond_1

    .line 2152
    iput-boolean v4, v5, Lcom/android/server/wm/WindowState;->mGivenInsetsPending:Z

    .line 2153
    iget-object v6, v5, Lcom/android/server/wm/WindowState;->mGivenContentInsets:Landroid/graphics/Rect;

    invoke-virtual {v6, p4}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 2154
    iget-object v6, v5, Lcom/android/server/wm/WindowState;->mGivenVisibleInsets:Landroid/graphics/Rect;

    invoke-virtual {v6, p5}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 2155
    iget-object v6, v5, Lcom/android/server/wm/WindowState;->mGivenTouchableRegion:Landroid/graphics/Region;

    invoke-virtual {v6, p6}, Landroid/graphics/Region;->set(Landroid/graphics/Region;)Z

    .line 2156
    iput p3, v5, Lcom/android/server/wm/WindowState;->mTouchableInsets:I

    .line 2157
    iget v6, v5, Lcom/android/server/wm/WindowState;->mGlobalScale:F

    const/high16 v7, 0x3f800000    # 1.0f

    cmpl-float v6, v6, v7

    if-eqz v6, :cond_0

    .line 2158
    iget-object v6, v5, Lcom/android/server/wm/WindowState;->mGivenContentInsets:Landroid/graphics/Rect;

    iget v7, v5, Lcom/android/server/wm/WindowState;->mGlobalScale:F

    invoke-virtual {v6, v7}, Landroid/graphics/Rect;->scale(F)V

    .line 2159
    iget-object v6, v5, Lcom/android/server/wm/WindowState;->mGivenVisibleInsets:Landroid/graphics/Rect;

    iget v7, v5, Lcom/android/server/wm/WindowState;->mGlobalScale:F

    invoke-virtual {v6, v7}, Landroid/graphics/Rect;->scale(F)V

    .line 2160
    iget-object v6, v5, Lcom/android/server/wm/WindowState;->mGivenTouchableRegion:Landroid/graphics/Region;

    iget v7, v5, Lcom/android/server/wm/WindowState;->mGlobalScale:F

    invoke-virtual {v6, v7}, Landroid/graphics/Region;->scale(F)V

    .line 2162
    :cond_0
    invoke-virtual {v5}, Lcom/android/server/wm/WindowState;->setDisplayLayoutNeeded()V

    .line 2163
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    invoke-virtual {v6}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement()V

    .line 2166
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    if-eqz v6, :cond_1

    .line 2167
    const/4 v7, 0x1

    new-array v7, v7, [I

    .line 2168
    invoke-virtual {v5}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v8

    invoke-virtual {v8}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    move-result v8

    aput v8, v7, v4

    .line 2167
    invoke-virtual {v6, v0, v7}, Lcom/android/server/wm/AccessibilityController;->onSomeWindowResizedOrMovedWithCallingUid(I[I)V

    .line 2171
    .end local v5    # "w":Lcom/android/server/wm/WindowState;
    :cond_1
    monitor-exit v3
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 2173
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 2174
    nop

    .line 2175
    return-void

    .line 2171
    :catchall_0
    move-exception v4

    :try_start_3
    monitor-exit v3
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .end local v0    # "uid":I
    .end local v1    # "origId":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "session":Lcom/android/server/wm/Session;
    .end local p2    # "client":Landroid/view/IWindow;
    .end local p3    # "touchableInsets":I
    .end local p4    # "contentInsets":Landroid/graphics/Rect;
    .end local p5    # "visibleInsets":Landroid/graphics/Rect;
    .end local p6    # "touchableRegion":Landroid/graphics/Region;
    throw v4
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 2173
    .restart local v0    # "uid":I
    .restart local v1    # "origId":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "session":Lcom/android/server/wm/Session;
    .restart local p2    # "client":Landroid/view/IWindow;
    .restart local p3    # "touchableInsets":I
    .restart local p4    # "contentInsets":Landroid/graphics/Rect;
    .restart local p5    # "visibleInsets":Landroid/graphics/Rect;
    .restart local p6    # "touchableRegion":Landroid/graphics/Region;
    :catchall_1
    move-exception v3

    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 2174
    throw v3
.end method

.method setIsPc(Z)V
    .locals 2
    .param p1, "isPc"    # Z

    .line 6804
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 6805
    iput-boolean p1, p0, Lcom/android/server/wm/WindowManagerService;->mIsPc:Z

    .line 6806
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 6807
    return-void

    .line 6806
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public setLayerTracing(Z)V
    .locals 7
    .param p1, "enabled"    # Z

    .line 8321
    const-string v0, "android.permission.DUMP"

    const-string v1, "setLayerTracing()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_4

    .line 8326
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 8328
    .local v0, "token":J
    const/4 v2, 0x0

    .line 8330
    .local v2, "data":Landroid/os/Parcel;
    :try_start_0
    const-string v3, "SurfaceFlinger"

    invoke-static {v3}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v3

    .line 8331
    .local v3, "sf":Landroid/os/IBinder;
    if-eqz v3, :cond_1

    .line 8332
    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;

    move-result-object v4

    move-object v2, v4

    .line 8333
    const-string v4, "android.ui.ISurfaceComposer"

    invoke-virtual {v2, v4}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V

    .line 8334
    const/4 v4, 0x0

    if-eqz p1, :cond_0

    const/4 v5, 0x1

    goto :goto_0

    :cond_0
    move v5, v4

    :goto_0
    invoke-virtual {v2, v5}, Landroid/os/Parcel;->writeInt(I)V

    .line 8335
    const/16 v5, 0x401

    const/4 v6, 0x0

    invoke-interface {v3, v5, v2, v6, v4}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 8340
    .end local v3    # "sf":Landroid/os/IBinder;
    :cond_1
    if-eqz v2, :cond_2

    .line 8341
    :goto_1
    :try_start_1
    invoke-virtual {v2}, Landroid/os/Parcel;->recycle()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    goto :goto_2

    .line 8340
    :catchall_0
    move-exception v3

    goto :goto_3

    .line 8337
    :catch_0
    move-exception v3

    .line 8338
    .local v3, "e":Landroid/os/RemoteException;
    :try_start_2
    const-string v4, "WindowManager"

    const-string v5, "Failed to set layer tracing"

    invoke-static {v4, v5}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 8340
    .end local v3    # "e":Landroid/os/RemoteException;
    if-eqz v2, :cond_2

    .line 8341
    goto :goto_1

    .line 8345
    .end local v2    # "data":Landroid/os/Parcel;
    :cond_2
    :goto_2
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8346
    nop

    .line 8347
    return-void

    .line 8340
    .restart local v2    # "data":Landroid/os/Parcel;
    :goto_3
    if-eqz v2, :cond_3

    .line 8341
    :try_start_3
    invoke-virtual {v2}, Landroid/os/Parcel;->recycle()V

    .line 8343
    :cond_3
    nop

    .end local v0    # "token":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "enabled":Z
    throw v3
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 8345
    .end local v2    # "data":Landroid/os/Parcel;
    .restart local v0    # "token":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "enabled":Z
    :catchall_1
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8346
    throw v2

    .line 8323
    .end local v0    # "token":J
    :cond_4
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires DUMP permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public setLayerTracingFlags(I)V
    .locals 7
    .param p1, "flags"    # I

    .line 8351
    const-string v0, "android.permission.DUMP"

    const-string v1, "setLayerTracingFlags"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_3

    .line 8356
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 8358
    .local v0, "token":J
    const/4 v2, 0x0

    .line 8360
    .local v2, "data":Landroid/os/Parcel;
    :try_start_0
    const-string v3, "SurfaceFlinger"

    invoke-static {v3}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v3

    .line 8361
    .local v3, "sf":Landroid/os/IBinder;
    if-eqz v3, :cond_0

    .line 8362
    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;

    move-result-object v4

    move-object v2, v4

    .line 8363
    const-string v4, "android.ui.ISurfaceComposer"

    invoke-virtual {v2, v4}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V

    .line 8364
    invoke-virtual {v2, p1}, Landroid/os/Parcel;->writeInt(I)V

    .line 8365
    const/16 v4, 0x409

    const/4 v5, 0x0

    const/4 v6, 0x0

    invoke-interface {v3, v4, v2, v5, v6}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 8370
    .end local v3    # "sf":Landroid/os/IBinder;
    :cond_0
    if-eqz v2, :cond_1

    .line 8371
    :goto_0
    :try_start_1
    invoke-virtual {v2}, Landroid/os/Parcel;->recycle()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    goto :goto_1

    .line 8370
    :catchall_0
    move-exception v3

    goto :goto_2

    .line 8367
    :catch_0
    move-exception v3

    .line 8368
    .local v3, "e":Landroid/os/RemoteException;
    :try_start_2
    const-string v4, "WindowManager"

    const-string v5, "Failed to set layer tracing flags"

    invoke-static {v4, v5}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 8370
    .end local v3    # "e":Landroid/os/RemoteException;
    if-eqz v2, :cond_1

    .line 8371
    goto :goto_0

    .line 8375
    .end local v2    # "data":Landroid/os/Parcel;
    :cond_1
    :goto_1
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8376
    nop

    .line 8377
    return-void

    .line 8370
    .restart local v2    # "data":Landroid/os/Parcel;
    :goto_2
    if-eqz v2, :cond_2

    .line 8371
    :try_start_3
    invoke-virtual {v2}, Landroid/os/Parcel;->recycle()V

    .line 8373
    :cond_2
    nop

    .end local v0    # "token":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "flags":I
    throw v3
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 8375
    .end local v2    # "data":Landroid/os/Parcel;
    .restart local v0    # "token":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "flags":I
    :catchall_1
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8376
    throw v2

    .line 8353
    .end local v0    # "token":J
    :cond_3
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires DUMP permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public setNavBarVirtualKeyHapticFeedbackEnabled(Z)V
    .locals 2
    .param p1, "enabled"    # Z

    .line 5978
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.STATUS_BAR"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_0

    .line 5984
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 5985
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    invoke-interface {v1, p1}, Lcom/android/server/policy/WindowManagerPolicy;->setNavBarVirtualKeyHapticFeedbackEnabledLw(Z)V

    .line 5986
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 5987
    return-void

    .line 5986
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1

    .line 5980
    :cond_0
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Caller does not hold permission android.permission.STATUS_BAR"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method setNewDisplayOverrideConfiguration(Landroid/content/res/Configuration;Lcom/android/server/wm/DisplayContent;)V
    .locals 1
    .param p1, "overrideConfig"    # Landroid/content/res/Configuration;
    .param p2, "dc"    # Lcom/android/server/wm/DisplayContent;

    .line 2876
    iget-boolean v0, p2, Lcom/android/server/wm/DisplayContent;->mWaitingForConfig:Z

    if-eqz v0, :cond_0

    .line 2877
    const/4 v0, 0x0

    iput-boolean v0, p2, Lcom/android/server/wm/DisplayContent;->mWaitingForConfig:Z

    .line 2878
    const-string v0, "new-config"

    iput-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mLastFinishedFreezeSource:Ljava/lang/Object;

    .line 2881
    :cond_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/wm/RootWindowContainer;->setDisplayOverrideConfigurationIfNeeded(Landroid/content/res/Configuration;Lcom/android/server/wm/DisplayContent;)V

    .line 2882
    return-void
.end method

.method setOverrideFoldedArea(Landroid/graphics/Rect;)V
    .locals 4
    .param p1, "area"    # Landroid/graphics/Rect;

    .line 4311
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.WRITE_SECURE_SETTINGS"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_0

    .line 4316
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 4318
    .local v0, "origId":J
    :try_start_0
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 4319
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    invoke-interface {v3, p1}, Lcom/android/server/policy/WindowManagerPolicy;->setOverrideFoldedArea(Landroid/graphics/Rect;)V

    .line 4320
    monitor-exit v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 4322
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4323
    nop

    .line 4324
    return-void

    .line 4320
    :catchall_0
    move-exception v3

    :try_start_3
    monitor-exit v2
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .end local v0    # "origId":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "area":Landroid/graphics/Rect;
    throw v3
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 4322
    .restart local v0    # "origId":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "area":Landroid/graphics/Rect;
    :catchall_1
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4323
    throw v2

    .line 4313
    .end local v0    # "origId":J
    :cond_0
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Must hold permission android.permission.WRITE_SECURE_SETTINGS"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method setRecentsAnimationController(Lcom/android/server/wm/RecentsAnimationController;)V
    .locals 0
    .param p1, "controller"    # Lcom/android/server/wm/RecentsAnimationController;

    .line 2955
    iput-object p1, p0, Lcom/android/server/wm/WindowManagerService;->mRecentsAnimationController:Lcom/android/server/wm/RecentsAnimationController;

    .line 2956
    return-void
.end method

.method public setRecentsVisibility(Z)V
    .locals 2
    .param p1, "visible"    # Z

    .line 5937
    const-string v0, "android.permission.STATUS_BAR"

    const-string v1, "setRecentsVisibility()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_0

    .line 5941
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 5942
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    invoke-interface {v1, p1}, Lcom/android/server/policy/WindowManagerPolicy;->setRecentsVisibilityLw(Z)V

    .line 5943
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 5944
    return-void

    .line 5943
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1

    .line 5939
    :cond_0
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires STATUS_BAR permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public setRemoveContentMode(II)V
    .locals 13
    .param p1, "displayId"    # I
    .param p2, "mode"    # I

    .line 7172
    const-string v0, "android.permission.INTERNAL_SYSTEM_WINDOW"

    const-string v1, "setRemoveContentMode()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_2

    .line 7176
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 7178
    .local v0, "origId":J
    :try_start_0
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 7179
    const/4 v3, 0x0

    invoke-direct {p0, p1, v3}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentOrCreate(ILandroid/os/IBinder;)Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    .line 7180
    .local v3, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v3, :cond_1

    .line 7181
    sget-boolean v4, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v4, :cond_0

    int-to-long v4, p1

    .local v4, "protoLogParam0":J
    sget-object v6, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const v7, 0x1131efb7

    const-string v8, "Attempted to set remove mode to a display that does not exist: %d"

    const/4 v9, 0x1

    new-array v10, v9, [Ljava/lang/Object;

    const/4 v11, 0x0

    invoke-static {v4, v5}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v12

    aput-object v12, v10, v11

    invoke-static {v6, v7, v9, v8, v10}, Lcom/android/internal/protolog/ProtoLogImpl;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 7184
    .end local v4    # "protoLogParam0":J
    :cond_0
    monitor-exit v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 7191
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 7184
    return-void

    .line 7187
    :cond_1
    :try_start_2
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayWindowSettings:Lcom/android/server/wm/DisplayWindowSettings;

    invoke-virtual {v4, v3, p2}, Lcom/android/server/wm/DisplayWindowSettings;->setRemoveContentModeLocked(Lcom/android/server/wm/DisplayContent;I)V

    .line 7188
    invoke-virtual {v3}, Lcom/android/server/wm/DisplayContent;->reconfigureDisplayLocked()V

    .line 7189
    .end local v3    # "displayContent":Lcom/android/server/wm/DisplayContent;
    monitor-exit v2
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 7191
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 7192
    nop

    .line 7193
    return-void

    .line 7189
    :catchall_0
    move-exception v3

    :try_start_4
    monitor-exit v2
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    :try_start_5
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .end local v0    # "origId":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "displayId":I
    .end local p2    # "mode":I
    throw v3
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    .line 7191
    .restart local v0    # "origId":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "displayId":I
    .restart local p2    # "mode":I
    :catchall_1
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 7192
    throw v2

    .line 7173
    .end local v0    # "origId":J
    :cond_2
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires INTERNAL_SYSTEM_WINDOW permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public setShellRootAccessibilityWindow(IILandroid/view/IWindow;)V
    .locals 5
    .param p1, "displayId"    # I
    .param p2, "shellRootLayer"    # I
    .param p3, "target"    # Landroid/view/IWindow;

    .line 4112
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.MANAGE_APP_TOKENS"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_2

    .line 4116
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 4118
    .local v0, "origId":J
    :try_start_0
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 4119
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v3, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    .line 4120
    .local v3, "dc":Lcom/android/server/wm/DisplayContent;
    if-nez v3, :cond_0

    .line 4121
    monitor-exit v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 4130
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4121
    return-void

    .line 4123
    :cond_0
    :try_start_2
    iget-object v4, v3, Lcom/android/server/wm/DisplayContent;->mShellRoots:Landroid/util/SparseArray;

    invoke-virtual {v4, p2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/wm/ShellRoot;

    .line 4124
    .local v4, "root":Lcom/android/server/wm/ShellRoot;
    if-nez v4, :cond_1

    .line 4125
    monitor-exit v2
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 4130
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4125
    return-void

    .line 4127
    :cond_1
    :try_start_3
    invoke-virtual {v4, p3}, Lcom/android/server/wm/ShellRoot;->setAccessibilityWindow(Landroid/view/IWindow;)V

    .line 4128
    .end local v3    # "dc":Lcom/android/server/wm/DisplayContent;
    .end local v4    # "root":Lcom/android/server/wm/ShellRoot;
    monitor-exit v2
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 4130
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4131
    nop

    .line 4132
    return-void

    .line 4128
    :catchall_0
    move-exception v3

    :try_start_5
    monitor-exit v2
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    :try_start_6
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .end local v0    # "origId":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "displayId":I
    .end local p2    # "shellRootLayer":I
    .end local p3    # "target":Landroid/view/IWindow;
    throw v3
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    .line 4130
    .restart local v0    # "origId":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "displayId":I
    .restart local p2    # "shellRootLayer":I
    .restart local p3    # "target":Landroid/view/IWindow;
    :catchall_1
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4131
    throw v2

    .line 4114
    .end local v0    # "origId":J
    :cond_2
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Must hold permission android.permission.MANAGE_APP_TOKENS"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public setShouldShowSystemDecors(IZ)V
    .locals 13
    .param p1, "displayId"    # I
    .param p2, "shouldShow"    # Z

    .line 7257
    const-string v0, "android.permission.INTERNAL_SYSTEM_WINDOW"

    const-string v1, "setShouldShowSystemDecors()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_3

    .line 7260
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 7262
    .local v0, "origId":J
    :try_start_0
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 7263
    const/4 v3, 0x0

    invoke-direct {p0, p1, v3}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentOrCreate(ILandroid/os/IBinder;)Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    .line 7264
    .local v3, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v3, :cond_1

    .line 7265
    sget-boolean v4, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v4, :cond_0

    int-to-long v4, p1

    .local v4, "protoLogParam0":J
    sget-object v6, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const v7, -0x170a515b

    const-string v8, "Attempted to set system decors flag to a display that does not exist: %d"

    const/4 v9, 0x1

    new-array v10, v9, [Ljava/lang/Object;

    const/4 v11, 0x0

    invoke-static {v4, v5}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v12

    aput-object v12, v10, v11

    invoke-static {v6, v7, v9, v8, v10}, Lcom/android/internal/protolog/ProtoLogImpl;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 7267
    .end local v4    # "protoLogParam0":J
    :cond_0
    monitor-exit v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 7279
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 7267
    return-void

    .line 7269
    :cond_1
    :try_start_2
    invoke-virtual {v3}, Lcom/android/server/wm/DisplayContent;->isTrusted()Z

    move-result v4

    if-eqz v4, :cond_2

    .line 7274
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayWindowSettings:Lcom/android/server/wm/DisplayWindowSettings;

    invoke-virtual {v4, v3, p2}, Lcom/android/server/wm/DisplayWindowSettings;->setShouldShowSystemDecorsLocked(Lcom/android/server/wm/DisplayContent;Z)V

    .line 7276
    invoke-virtual {v3}, Lcom/android/server/wm/DisplayContent;->reconfigureDisplayLocked()V

    .line 7277
    .end local v3    # "displayContent":Lcom/android/server/wm/DisplayContent;
    monitor-exit v2
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 7279
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 7280
    nop

    .line 7281
    return-void

    .line 7270
    .restart local v3    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_2
    :try_start_4
    new-instance v4, Ljava/lang/SecurityException;

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Attempted to set system decors flag to an untrusted virtual display: "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-direct {v4, v5}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .end local v0    # "origId":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "displayId":I
    .end local p2    # "shouldShow":Z
    throw v4

    .line 7277
    .end local v3    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v0    # "origId":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "displayId":I
    .restart local p2    # "shouldShow":Z
    :catchall_0
    move-exception v3

    monitor-exit v2
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    :try_start_5
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .end local v0    # "origId":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "displayId":I
    .end local p2    # "shouldShow":Z
    throw v3
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    .line 7279
    .restart local v0    # "origId":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "displayId":I
    .restart local p2    # "shouldShow":Z
    :catchall_1
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 7280
    throw v2

    .line 7258
    .end local v0    # "origId":J
    :cond_3
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires INTERNAL_SYSTEM_WINDOW permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public setShouldShowWithInsecureKeyguard(IZ)V
    .locals 13
    .param p1, "displayId"    # I
    .param p2, "shouldShow"    # Z

    .line 7214
    const-string v0, "android.permission.INTERNAL_SYSTEM_WINDOW"

    const-string v1, "setShouldShowWithInsecureKeyguard()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_2

    .line 7218
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 7220
    .local v0, "origId":J
    :try_start_0
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 7221
    const/4 v3, 0x0

    invoke-direct {p0, p1, v3}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentOrCreate(ILandroid/os/IBinder;)Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    .line 7222
    .local v3, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v3, :cond_1

    .line 7223
    sget-boolean v4, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v4, :cond_0

    int-to-long v4, p1

    .local v4, "protoLogParam0":J
    sget-object v6, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const v7, 0x5aafe1c6

    const-string v8, "Attempted to set flag to a display that does not exist: %d"

    const/4 v9, 0x1

    new-array v10, v9, [Ljava/lang/Object;

    const/4 v11, 0x0

    invoke-static {v4, v5}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v12

    aput-object v12, v10, v11

    invoke-static {v6, v7, v9, v8, v10}, Lcom/android/internal/protolog/ProtoLogImpl;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 7225
    .end local v4    # "protoLogParam0":J
    :cond_0
    monitor-exit v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 7234
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 7225
    return-void

    .line 7228
    :cond_1
    :try_start_2
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayWindowSettings:Lcom/android/server/wm/DisplayWindowSettings;

    invoke-virtual {v4, v3, p2}, Lcom/android/server/wm/DisplayWindowSettings;->setShouldShowWithInsecureKeyguardLocked(Lcom/android/server/wm/DisplayContent;Z)V

    .line 7231
    invoke-virtual {v3}, Lcom/android/server/wm/DisplayContent;->reconfigureDisplayLocked()V

    .line 7232
    .end local v3    # "displayContent":Lcom/android/server/wm/DisplayContent;
    monitor-exit v2
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 7234
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 7235
    nop

    .line 7236
    return-void

    .line 7232
    :catchall_0
    move-exception v3

    :try_start_4
    monitor-exit v2
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    :try_start_5
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .end local v0    # "origId":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "displayId":I
    .end local p2    # "shouldShow":Z
    throw v3
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    .line 7234
    .restart local v0    # "origId":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "displayId":I
    .restart local p2    # "shouldShow":Z
    :catchall_1
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 7235
    throw v2

    .line 7216
    .end local v0    # "origId":J
    :cond_2
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires INTERNAL_SYSTEM_WINDOW permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public setStrictModeVisualIndicatorPreference(Ljava/lang/String;)V
    .locals 1
    .param p1, "value"    # Ljava/lang/String;

    .line 3751
    const-string v0, "persist.sys.strictmode.visual"

    invoke-static {v0, p1}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V

    .line 3752
    return-void
.end method

.method public setSwitchingUser(Z)V
    .locals 2
    .param p1, "switching"    # Z

    .line 3221
    const-string v0, "android.permission.INTERACT_ACROSS_USERS_FULL"

    const-string v1, "setSwitchingUser()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_0

    .line 3225
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    invoke-interface {v0, p1}, Lcom/android/server/policy/WindowManagerPolicy;->setSwitchingUser(Z)V

    .line 3226
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 3227
    iput-boolean p1, p0, Lcom/android/server/wm/WindowManagerService;->mSwitchingUser:Z

    .line 3228
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 3229
    return-void

    .line 3228
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1

    .line 3223
    :cond_0
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires INTERACT_ACROSS_USERS_FULL permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method setWillReplaceWindow(Landroid/os/IBinder;Z)V
    .locals 7
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "animate"    # Z

    .line 6692
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v0, p1}, Lcom/android/server/wm/RootWindowContainer;->getActivityRecord(Landroid/os/IBinder;)Lcom/android/server/wm/ActivityRecord;

    move-result-object v0

    .line 6693
    .local v0, "activity":Lcom/android/server/wm/ActivityRecord;
    const/4 v1, 0x1

    const/4 v2, 0x0

    if-nez v0, :cond_1

    .line 6694
    sget-boolean v3, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v3, :cond_0

    invoke-static {p1}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v3

    .local v3, "protoLogParam0":Ljava/lang/String;
    sget-object v4, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const v5, -0x630b9984

    new-array v1, v1, [Ljava/lang/Object;

    aput-object v3, v1, v2

    const-string v6, "Attempted to set replacing window on non-existing app token %s"

    invoke-static {v4, v5, v2, v6, v1}, Lcom/android/internal/protolog/ProtoLogImpl;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 6696
    .end local v3    # "protoLogParam0":Ljava/lang/String;
    :cond_0
    return-void

    .line 6698
    :cond_1
    invoke-virtual {v0}, Lcom/android/server/wm/ActivityRecord;->hasContentToDisplay()Z

    move-result v3

    if-nez v3, :cond_3

    .line 6699
    sget-boolean v3, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v3, :cond_2

    invoke-static {p1}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v3

    .restart local v3    # "protoLogParam0":Ljava/lang/String;
    sget-object v4, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const v5, -0x4bbdd3a9

    new-array v1, v1, [Ljava/lang/Object;

    aput-object v3, v1, v2

    const-string v6, "Attempted to set replacing window on app token with no content %s"

    invoke-static {v4, v5, v2, v6, v1}, Lcom/android/internal/protolog/ProtoLogImpl;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 6702
    .end local v3    # "protoLogParam0":Ljava/lang/String;
    :cond_2
    return-void

    .line 6704
    :cond_3
    invoke-virtual {v0, p2}, Lcom/android/server/wm/ActivityRecord;->setWillReplaceWindows(Z)V

    .line 6705
    return-void
.end method

.method setWillReplaceWindows(Landroid/os/IBinder;Z)V
    .locals 8
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "childrenOnly"    # Z

    .line 6720
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 6721
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p1}, Lcom/android/server/wm/RootWindowContainer;->getActivityRecord(Landroid/os/IBinder;)Lcom/android/server/wm/ActivityRecord;

    move-result-object v1

    .line 6722
    .local v1, "activity":Lcom/android/server/wm/ActivityRecord;
    const/4 v2, 0x1

    const/4 v3, 0x0

    if-nez v1, :cond_1

    .line 6723
    sget-boolean v4, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v4, :cond_0

    invoke-static {p1}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v4

    .local v4, "protoLogParam0":Ljava/lang/String;
    sget-object v5, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const v6, -0x630b9984

    const-string v7, "Attempted to set replacing window on non-existing app token %s"

    new-array v2, v2, [Ljava/lang/Object;

    aput-object v4, v2, v3

    invoke-static {v5, v6, v3, v7, v2}, Lcom/android/internal/protolog/ProtoLogImpl;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 6726
    .end local v4    # "protoLogParam0":Ljava/lang/String;
    :cond_0
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 6728
    :cond_1
    :try_start_1
    invoke-virtual {v1}, Lcom/android/server/wm/ActivityRecord;->hasContentToDisplay()Z

    move-result v4

    if-nez v4, :cond_3

    .line 6729
    sget-boolean v4, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v4, :cond_2

    invoke-static {p1}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v4

    .restart local v4    # "protoLogParam0":Ljava/lang/String;
    sget-object v5, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const v6, -0x4bbdd3a9

    const-string v7, "Attempted to set replacing window on app token with no content %s"

    new-array v2, v2, [Ljava/lang/Object;

    aput-object v4, v2, v3

    invoke-static {v5, v6, v3, v7, v2}, Lcom/android/internal/protolog/ProtoLogImpl;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 6732
    .end local v4    # "protoLogParam0":Ljava/lang/String;
    :cond_2
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 6735
    :cond_3
    if-eqz p2, :cond_4

    .line 6736
    :try_start_2
    invoke-virtual {v1}, Lcom/android/server/wm/ActivityRecord;->setWillReplaceChildWindows()V

    goto :goto_0

    .line 6738
    :cond_4
    invoke-virtual {v1, v3}, Lcom/android/server/wm/ActivityRecord;->setWillReplaceWindows(Z)V

    .line 6741
    :goto_0
    invoke-virtual {p0, p1, v2}, Lcom/android/server/wm/WindowManagerService;->scheduleClearWillReplaceWindows(Landroid/os/IBinder;Z)V

    .line 6742
    .end local v1    # "activity":Lcom/android/server/wm/ActivityRecord;
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 6743
    return-void

    .line 6742
    :catchall_0
    move-exception v1

    :try_start_3
    monitor-exit v0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method setWindowOpaqueLocked(Landroid/os/IBinder;Z)V
    .locals 1
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "isOpaque"    # Z

    .line 2986
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v0, p1}, Lcom/android/server/wm/RootWindowContainer;->getActivityRecord(Landroid/os/IBinder;)Lcom/android/server/wm/ActivityRecord;

    move-result-object v0

    .line 2987
    .local v0, "wtoken":Lcom/android/server/wm/ActivityRecord;
    if-eqz v0, :cond_0

    .line 2988
    invoke-virtual {v0, p2}, Lcom/android/server/wm/ActivityRecord;->setMainWindowOpaque(Z)V

    .line 2990
    :cond_0
    return-void
.end method

.method public setWindowingMode(II)V
    .locals 13
    .param p1, "displayId"    # I
    .param p2, "mode"    # I

    .line 7119
    const-string v0, "android.permission.INTERNAL_SYSTEM_WINDOW"

    const-string v1, "setWindowingMode()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_3

    .line 7123
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 7125
    .local v0, "origId":J
    :try_start_0
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 7126
    const/4 v3, 0x0

    invoke-direct {p0, p1, v3}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentOrCreate(ILandroid/os/IBinder;)Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    .line 7127
    .local v3, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v3, :cond_1

    .line 7128
    sget-boolean v4, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v4, :cond_0

    int-to-long v4, p1

    .local v4, "protoLogParam0":J
    sget-object v6, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const v7, -0x6d99e8bf

    const-string v8, "Attempted to set windowing mode to a display that does not exist: %d"

    const/4 v9, 0x1

    new-array v10, v9, [Ljava/lang/Object;

    const/4 v11, 0x0

    invoke-static {v4, v5}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v12

    aput-object v12, v10, v11

    invoke-static {v6, v7, v9, v8, v10}, Lcom/android/internal/protolog/ProtoLogImpl;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 7131
    .end local v4    # "protoLogParam0":J
    :cond_0
    monitor-exit v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 7148
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 7131
    return-void

    .line 7134
    :cond_1
    :try_start_2
    invoke-virtual {v3}, Lcom/android/server/wm/DisplayContent;->getWindowingMode()I

    move-result v4

    .line 7135
    .local v4, "lastWindowingMode":I
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayWindowSettings:Lcom/android/server/wm/DisplayWindowSettings;

    invoke-virtual {v5, v3, p2}, Lcom/android/server/wm/DisplayWindowSettings;->setWindowingModeLocked(Lcom/android/server/wm/DisplayContent;I)V

    .line 7137
    invoke-virtual {v3}, Lcom/android/server/wm/DisplayContent;->reconfigureDisplayLocked()V

    .line 7139
    invoke-virtual {v3}, Lcom/android/server/wm/DisplayContent;->getWindowingMode()I

    move-result v5

    if-eq v4, v5, :cond_2

    .line 7142
    invoke-virtual {v3}, Lcom/android/server/wm/DisplayContent;->sendNewConfiguration()V

    .line 7144
    invoke-virtual {v3}, Lcom/android/server/wm/DisplayContent;->executeAppTransition()V

    .line 7146
    .end local v3    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v4    # "lastWindowingMode":I
    :cond_2
    monitor-exit v2
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 7148
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 7149
    nop

    .line 7150
    return-void

    .line 7146
    :catchall_0
    move-exception v3

    :try_start_4
    monitor-exit v2
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    :try_start_5
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .end local v0    # "origId":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "displayId":I
    .end local p2    # "mode":I
    throw v3
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    .line 7148
    .restart local v0    # "origId":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "displayId":I
    .restart local p2    # "mode":I
    :catchall_1
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 7149
    throw v2

    .line 7120
    .end local v0    # "origId":J
    :cond_3
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires INTERNAL_SYSTEM_WINDOW permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method shouldRestoreImeVisibility(Landroid/os/IBinder;)Z
    .locals 6
    .param p1, "imeTargetWindowToken"    # Landroid/os/IBinder;

    .line 8600
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 8601
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    invoke-virtual {v1, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/WindowState;

    .line 8602
    .local v1, "imeTargetWindow":Lcom/android/server/wm/WindowState;
    const/4 v2, 0x0

    if-nez v1, :cond_0

    .line 8603
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v2

    .line 8605
    :cond_0
    :try_start_1
    invoke-virtual {v1}, Lcom/android/server/wm/WindowState;->getTask()Lcom/android/server/wm/Task;

    move-result-object v3

    .line 8606
    .local v3, "imeTargetWindowTask":Lcom/android/server/wm/Task;
    if-nez v3, :cond_1

    .line 8607
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v2

    .line 8609
    :cond_1
    :try_start_2
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    iget v5, v3, Lcom/android/server/wm/Task;->mTaskId:I

    invoke-virtual {v4, v5, v2}, Lcom/android/server/wm/ActivityTaskManagerService;->getTaskSnapshot(IZ)Landroid/window/TaskSnapshot;

    move-result-object v4

    .line 8611
    .local v4, "snapshot":Landroid/window/TaskSnapshot;
    if-eqz v4, :cond_2

    invoke-virtual {v4}, Landroid/window/TaskSnapshot;->hasImeSurface()Z

    move-result v5

    if-eqz v5, :cond_2

    const/4 v2, 0x1

    :cond_2
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v2

    .line 8612
    .end local v1    # "imeTargetWindow":Lcom/android/server/wm/WindowState;
    .end local v3    # "imeTargetWindowTask":Lcom/android/server/wm/Task;
    .end local v4    # "snapshot":Landroid/window/TaskSnapshot;
    :catchall_0
    move-exception v1

    :try_start_3
    monitor-exit v0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public shouldShowSystemDecors(I)Z
    .locals 11
    .param p1, "displayId"    # I

    .line 7240
    const-string v0, "android.permission.INTERNAL_SYSTEM_WINDOW"

    const-string v1, "shouldShowSystemDecors()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_2

    .line 7244
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 7245
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 7246
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v1, :cond_1

    .line 7247
    sget-boolean v2, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    const/4 v3, 0x0

    if-eqz v2, :cond_0

    int-to-long v4, p1

    .local v4, "protoLogParam0":J
    sget-object v2, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const v6, 0xa8c5f5

    const-string v7, "Attempted to get system decors flag of a display that does not exist: %d"

    const/4 v8, 0x1

    new-array v9, v8, [Ljava/lang/Object;

    invoke-static {v4, v5}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v10

    aput-object v10, v9, v3

    invoke-static {v2, v6, v8, v7, v9}, Lcom/android/internal/protolog/ProtoLogImpl;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 7249
    .end local v4    # "protoLogParam0":J
    :cond_0
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v3

    .line 7251
    :cond_1
    :try_start_1
    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->supportsSystemDecorations()Z

    move-result v2

    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v2

    .line 7252
    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_0
    move-exception v1

    :try_start_2
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1

    .line 7241
    :cond_2
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires INTERNAL_SYSTEM_WINDOW permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public shouldShowWithInsecureKeyguard(I)Z
    .locals 11
    .param p1, "displayId"    # I

    .line 7197
    const-string v0, "android.permission.INTERNAL_SYSTEM_WINDOW"

    const-string v1, "shouldShowWithInsecureKeyguard()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_2

    .line 7201
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 7202
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 7203
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v1, :cond_1

    .line 7204
    sget-boolean v2, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    const/4 v3, 0x0

    if-eqz v2, :cond_0

    int-to-long v4, p1

    .local v4, "protoLogParam0":J
    sget-object v2, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const v6, 0x557ef416

    const-string v7, "Attempted to get flag of a display that does not exist: %d"

    const/4 v8, 0x1

    new-array v9, v8, [Ljava/lang/Object;

    invoke-static {v4, v5}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v10

    aput-object v10, v9, v3

    invoke-static {v2, v6, v8, v7, v9}, Lcom/android/internal/protolog/ProtoLogImpl;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 7206
    .end local v4    # "protoLogParam0":J
    :cond_0
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v3

    .line 7208
    :cond_1
    :try_start_1
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayWindowSettings:Lcom/android/server/wm/DisplayWindowSettings;

    invoke-virtual {v2, v1}, Lcom/android/server/wm/DisplayWindowSettings;->shouldShowWithInsecureKeyguardLocked(Lcom/android/server/wm/DisplayContent;)Z

    move-result v2

    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v2

    .line 7209
    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_0
    move-exception v1

    :try_start_2
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1

    .line 7198
    :cond_2
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires INTERNAL_SYSTEM_WINDOW permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public showBootMessage(Ljava/lang/CharSequence;Z)V
    .locals 18
    .param p1, "msg"    # Ljava/lang/CharSequence;
    .param p2, "always"    # Z

    .line 3634
    move-object/from16 v1, p0

    move/from16 v2, p2

    const/4 v3, 0x0

    .line 3635
    .local v3, "first":Z
    iget-object v4, v1, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v4

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 3636
    sget-boolean v0, Lcom/android/server/wm/ProtoLogCache;->WM_DEBUG_BOOT_enabled:Z

    const/4 v5, 0x1

    if-eqz v0, :cond_0

    invoke-static/range {p1 .. p1}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v0

    .local v0, "protoLogParam0":Ljava/lang/String;
    move/from16 v6, p2

    .local v6, "protoLogParam1":Z
    iget-boolean v7, v1, Lcom/android/server/wm/WindowManagerService;->mAllowBootMessages:Z

    .local v7, "protoLogParam2":Z
    iget-boolean v8, v1, Lcom/android/server/wm/WindowManagerService;->mShowingBootMessages:Z

    .local v8, "protoLogParam3":Z
    iget-boolean v9, v1, Lcom/android/server/wm/WindowManagerService;->mSystemBooted:Z

    .local v9, "protoLogParam4":Z
    new-instance v10, Ljava/lang/RuntimeException;

    const-string v11, "here"

    invoke-direct {v10, v11}, Ljava/lang/RuntimeException;-><init>(Ljava/lang/String;)V

    invoke-virtual {v10}, Ljava/lang/RuntimeException;->fillInStackTrace()Ljava/lang/Throwable;

    move-result-object v10

    invoke-static {v10}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v10

    .local v10, "protoLogParam5":Ljava/lang/String;
    sget-object v11, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_BOOT:Lcom/android/internal/protolog/ProtoLogGroup;

    const v12, -0x341f003a    # -2.9491084E7f

    const/16 v13, 0x3fc

    const/4 v14, 0x0

    const/4 v15, 0x6

    new-array v15, v15, [Ljava/lang/Object;

    const/16 v16, 0x0

    aput-object v0, v15, v16

    invoke-static {v6}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v16

    aput-object v16, v15, v5

    const/16 v16, 0x2

    invoke-static {v7}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v17

    aput-object v17, v15, v16

    const/16 v16, 0x3

    invoke-static {v8}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v17

    aput-object v17, v15, v16

    const/16 v16, 0x4

    invoke-static {v9}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v17

    aput-object v17, v15, v16

    const/16 v16, 0x5

    aput-object v10, v15, v16

    invoke-static {v11, v12, v13, v14, v15}, Lcom/android/internal/protolog/ProtoLogImpl;->i(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 3641
    .end local v0    # "protoLogParam0":Ljava/lang/String;
    .end local v6    # "protoLogParam1":Z
    .end local v7    # "protoLogParam2":Z
    .end local v8    # "protoLogParam3":Z
    .end local v9    # "protoLogParam4":Z
    .end local v10    # "protoLogParam5":Ljava/lang/String;
    :cond_0
    iget-boolean v0, v1, Lcom/android/server/wm/WindowManagerService;->mAllowBootMessages:Z

    if-nez v0, :cond_1

    .line 3642
    monitor-exit v4
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 3644
    :cond_1
    :try_start_1
    iget-boolean v0, v1, Lcom/android/server/wm/WindowManagerService;->mShowingBootMessages:Z

    if-nez v0, :cond_3

    .line 3645
    if-nez v2, :cond_2

    .line 3646
    monitor-exit v4
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 3648
    :cond_2
    const/4 v0, 0x1

    move v3, v0

    .line 3650
    :cond_3
    :try_start_2
    iget-boolean v0, v1, Lcom/android/server/wm/WindowManagerService;->mSystemBooted:Z

    if-eqz v0, :cond_4

    .line 3651
    monitor-exit v4
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 3653
    :cond_4
    :try_start_3
    iput-boolean v5, v1, Lcom/android/server/wm/WindowManagerService;->mShowingBootMessages:Z

    .line 3654
    iget-object v0, v1, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    move-object/from16 v5, p1

    :try_start_4
    invoke-interface {v0, v5, v2}, Lcom/android/server/policy/WindowManagerPolicy;->showBootMessage(Ljava/lang/CharSequence;Z)V

    .line 3655
    monitor-exit v4
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 3656
    if-eqz v3, :cond_5

    .line 3657
    invoke-direct/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->performEnableScreen()V

    .line 3659
    :cond_5
    return-void

    .line 3655
    :catchall_0
    move-exception v0

    move-object/from16 v5, p1

    :goto_0
    :try_start_5
    monitor-exit v4
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    :catchall_1
    move-exception v0

    goto :goto_0
.end method

.method public showEmulatorDisplayOverlay()V
    .locals 6

    .line 3697
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 3700
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mEmulatorDisplayOverlay:Lcom/android/server/wm/EmulatorDisplayOverlay;

    if-nez v1, :cond_0

    .line 3701
    new-instance v1, Lcom/android/server/wm/EmulatorDisplayOverlay;

    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    .line 3702
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    const/16 v5, 0x7e2

    .line 3703
    invoke-interface {v4, v5}, Lcom/android/server/policy/WindowManagerPolicy;->getWindowLayerFromTypeLw(I)I

    move-result v4

    mul-int/lit16 v4, v4, 0x2710

    add-int/lit8 v4, v4, 0xa

    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mTransaction:Landroid/view/SurfaceControl$Transaction;

    invoke-direct {v1, v2, v3, v4, v5}, Lcom/android/server/wm/EmulatorDisplayOverlay;-><init>(Landroid/content/Context;Lcom/android/server/wm/DisplayContent;ILandroid/view/SurfaceControl$Transaction;)V

    iput-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mEmulatorDisplayOverlay:Lcom/android/server/wm/EmulatorDisplayOverlay;

    .line 3706
    :cond_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mEmulatorDisplayOverlay:Lcom/android/server/wm/EmulatorDisplayOverlay;

    const/4 v2, 0x1

    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTransaction:Landroid/view/SurfaceControl$Transaction;

    invoke-virtual {v1, v2, v3}, Lcom/android/server/wm/EmulatorDisplayOverlay;->setVisibility(ZLandroid/view/SurfaceControl$Transaction;)V

    .line 3707
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTransaction:Landroid/view/SurfaceControl$Transaction;

    invoke-virtual {v1}, Landroid/view/SurfaceControl$Transaction;->apply()V

    .line 3708
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 3709
    return-void

    .line 3708
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public showEmulatorDisplayOverlayIfNeeded()V
    .locals 2

    .line 3688
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v0}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v0

    const v1, 0x111017c

    invoke-virtual {v0, v1}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v0

    if-eqz v0, :cond_0

    const/4 v0, 0x0

    .line 3690
    const-string v1, "ro.emulator.circular"

    invoke-static {v1, v0}, Landroid/os/SystemProperties;->getBoolean(Ljava/lang/String;Z)Z

    move-result v0

    if-eqz v0, :cond_0

    sget-boolean v0, Landroid/os/Build;->IS_EMULATOR:Z

    if-eqz v0, :cond_0

    .line 3692
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v1, 0x24

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(I)Landroid/os/Message;

    move-result-object v1

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService$H;->sendMessage(Landroid/os/Message;)Z

    .line 3694
    :cond_0
    return-void
.end method

.method public showGlobalActions()V
    .locals 2

    .line 3234
    const-string v0, "android.permission.INTERNAL_SYSTEM_WINDOW"

    const-string v1, "showGlobalActions()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_0

    .line 3238
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    invoke-interface {v0}, Lcom/android/server/policy/WindowManagerPolicy;->showGlobalActions()V

    .line 3239
    return-void

    .line 3236
    :cond_0
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires INTERNAL_SYSTEM_WINDOW permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public showRecentApps()V
    .locals 1

    .line 6083
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    invoke-interface {v0}, Lcom/android/server/policy/WindowManagerPolicy;->showRecentApps()V

    .line 6084
    return-void
.end method

.method public showStrictModeViolation(Z)V
    .locals 6
    .param p1, "on"    # Z

    .line 3715
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v0

    .line 3716
    .local v0, "pid":I
    const/4 v1, 0x0

    const/16 v2, 0x19

    if-eqz p1, :cond_0

    .line 3719
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/4 v4, 0x1

    invoke-virtual {v3, v2, v4, v0}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(III)Landroid/os/Message;

    move-result-object v4

    invoke-virtual {v3, v4}, Lcom/android/server/wm/WindowManagerService$H;->sendMessage(Landroid/os/Message;)Z

    .line 3720
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    invoke-virtual {v3, v2, v1, v0}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(III)Landroid/os/Message;

    move-result-object v1

    const-wide/16 v4, 0x3e8

    invoke-virtual {v3, v1, v4, v5}, Lcom/android/server/wm/WindowManagerService$H;->sendMessageDelayed(Landroid/os/Message;J)Z

    goto :goto_0

    .line 3723
    :cond_0
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    invoke-virtual {v3, v2, v1, v0}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(III)Landroid/os/Message;

    move-result-object v1

    invoke-virtual {v3, v1}, Lcom/android/server/wm/WindowManagerService$H;->sendMessage(Landroid/os/Message;)Z

    .line 3725
    :goto_0
    return-void
.end method

.method public shutdown(Z)V
    .locals 2
    .param p1, "confirm"    # Z

    .line 3411
    invoke-static {}, Landroid/app/ActivityThread;->currentActivityThread()Landroid/app/ActivityThread;

    move-result-object v0

    invoke-virtual {v0}, Landroid/app/ActivityThread;->getSystemUiContext()Landroid/app/ContextImpl;

    move-result-object v0

    const-string v1, "userrequested"

    invoke-static {v0, v1, p1}, Lcom/android/server/power/ShutdownThread;->shutdown(Landroid/content/Context;Ljava/lang/String;Z)V

    .line 3413
    return-void
.end method

.method startFreezingDisplay(II)V
    .locals 1
    .param p1, "exitAnim"    # I
    .param p2, "enterAnim"    # I

    .line 5703
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    invoke-virtual {p0, p1, p2, v0}, Lcom/android/server/wm/WindowManagerService;->startFreezingDisplay(IILcom/android/server/wm/DisplayContent;)V

    .line 5704
    return-void
.end method

.method startFreezingDisplay(IILcom/android/server/wm/DisplayContent;)V
    .locals 1
    .param p1, "exitAnim"    # I
    .param p2, "enterAnim"    # I
    .param p3, "displayContent"    # Lcom/android/server/wm/DisplayContent;

    .line 5707
    const/4 v0, -0x1

    invoke-virtual {p0, p1, p2, p3, v0}, Lcom/android/server/wm/WindowManagerService;->startFreezingDisplay(IILcom/android/server/wm/DisplayContent;I)V

    .line 5709
    return-void
.end method

.method startFreezingDisplay(IILcom/android/server/wm/DisplayContent;I)V
    .locals 18
    .param p1, "exitAnim"    # I
    .param p2, "enterAnim"    # I
    .param p3, "displayContent"    # Lcom/android/server/wm/DisplayContent;
    .param p4, "overrideOriginalRotation"    # I

    .line 5713
    move-object/from16 v0, p0

    move/from16 v1, p1

    move/from16 v2, p2

    move-object/from16 v3, p3

    iget-boolean v4, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayFrozen:Z

    if-nez v4, :cond_6

    invoke-virtual/range {p3 .. p3}, Lcom/android/server/wm/DisplayContent;->getDisplayRotation()Lcom/android/server/wm/DisplayRotation;

    move-result-object v4

    invoke-virtual {v4}, Lcom/android/server/wm/DisplayRotation;->isRotatingSeamlessly()Z

    move-result v4

    if-eqz v4, :cond_0

    move/from16 v5, p4

    goto/16 :goto_2

    .line 5717
    :cond_0
    invoke-virtual/range {p3 .. p3}, Lcom/android/server/wm/DisplayContent;->isReady()Z

    move-result v4

    if-eqz v4, :cond_5

    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    invoke-interface {v4}, Lcom/android/server/policy/WindowManagerPolicy;->isScreenOn()Z

    move-result v4

    if-eqz v4, :cond_5

    invoke-virtual/range {p3 .. p3}, Lcom/android/server/wm/DisplayContent;->okToAnimate()Z

    move-result v4

    if-nez v4, :cond_1

    move/from16 v5, p4

    goto/16 :goto_1

    .line 5723
    :cond_1
    sget-boolean v4, Lcom/android/server/wm/ProtoLogCache;->WM_DEBUG_ORIENTATION_enabled:Z

    const/4 v5, 0x0

    const/4 v6, 0x1

    const/4 v7, 0x2

    if-eqz v4, :cond_2

    int-to-long v8, v1

    .local v8, "protoLogParam0":J
    int-to-long v10, v2

    .local v10, "protoLogParam1":J
    const/16 v4, 0x8

    invoke-static {v4}, Landroid/os/Debug;->getCallers(I)Ljava/lang/String;

    move-result-object v4

    invoke-static {v4}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v4

    .local v4, "protoLogParam2":Ljava/lang/String;
    sget-object v12, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_ORIENTATION:Lcom/android/internal/protolog/ProtoLogGroup;

    const v13, 0x9596b9

    const/4 v14, 0x5

    const/4 v15, 0x3

    new-array v15, v15, [Ljava/lang/Object;

    const/16 v16, 0x0

    invoke-static {v8, v9}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v17

    aput-object v17, v15, v16

    invoke-static {v10, v11}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v16

    aput-object v16, v15, v6

    aput-object v4, v15, v7

    invoke-static {v12, v13, v14, v5, v15}, Lcom/android/internal/protolog/ProtoLogImpl;->d(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 5726
    .end local v4    # "protoLogParam2":Ljava/lang/String;
    .end local v8    # "protoLogParam0":J
    .end local v10    # "protoLogParam1":J
    :cond_2
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mScreenFrozenLock:Landroid/os/PowerManager$WakeLock;

    invoke-virtual {v4}, Landroid/os/PowerManager$WakeLock;->acquire()V

    .line 5729
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {v4, v7}, Lcom/android/server/wm/ActivityTaskManagerService;->startLaunchPowerMode(I)V

    .line 5731
    iput-boolean v6, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayFrozen:Z

    .line 5732
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v6

    iput-wide v6, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayFreezeTime:J

    .line 5733
    iput-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mLastFinishedFreezeSource:Ljava/lang/Object;

    .line 5737
    invoke-virtual/range {p3 .. p3}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    move-result v4

    iput v4, v0, Lcom/android/server/wm/WindowManagerService;->mFrozenDisplayId:I

    .line 5739
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mInputManagerCallback:Lcom/android/server/wm/InputManagerCallback;

    invoke-virtual {v4}, Lcom/android/server/wm/InputManagerCallback;->freezeInputDispatchingLw()V

    .line 5741
    iget-object v4, v3, Lcom/android/server/wm/DisplayContent;->mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v4}, Lcom/android/server/wm/AppTransition;->isTransitionSet()Z

    move-result v4

    if-eqz v4, :cond_3

    .line 5742
    iget-object v4, v3, Lcom/android/server/wm/DisplayContent;->mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v4}, Lcom/android/server/wm/AppTransition;->freeze()V

    .line 5750
    :cond_3
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mLatencyTracker:Lcom/android/internal/util/LatencyTracker;

    const/4 v5, 0x6

    invoke-virtual {v4, v5}, Lcom/android/internal/util/LatencyTracker;->onActionStart(I)V

    .line 5751
    iput v1, v0, Lcom/android/server/wm/WindowManagerService;->mExitAnimId:I

    .line 5752
    iput v2, v0, Lcom/android/server/wm/WindowManagerService;->mEnterAnimId:I

    .line 5754
    invoke-virtual/range {p3 .. p3}, Lcom/android/server/wm/DisplayContent;->updateDisplayInfo()V

    .line 5755
    const/4 v4, -0x1

    move/from16 v5, p4

    if-eq v5, v4, :cond_4

    .line 5756
    move v4, v5

    goto :goto_0

    .line 5757
    :cond_4
    invoke-virtual/range {p3 .. p3}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    move-result-object v4

    iget v4, v4, Landroid/view/DisplayInfo;->rotation:I

    :goto_0
    nop

    .line 5758
    .local v4, "originalRotation":I
    new-instance v6, Lcom/android/server/wm/ScreenRotationAnimation;

    invoke-direct {v6, v3, v4}, Lcom/android/server/wm/ScreenRotationAnimation;-><init>(Lcom/android/server/wm/DisplayContent;I)V

    invoke-virtual {v3, v6}, Lcom/android/server/wm/DisplayContent;->setRotationAnimation(Lcom/android/server/wm/ScreenRotationAnimation;)V

    .line 5760
    return-void

    .line 5717
    .end local v4    # "originalRotation":I
    :cond_5
    move/from16 v5, p4

    .line 5720
    :goto_1
    return-void

    .line 5713
    :cond_6
    move/from16 v5, p4

    .line 5714
    :goto_2
    return-void
.end method

.method public startFreezingScreen(II)V
    .locals 7
    .param p1, "exitAnim"    # I
    .param p2, "enterAnim"    # I

    .line 3079
    const-string v0, "android.permission.FREEZE_SCREEN"

    const-string v1, "startFreezingScreen()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 3084
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 3085
    iget-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mClientFreezingScreen:Z

    if-nez v1, :cond_0

    .line 3086
    const/4 v1, 0x1

    iput-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mClientFreezingScreen:Z

    .line 3087
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 3089
    .local v1, "origId":J
    :try_start_1
    invoke-virtual {p0, p1, p2}, Lcom/android/server/wm/WindowManagerService;->startFreezingDisplay(II)V

    .line 3090
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v4, 0x1e

    invoke-virtual {v3, v4}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    .line 3091
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const-wide/16 v5, 0x1388

    invoke-virtual {v3, v4, v5, v6}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessageDelayed(IJ)Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 3093
    :try_start_2
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3094
    goto :goto_0

    .line 3093
    :catchall_0
    move-exception v3

    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3094
    nop

    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "exitAnim":I
    .end local p2    # "enterAnim":I
    throw v3

    .line 3096
    .end local v1    # "origId":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "exitAnim":I
    .restart local p2    # "enterAnim":I
    :cond_0
    :goto_0
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 3097
    return-void

    .line 3096
    :catchall_1
    move-exception v1

    :try_start_3
    monitor-exit v0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1

    .line 3081
    :cond_1
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires FREEZE_SCREEN permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public startViewServer(I)Z
    .locals 6
    .param p1, "port"    # I

    .line 4382
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->isSystemSecure()Z

    move-result v0

    const/4 v1, 0x0

    if-eqz v0, :cond_0

    .line 4383
    return v1

    .line 4386
    :cond_0
    const-string v0, "android.permission.DUMP"

    const-string v2, "startViewServer"

    invoke-virtual {p0, v0, v2}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_1

    .line 4387
    return v1

    .line 4390
    :cond_1
    const/16 v0, 0x400

    if-ge p1, v0, :cond_2

    .line 4391
    return v1

    .line 4394
    :cond_2
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mViewServer:Lcom/android/server/wm/ViewServer;

    const/4 v2, 0x0

    const-string v3, "View server did not start"

    const v4, -0x5c258446

    if-eqz v0, :cond_4

    .line 4395
    invoke-virtual {v0}, Lcom/android/server/wm/ViewServer;->isRunning()Z

    move-result v0

    if-nez v0, :cond_3

    .line 4397
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mViewServer:Lcom/android/server/wm/ViewServer;

    invoke-virtual {v0}, Lcom/android/server/wm/ViewServer;->start()Z

    move-result v0
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0

    return v0

    .line 4398
    :catch_0
    move-exception v0

    .line 4399
    .local v0, "e":Ljava/io/IOException;
    sget-boolean v5, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v5, :cond_3

    sget-object v5, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    check-cast v2, [Ljava/lang/Object;

    invoke-static {v5, v4, v1, v3, v2}, Lcom/android/internal/protolog/ProtoLogImpl;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 4402
    .end local v0    # "e":Ljava/io/IOException;
    :cond_3
    return v1

    .line 4406
    :cond_4
    :try_start_1
    new-instance v0, Lcom/android/server/wm/ViewServer;

    invoke-direct {v0, p0, p1}, Lcom/android/server/wm/ViewServer;-><init>(Lcom/android/server/wm/WindowManagerService;I)V

    iput-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mViewServer:Lcom/android/server/wm/ViewServer;

    .line 4407
    invoke-virtual {v0}, Lcom/android/server/wm/ViewServer;->start()Z

    move-result v0
    :try_end_1
    .catch Ljava/io/IOException; {:try_start_1 .. :try_end_1} :catch_1

    return v0

    .line 4408
    :catch_1
    move-exception v0

    .line 4409
    .restart local v0    # "e":Ljava/io/IOException;
    sget-boolean v5, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v5, :cond_5

    sget-object v5, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    check-cast v2, [Ljava/lang/Object;

    invoke-static {v5, v4, v1, v3, v2}, Lcom/android/internal/protolog/ProtoLogImpl;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 4411
    .end local v0    # "e":Ljava/io/IOException;
    :cond_5
    return v1
.end method

.method public startWindowTrace()V
    .locals 2

    .line 5552
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowTracing:Lcom/android/server/wm/WindowTracing;

    const/4 v1, 0x0

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowTracing;->startTrace(Ljava/io/PrintWriter;)V

    .line 5553
    return-void
.end method

.method stopFreezingDisplayLocked()V
    .locals 23

    .line 5763
    move-object/from16 v0, p0

    iget-boolean v1, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayFrozen:Z

    if-nez v1, :cond_0

    .line 5764
    return-void

    .line 5767
    :cond_0
    iget-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    iget v2, v0, Lcom/android/server/wm/WindowManagerService;->mFrozenDisplayId:I

    invoke-virtual {v1, v2}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 5771
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    const/4 v2, 0x0

    if-eqz v1, :cond_1

    .line 5772
    iget-object v3, v1, Lcom/android/server/wm/DisplayContent;->mOpeningApps:Landroid/util/ArraySet;

    invoke-virtual {v3}, Landroid/util/ArraySet;->size()I

    move-result v3

    .line 5773
    .local v3, "numOpeningApps":I
    iget-boolean v4, v1, Lcom/android/server/wm/DisplayContent;->mWaitingForConfig:Z

    .line 5774
    .local v4, "waitingForConfig":Z
    nop

    .line 5775
    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->getDisplayRotation()Lcom/android/server/wm/DisplayRotation;

    move-result-object v5

    invoke-virtual {v5}, Lcom/android/server/wm/DisplayRotation;->isWaitingForRemoteRotation()Z

    move-result v5

    .local v5, "waitingForRemoteRotation":Z
    goto :goto_0

    .line 5777
    .end local v3    # "numOpeningApps":I
    .end local v4    # "waitingForConfig":Z
    .end local v5    # "waitingForRemoteRotation":Z
    :cond_1
    move v5, v2

    .restart local v5    # "waitingForRemoteRotation":Z
    move v4, v2

    .line 5778
    .restart local v4    # "waitingForConfig":Z
    const/4 v3, 0x0

    .line 5780
    .restart local v3    # "numOpeningApps":I
    :goto_0
    const/4 v8, 0x1

    const/4 v9, 0x0

    if-nez v4, :cond_10

    if-nez v5, :cond_10

    iget v10, v0, Lcom/android/server/wm/WindowManagerService;->mAppsFreezingScreen:I

    if-gtz v10, :cond_10

    iget v10, v0, Lcom/android/server/wm/WindowManagerService;->mWindowsFreezingScreen:I

    if-eq v10, v8, :cond_10

    iget-boolean v10, v0, Lcom/android/server/wm/WindowManagerService;->mClientFreezingScreen:Z

    if-nez v10, :cond_10

    if-lez v3, :cond_2

    goto/16 :goto_5

    .line 5793
    :cond_2
    sget-boolean v10, Lcom/android/server/wm/ProtoLogCache;->WM_DEBUG_ORIENTATION_enabled:Z

    if-eqz v10, :cond_3

    sget-object v10, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_ORIENTATION:Lcom/android/internal/protolog/ProtoLogGroup;

    const v11, 0x1533dc4c

    move-object v12, v9

    check-cast v12, [Ljava/lang/Object;

    invoke-static {v10, v11, v2, v9, v12}, Lcom/android/internal/protolog/ProtoLogImpl;->d(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 5800
    :cond_3
    const/4 v10, -0x1

    iput v10, v0, Lcom/android/server/wm/WindowManagerService;->mFrozenDisplayId:I

    .line 5801
    iput-boolean v2, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayFrozen:Z

    .line 5802
    iget-object v10, v0, Lcom/android/server/wm/WindowManagerService;->mInputManagerCallback:Lcom/android/server/wm/InputManagerCallback;

    invoke-virtual {v10}, Lcom/android/server/wm/InputManagerCallback;->thawInputDispatchingLw()V

    .line 5803
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v10

    iget-wide v12, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayFreezeTime:J

    sub-long/2addr v10, v12

    long-to-int v10, v10

    iput v10, v0, Lcom/android/server/wm/WindowManagerService;->mLastDisplayFreezeDuration:I

    .line 5804
    new-instance v10, Ljava/lang/StringBuilder;

    const/16 v11, 0x80

    invoke-direct {v10, v11}, Ljava/lang/StringBuilder;-><init>(I)V

    .line 5805
    .local v10, "sb":Ljava/lang/StringBuilder;
    const-string v11, "Screen frozen for "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 5806
    iget v11, v0, Lcom/android/server/wm/WindowManagerService;->mLastDisplayFreezeDuration:I

    int-to-long v11, v11

    invoke-static {v11, v12, v10}, Landroid/util/TimeUtils;->formatDuration(JLjava/lang/StringBuilder;)V

    .line 5807
    iget-object v11, v0, Lcom/android/server/wm/WindowManagerService;->mLastFinishedFreezeSource:Ljava/lang/Object;

    if-eqz v11, :cond_4

    .line 5808
    const-string v11, " due to "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 5809
    iget-object v11, v0, Lcom/android/server/wm/WindowManagerService;->mLastFinishedFreezeSource:Ljava/lang/Object;

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 5811
    :cond_4
    sget-boolean v11, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v11, :cond_5

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v11

    invoke-static {v11}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v11

    .local v11, "protoLogParam0":Ljava/lang/String;
    sget-object v12, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const v13, -0x22c05ae8

    new-array v14, v8, [Ljava/lang/Object;

    aput-object v11, v14, v2

    const-string v15, "%s"

    invoke-static {v12, v13, v2, v15, v14}, Lcom/android/internal/protolog/ProtoLogImpl;->i(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 5812
    .end local v11    # "protoLogParam0":Ljava/lang/String;
    :cond_5
    iget-object v11, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v12, 0x11

    invoke-virtual {v11, v12}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    .line 5813
    iget-object v11, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v12, 0x1e

    invoke-virtual {v11, v12}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    .line 5818
    const/4 v11, 0x0

    .line 5820
    .local v11, "updateRotation":Z
    if-nez v1, :cond_6

    move-object v12, v9

    goto :goto_1

    .line 5821
    :cond_6
    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->getRotationAnimation()Lcom/android/server/wm/ScreenRotationAnimation;

    move-result-object v12

    :goto_1
    nop

    .line 5822
    .local v12, "screenRotationAnimation":Lcom/android/server/wm/ScreenRotationAnimation;
    if-eqz v12, :cond_a

    invoke-virtual {v12}, Lcom/android/server/wm/ScreenRotationAnimation;->hasScreenshot()Z

    move-result v13

    if-eqz v13, :cond_a

    .line 5823
    sget-boolean v13, Lcom/android/server/wm/ProtoLogCache;->WM_DEBUG_ORIENTATION_enabled:Z

    if-eqz v13, :cond_7

    sget-object v13, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_ORIENTATION:Lcom/android/internal/protolog/ProtoLogGroup;

    const v14, 0x616d601a

    move-object v15, v9

    check-cast v15, [Ljava/lang/Object;

    invoke-static {v13, v14, v2, v9, v15}, Lcom/android/internal/protolog/ProtoLogImpl;->i(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 5824
    :cond_7
    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    move-result-object v15

    .line 5826
    .local v15, "displayInfo":Landroid/view/DisplayInfo;
    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->getDisplayRotation()Lcom/android/server/wm/DisplayRotation;

    move-result-object v13

    iget v14, v0, Lcom/android/server/wm/WindowManagerService;->mExitAnimId:I

    iget v8, v0, Lcom/android/server/wm/WindowManagerService;->mEnterAnimId:I

    invoke-virtual {v13, v14, v8, v2}, Lcom/android/server/wm/DisplayRotation;->validateRotationAnimation(IIZ)Z

    move-result v8

    if-nez v8, :cond_8

    .line 5828
    iput v2, v0, Lcom/android/server/wm/WindowManagerService;->mEnterAnimId:I

    iput v2, v0, Lcom/android/server/wm/WindowManagerService;->mExitAnimId:I

    .line 5830
    :cond_8
    iget-object v14, v0, Lcom/android/server/wm/WindowManagerService;->mTransaction:Landroid/view/SurfaceControl$Transaction;

    const-wide/16 v16, 0x2710

    .line 5831
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getTransitionAnimationScaleLocked()F

    move-result v8

    iget v13, v15, Landroid/view/DisplayInfo;->logicalWidth:I

    iget v7, v15, Landroid/view/DisplayInfo;->logicalHeight:I

    iget v6, v0, Lcom/android/server/wm/WindowManagerService;->mExitAnimId:I

    iget v2, v0, Lcom/android/server/wm/WindowManagerService;->mEnterAnimId:I

    .line 5830
    move/from16 v18, v13

    move-object v13, v12

    move-object/from16 v22, v15

    .end local v15    # "displayInfo":Landroid/view/DisplayInfo;
    .local v22, "displayInfo":Landroid/view/DisplayInfo;
    move-wide/from16 v15, v16

    move/from16 v17, v8

    move/from16 v19, v7

    move/from16 v20, v6

    move/from16 v21, v2

    invoke-virtual/range {v13 .. v21}, Lcom/android/server/wm/ScreenRotationAnimation;->dismiss(Landroid/view/SurfaceControl$Transaction;JFIIII)Z

    move-result v2

    if-eqz v2, :cond_9

    .line 5833
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mTransaction:Landroid/view/SurfaceControl$Transaction;

    invoke-virtual {v2}, Landroid/view/SurfaceControl$Transaction;->apply()V

    goto :goto_2

    .line 5835
    :cond_9
    invoke-virtual {v12}, Lcom/android/server/wm/ScreenRotationAnimation;->kill()V

    .line 5836
    invoke-virtual {v1, v9}, Lcom/android/server/wm/DisplayContent;->setRotationAnimation(Lcom/android/server/wm/ScreenRotationAnimation;)V

    .line 5837
    const/4 v11, 0x1

    .line 5839
    .end local v22    # "displayInfo":Landroid/view/DisplayInfo;
    :goto_2
    goto :goto_3

    .line 5840
    :cond_a
    if-eqz v12, :cond_b

    .line 5841
    invoke-virtual {v12}, Lcom/android/server/wm/ScreenRotationAnimation;->kill()V

    .line 5842
    invoke-virtual {v1, v9}, Lcom/android/server/wm/DisplayContent;->setRotationAnimation(Lcom/android/server/wm/ScreenRotationAnimation;)V

    .line 5844
    :cond_b
    const/4 v11, 0x1

    .line 5853
    :goto_3
    if-eqz v1, :cond_c

    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->updateOrientation()Z

    move-result v2

    if-eqz v2, :cond_c

    const/4 v8, 0x1

    goto :goto_4

    :cond_c
    const/4 v8, 0x0

    :goto_4
    move v2, v8

    .line 5860
    .local v2, "configChanged":Z
    iget-object v6, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v7, 0xf

    invoke-virtual {v6, v7}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    .line 5861
    iget-object v6, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const-wide/16 v13, 0x7d0

    invoke-virtual {v6, v7, v13, v14}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessageDelayed(IJ)Z

    .line 5863
    iget-object v6, v0, Lcom/android/server/wm/WindowManagerService;->mScreenFrozenLock:Landroid/os/PowerManager$WakeLock;

    invoke-virtual {v6}, Landroid/os/PowerManager$WakeLock;->release()V

    .line 5865
    if-eqz v11, :cond_e

    if-eqz v1, :cond_e

    .line 5866
    sget-boolean v6, Lcom/android/server/wm/ProtoLogCache;->WM_DEBUG_ORIENTATION_enabled:Z

    if-eqz v6, :cond_d

    sget-object v6, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_ORIENTATION:Lcom/android/internal/protolog/ProtoLogGroup;

    const v7, -0x2eb1d36a

    move-object v8, v9

    check-cast v8, [Ljava/lang/Object;

    const/4 v13, 0x0

    invoke-static {v6, v7, v13, v9, v8}, Lcom/android/internal/protolog/ProtoLogImpl;->d(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 5867
    :cond_d
    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->updateRotationUnchecked()Z

    move-result v6

    or-int/2addr v2, v6

    .line 5870
    :cond_e
    if-eqz v2, :cond_f

    .line 5871
    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->sendNewConfiguration()V

    .line 5873
    :cond_f
    iget-object v6, v0, Lcom/android/server/wm/WindowManagerService;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    const/4 v7, 0x2

    invoke-virtual {v6, v7}, Lcom/android/server/wm/ActivityTaskManagerService;->endLaunchPowerMode(I)V

    .line 5874
    iget-object v6, v0, Lcom/android/server/wm/WindowManagerService;->mLatencyTracker:Lcom/android/internal/util/LatencyTracker;

    const/4 v7, 0x6

    invoke-virtual {v6, v7}, Lcom/android/internal/util/LatencyTracker;->onActionEnd(I)V

    .line 5875
    return-void

    .line 5783
    .end local v2    # "configChanged":Z
    .end local v10    # "sb":Ljava/lang/StringBuilder;
    .end local v11    # "updateRotation":Z
    .end local v12    # "screenRotationAnimation":Lcom/android/server/wm/ScreenRotationAnimation;
    :cond_10
    :goto_5
    sget-boolean v2, Lcom/android/server/wm/ProtoLogCache;->WM_DEBUG_ORIENTATION_enabled:Z

    if-eqz v2, :cond_11

    move v2, v4

    .local v2, "protoLogParam0":Z
    move v6, v5

    .local v6, "protoLogParam1":Z
    iget v7, v0, Lcom/android/server/wm/WindowManagerService;->mAppsFreezingScreen:I

    int-to-long v7, v7

    .local v7, "protoLogParam2":J
    iget v10, v0, Lcom/android/server/wm/WindowManagerService;->mWindowsFreezingScreen:I

    int-to-long v10, v10

    .local v10, "protoLogParam3":J
    iget-boolean v12, v0, Lcom/android/server/wm/WindowManagerService;->mClientFreezingScreen:Z

    .local v12, "protoLogParam4":Z
    int-to-long v13, v3

    .local v13, "protoLogParam5":J
    sget-object v15, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_ORIENTATION:Lcom/android/internal/protolog/ProtoLogGroup;

    const/4 v9, 0x6

    new-array v9, v9, [Ljava/lang/Object;

    invoke-static {v2}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v19

    const/16 v20, 0x0

    aput-object v19, v9, v20

    invoke-static {v6}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v19

    const/16 v20, 0x1

    aput-object v19, v9, v20

    invoke-static {v7, v8}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v19

    const/16 v20, 0x2

    aput-object v19, v9, v20

    const/16 v19, 0x3

    invoke-static {v10, v11}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v20

    aput-object v20, v9, v19

    const/16 v19, 0x4

    invoke-static {v12}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v20

    aput-object v20, v9, v19

    const/16 v19, 0x5

    invoke-static {v13, v14}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v20

    aput-object v20, v9, v19

    move-object/from16 v16, v1

    move/from16 v17, v2

    const v0, 0x4a44fcf1    # 3227452.2f

    const/16 v1, 0x75f

    const/4 v2, 0x0

    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v2    # "protoLogParam0":Z
    .local v16, "displayContent":Lcom/android/server/wm/DisplayContent;
    .local v17, "protoLogParam0":Z
    invoke-static {v15, v0, v1, v2, v9}, Lcom/android/internal/protolog/ProtoLogImpl;->d(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    goto :goto_6

    .end local v6    # "protoLogParam1":Z
    .end local v7    # "protoLogParam2":J
    .end local v10    # "protoLogParam3":J
    .end local v12    # "protoLogParam4":Z
    .end local v13    # "protoLogParam5":J
    .end local v16    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v17    # "protoLogParam0":Z
    .restart local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_11
    move-object/from16 v16, v1

    .line 5790
    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v16    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :goto_6
    return-void
.end method

.method public stopFreezingScreen()V
    .locals 4

    .line 3101
    const-string v0, "android.permission.FREEZE_SCREEN"

    const-string v1, "stopFreezingScreen()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 3106
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 3107
    iget-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mClientFreezingScreen:Z

    if-eqz v1, :cond_0

    .line 3108
    const/4 v1, 0x0

    iput-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mClientFreezingScreen:Z

    .line 3109
    const-string v1, "client"

    iput-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mLastFinishedFreezeSource:Ljava/lang/Object;

    .line 3110
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 3112
    .local v1, "origId":J
    :try_start_1
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->stopFreezingDisplayLocked()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 3114
    :try_start_2
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3115
    goto :goto_0

    .line 3114
    :catchall_0
    move-exception v3

    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3115
    nop

    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    throw v3

    .line 3117
    .end local v1    # "origId":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    :cond_0
    :goto_0
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 3118
    return-void

    .line 3117
    :catchall_1
    move-exception v1

    :try_start_3
    monitor-exit v0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1

    .line 3103
    :cond_1
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires FREEZE_SCREEN permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public stopViewServer()Z
    .locals 3

    .line 4429
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->isSystemSecure()Z

    move-result v0

    const/4 v1, 0x0

    if-eqz v0, :cond_0

    .line 4430
    return v1

    .line 4433
    :cond_0
    const-string v0, "android.permission.DUMP"

    const-string v2, "stopViewServer"

    invoke-virtual {p0, v0, v2}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_1

    .line 4434
    return v1

    .line 4437
    :cond_1
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mViewServer:Lcom/android/server/wm/ViewServer;

    if-eqz v0, :cond_2

    .line 4438
    invoke-virtual {v0}, Lcom/android/server/wm/ViewServer;->stop()Z

    move-result v0

    return v0

    .line 4440
    :cond_2
    return v1
.end method

.method public stopWindowTrace()V
    .locals 2

    .line 5557
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowTracing:Lcom/android/server/wm/WindowTracing;

    const/4 v1, 0x0

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowTracing;->stopTrace(Ljava/io/PrintWriter;)V

    .line 5558
    return-void
.end method

.method public switchKeyboardLayout(II)V
    .locals 1
    .param p1, "deviceId"    # I
    .param p2, "direction"    # I

    .line 3404
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/input/InputManagerService;->switchKeyboardLayout(II)V

    .line 3405
    return-void
.end method

.method public syncInputTransactions(Z)V
    .locals 6
    .param p1, "waitForAnimations"    # Z

    .line 8066
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 8068
    .local v0, "token":J
    if-eqz p1, :cond_0

    .line 8069
    :try_start_0
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->waitForAnimationsToComplete()V

    .line 8074
    :cond_0
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mTransactionFactory:Ljava/util/function/Supplier;

    invoke-interface {v2}, Ljava/util/function/Supplier;->get()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/view/SurfaceControl$Transaction;

    .line 8075
    .local v2, "t":Landroid/view/SurfaceControl$Transaction;
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 8076
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    invoke-virtual {v4}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacementIfScheduled()V

    .line 8077
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    new-instance v5, Lcom/android/server/wm/WindowManagerService$$ExternalSyntheticLambda9;

    invoke-direct {v5, v2}, Lcom/android/server/wm/WindowManagerService$$ExternalSyntheticLambda9;-><init>(Landroid/view/SurfaceControl$Transaction;)V

    invoke-virtual {v4, v5}, Lcom/android/server/wm/RootWindowContainer;->forAllDisplays(Ljava/util/function/Consumer;)V

    .line 8079
    monitor-exit v3
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 8081
    invoke-virtual {v2}, Landroid/view/SurfaceControl$Transaction;->syncInputWindows()Landroid/view/SurfaceControl$Transaction;

    move-result-object v3

    invoke-virtual {v3}, Landroid/view/SurfaceControl$Transaction;->apply()V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 8083
    .end local v2    # "t":Landroid/view/SurfaceControl$Transaction;
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8084
    nop

    .line 8085
    return-void

    .line 8079
    .restart local v2    # "t":Landroid/view/SurfaceControl$Transaction;
    :catchall_0
    move-exception v4

    :try_start_3
    monitor-exit v3
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .end local v0    # "token":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "waitForAnimations":Z
    throw v4
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 8083
    .end local v2    # "t":Landroid/view/SurfaceControl$Transaction;
    .restart local v0    # "token":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "waitForAnimations":Z
    :catchall_1
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8084
    throw v2
.end method

.method public systemReady()V
    .locals 4

    .line 4856
    const/4 v0, 0x1

    iput-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mSystemReady:Z

    .line 4857
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    invoke-interface {v0}, Lcom/android/server/policy/WindowManagerPolicy;->systemReady()V

    .line 4858
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    sget-object v1, Lcom/android/server/wm/WindowManagerService$$ExternalSyntheticLambda19;->INSTANCE:Lcom/android/server/wm/WindowManagerService$$ExternalSyntheticLambda19;

    invoke-virtual {v0, v1}, Lcom/android/server/wm/RootWindowContainer;->forAllDisplayPolicies(Ljava/util/function/Consumer;)V

    .line 4859
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mTaskSnapshotController:Lcom/android/server/wm/TaskSnapshotController;

    invoke-virtual {v0}, Lcom/android/server/wm/TaskSnapshotController;->systemReady()V

    .line 4860
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->queryWideColorGamutSupport()Z

    move-result v0

    iput-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mHasWideColorGamutSupport:Z

    .line 4861
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->queryHdrSupport()Z

    move-result v0

    iput-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mHasHdrSupport:Z

    .line 4862
    invoke-static {}, Lcom/android/server/UiThread;->getHandler()Landroid/os/Handler;

    move-result-object v0

    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mSettingsObserver:Lcom/android/server/wm/WindowManagerService$SettingsObserver;

    invoke-static {v1}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    new-instance v2, Lcom/android/server/wm/WindowManagerService$$ExternalSyntheticLambda3;

    invoke-direct {v2, v1}, Lcom/android/server/wm/WindowManagerService$$ExternalSyntheticLambda3;-><init>(Lcom/android/server/wm/WindowManagerService$SettingsObserver;)V

    invoke-virtual {v0, v2}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    .line 4863
    const-string v0, "vrmanager"

    .line 4864
    invoke-static {v0}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v0

    .line 4863
    invoke-static {v0}, Landroid/service/vr/IVrManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/service/vr/IVrManager;

    move-result-object v0

    .line 4865
    .local v0, "vrManager":Landroid/service/vr/IVrManager;
    if-eqz v0, :cond_1

    .line 4867
    :try_start_0
    invoke-interface {v0}, Landroid/service/vr/IVrManager;->getVrModeState()Z

    move-result v1

    .line 4868
    .local v1, "vrModeEnabled":Z
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v2
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    :try_start_1
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 4869
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mVrStateCallbacks:Landroid/service/vr/IVrStateCallbacks;

    invoke-interface {v0, v3}, Landroid/service/vr/IVrManager;->registerListener(Landroid/service/vr/IVrStateCallbacks;)V

    .line 4870
    if-eqz v1, :cond_0

    .line 4871
    iput-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mVrModeEnabled:Z

    .line 4872
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mVrStateCallbacks:Landroid/service/vr/IVrStateCallbacks;

    invoke-interface {v3, v1}, Landroid/service/vr/IVrStateCallbacks;->onVrStateChanged(Z)V

    .line 4874
    :cond_0
    monitor-exit v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_0

    .line 4877
    .end local v1    # "vrModeEnabled":Z
    goto :goto_0

    .line 4874
    .restart local v1    # "vrModeEnabled":Z
    :catchall_0
    move-exception v3

    :try_start_3
    monitor-exit v2
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .end local v0    # "vrManager":Landroid/service/vr/IVrManager;
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    throw v3
    :try_end_4
    .catch Landroid/os/RemoteException; {:try_start_4 .. :try_end_4} :catch_0

    .line 4875
    .end local v1    # "vrModeEnabled":Z
    .restart local v0    # "vrManager":Landroid/service/vr/IVrManager;
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    :catch_0
    move-exception v1

    .line 4879
    :cond_1
    :goto_0
    return-void
.end method

.method public thawDisplayRotation(I)V
    .locals 9
    .param p1, "displayId"    # I

    .line 3946
    const-string v0, "android.permission.SET_ORIENTATION"

    const-string v1, "thawRotation()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_2

    .line 3951
    sget-boolean v0, Lcom/android/server/wm/ProtoLogCache;->WM_DEBUG_ORIENTATION_enabled:Z

    const/4 v1, 0x0

    if-eqz v0, :cond_0

    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayRotation()I

    move-result v0

    int-to-long v2, v0

    .local v2, "protoLogParam0":J
    sget-object v0, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_ORIENTATION:Lcom/android/internal/protolog/ProtoLogGroup;

    const v4, -0x403162bf

    const/4 v5, 0x0

    const/4 v6, 0x1

    new-array v7, v6, [Ljava/lang/Object;

    invoke-static {v2, v3}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v8

    aput-object v8, v7, v1

    invoke-static {v0, v4, v6, v5, v7}, Lcom/android/internal/protolog/ProtoLogImpl;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 3953
    .end local v2    # "protoLogParam0":J
    :cond_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 3955
    .local v2, "origId":J
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 3956
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v4, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v4

    .line 3957
    .local v4, "display":Lcom/android/server/wm/DisplayContent;
    if-nez v4, :cond_1

    .line 3958
    const-string v1, "WindowManager"

    const-string v5, "Trying to thaw rotation for a missing display."

    invoke-static {v1, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 3959
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 3964
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3959
    return-void

    .line 3961
    :cond_1
    :try_start_2
    invoke-virtual {v4}, Lcom/android/server/wm/DisplayContent;->getDisplayRotation()Lcom/android/server/wm/DisplayRotation;

    move-result-object v5

    invoke-virtual {v5}, Lcom/android/server/wm/DisplayRotation;->thawRotation()V

    .line 3962
    .end local v4    # "display":Lcom/android/server/wm/DisplayContent;
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 3964
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3965
    nop

    .line 3967
    invoke-direct {p0, v1, v1}, Lcom/android/server/wm/WindowManagerService;->updateRotationUnchecked(ZZ)V

    .line 3968
    return-void

    .line 3962
    :catchall_0
    move-exception v1

    :try_start_4
    monitor-exit v0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    :try_start_5
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .end local v2    # "origId":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "displayId":I
    throw v1
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    .line 3964
    .restart local v2    # "origId":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "displayId":I
    :catchall_1
    move-exception v0

    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3965
    throw v0

    .line 3948
    .end local v2    # "origId":J
    :cond_2
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires SET_ORIENTATION permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public thawRotation()V
    .locals 1

    .line 3937
    const/4 v0, 0x0

    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->thawDisplayRotation(I)V

    .line 3938
    return-void
.end method

.method public triggerAnimationFailsafe()V
    .locals 2

    .line 3026
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v1, 0x3c

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    .line 3027
    return-void
.end method

.method unregisterAppFreezeListener(Lcom/android/server/wm/WindowManagerService$AppFreezeListener;)V
    .locals 1
    .param p1, "listener"    # Lcom/android/server/wm/WindowManagerService$AppFreezeListener;

    .line 7915
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppFreezeListeners:Ljava/util/ArrayList;

    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 7916
    return-void
.end method

.method public unregisterCrossWindowBlurEnabledListener(Landroid/view/ICrossWindowBlurEnabledListener;)V
    .locals 1
    .param p1, "listener"    # Landroid/view/ICrossWindowBlurEnabledListener;

    .line 5574
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mBlurController:Lcom/android/server/wm/BlurController;

    invoke-virtual {v0, p1}, Lcom/android/server/wm/BlurController;->unregisterCrossWindowBlurEnabledListener(Landroid/view/ICrossWindowBlurEnabledListener;)V

    .line 5575
    return-void
.end method

.method public unregisterDisplayFoldListener(Landroid/view/IDisplayFoldListener;)V
    .locals 1
    .param p1, "listener"    # Landroid/view/IDisplayFoldListener;

    .line 4302
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    invoke-interface {v0, p1}, Lcom/android/server/policy/WindowManagerPolicy;->unregisterDisplayFoldListener(Landroid/view/IDisplayFoldListener;)V

    .line 4303
    return-void
.end method

.method public unregisterDisplayWindowListener(Landroid/view/IDisplayWindowListener;)V
    .locals 1
    .param p1, "listener"    # Landroid/view/IDisplayWindowListener;

    .line 4355
    const-string v0, "unregisterDisplayWindowListener"

    invoke-static {v0}, Lcom/android/server/wm/ActivityTaskManagerService;->enforceTaskPermission(Ljava/lang/String;)V

    .line 4356
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayNotificationController:Lcom/android/server/wm/DisplayWindowListenerController;

    invoke-virtual {v0, p1}, Lcom/android/server/wm/DisplayWindowListenerController;->unregisterListener(Landroid/view/IDisplayWindowListener;)V

    .line 4357
    return-void
.end method

.method public unregisterPointerEventListener(Landroid/view/WindowManagerPolicyConstants$PointerEventListener;I)V
    .locals 2
    .param p1, "listener"    # Landroid/view/WindowManagerPolicyConstants$PointerEventListener;
    .param p2, "displayId"    # I

    .line 3353
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 3354
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p2}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 3355
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v1, :cond_0

    .line 3356
    invoke-virtual {v1, p1}, Lcom/android/server/wm/DisplayContent;->unregisterPointerEventListener(Landroid/view/WindowManagerPolicyConstants$PointerEventListener;)V

    .line 3358
    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_0
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 3359
    return-void

    .line 3358
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public unregisterSystemGestureExclusionListener(Landroid/view/ISystemGestureExclusionListener;I)V
    .locals 5
    .param p1, "listener"    # Landroid/view/ISystemGestureExclusionListener;
    .param p2, "displayId"    # I

    .line 4275
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 4276
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p2}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 4277
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v1, :cond_0

    .line 4281
    invoke-virtual {v1, p1}, Lcom/android/server/wm/DisplayContent;->unregisterSystemGestureExclusionListener(Landroid/view/ISystemGestureExclusionListener;)V

    .line 4282
    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 4283
    return-void

    .line 4278
    .restart local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_0
    :try_start_1
    new-instance v2, Ljava/lang/IllegalArgumentException;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Trying to register visibility event for invalid display: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v2, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "listener":Landroid/view/ISystemGestureExclusionListener;
    .end local p2    # "displayId":I
    throw v2

    .line 4282
    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "listener":Landroid/view/ISystemGestureExclusionListener;
    .restart local p2    # "displayId":I
    :catchall_0
    move-exception v1

    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public unregisterWallpaperVisibilityListener(Landroid/view/IWallpaperVisibilityListener;I)V
    .locals 2
    .param p1, "listener"    # Landroid/view/IWallpaperVisibilityListener;
    .param p2, "displayId"    # I

    .line 4253
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 4254
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperVisibilityListeners:Lcom/android/server/wm/WallpaperVisibilityListeners;

    .line 4255
    invoke-virtual {v1, p1, p2}, Lcom/android/server/wm/WallpaperVisibilityListeners;->unregisterWallpaperVisibilityListener(Landroid/view/IWallpaperVisibilityListener;I)V

    .line 4256
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 4257
    return-void

    .line 4256
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method updateDisplayContentLocation(Landroid/view/IWindow;III)V
    .locals 10
    .param p1, "client"    # Landroid/view/IWindow;
    .param p2, "x"    # I
    .param p3, "y"    # I
    .param p4, "displayId"    # I

    .line 6980
    invoke-direct {p0, p4}, Lcom/android/server/wm/WindowManagerService;->checkCallerOwnsDisplay(I)V

    .line 6982
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 6983
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 6985
    .local v1, "token":J
    const/4 v3, 0x0

    const/4 v4, 0x0

    :try_start_1
    invoke-virtual {p0, v3, p1, v4}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;

    move-result-object v3

    .line 6986
    .local v3, "win":Lcom/android/server/wm/WindowState;
    if-nez v3, :cond_1

    .line 6987
    sget-boolean v5, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v5, :cond_0

    invoke-static {p1}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v5

    .local v5, "protoLogParam0":Ljava/lang/String;
    sget-object v6, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const v7, 0x4f03ccce

    const-string v8, "Bad requesting window %s"

    const/4 v9, 0x1

    new-array v9, v9, [Ljava/lang/Object;

    aput-object v5, v9, v4

    invoke-static {v6, v7, v4, v8, v9}, Lcom/android/internal/protolog/ProtoLogImpl;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 6995
    .end local v5    # "protoLogParam0":Ljava/lang/String;
    :cond_0
    :try_start_2
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 6988
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 6990
    :cond_1
    :try_start_3
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v4, p4}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v4

    .line 6991
    .local v4, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v4, :cond_2

    .line 6992
    invoke-virtual {v4, v3, p2, p3}, Lcom/android/server/wm/DisplayContent;->updateLocation(Lcom/android/server/wm/WindowState;II)V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 6995
    .end local v3    # "win":Lcom/android/server/wm/WindowState;
    .end local v4    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_2
    :try_start_4
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 6996
    nop

    .line 6997
    .end local v1    # "token":J
    monitor-exit v0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 6998
    return-void

    .line 6995
    .restart local v1    # "token":J
    :catchall_0
    move-exception v3

    :try_start_5
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 6996
    nop

    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "client":Landroid/view/IWindow;
    .end local p2    # "x":I
    .end local p3    # "y":I
    .end local p4    # "displayId":I
    throw v3

    .line 6997
    .end local v1    # "token":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "client":Landroid/view/IWindow;
    .restart local p2    # "x":I
    .restart local p3    # "y":I
    .restart local p4    # "displayId":I
    :catchall_1
    move-exception v1

    monitor-exit v0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method updateFocusedWindowLocked(IZ)Z
    .locals 3
    .param p1, "mode"    # I
    .param p2, "updateInputWindows"    # Z

    .line 5696
    const-wide/16 v0, 0x20

    const-string v2, "wmUpdateFocus"

    invoke-static {v0, v1, v2}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 5697
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v2, p1, p2}, Lcom/android/server/wm/RootWindowContainer;->updateFocusedWindowLocked(IZ)Z

    move-result v2

    .line 5698
    .local v2, "changed":Z
    invoke-static {v0, v1}, Landroid/os/Trace;->traceEnd(J)V

    .line 5699
    return v2
.end method

.method updateInputChannel(Landroid/os/IBinder;ILandroid/view/SurfaceControl;IILandroid/graphics/Region;)V
    .locals 15
    .param p1, "channelToken"    # Landroid/os/IBinder;
    .param p2, "displayId"    # I
    .param p3, "surface"    # Landroid/view/SurfaceControl;
    .param p4, "flags"    # I
    .param p5, "privateFlags"    # I
    .param p6, "region"    # Landroid/graphics/Region;

    .line 8269
    move-object v13, p0

    iget-object v1, v13, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v1

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 8270
    iget-object v0, v13, Lcom/android/server/wm/WindowManagerService;->mEmbeddedWindowController:Lcom/android/server/wm/EmbeddedWindowController;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-object/from16 v14, p1

    :try_start_1
    invoke-virtual {v0, v14}, Lcom/android/server/wm/EmbeddedWindowController;->get(Landroid/os/IBinder;)Lcom/android/server/wm/EmbeddedWindowController$EmbeddedWindow;

    move-result-object v0

    .line 8271
    .local v0, "win":Lcom/android/server/wm/EmbeddedWindowController$EmbeddedWindow;
    if-nez v0, :cond_0

    .line 8272
    const-string v2, "WindowManager"

    const-string v3, "Couldn\'t find window for provided channelToken."

    invoke-static {v2, v3}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 8273
    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 8275
    :cond_0
    :try_start_2
    invoke-virtual {v0}, Lcom/android/server/wm/EmbeddedWindowController$EmbeddedWindow;->getName()Ljava/lang/String;

    move-result-object v7

    .line 8276
    .local v7, "name":Ljava/lang/String;
    invoke-virtual {v0}, Lcom/android/server/wm/EmbeddedWindowController$EmbeddedWindow;->getApplicationHandle()Landroid/view/InputApplicationHandle;

    move-result-object v8

    .line 8277
    .local v8, "applicationHandle":Landroid/view/InputApplicationHandle;
    monitor-exit v1
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 8279
    iget v3, v0, Lcom/android/server/wm/EmbeddedWindowController$EmbeddedWindow;->mOwnerUid:I

    iget v4, v0, Lcom/android/server/wm/EmbeddedWindowController$EmbeddedWindow;->mOwnerPid:I

    iget v11, v0, Lcom/android/server/wm/EmbeddedWindowController$EmbeddedWindow;->mWindowType:I

    move-object v1, p0

    move-object/from16 v2, p1

    move/from16 v5, p2

    move-object/from16 v6, p3

    move/from16 v9, p4

    move/from16 v10, p5

    move-object/from16 v12, p6

    invoke-direct/range {v1 .. v12}, Lcom/android/server/wm/WindowManagerService;->updateInputChannel(Landroid/os/IBinder;IIILandroid/view/SurfaceControl;Ljava/lang/String;Landroid/view/InputApplicationHandle;IIILandroid/graphics/Region;)V

    .line 8281
    return-void

    .line 8277
    .end local v0    # "win":Lcom/android/server/wm/EmbeddedWindowController$EmbeddedWindow;
    .end local v7    # "name":Ljava/lang/String;
    .end local v8    # "applicationHandle":Landroid/view/InputApplicationHandle;
    :catchall_0
    move-exception v0

    move-object/from16 v14, p1

    :goto_0
    :try_start_3
    monitor-exit v1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    :catchall_1
    move-exception v0

    goto :goto_0
.end method

.method updateNonSystemOverlayWindowsVisibilityIfNeeded(Lcom/android/server/wm/WindowState;Z)V
    .locals 5
    .param p1, "win"    # Lcom/android/server/wm/WindowState;
    .param p2, "surfaceShown"    # Z

    .line 7978
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->hideNonSystemOverlayWindowsWhenVisible()Z

    move-result v0

    if-nez v0, :cond_0

    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mHidingNonSystemOverlayWindows:Ljava/util/ArrayList;

    .line 7979
    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_0

    .line 7980
    return-void

    .line 7982
    :cond_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mHidingNonSystemOverlayWindows:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->isEmpty()Z

    move-result v0

    xor-int/lit8 v0, v0, 0x1

    .line 7983
    .local v0, "systemAlertWindowsHidden":Z
    if-eqz p2, :cond_1

    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->hideNonSystemOverlayWindowsWhenVisible()Z

    move-result v1

    if-eqz v1, :cond_1

    .line 7984
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mHidingNonSystemOverlayWindows:Ljava/util/ArrayList;

    invoke-virtual {v1, p1}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_2

    .line 7985
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mHidingNonSystemOverlayWindows:Ljava/util/ArrayList;

    invoke-virtual {v1, p1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_0

    .line 7988
    :cond_1
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mHidingNonSystemOverlayWindows:Ljava/util/ArrayList;

    invoke-virtual {v1, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 7991
    :cond_2
    :goto_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mHidingNonSystemOverlayWindows:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->isEmpty()Z

    move-result v1

    xor-int/lit8 v1, v1, 0x1

    .line 7993
    .local v1, "hideSystemAlertWindows":Z
    if-ne v0, v1, :cond_3

    .line 7994
    return-void

    .line 7997
    :cond_3
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    new-instance v3, Lcom/android/server/wm/WindowManagerService$$ExternalSyntheticLambda14;

    invoke-direct {v3, v1}, Lcom/android/server/wm/WindowManagerService$$ExternalSyntheticLambda14;-><init>(Z)V

    const/4 v4, 0x0

    invoke-virtual {v2, v3, v4}, Lcom/android/server/wm/RootWindowContainer;->forAllWindows(Ljava/util/function/Consumer;Z)V

    .line 8000
    return-void
.end method

.method updatePointerIcon(Landroid/view/IWindow;)V
    .locals 12
    .param p1, "client"    # Landroid/view/IWindow;

    .line 6908
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mMousePositionTracker:Lcom/android/server/wm/WindowManagerService$MousePositionTracker;

    monitor-enter v0

    .line 6909
    :try_start_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mMousePositionTracker:Lcom/android/server/wm/WindowManagerService$MousePositionTracker;

    invoke-static {v1}, Lcom/android/server/wm/WindowManagerService$MousePositionTracker;->access$1700(Lcom/android/server/wm/WindowManagerService$MousePositionTracker;)Z

    move-result v1

    if-nez v1, :cond_0

    .line 6910
    monitor-exit v0

    return-void

    .line 6912
    :cond_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mMousePositionTracker:Lcom/android/server/wm/WindowManagerService$MousePositionTracker;

    invoke-static {v1}, Lcom/android/server/wm/WindowManagerService$MousePositionTracker;->access$1800(Lcom/android/server/wm/WindowManagerService$MousePositionTracker;)F

    move-result v1

    .line 6913
    .local v1, "mouseX":F
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mMousePositionTracker:Lcom/android/server/wm/WindowManagerService$MousePositionTracker;

    invoke-static {v2}, Lcom/android/server/wm/WindowManagerService$MousePositionTracker;->access$1900(Lcom/android/server/wm/WindowManagerService$MousePositionTracker;)F

    move-result v2

    .line 6914
    .local v2, "mouseY":F
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 6916
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v3

    :try_start_1
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 6917
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mDragDropController:Lcom/android/server/wm/DragDropController;

    invoke-virtual {v0}, Lcom/android/server/wm/DragDropController;->dragDropActiveLocked()Z

    move-result v0

    if-eqz v0, :cond_1

    .line 6919
    monitor-exit v3
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 6921
    :cond_1
    const/4 v0, 0x0

    const/4 v4, 0x0

    :try_start_2
    invoke-virtual {p0, v0, p1, v4}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;

    move-result-object v5

    .line 6922
    .local v5, "callingWin":Lcom/android/server/wm/WindowState;
    if-nez v5, :cond_3

    .line 6923
    sget-boolean v0, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v0, :cond_2

    invoke-static {p1}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v0

    .local v0, "protoLogParam0":Ljava/lang/String;
    sget-object v6, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const v7, 0x4f03ccce

    const-string v8, "Bad requesting window %s"

    const/4 v9, 0x1

    new-array v9, v9, [Ljava/lang/Object;

    aput-object v0, v9, v4

    invoke-static {v6, v7, v4, v8, v9}, Lcom/android/internal/protolog/ProtoLogImpl;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 6924
    .end local v0    # "protoLogParam0":Ljava/lang/String;
    :cond_2
    monitor-exit v3
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 6926
    :cond_3
    :try_start_3
    invoke-virtual {v5}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v6

    .line 6927
    .local v6, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v6, :cond_4

    .line 6928
    monitor-exit v3
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 6930
    :cond_4
    nop

    .line 6931
    :try_start_4
    invoke-virtual {v6, v1, v2}, Lcom/android/server/wm/DisplayContent;->getTouchableWinAtPointLocked(FF)Lcom/android/server/wm/WindowState;

    move-result-object v7

    .line 6932
    .local v7, "windowUnderPointer":Lcom/android/server/wm/WindowState;
    if-eq v7, v5, :cond_5

    .line 6933
    monitor-exit v3
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 6936
    :cond_5
    :try_start_5
    iget-object v8, v7, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    .line 6937
    invoke-virtual {v7, v1}, Lcom/android/server/wm/WindowState;->translateToWindowX(F)F

    move-result v9

    .line 6938
    invoke-virtual {v7, v2}, Lcom/android/server/wm/WindowState;->translateToWindowY(F)F

    move-result v10

    .line 6936
    invoke-interface {v8, v9, v10}, Landroid/view/IWindow;->updatePointerIcon(FF)V
    :try_end_5
    .catch Landroid/os/RemoteException; {:try_start_5 .. :try_end_5} :catch_0
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    .line 6941
    goto :goto_0

    .line 6939
    :catch_0
    move-exception v8

    .line 6940
    .local v8, "e":Landroid/os/RemoteException;
    :try_start_6
    sget-boolean v9, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v9, :cond_6

    sget-object v9, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const v10, -0x1774697d

    const-string v11, "unable to update pointer icon"

    check-cast v0, [Ljava/lang/Object;

    invoke-static {v9, v10, v4, v11, v0}, Lcom/android/internal/protolog/ProtoLogImpl;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 6942
    .end local v5    # "callingWin":Lcom/android/server/wm/WindowState;
    .end local v6    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v7    # "windowUnderPointer":Lcom/android/server/wm/WindowState;
    .end local v8    # "e":Landroid/os/RemoteException;
    :cond_6
    :goto_0
    monitor-exit v3
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 6943
    return-void

    .line 6942
    :catchall_0
    move-exception v0

    :try_start_7
    monitor-exit v3
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 6914
    .end local v1    # "mouseX":F
    .end local v2    # "mouseY":F
    :catchall_1
    move-exception v1

    :try_start_8
    monitor-exit v0
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_1

    throw v1
.end method

.method public updateRotation(ZZ)V
    .locals 0
    .param p1, "alwaysSendConfiguration"    # Z
    .param p2, "forceRelayout"    # Z

    .line 4007
    invoke-direct {p0, p1, p2}, Lcom/android/server/wm/WindowManagerService;->updateRotationUnchecked(ZZ)V

    .line 4008
    return-void
.end method

.method public updateStaticPrivacyIndicatorBounds(I[Landroid/graphics/Rect;)V
    .locals 5
    .param p1, "displayId"    # I
    .param p2, "staticBounds"    # [Landroid/graphics/Rect;

    .line 5966
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 5967
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 5968
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v1, :cond_0

    .line 5969
    invoke-virtual {v1, p2}, Lcom/android/server/wm/DisplayContent;->updatePrivacyIndicatorBounds([Landroid/graphics/Rect;)V

    goto :goto_0

    .line 5971
    :cond_0
    const-string v2, "WindowManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "updateStaticPrivacyIndicatorBounds with invalid displayId="

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 5974
    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :goto_0
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 5975
    return-void

    .line 5974
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method updateTapExcludeRegion(Landroid/view/IWindow;Landroid/graphics/Region;)V
    .locals 8
    .param p1, "client"    # Landroid/view/IWindow;
    .param p2, "region"    # Landroid/graphics/Region;

    .line 7011
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 7012
    const/4 v1, 0x0

    const/4 v2, 0x0

    invoke-virtual {p0, v1, p1, v2}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;

    move-result-object v1

    .line 7013
    .local v1, "callingWin":Lcom/android/server/wm/WindowState;
    if-nez v1, :cond_1

    .line 7014
    sget-boolean v3, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v3, :cond_0

    invoke-static {p1}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v3

    .local v3, "protoLogParam0":Ljava/lang/String;
    sget-object v4, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const v5, 0x4f03ccce

    const-string v6, "Bad requesting window %s"

    const/4 v7, 0x1

    new-array v7, v7, [Ljava/lang/Object;

    aput-object v3, v7, v2

    invoke-static {v4, v5, v2, v6, v7}, Lcom/android/internal/protolog/ProtoLogImpl;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 7015
    .end local v3    # "protoLogParam0":Ljava/lang/String;
    :cond_0
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 7017
    :cond_1
    :try_start_1
    invoke-virtual {v1, p2}, Lcom/android/server/wm/WindowState;->updateTapExcludeRegion(Landroid/graphics/Region;)V

    .line 7018
    .end local v1    # "callingWin":Lcom/android/server/wm/WindowState;
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 7019
    return-void

    .line 7018
    :catchall_0
    move-exception v1

    :try_start_2
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public useBLAST()Z
    .locals 1

    .line 5324
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mUseBLAST:Z

    return v0
.end method

.method public useBLASTSync()Z
    .locals 1

    .line 5328
    const/4 v0, 0x1

    return v0
.end method

.method public verifyDisplayHash(Landroid/view/displayhash/DisplayHash;)Landroid/view/displayhash/VerifiedDisplayHash;
    .locals 1
    .param p1, "displayHash"    # Landroid/view/displayhash/DisplayHash;

    .line 8527
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayHashController:Lcom/android/server/wm/DisplayHashController;

    invoke-virtual {v0, p1}, Lcom/android/server/wm/DisplayHashController;->verifyDisplayHash(Landroid/view/displayhash/DisplayHash;)Landroid/view/displayhash/VerifiedDisplayHash;

    move-result-object v0

    return-object v0
.end method

.method viewServerGetFocusedWindow(Ljava/net/Socket;)Z
    .locals 7
    .param p1, "client"    # Ljava/net/Socket;

    .line 4527
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->isSystemSecure()Z

    move-result v0

    if-eqz v0, :cond_0

    .line 4528
    const/4 v0, 0x0

    return v0

    .line 4531
    :cond_0
    const/4 v0, 0x1

    .line 4533
    .local v0, "result":Z
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->getFocusedWindow()Lcom/android/server/wm/WindowState;

    move-result-object v1

    .line 4535
    .local v1, "focusedWindow":Lcom/android/server/wm/WindowState;
    const/4 v2, 0x0

    .line 4539
    .local v2, "out":Ljava/io/BufferedWriter;
    :try_start_0
    invoke-virtual {p1}, Ljava/net/Socket;->getOutputStream()Ljava/io/OutputStream;

    move-result-object v3

    .line 4540
    .local v3, "clientStream":Ljava/io/OutputStream;
    new-instance v4, Ljava/io/BufferedWriter;

    new-instance v5, Ljava/io/OutputStreamWriter;

    invoke-direct {v5, v3}, Ljava/io/OutputStreamWriter;-><init>(Ljava/io/OutputStream;)V

    const/16 v6, 0x2000

    invoke-direct {v4, v5, v6}, Ljava/io/BufferedWriter;-><init>(Ljava/io/Writer;I)V

    move-object v2, v4

    .line 4542
    if-eqz v1, :cond_1

    .line 4543
    invoke-static {v1}, Ljava/lang/System;->identityHashCode(Ljava/lang/Object;)I

    move-result v4

    invoke-static {v4}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v2, v4}, Ljava/io/BufferedWriter;->write(Ljava/lang/String;)V

    .line 4544
    const/16 v4, 0x20

    invoke-virtual {v2, v4}, Ljava/io/BufferedWriter;->write(I)V

    .line 4545
    iget-object v4, v1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    invoke-virtual {v4}, Landroid/view/WindowManager$LayoutParams;->getTitle()Ljava/lang/CharSequence;

    move-result-object v4

    invoke-virtual {v2, v4}, Ljava/io/BufferedWriter;->append(Ljava/lang/CharSequence;)Ljava/io/Writer;

    .line 4547
    :cond_1
    const/16 v4, 0xa

    invoke-virtual {v2, v4}, Ljava/io/BufferedWriter;->write(I)V

    .line 4548
    invoke-virtual {v2}, Ljava/io/BufferedWriter;->flush()V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_1
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 4552
    .end local v3    # "clientStream":Ljava/io/OutputStream;
    nop

    .line 4554
    :try_start_1
    invoke-virtual {v2}, Ljava/io/BufferedWriter;->close()V
    :try_end_1
    .catch Ljava/io/IOException; {:try_start_1 .. :try_end_1} :catch_2

    goto :goto_1

    .line 4552
    :catchall_0
    move-exception v3

    if-eqz v2, :cond_2

    .line 4554
    :try_start_2
    invoke-virtual {v2}, Ljava/io/BufferedWriter;->close()V
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_0

    .line 4557
    goto :goto_0

    .line 4555
    :catch_0
    move-exception v4

    .line 4556
    .local v4, "e":Ljava/io/IOException;
    const/4 v0, 0x0

    .line 4559
    .end local v4    # "e":Ljava/io/IOException;
    :cond_2
    :goto_0
    throw v3

    .line 4549
    :catch_1
    move-exception v3

    .line 4550
    .local v3, "e":Ljava/lang/Exception;
    const/4 v0, 0x0

    .line 4552
    .end local v3    # "e":Ljava/lang/Exception;
    if-eqz v2, :cond_3

    .line 4554
    :try_start_3
    invoke-virtual {v2}, Ljava/io/BufferedWriter;->close()V
    :try_end_3
    .catch Ljava/io/IOException; {:try_start_3 .. :try_end_3} :catch_2

    goto :goto_1

    .line 4555
    :catch_2
    move-exception v3

    .line 4556
    .local v3, "e":Ljava/io/IOException;
    const/4 v0, 0x0

    .line 4561
    .end local v3    # "e":Ljava/io/IOException;
    :cond_3
    :goto_1
    return v0
.end method

.method viewServerListWindows(Ljava/net/Socket;)Z
    .locals 8
    .param p1, "client"    # Ljava/net/Socket;

    .line 4472
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->isSystemSecure()Z

    move-result v0

    const/4 v1, 0x0

    if-eqz v0, :cond_0

    .line 4473
    return v1

    .line 4476
    :cond_0
    const/4 v0, 0x1

    .line 4478
    .local v0, "result":Z
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    .line 4479
    .local v2, "windows":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/WindowState;>;"
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v3

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 4480
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    new-instance v5, Lcom/android/server/wm/WindowManagerService$$ExternalSyntheticLambda13;

    invoke-direct {v5, v2}, Lcom/android/server/wm/WindowManagerService$$ExternalSyntheticLambda13;-><init>(Ljava/util/ArrayList;)V

    invoke-virtual {v4, v5, v1}, Lcom/android/server/wm/RootWindowContainer;->forAllWindows(Ljava/util/function/Consumer;Z)V

    .line 4483
    monitor-exit v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 4485
    const/4 v1, 0x0

    .line 4489
    .local v1, "out":Ljava/io/BufferedWriter;
    :try_start_1
    invoke-virtual {p1}, Ljava/net/Socket;->getOutputStream()Ljava/io/OutputStream;

    move-result-object v3

    .line 4490
    .local v3, "clientStream":Ljava/io/OutputStream;
    new-instance v4, Ljava/io/BufferedWriter;

    new-instance v5, Ljava/io/OutputStreamWriter;

    invoke-direct {v5, v3}, Ljava/io/OutputStreamWriter;-><init>(Ljava/io/OutputStream;)V

    const/16 v6, 0x2000

    invoke-direct {v4, v5, v6}, Ljava/io/BufferedWriter;-><init>(Ljava/io/Writer;I)V

    move-object v1, v4

    .line 4492
    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v4

    .line 4493
    .local v4, "count":I
    const/4 v5, 0x0

    .local v5, "i":I
    :goto_0
    if-ge v5, v4, :cond_1

    .line 4494
    invoke-virtual {v2, v5}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/wm/WindowState;

    .line 4495
    .local v6, "w":Lcom/android/server/wm/WindowState;
    invoke-static {v6}, Ljava/lang/System;->identityHashCode(Ljava/lang/Object;)I

    move-result v7

    invoke-static {v7}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v1, v7}, Ljava/io/BufferedWriter;->write(Ljava/lang/String;)V

    .line 4496
    const/16 v7, 0x20

    invoke-virtual {v1, v7}, Ljava/io/BufferedWriter;->write(I)V

    .line 4497
    iget-object v7, v6, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    invoke-virtual {v7}, Landroid/view/WindowManager$LayoutParams;->getTitle()Ljava/lang/CharSequence;

    move-result-object v7

    invoke-virtual {v1, v7}, Ljava/io/BufferedWriter;->append(Ljava/lang/CharSequence;)Ljava/io/Writer;

    .line 4498
    const/16 v7, 0xa

    invoke-virtual {v1, v7}, Ljava/io/BufferedWriter;->write(I)V

    .line 4493
    .end local v6    # "w":Lcom/android/server/wm/WindowState;
    add-int/lit8 v5, v5, 0x1

    goto :goto_0

    .line 4501
    .end local v5    # "i":I
    :cond_1
    const-string v5, "DONE.\n"

    invoke-virtual {v1, v5}, Ljava/io/BufferedWriter;->write(Ljava/lang/String;)V

    .line 4502
    invoke-virtual {v1}, Ljava/io/BufferedWriter;->flush()V
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 4506
    .end local v3    # "clientStream":Ljava/io/OutputStream;
    .end local v4    # "count":I
    nop

    .line 4508
    :try_start_2
    invoke-virtual {v1}, Ljava/io/BufferedWriter;->close()V
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_2

    goto :goto_2

    .line 4506
    :catchall_0
    move-exception v3

    if-eqz v1, :cond_2

    .line 4508
    :try_start_3
    invoke-virtual {v1}, Ljava/io/BufferedWriter;->close()V
    :try_end_3
    .catch Ljava/io/IOException; {:try_start_3 .. :try_end_3} :catch_0

    .line 4511
    goto :goto_1

    .line 4509
    :catch_0
    move-exception v4

    .line 4510
    .local v4, "e":Ljava/io/IOException;
    const/4 v0, 0x0

    .line 4513
    .end local v4    # "e":Ljava/io/IOException;
    :cond_2
    :goto_1
    throw v3

    .line 4503
    :catch_1
    move-exception v3

    .line 4504
    .local v3, "e":Ljava/lang/Exception;
    const/4 v0, 0x0

    .line 4506
    .end local v3    # "e":Ljava/lang/Exception;
    if-eqz v1, :cond_3

    .line 4508
    :try_start_4
    invoke-virtual {v1}, Ljava/io/BufferedWriter;->close()V
    :try_end_4
    .catch Ljava/io/IOException; {:try_start_4 .. :try_end_4} :catch_2

    goto :goto_2

    .line 4509
    :catch_2
    move-exception v3

    .line 4510
    .local v3, "e":Ljava/io/IOException;
    const/4 v0, 0x0

    .line 4515
    .end local v3    # "e":Ljava/io/IOException;
    :cond_3
    :goto_2
    return v0

    .line 4483
    .end local v1    # "out":Ljava/io/BufferedWriter;
    :catchall_1
    move-exception v1

    :try_start_5
    monitor-exit v3
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method viewServerWindowCommand(Ljava/net/Socket;Ljava/lang/String;Ljava/lang/String;)Z
    .locals 17
    .param p1, "client"    # Ljava/net/Socket;
    .param p2, "command"    # Ljava/lang/String;
    .param p3, "parameters"    # Ljava/lang/String;

    .line 4585
    move-object/from16 v1, p3

    invoke-direct/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->isSystemSecure()Z

    move-result v0

    const/4 v2, 0x0

    if-eqz v0, :cond_0

    .line 4586
    return v2

    .line 4589
    :cond_0
    const/4 v3, 0x1

    .line 4590
    .local v3, "success":Z
    const/4 v4, 0x0

    .line 4591
    .local v4, "data":Landroid/os/Parcel;
    const/4 v5, 0x0

    .line 4593
    .local v5, "reply":Landroid/os/Parcel;
    const/4 v6, 0x0

    .line 4598
    .local v6, "out":Ljava/io/BufferedWriter;
    const/16 v0, 0x20

    const/4 v7, 0x1

    :try_start_0
    invoke-virtual {v1, v0}, Ljava/lang/String;->indexOf(I)I

    move-result v0

    .line 4599
    .local v0, "index":I
    const/4 v8, -0x1

    if-ne v0, v8, :cond_1

    .line 4600
    invoke-virtual/range {p3 .. p3}, Ljava/lang/String;->length()I

    move-result v8

    move v0, v8

    goto :goto_0

    .line 4599
    :cond_1
    move v8, v0

    .line 4602
    .end local v0    # "index":I
    .local v8, "index":I
    :goto_0
    invoke-virtual {v1, v2, v8}, Ljava/lang/String;->substring(II)Ljava/lang/String;

    move-result-object v0

    move-object v9, v0

    .line 4603
    .local v9, "code":Ljava/lang/String;
    const/16 v0, 0x10

    invoke-static {v9, v0}, Ljava/lang/Long;->parseLong(Ljava/lang/String;I)J

    move-result-wide v10

    long-to-int v10, v10

    .line 4606
    .local v10, "hashCode":I
    invoke-virtual/range {p3 .. p3}, Ljava/lang/String;->length()I

    move-result v0

    if-ge v8, v0, :cond_2

    .line 4607
    add-int/lit8 v0, v8, 0x1

    invoke-virtual {v1, v0}, Ljava/lang/String;->substring(I)Ljava/lang/String;

    move-result-object v0

    move-object v1, v0

    .end local p3    # "parameters":Ljava/lang/String;
    .local v0, "parameters":Ljava/lang/String;
    goto :goto_1

    .line 4609
    .end local v0    # "parameters":Ljava/lang/String;
    .restart local p3    # "parameters":Ljava/lang/String;
    :cond_2
    const-string v0, ""
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_4
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .end local p3    # "parameters":Ljava/lang/String;
    .restart local v0    # "parameters":Ljava/lang/String;
    move-object v1, v0

    .line 4612
    .end local v0    # "parameters":Ljava/lang/String;
    .local v1, "parameters":Ljava/lang/String;
    :goto_1
    move-object/from16 v11, p0

    :try_start_1
    invoke-direct {v11, v10}, Lcom/android/server/wm/WindowManagerService;->findWindow(I)Lcom/android/server/wm/WindowState;

    move-result-object v0
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_3
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    move-object v12, v0

    .line 4613
    .local v12, "window":Lcom/android/server/wm/WindowState;
    if-nez v12, :cond_6

    .line 4614
    nop

    .line 4643
    if-eqz v4, :cond_3

    .line 4644
    invoke-virtual {v4}, Landroid/os/Parcel;->recycle()V

    .line 4646
    :cond_3
    if-eqz v5, :cond_4

    .line 4647
    invoke-virtual {v5}, Landroid/os/Parcel;->recycle()V

    .line 4649
    :cond_4
    if-eqz v6, :cond_5

    .line 4651
    :try_start_2
    invoke-virtual {v6}, Ljava/io/BufferedWriter;->close()V
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_0

    .line 4654
    goto :goto_2

    .line 4652
    :catch_0
    move-exception v0

    .line 4614
    :cond_5
    :goto_2
    return v2

    .line 4617
    :cond_6
    :try_start_3
    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;

    move-result-object v0

    move-object v4, v0

    .line 4618
    const-string v0, "android.view.IWindow"

    invoke-virtual {v4, v0}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V
    :try_end_3
    .catch Ljava/lang/Exception; {:try_start_3 .. :try_end_3} :catch_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 4619
    move-object/from16 v13, p2

    :try_start_4
    invoke-virtual {v4, v13}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 4620
    invoke-virtual {v4, v1}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 4621
    invoke-virtual {v4, v7}, Landroid/os/Parcel;->writeInt(I)V

    .line 4622
    invoke-static/range {p1 .. p1}, Landroid/os/ParcelFileDescriptor;->fromSocket(Ljava/net/Socket;)Landroid/os/ParcelFileDescriptor;

    move-result-object v0

    invoke-virtual {v0, v4, v2}, Landroid/os/ParcelFileDescriptor;->writeToParcel(Landroid/os/Parcel;I)V

    .line 4624
    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;

    move-result-object v0

    move-object v5, v0

    .line 4626
    iget-object v0, v12, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    invoke-interface {v0}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    move-result-object v0

    .line 4628
    .local v0, "binder":Landroid/os/IBinder;
    invoke-interface {v0, v7, v4, v5, v2}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z

    .line 4630
    invoke-virtual {v5}, Landroid/os/Parcel;->readException()V

    .line 4632
    invoke-virtual/range {p1 .. p1}, Ljava/net/Socket;->isOutputShutdown()Z

    move-result v14

    if-nez v14, :cond_7

    .line 4633
    new-instance v14, Ljava/io/BufferedWriter;

    new-instance v15, Ljava/io/OutputStreamWriter;

    invoke-virtual/range {p1 .. p1}, Ljava/net/Socket;->getOutputStream()Ljava/io/OutputStream;

    move-result-object v7

    invoke-direct {v15, v7}, Ljava/io/OutputStreamWriter;-><init>(Ljava/io/OutputStream;)V

    invoke-direct {v14, v15}, Ljava/io/BufferedWriter;-><init>(Ljava/io/Writer;)V

    move-object v6, v14

    .line 4634
    const-string v7, "DONE\n"

    invoke-virtual {v6, v7}, Ljava/io/BufferedWriter;->write(Ljava/lang/String;)V

    .line 4635
    invoke-virtual {v6}, Ljava/io/BufferedWriter;->flush()V
    :try_end_4
    .catch Ljava/lang/Exception; {:try_start_4 .. :try_end_4} :catch_2
    .catchall {:try_start_4 .. :try_end_4} :catchall_2

    .line 4643
    .end local v0    # "binder":Landroid/os/IBinder;
    .end local v8    # "index":I
    .end local v9    # "code":Ljava/lang/String;
    .end local v10    # "hashCode":I
    .end local v12    # "window":Lcom/android/server/wm/WindowState;
    :cond_7
    if-eqz v4, :cond_8

    .line 4644
    invoke-virtual {v4}, Landroid/os/Parcel;->recycle()V

    .line 4646
    :cond_8
    if-eqz v5, :cond_9

    .line 4647
    invoke-virtual {v5}, Landroid/os/Parcel;->recycle()V

    .line 4649
    :cond_9
    if-eqz v6, :cond_d

    .line 4651
    :try_start_5
    invoke-virtual {v6}, Ljava/io/BufferedWriter;->close()V
    :try_end_5
    .catch Ljava/io/IOException; {:try_start_5 .. :try_end_5} :catch_1

    .line 4654
    :goto_3
    goto :goto_5

    .line 4652
    :catch_1
    move-exception v0

    goto :goto_3

    .line 4638
    :catch_2
    move-exception v0

    goto :goto_4

    .line 4643
    :catchall_0
    move-exception v0

    move-object/from16 v13, p2

    move-object v2, v0

    goto :goto_6

    .line 4638
    :catch_3
    move-exception v0

    move-object/from16 v13, p2

    goto :goto_4

    .line 4643
    .end local v1    # "parameters":Ljava/lang/String;
    .restart local p3    # "parameters":Ljava/lang/String;
    :catchall_1
    move-exception v0

    move-object/from16 v11, p0

    move-object/from16 v13, p2

    move-object v2, v0

    goto :goto_6

    .line 4638
    :catch_4
    move-exception v0

    move-object/from16 v11, p0

    move-object/from16 v13, p2

    .line 4639
    .end local p3    # "parameters":Ljava/lang/String;
    .local v0, "e":Ljava/lang/Exception;
    .restart local v1    # "parameters":Ljava/lang/String;
    :goto_4
    :try_start_6
    sget-boolean v7, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v7, :cond_a

    invoke-static/range {p2 .. p2}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v7

    .local v7, "protoLogParam0":Ljava/lang/String;
    invoke-static {v1}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v8

    .local v8, "protoLogParam1":Ljava/lang/String;
    invoke-static {v0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v9

    .local v9, "protoLogParam2":Ljava/lang/String;
    sget-object v10, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    const v12, 0x7c633cfd

    const-string v14, "Could not send command %s with parameters %s. %s"

    const/4 v15, 0x3

    new-array v15, v15, [Ljava/lang/Object;

    aput-object v7, v15, v2

    const/16 v16, 0x1

    aput-object v8, v15, v16

    const/16 v16, 0x2

    aput-object v9, v15, v16

    invoke-static {v10, v12, v2, v14, v15}, Lcom/android/internal/protolog/ProtoLogImpl;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_2

    .line 4641
    .end local v7    # "protoLogParam0":Ljava/lang/String;
    .end local v8    # "protoLogParam1":Ljava/lang/String;
    .end local v9    # "protoLogParam2":Ljava/lang/String;
    :cond_a
    const/4 v3, 0x0

    .line 4643
    .end local v0    # "e":Ljava/lang/Exception;
    if-eqz v4, :cond_b

    .line 4644
    invoke-virtual {v4}, Landroid/os/Parcel;->recycle()V

    .line 4646
    :cond_b
    if-eqz v5, :cond_c

    .line 4647
    invoke-virtual {v5}, Landroid/os/Parcel;->recycle()V

    .line 4649
    :cond_c
    if-eqz v6, :cond_d

    .line 4651
    :try_start_7
    invoke-virtual {v6}, Ljava/io/BufferedWriter;->close()V
    :try_end_7
    .catch Ljava/io/IOException; {:try_start_7 .. :try_end_7} :catch_1

    goto :goto_3

    .line 4658
    :cond_d
    :goto_5
    return v3

    .line 4643
    :catchall_2
    move-exception v0

    move-object v2, v0

    :goto_6
    if-eqz v4, :cond_e

    .line 4644
    invoke-virtual {v4}, Landroid/os/Parcel;->recycle()V

    .line 4646
    :cond_e
    if-eqz v5, :cond_f

    .line 4647
    invoke-virtual {v5}, Landroid/os/Parcel;->recycle()V

    .line 4649
    :cond_f
    if-eqz v6, :cond_10

    .line 4651
    :try_start_8
    invoke-virtual {v6}, Ljava/io/BufferedWriter;->close()V
    :try_end_8
    .catch Ljava/io/IOException; {:try_start_8 .. :try_end_8} :catch_5

    .line 4654
    goto :goto_7

    .line 4652
    :catch_5
    move-exception v0

    .line 4656
    :cond_10
    :goto_7
    throw v2
.end method

.method public watchRotation(Landroid/view/IRotationWatcher;I)I
    .locals 6
    .param p1, "watcher"    # Landroid/view/IRotationWatcher;
    .param p2, "displayId"    # I

    .line 4179
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 4180
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p2}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 4181
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 4182
    if-eqz v1, :cond_0

    .line 4187
    invoke-interface {p1}, Landroid/view/IRotationWatcher;->asBinder()Landroid/os/IBinder;

    move-result-object v0

    .line 4188
    .local v0, "watcherBinder":Landroid/os/IBinder;
    new-instance v2, Lcom/android/server/wm/WindowManagerService$10;

    invoke-direct {v2, p0, v0}, Lcom/android/server/wm/WindowManagerService$10;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/os/IBinder;)V

    .line 4206
    .local v2, "dr":Landroid/os/IBinder$DeathRecipient;
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v3

    :try_start_1
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 4208
    invoke-interface {p1}, Landroid/view/IRotationWatcher;->asBinder()Landroid/os/IBinder;

    move-result-object v4

    const/4 v5, 0x0

    invoke-interface {v4, v2, v5}, Landroid/os/IBinder;->linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V

    .line 4209
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mRotationWatchers:Ljava/util/ArrayList;

    new-instance v5, Lcom/android/server/wm/WindowManagerService$RotationWatcher;

    invoke-direct {v5, p0, p1, v2, p2}, Lcom/android/server/wm/WindowManagerService$RotationWatcher;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/view/IRotationWatcher;Landroid/os/IBinder$DeathRecipient;I)V

    invoke-virtual {v4, v5}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 4212
    goto :goto_0

    .line 4215
    :catchall_0
    move-exception v4

    goto :goto_1

    .line 4210
    :catch_0
    move-exception v4

    .line 4214
    :goto_0
    :try_start_2
    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->getRotation()I

    move-result v4

    monitor-exit v3
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v4

    .line 4215
    :goto_1
    :try_start_3
    monitor-exit v3
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v4

    .line 4183
    .end local v0    # "watcherBinder":Landroid/os/IBinder;
    .end local v2    # "dr":Landroid/os/IBinder$DeathRecipient;
    :cond_0
    new-instance v0, Ljava/lang/IllegalArgumentException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Trying to register rotation event for invalid display: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v0, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 4181
    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_1
    move-exception v1

    :try_start_4
    monitor-exit v0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method final windowForClientLocked(Lcom/android/server/wm/Session;Landroid/os/IBinder;Z)Lcom/android/server/wm/WindowState;
    .locals 10
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/os/IBinder;
    .param p3, "throwOnError"    # Z

    .line 5586
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    invoke-virtual {v0, p2}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/WindowState;

    .line 5588
    .local v0, "win":Lcom/android/server/wm/WindowState;
    const/4 v1, 0x1

    const/4 v2, 0x2

    const-string v3, "Failed looking up window session=%s callers=%s"

    const v4, -0x7d49c1bb

    const/4 v5, 0x3

    const/4 v6, 0x0

    const-string v7, "Requested window "

    const/4 v8, 0x0

    if-nez v0, :cond_2

    .line 5589
    if-nez p3, :cond_1

    .line 5593
    sget-boolean v7, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v7, :cond_0

    invoke-static {p1}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v7

    .local v7, "protoLogParam0":Ljava/lang/String;
    invoke-static {v5}, Landroid/os/Debug;->getCallers(I)Ljava/lang/String;

    move-result-object v5

    invoke-static {v5}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v5

    .local v5, "protoLogParam1":Ljava/lang/String;
    sget-object v9, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    new-array v2, v2, [Ljava/lang/Object;

    aput-object v7, v2, v8

    aput-object v5, v2, v1

    invoke-static {v9, v4, v8, v3, v2}, Lcom/android/internal/protolog/ProtoLogImpl;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 5595
    .end local v5    # "protoLogParam1":Ljava/lang/String;
    .end local v7    # "protoLogParam0":Ljava/lang/String;
    :cond_0
    return-object v6

    .line 5590
    :cond_1
    new-instance v1, Ljava/lang/IllegalArgumentException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v2, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v3, " does not exist"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 5597
    :cond_2
    if-eqz p1, :cond_5

    iget-object v9, v0, Lcom/android/server/wm/WindowState;->mSession:Lcom/android/server/wm/Session;

    if-eq v9, p1, :cond_5

    .line 5598
    if-nez p3, :cond_4

    .line 5602
    sget-boolean v7, Lcom/android/server/wm/ProtoLogCache;->WM_ERROR_enabled:Z

    if-eqz v7, :cond_3

    invoke-static {p1}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v7

    .restart local v7    # "protoLogParam0":Ljava/lang/String;
    invoke-static {v5}, Landroid/os/Debug;->getCallers(I)Ljava/lang/String;

    move-result-object v5

    invoke-static {v5}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v5

    .restart local v5    # "protoLogParam1":Ljava/lang/String;
    sget-object v9, Lcom/android/internal/protolog/ProtoLogGroup;->WM_ERROR:Lcom/android/internal/protolog/ProtoLogGroup;

    new-array v2, v2, [Ljava/lang/Object;

    aput-object v7, v2, v8

    aput-object v5, v2, v1

    invoke-static {v9, v4, v8, v3, v2}, Lcom/android/internal/protolog/ProtoLogImpl;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 5604
    .end local v5    # "protoLogParam1":Ljava/lang/String;
    .end local v7    # "protoLogParam0":Ljava/lang/String;
    :cond_3
    return-object v6

    .line 5599
    :cond_4
    new-instance v1, Ljava/lang/IllegalArgumentException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v2, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v3, " is in session "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v3, v0, Lcom/android/server/wm/WindowState;->mSession:Lcom/android/server/wm/Session;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v3, ", not "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 5607
    :cond_5
    return-object v0
.end method

.method final windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;
    .locals 1
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;
    .param p3, "throwOnError"    # Z

    .line 5582
    invoke-interface {p2}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    move-result-object v0

    invoke-virtual {p0, p1, v0, p3}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/os/IBinder;Z)Lcom/android/server/wm/WindowState;

    move-result-object v0

    return-object v0
.end method
